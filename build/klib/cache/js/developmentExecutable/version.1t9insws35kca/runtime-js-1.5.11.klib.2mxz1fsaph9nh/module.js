(function (root, factory) {
  if (typeof define === 'function' && define.amd)
    define(['exports', './kotlin-kotlin-stdlib.js', './kotlinx.coroutines-kotlinx-coroutines-core-js-ir.js'], factory);
  else if (typeof exports === 'object')
    factory(module.exports, require('./kotlin-kotlin-stdlib.js'), require('./kotlinx.coroutines-kotlinx-coroutines-core-js-ir.js'));
  else {
    if (typeof this['kotlin-kotlin-stdlib'] === 'undefined') {
      throw new Error("Error loading module 'compose-multiplatform-core-runtime'. Its dependency 'kotlin-kotlin-stdlib' was not found. Please, check whether 'kotlin-kotlin-stdlib' is loaded prior to 'compose-multiplatform-core-runtime'.");
    }
    if (typeof this['kotlinx.coroutines-kotlinx-coroutines-core-js-ir'] === 'undefined') {
      throw new Error("Error loading module 'compose-multiplatform-core-runtime'. Its dependency 'kotlinx.coroutines-kotlinx-coroutines-core-js-ir' was not found. Please, check whether 'kotlinx.coroutines-kotlinx-coroutines-core-js-ir' is loaded prior to 'compose-multiplatform-core-runtime'.");
    }
    root['compose-multiplatform-core-runtime'] = factory(typeof this['compose-multiplatform-core-runtime'] === 'undefined' ? {} : this['compose-multiplatform-core-runtime'], this['kotlin-kotlin-stdlib'], this['kotlinx.coroutines-kotlinx-coroutines-core-js-ir']);
  }
}(this, function (_, kotlin_kotlin, kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var protoOf = kotlin_kotlin.$_$.bb;
  var interfaceMeta = kotlin_kotlin.$_$.ea;
  var setMetadataFor = kotlin_kotlin.$_$.cb;
  var toString = kotlin_kotlin.$_$.eb;
  var classMeta = kotlin_kotlin.$_$.s9;
  var VOID = kotlin_kotlin.$_$.e;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.j;
  var THROW_CCE = kotlin_kotlin.$_$.xd;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.q1;
  var toMutableList = kotlin_kotlin.$_$.f8;
  var rotateLeft = kotlin_kotlin.$_$.ue;
  var rotateRight = kotlin_kotlin.$_$.ve;
  var Companion_getInstance = kotlin_kotlin.$_$.e4;
  var _Result___init__impl__xyqfz8 = kotlin_kotlin.$_$.h2;
  var createFailure = kotlin_kotlin.$_$.oe;
  var Unit_getInstance = kotlin_kotlin.$_$.j4;
  var throwUninitializedPropertyAccessException = kotlin_kotlin.$_$.ye;
  var intercepted = kotlin_kotlin.$_$.q8;
  var get_MODE_CANCELLABLE = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.p;
  var CancellableContinuationImpl = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.j;
  var CancellationException_init_$Create$ = kotlin_kotlin.$_$.x;
  var get = kotlin_kotlin.$_$.y8;
  var fold = kotlin_kotlin.$_$.x8;
  var minusKey = kotlin_kotlin.$_$.z8;
  var plus = kotlin_kotlin.$_$.c9;
  var Annotation = kotlin_kotlin.$_$.jd;
  var getStringHashCode = kotlin_kotlin.$_$.ba;
  var isInterface = kotlin_kotlin.$_$.na;
  var objectMeta = kotlin_kotlin.$_$.ab;
  var THROW_IAE = kotlin_kotlin.$_$.yd;
  var Enum = kotlin_kotlin.$_$.md;
  var IllegalStateException = kotlin_kotlin.$_$.qd;
  var IllegalStateException_init_$Init$ = kotlin_kotlin.$_$.n1;
  var captureStack = kotlin_kotlin.$_$.n9;
  var defineProp = kotlin_kotlin.$_$.u9;
  var equals = kotlin_kotlin.$_$.v9;
  var LinkedHashSet_init_$Create$ = kotlin_kotlin.$_$.u;
  var fill = kotlin_kotlin.$_$.l6;
  var HashMap_init_$Create$ = kotlin_kotlin.$_$.m;
  var hashCode = kotlin_kotlin.$_$.ca;
  var emptyList = kotlin_kotlin.$_$.j6;
  var MutableCollection = kotlin_kotlin.$_$.e5;
  var HashSet_init_$Create$ = kotlin_kotlin.$_$.p;
  var sortWith = kotlin_kotlin.$_$.x7;
  var Comparator = kotlin_kotlin.$_$.ld;
  var ArrayList_init_$Create$_0 = kotlin_kotlin.$_$.i;
  var to = kotlin_kotlin.$_$.af;
  var plus_0 = kotlin_kotlin.$_$.p7;
  var compareValues = kotlin_kotlin.$_$.l8;
  var Char = kotlin_kotlin.$_$.kd;
  var Long = kotlin_kotlin.$_$.rd;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.l1;
  var lazy = kotlin_kotlin.$_$.re;
  var firstOrNull = kotlin_kotlin.$_$.o6;
  var compareTo = kotlin_kotlin.$_$.t9;
  var KMutableProperty1 = kotlin_kotlin.$_$.qb;
  var getPropertyCallableRef = kotlin_kotlin.$_$.aa;
  var KProperty1 = kotlin_kotlin.$_$.sb;
  var isArray = kotlin_kotlin.$_$.fa;
  var Set = kotlin_kotlin.$_$.m5;
  var ensureNotNull = kotlin_kotlin.$_$.pe;
  var Exception = kotlin_kotlin.$_$.od;
  var indexOf = kotlin_kotlin.$_$.t6;
  var filterNotNull = kotlin_kotlin.$_$.n6;
  var toList = kotlin_kotlin.$_$.c8;
  var plus_1 = kotlin_kotlin.$_$.k7;
  var EmptyCoroutineContext_getInstance = kotlin_kotlin.$_$.s3;
  var fillArrayVal = kotlin_kotlin.$_$.w9;
  var CoroutineScope = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.m;
  var cancel = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.s;
  var launch = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.u;
  var toString_0 = kotlin_kotlin.$_$.ze;
  var Key = kotlin_kotlin.$_$.b9;
  var Element = kotlin_kotlin.$_$.a9;
  var CoroutineScope_0 = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.n;
  var CoroutineImpl = kotlin_kotlin.$_$.d9;
  var returnIfSuspended = kotlin_kotlin.$_$.h;
  var get_COROUTINE_SUSPENDED = kotlin_kotlin.$_$.n8;
  var throwKotlinNothingValueException = kotlin_kotlin.$_$.xe;
  var SuspendFunction1 = kotlin_kotlin.$_$.e9;
  var Collection = kotlin_kotlin.$_$.t4;
  var addAll = kotlin_kotlin.$_$.o5;
  var removeLast = kotlin_kotlin.$_$.s7;
  var withContext = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.f;
  var HashMap_init_$Create$_0 = kotlin_kotlin.$_$.l;
  var flatten = kotlin_kotlin.$_$.q6;
  var MutableStateFlow = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.h;
  var List = kotlin_kotlin.$_$.b5;
  var CancellationException_init_$Create$_0 = kotlin_kotlin.$_$.z;
  var CancellationException = kotlin_kotlin.$_$.m8;
  var addSuppressed = kotlin_kotlin.$_$.le;
  var Key_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.g;
  var get_job = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.t;
  var Job = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.o;
  var cancelAndJoin = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.d;
  var coroutineScope = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.e;
  var first = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.c;
  var LinkedHashMap_init_$Create$ = kotlin_kotlin.$_$.s;
  var takeWhile = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.i;
  var collect = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.b;
  var Continuation = kotlin_kotlin.$_$.w8;
  var removeFirst = kotlin_kotlin.$_$.r7;
  var SuspendFunction2 = kotlin_kotlin.$_$.f9;
  var arrayCopy = kotlin_kotlin.$_$.p5;
  var fill_0 = kotlin_kotlin.$_$.m6;
  var IntCompanionObject_getInstance = kotlin_kotlin.$_$.x3;
  var _Char___init__impl__6a9atx = kotlin_kotlin.$_$.d2;
  var until = kotlin_kotlin.$_$.nb;
  var slice = kotlin_kotlin.$_$.w7;
  var plus_2 = kotlin_kotlin.$_$.o7;
  var Iterator = kotlin_kotlin.$_$.x4;
  var StringBuilder_init_$Create$ = kotlin_kotlin.$_$.c1;
  var anyToString = kotlin_kotlin.$_$.k9;
  var toList_0 = kotlin_kotlin.$_$.d8;
  var Iterable = kotlin_kotlin.$_$.w4;
  var first_0 = kotlin_kotlin.$_$.p6;
  var last = kotlin_kotlin.$_$.c7;
  var step = kotlin_kotlin.$_$.mb;
  var ConcurrentModificationException_init_$Create$ = kotlin_kotlin.$_$.d1;
  var copyOf = kotlin_kotlin.$_$.g6;
  var IndexOutOfBoundsException_init_$Create$ = kotlin_kotlin.$_$.s1;
  var joinToString = kotlin_kotlin.$_$.w6;
  var copyOf_0 = kotlin_kotlin.$_$.f6;
  var MutableListIterator = kotlin_kotlin.$_$.g5;
  var MutableList = kotlin_kotlin.$_$.h5;
  var numberRangeToNumber = kotlin_kotlin.$_$.va;
  var checkIndexOverflow = kotlin_kotlin.$_$.s5;
  var NoSuchElementException_init_$Create$ = kotlin_kotlin.$_$.v1;
  var sortWith_0 = kotlin_kotlin.$_$.y7;
  var RandomAccess = kotlin_kotlin.$_$.l5;
  var AbstractList = kotlin_kotlin.$_$.l4;
  var MutableMap = kotlin_kotlin.$_$.j5;
  var Map = kotlin_kotlin.$_$.d5;
  var MutableSet = kotlin_kotlin.$_$.k5;
  var NoSuchElementException_init_$Create$_0 = kotlin_kotlin.$_$.t1;
  var ListIterator = kotlin_kotlin.$_$.a5;
  var coerceAtMost = kotlin_kotlin.$_$.jb;
  var arrayIterator = kotlin_kotlin.$_$.l9;
  var AbstractMutableList = kotlin_kotlin.$_$.o4;
  var IllegalStateException_init_$Create$_0 = kotlin_kotlin.$_$.o1;
  var copyOfRange = kotlin_kotlin.$_$.x5;
  var lastIndexOf = kotlin_kotlin.$_$.a7;
  var AbstractMap = kotlin_kotlin.$_$.m4;
  var AbstractMutableMap = kotlin_kotlin.$_$.p4;
  var MutableIterator = kotlin_kotlin.$_$.f5;
  var MutableEntry = kotlin_kotlin.$_$.i5;
  var UnsupportedOperationException_init_$Create$ = kotlin_kotlin.$_$.y1;
  var AbstractMutableSet = kotlin_kotlin.$_$.q4;
  var AbstractMutableCollection = kotlin_kotlin.$_$.n4;
  var Entry = kotlin_kotlin.$_$.c5;
  var AbstractSet = kotlin_kotlin.$_$.r4;
  var AbstractCollection = kotlin_kotlin.$_$.k4;
  var objectCreate = kotlin_kotlin.$_$.za;
  var countOneBits = kotlin_kotlin.$_$.me;
  var takeLowestOneBit = kotlin_kotlin.$_$.we;
  var countTrailingZeroBits = kotlin_kotlin.$_$.ne;
  var removeAll = kotlin_kotlin.$_$.q7;
  var ConcurrentModificationException_init_$Create$_0 = kotlin_kotlin.$_$.e1;
  var contentEquals = kotlin_kotlin.$_$.v5;
  var longArray = kotlin_kotlin.$_$.ua;
  var isCharSequence = kotlin_kotlin.$_$.ja;
  var HashSet_init_$Create$_0 = kotlin_kotlin.$_$.o;
  var singleOrNull = kotlin_kotlin.$_$.v7;
  var contains = kotlin_kotlin.$_$.u5;
  var primitiveArrayConcat = kotlin_kotlin.$_$.d;
  var Exception_init_$Init$ = kotlin_kotlin.$_$.g1;
  var SequenceScope = kotlin_kotlin.$_$.ub;
  var intArrayIterator = kotlin_kotlin.$_$.da;
  var Companion_getInstance_0 = kotlin_kotlin.$_$.d4;
  var toIntArray = kotlin_kotlin.$_$.b8;
  var sequence = kotlin_kotlin.$_$.vb;
  var collectionSizeOrDefault = kotlin_kotlin.$_$.t5;
  var DurationUnit_MILLISECONDS_getInstance = kotlin_kotlin.$_$.f;
  var toDuration = kotlin_kotlin.$_$.hd;
  var _Duration___get_inWholeNanoseconds__impl__r5x4mr = kotlin_kotlin.$_$.b2;
  var SafeContinuation_init_$Create$ = kotlin_kotlin.$_$.a1;
  var println = kotlin_kotlin.$_$.j9;
  var printStackTrace = kotlin_kotlin.$_$.te;
  var CancellationException_init_$Init$ = kotlin_kotlin.$_$.w;
  //endregion
  //region block: pre-declaration
  function onBeginChanges() {
  }
  function onEndChanges() {
  }
  setMetadataFor(Applier, 'Applier', interfaceMeta);
  setMetadataFor(OffsetApplier, 'OffsetApplier', classMeta, VOID, [Applier]);
  setMetadataFor(AbstractApplier, 'AbstractApplier', classMeta, VOID, [Applier]);
  setMetadataFor(FrameAwaiter, 'FrameAwaiter', classMeta);
  function get_key() {
    return Key_getInstance_0();
  }
  setMetadataFor(MonotonicFrameClock, 'MonotonicFrameClock', interfaceMeta, VOID, [Element], VOID, VOID, VOID, [1]);
  setMetadataFor(BroadcastFrameClock, 'BroadcastFrameClock', classMeta, VOID, [MonotonicFrameClock], BroadcastFrameClock, VOID, VOID, [1]);
  setMetadataFor(Composable, 'Composable', classMeta, VOID, [Annotation]);
  setMetadataFor(ComposableInferredTarget, 'ComposableInferredTarget', classMeta, VOID, [Annotation]);
  setMetadataFor(ComposeCompilerApi, 'ComposeCompilerApi', classMeta, VOID, [Annotation]);
  setMetadataFor(ComposeNodeLifecycleCallback, 'ComposeNodeLifecycleCallback', interfaceMeta);
  setMetadataFor(CompositionTracer, 'CompositionTracer', interfaceMeta);
  setMetadataFor(RememberManager, 'RememberManager', interfaceMeta);
  setMetadataFor(ScopeUpdateScope, 'ScopeUpdateScope', interfaceMeta);
  setMetadataFor(Composer$Companion$Empty$1, VOID, classMeta);
  setMetadataFor(Companion, 'Companion', objectMeta);
  function changed(value) {
    return this.changed_jpyyrz_k$(value);
  }
  function changed_0(value) {
    return this.changed_ldy5dl_k$(value);
  }
  function changed_1(value) {
    return this.changed_peqns4_k$(value);
  }
  function changed_2(value) {
    return this.changed_bs3wl8_k$(value);
  }
  function changed_3(value) {
    return this.changed_kpusro_k$(value);
  }
  function changed_4(value) {
    return this.changed_i8bvic_k$(value);
  }
  function changed_5(value) {
    return this.changed_j54hty_k$(value);
  }
  function changed_6(value) {
    return this.changed_qyxff6_k$(value);
  }
  function changedInstance(value) {
    return this.changed_ga7h3f_k$(value);
  }
  setMetadataFor(Composer, 'Composer', interfaceMeta);
  setMetadataFor(InvalidationResult, 'InvalidationResult', classMeta, Enum);
  setMetadataFor(ProvidedValue, 'ProvidedValue', classMeta);
  setMetadataFor(MovableContent, 'MovableContent', classMeta);
  setMetadataFor(MovableContentStateReference, 'MovableContentStateReference', classMeta);
  setMetadataFor(ComposeRuntimeError, 'ComposeRuntimeError', classMeta, IllegalStateException);
  setMetadataFor(RememberObserver, 'RememberObserver', interfaceMeta);
  setMetadataFor(CompositionContextHolder, 'CompositionContextHolder', classMeta, VOID, [RememberObserver]);
  setMetadataFor(CompositionContext, 'CompositionContext', classMeta);
  setMetadataFor(CompositionContextImpl, 'CompositionContextImpl', classMeta, CompositionContext);
  setMetadataFor(sam$kotlin_Comparator$0, 'sam$kotlin_Comparator$0', classMeta, VOID, [Comparator]);
  setMetadataFor(DerivedStateObserver, 'DerivedStateObserver', interfaceMeta);
  setMetadataFor(ComposerImpl$derivedStateObserver$1, VOID, classMeta, VOID, [DerivedStateObserver]);
  setMetadataFor(RecomposeScopeOwner, 'RecomposeScopeOwner', interfaceMeta);
  setMetadataFor(ComposerImpl$releaseMovableGroupAtCurrent$movableContentRecomposeScopeOwner$1, VOID, classMeta, VOID, [RecomposeScopeOwner]);
  setMetadataFor(ComposerImpl, 'ComposerImpl', classMeta, VOID, [Composer]);
  setMetadataFor(MovableContentState, 'MovableContentState', classMeta);
  setMetadataFor(Pending, 'Pending', classMeta);
  setMetadataFor(Invalidation, 'Invalidation', classMeta);
  setMetadataFor(Companion_0, 'Companion', objectMeta);
  setMetadataFor(GroupKind, 'GroupKind', classMeta);
  setMetadataFor(GroupInfo, 'GroupInfo', classMeta);
  setMetadataFor(Updater, 'Updater', classMeta);
  setMetadataFor(SkippableUpdater, 'SkippableUpdater', classMeta);
  setMetadataFor(Composition, 'Composition', interfaceMeta);
  setMetadataFor(RememberEventDispatcher, 'RememberEventDispatcher', classMeta, VOID, [RememberManager]);
  setMetadataFor(ControlledComposition, 'ControlledComposition', interfaceMeta, VOID, [Composition]);
  setMetadataFor(CompositionImpl, 'CompositionImpl', classMeta, VOID, [ControlledComposition, RecomposeScopeOwner]);
  setMetadataFor(ComposableSingletons$CompositionKt, 'ComposableSingletons$CompositionKt', objectMeta);
  setMetadataFor(CompositionLocal, 'CompositionLocal', classMeta);
  setMetadataFor(ProvidableCompositionLocal, 'ProvidableCompositionLocal', classMeta, CompositionLocal);
  setMetadataFor(StaticProvidableCompositionLocal, 'StaticProvidableCompositionLocal', classMeta, ProvidableCompositionLocal);
  setMetadataFor(DynamicProvidableCompositionLocal, 'DynamicProvidableCompositionLocal', classMeta, ProvidableCompositionLocal);
  setMetadataFor(Builder_2, 'Builder', interfaceMeta, VOID, [MutableMap]);
  setMetadataFor(Builder, 'Builder', interfaceMeta, VOID, [Builder_2]);
  setMetadataFor(ImmutableMap, 'ImmutableMap', interfaceMeta, VOID, [Map]);
  setMetadataFor(PersistentMap, 'PersistentMap', interfaceMeta, VOID, [ImmutableMap]);
  setMetadataFor(CompositionLocalMap, 'CompositionLocalMap', interfaceMeta);
  setMetadataFor(PersistentCompositionLocalMap, 'PersistentCompositionLocalMap', interfaceMeta, VOID, [PersistentMap, CompositionLocalMap]);
  setMetadataFor(Companion_1, 'Companion', objectMeta);
  setMetadataFor(Record, 'Record', interfaceMeta);
  setMetadataFor(State_0, 'State', interfaceMeta);
  setMetadataFor(DerivedState, 'DerivedState', interfaceMeta, VOID, [State_0]);
  setMetadataFor(DisallowComposableCalls, 'DisallowComposableCalls', classMeta, VOID, [Annotation]);
  setMetadataFor(DisposableEffectResult, 'DisposableEffectResult', interfaceMeta);
  setMetadataFor(_no_name_provided__qut3iv, VOID, classMeta, VOID, [DisposableEffectResult]);
  setMetadataFor(DisposableEffectScope, 'DisposableEffectScope', classMeta, VOID, VOID, DisposableEffectScope);
  setMetadataFor(LaunchedEffectImpl, 'LaunchedEffectImpl', classMeta, VOID, [RememberObserver]);
  setMetadataFor(PlatformOptimizedCancellationException, 'PlatformOptimizedCancellationException', classMeta, CancellationException);
  setMetadataFor(LeftCompositionCancellationException, 'LeftCompositionCancellationException', classMeta, PlatformOptimizedCancellationException, VOID, LeftCompositionCancellationException);
  setMetadataFor(DisposableEffectImpl, 'DisposableEffectImpl', classMeta, VOID, [RememberObserver]);
  setMetadataFor(ExperimentalComposeApi, 'ExperimentalComposeApi', classMeta, VOID, [Annotation]);
  setMetadataFor(ExplicitGroupsComposable, 'ExplicitGroupsComposable', classMeta, VOID, [Annotation]);
  setMetadataFor(Immutable, 'Immutable', classMeta, VOID, [Annotation]);
  setMetadataFor(InternalComposeApi, 'InternalComposeApi', classMeta, VOID, [Annotation]);
  setMetadataFor(InternalComposeTracingApi, 'InternalComposeTracingApi', classMeta, VOID, [Annotation]);
  setMetadataFor(JoinedKey, 'JoinedKey', classMeta);
  setMetadataFor(Key_0, 'Key', objectMeta, VOID, [Key]);
  setMetadataFor(NoLiveLiterals, 'NoLiveLiterals', classMeta, VOID, [Annotation]);
  setMetadataFor(NonRestartableComposable, 'NonRestartableComposable', classMeta, VOID, [Annotation]);
  setMetadataFor(OpaqueKey, 'OpaqueKey', classMeta);
  setMetadataFor(MutableState, 'MutableState', interfaceMeta, VOID, [State_0]);
  setMetadataFor(ProduceStateScope, 'ProduceStateScope', interfaceMeta, VOID, [MutableState, CoroutineScope_0], VOID, VOID, VOID, [1]);
  setMetadataFor($awaitDisposeCOROUTINE$0, '$awaitDisposeCOROUTINE$0', classMeta, CoroutineImpl);
  setMetadataFor(ProduceStateScopeImpl, 'ProduceStateScopeImpl', classMeta, VOID, [ProduceStateScope, MutableState], VOID, VOID, VOID, [1]);
  setMetadataFor(produceState$composable$slambda, 'produceState$composable$slambda', classMeta, CoroutineImpl, [CoroutineImpl], VOID, VOID, VOID, [1]);
  setMetadataFor(ReadOnlyComposable, 'ReadOnlyComposable', classMeta, VOID, [Annotation]);
  setMetadataFor(Companion_2, 'Companion', objectMeta);
  setMetadataFor(RecomposeScope, 'RecomposeScope', interfaceMeta);
  setMetadataFor(RecomposeScopeImpl, 'RecomposeScopeImpl', classMeta, VOID, [ScopeUpdateScope, RecomposeScope]);
  setMetadataFor(Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda$slambda, 'Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda$slambda', classMeta, CoroutineImpl, [CoroutineImpl], VOID, VOID, VOID, [1]);
  setMetadataFor(Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda$slambda_1, 'Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda$slambda', classMeta, CoroutineImpl, [CoroutineImpl], VOID, VOID, VOID, [1]);
  setMetadataFor(Recomposer$recompositionRunner$slambda$slambda, 'Recomposer$recompositionRunner$slambda$slambda', classMeta, CoroutineImpl, [CoroutineImpl], VOID, VOID, VOID, [1]);
  setMetadataFor(State, 'State', classMeta, Enum);
  setMetadataFor(RecomposerInfo, 'RecomposerInfo', interfaceMeta);
  setMetadataFor(RecomposerInfoImpl, 'RecomposerInfoImpl', classMeta, VOID, [RecomposerInfo]);
  setMetadataFor(HotReloadable, 'HotReloadable', classMeta);
  setMetadataFor(RecomposerErrorInfo, 'RecomposerErrorInfo', interfaceMeta);
  setMetadataFor(RecomposerErrorState, 'RecomposerErrorState', classMeta, VOID, [RecomposerErrorInfo]);
  setMetadataFor(Companion_3, 'Companion', objectMeta);
  setMetadataFor(Recomposer$runRecomposeAndApplyChanges$slambda, 'Recomposer$runRecomposeAndApplyChanges$slambda', classMeta, CoroutineImpl, [CoroutineImpl], VOID, VOID, VOID, [2]);
  setMetadataFor(Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda, 'Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda', classMeta, CoroutineImpl, [CoroutineImpl], VOID, VOID, VOID, [2]);
  setMetadataFor(Recomposer$recompositionRunner$slambda, 'Recomposer$recompositionRunner$slambda', classMeta, CoroutineImpl, [CoroutineImpl], VOID, VOID, VOID, [1]);
  setMetadataFor(Recomposer$join$slambda, 'Recomposer$join$slambda', classMeta, CoroutineImpl, [CoroutineImpl], VOID, VOID, VOID, [1]);
  setMetadataFor(Recomposer$awaitIdle$slambda, 'Recomposer$awaitIdle$slambda', classMeta, CoroutineImpl, [CoroutineImpl], VOID, VOID, VOID, [1]);
  setMetadataFor($runFrameLoopCOROUTINE$1, '$runFrameLoopCOROUTINE$1', classMeta, CoroutineImpl);
  setMetadataFor($awaitWorkAvailableCOROUTINE$2, '$awaitWorkAvailableCOROUTINE$2', classMeta, CoroutineImpl);
  setMetadataFor($joinCOROUTINE$3, '$joinCOROUTINE$3', classMeta, CoroutineImpl);
  setMetadataFor(Recomposer, 'Recomposer', classMeta, CompositionContext, VOID, VOID, VOID, VOID, [0, 1, 2]);
  setMetadataFor(ComposableSingletons$RecomposerKt, 'ComposableSingletons$RecomposerKt', objectMeta);
  setMetadataFor($awaitFrameRequestCOROUTINE$4, '$awaitFrameRequestCOROUTINE$4', classMeta, CoroutineImpl);
  setMetadataFor(ProduceFrameSignal, 'ProduceFrameSignal', classMeta, VOID, VOID, ProduceFrameSignal, VOID, VOID, [1]);
  setMetadataFor(Companion_4, 'Companion', objectMeta);
  setMetadataFor(SlotWriter$groupSlots$1, VOID, classMeta, VOID, [Iterator]);
  setMetadataFor(SlotWriter, 'SlotWriter', classMeta);
  setMetadataFor(Anchor, 'Anchor', classMeta);
  function find(identityToFind) {
    return null;
  }
  setMetadataFor(CompositionData, 'CompositionData', interfaceMeta);
  setMetadataFor(SlotTable, 'SlotTable', classMeta, VOID, [CompositionData, Iterable], SlotTable);
  setMetadataFor(PrioritySet, 'PrioritySet', classMeta, VOID, VOID, PrioritySet);
  setMetadataFor(SlotReader, 'SlotReader', classMeta);
  setMetadataFor(DataIterator, 'DataIterator', classMeta, VOID, [Iterable, Iterator]);
  setMetadataFor(GroupIterator, 'GroupIterator', classMeta, VOID, [Iterator]);
  function get_identity() {
    return null;
  }
  function get_groupSize() {
    return 0;
  }
  function get_slotsSize() {
    return 0;
  }
  setMetadataFor(CompositionGroup, 'CompositionGroup', interfaceMeta, VOID, [CompositionData]);
  setMetadataFor(SlotTableGroup, 'SlotTableGroup', classMeta, VOID, [CompositionGroup, Iterable]);
  setMetadataFor(KeyInfo, 'KeyInfo', classMeta);
  function merge(previous, current, applied) {
    return null;
  }
  setMetadataFor(SnapshotMutationPolicy, 'SnapshotMutationPolicy', interfaceMeta);
  setMetadataFor(StructuralEqualityPolicy, 'StructuralEqualityPolicy', objectMeta, VOID, [SnapshotMutationPolicy]);
  setMetadataFor(StateRecord, 'StateRecord', classMeta);
  setMetadataFor(StateStateRecord, 'StateStateRecord', classMeta, StateRecord);
  function mergeRecords(previous, current, applied) {
    return null;
  }
  setMetadataFor(StateObject, 'StateObject', interfaceMeta);
  setMetadataFor(SnapshotMutableState, 'SnapshotMutableState', interfaceMeta, VOID, [MutableState]);
  setMetadataFor(SnapshotMutableStateImpl, 'SnapshotMutableStateImpl', classMeta, VOID, [StateObject, SnapshotMutableState]);
  setMetadataFor(SnapshotThreadLocal, 'SnapshotThreadLocal', classMeta, VOID, VOID, SnapshotThreadLocal);
  setMetadataFor(Stable, 'Stable', classMeta, VOID, [Annotation]);
  setMetadataFor(StableMarker, 'StableMarker', classMeta, VOID, [Annotation]);
  setMetadataFor(IntStack, 'IntStack', classMeta, VOID, VOID, IntStack);
  setMetadataFor(Stack, 'Stack', classMeta, VOID, VOID, Stack);
  setMetadataFor(SynchronizedObject, 'SynchronizedObject', classMeta, VOID, VOID, SynchronizedObject);
  setMetadataFor(LazyValueHolder, 'LazyValueHolder', classMeta, VOID, [State_0]);
  setMetadataFor(StaticValueHolder, 'StaticValueHolder', classMeta, VOID, [State_0]);
  setMetadataFor(IdentityArrayIntMap, 'IdentityArrayIntMap', classMeta, VOID, VOID, IdentityArrayIntMap);
  setMetadataFor(IdentityArrayMap, 'IdentityArrayMap', classMeta, VOID, VOID, IdentityArrayMap);
  setMetadataFor(IdentityArraySet$iterator$1, VOID, classMeta, VOID, [Iterator]);
  setMetadataFor(IdentityArraySet, 'IdentityArraySet', classMeta, VOID, [Set], IdentityArraySet);
  setMetadataFor(IdentityScopeMap, 'IdentityScopeMap', classMeta, VOID, VOID, IdentityScopeMap);
  setMetadataFor(VectorListIterator, 'VectorListIterator', classMeta, VOID, [MutableListIterator]);
  setMetadataFor(MutableVectorList, 'MutableVectorList', classMeta, VOID, [MutableList]);
  setMetadataFor(SubList, 'SubList', classMeta, VOID, [MutableList]);
  setMetadataFor(MutableVector, 'MutableVector', classMeta, VOID, [RandomAccess]);
  setMetadataFor(ImmutableCollection, 'ImmutableCollection', interfaceMeta, VOID, [Collection]);
  setMetadataFor(Builder_0, 'Builder', interfaceMeta, VOID, [MutableCollection]);
  setMetadataFor(PersistentCollection, 'PersistentCollection', interfaceMeta, VOID, [ImmutableCollection]);
  setMetadataFor(Builder_1, 'Builder', interfaceMeta, VOID, [MutableList, Builder_0]);
  function subList(fromIndex, toIndex) {
    return new SubList_0(this, fromIndex, toIndex);
  }
  setMetadataFor(ImmutableList, 'ImmutableList', interfaceMeta, VOID, [List, ImmutableCollection]);
  setMetadataFor(PersistentList, 'PersistentList', interfaceMeta, VOID, [ImmutableList, PersistentCollection]);
  setMetadataFor(SubList_0, 'SubList', classMeta, AbstractList, [ImmutableList, AbstractList]);
  setMetadataFor(ImmutableSet, 'ImmutableSet', interfaceMeta, VOID, [Set, ImmutableCollection]);
  setMetadataFor(Builder_3, 'Builder', interfaceMeta, VOID, [MutableSet, Builder_0]);
  setMetadataFor(PersistentSet, 'PersistentSet', interfaceMeta, VOID, [ImmutableSet, PersistentCollection]);
  setMetadataFor(AbstractListIterator, 'AbstractListIterator', classMeta, VOID, [ListIterator]);
  setMetadataFor(SingleElementListIterator, 'SingleElementListIterator', classMeta, AbstractListIterator);
  setMetadataFor(AbstractPersistentList, 'AbstractPersistentList', classMeta, AbstractList, [PersistentList, AbstractList]);
  setMetadataFor(BufferIterator, 'BufferIterator', classMeta, AbstractListIterator);
  setMetadataFor(PersistentVector, 'PersistentVector', classMeta, AbstractPersistentList, [PersistentList, AbstractPersistentList]);
  setMetadataFor(PersistentVectorBuilder, 'PersistentVectorBuilder', classMeta, AbstractMutableList, [AbstractMutableList, Builder_1]);
  setMetadataFor(PersistentVectorIterator, 'PersistentVectorIterator', classMeta, AbstractListIterator);
  setMetadataFor(PersistentVectorMutableIterator, 'PersistentVectorMutableIterator', classMeta, AbstractListIterator, [MutableListIterator, AbstractListIterator]);
  setMetadataFor(Companion_5, 'Companion', objectMeta);
  setMetadataFor(SmallPersistentVector, 'SmallPersistentVector', classMeta, AbstractPersistentList, [ImmutableList, AbstractPersistentList]);
  setMetadataFor(TrieIterator, 'TrieIterator', classMeta, AbstractListIterator);
  setMetadataFor(ObjectRef, 'ObjectRef', classMeta);
  setMetadataFor(Companion_6, 'Companion', objectMeta);
  setMetadataFor(PersistentHashMap, 'PersistentHashMap', classMeta, AbstractMap, [AbstractMap, PersistentMap]);
  setMetadataFor(PersistentHashMapBuilder, 'PersistentHashMapBuilder', classMeta, AbstractMutableMap, [Builder_2, AbstractMutableMap]);
  setMetadataFor(PersistentHashMapBuilderEntriesIterator, 'PersistentHashMapBuilderEntriesIterator', classMeta, VOID, [MutableIterator]);
  setMetadataFor(PersistentHashMapBaseIterator, 'PersistentHashMapBaseIterator', classMeta, VOID, [Iterator]);
  setMetadataFor(PersistentHashMapBuilderBaseIterator, 'PersistentHashMapBuilderBaseIterator', classMeta, PersistentHashMapBaseIterator, [MutableIterator, PersistentHashMapBaseIterator]);
  setMetadataFor(PersistentHashMapBuilderKeysIterator, 'PersistentHashMapBuilderKeysIterator', classMeta, PersistentHashMapBuilderBaseIterator);
  setMetadataFor(PersistentHashMapBuilderValuesIterator, 'PersistentHashMapBuilderValuesIterator', classMeta, PersistentHashMapBuilderBaseIterator);
  setMetadataFor(TrieNodeBaseIterator, 'TrieNodeBaseIterator', classMeta, VOID, [Iterator]);
  setMetadataFor(TrieNodeMutableEntriesIterator, 'TrieNodeMutableEntriesIterator', classMeta, TrieNodeBaseIterator);
  setMetadataFor(MapEntry, 'MapEntry', classMeta, VOID, [Entry]);
  setMetadataFor(MutableMapEntry, 'MutableMapEntry', classMeta, MapEntry, [MapEntry, MutableEntry]);
  setMetadataFor(AbstractMapBuilderEntries, 'AbstractMapBuilderEntries', classMeta, AbstractMutableSet);
  setMetadataFor(PersistentHashMapBuilderEntries, 'PersistentHashMapBuilderEntries', classMeta, AbstractMapBuilderEntries);
  setMetadataFor(PersistentHashMapBuilderKeys, 'PersistentHashMapBuilderKeys', classMeta, AbstractMutableSet, [MutableSet, AbstractMutableSet]);
  setMetadataFor(PersistentHashMapBuilderValues, 'PersistentHashMapBuilderValues', classMeta, AbstractMutableCollection, [MutableCollection, AbstractMutableCollection]);
  setMetadataFor(PersistentHashMapKeysIterator, 'PersistentHashMapKeysIterator', classMeta, PersistentHashMapBaseIterator);
  setMetadataFor(PersistentHashMapValuesIterator, 'PersistentHashMapValuesIterator', classMeta, PersistentHashMapBaseIterator);
  setMetadataFor(PersistentHashMapEntriesIterator, 'PersistentHashMapEntriesIterator', classMeta, PersistentHashMapBaseIterator);
  setMetadataFor(TrieNodeKeysIterator, 'TrieNodeKeysIterator', classMeta, TrieNodeBaseIterator, VOID, TrieNodeKeysIterator);
  setMetadataFor(TrieNodeValuesIterator, 'TrieNodeValuesIterator', classMeta, TrieNodeBaseIterator, VOID, TrieNodeValuesIterator);
  setMetadataFor(TrieNodeEntriesIterator, 'TrieNodeEntriesIterator', classMeta, TrieNodeBaseIterator, VOID, TrieNodeEntriesIterator);
  setMetadataFor(PersistentHashMapKeys, 'PersistentHashMapKeys', classMeta, AbstractSet, [ImmutableSet, AbstractSet]);
  setMetadataFor(PersistentHashMapValues, 'PersistentHashMapValues', classMeta, AbstractCollection, [ImmutableCollection, AbstractCollection]);
  setMetadataFor(PersistentHashMapEntries, 'PersistentHashMapEntries', classMeta, AbstractSet, [ImmutableSet, AbstractSet]);
  setMetadataFor(ModificationResult, 'ModificationResult', classMeta);
  setMetadataFor(Companion_7, 'Companion', objectMeta);
  setMetadataFor(TrieNode, 'TrieNode', classMeta);
  setMetadataFor(Companion_8, 'Companion', objectMeta);
  setMetadataFor(PersistentOrderedSet, 'PersistentOrderedSet', classMeta, AbstractSet, [AbstractSet, PersistentSet]);
  setMetadataFor(Links, 'Links', classMeta, VOID, VOID, Links_init_$Create$);
  setMetadataFor(PersistentOrderedSetBuilder, 'PersistentOrderedSetBuilder', classMeta, AbstractMutableSet, [AbstractMutableSet, Builder_3]);
  setMetadataFor(PersistentOrderedSetIterator, 'PersistentOrderedSetIterator', classMeta, VOID, [Iterator]);
  setMetadataFor(PersistentOrderedSetMutableIterator, 'PersistentOrderedSetMutableIterator', classMeta, PersistentOrderedSetIterator, [PersistentOrderedSetIterator, MutableIterator]);
  setMetadataFor(EndOfChain, 'EndOfChain', objectMeta);
  setMetadataFor(ListImplementation, 'ListImplementation', objectMeta);
  setMetadataFor(MutabilityOwnership, 'MutabilityOwnership', classMeta, VOID, VOID, MutabilityOwnership);
  setMetadataFor(DeltaCounter, 'DeltaCounter', classMeta, VOID, VOID, DeltaCounter);
  setMetadataFor(Decoy, 'Decoy', classMeta, VOID, [Annotation]);
  setMetadataFor(DecoyImplementation, 'DecoyImplementation', classMeta, VOID, [Annotation]);
  setMetadataFor(DecoyImplementationDefaultsBitMask, 'DecoyImplementationDefaultsBitMask', classMeta, VOID, [Annotation]);
  setMetadataFor(Builder_4, 'Builder', classMeta, PersistentHashMapBuilder, [PersistentHashMapBuilder, Builder]);
  setMetadataFor(Companion_9, 'Companion', objectMeta);
  setMetadataFor(PersistentCompositionLocalHashMap, 'PersistentCompositionLocalHashMap', classMeta, PersistentHashMap, [PersistentHashMap, PersistentCompositionLocalMap]);
  setMetadataFor(StabilityInferred, 'StabilityInferred', classMeta, VOID, [Annotation]);
  setMetadataFor(ThreadMap, 'ThreadMap', classMeta);
  setMetadataFor(ObserverHandle, 'ObserverHandle', interfaceMeta);
  setMetadataFor(sam$androidx_compose_runtime_snapshots_ObserverHandle$0, 'sam$androidx_compose_runtime_snapshots_ObserverHandle$0', classMeta, VOID, [ObserverHandle]);
  setMetadataFor(sam$androidx_compose_runtime_snapshots_ObserverHandle$0_0, 'sam$androidx_compose_runtime_snapshots_ObserverHandle$0', classMeta, VOID, [ObserverHandle]);
  setMetadataFor(Companion_10, 'Companion', objectMeta);
  setMetadataFor(Snapshot, 'Snapshot', classMeta);
  setMetadataFor(MutableSnapshot, 'MutableSnapshot', classMeta, Snapshot);
  setMetadataFor(GlobalSnapshot, 'GlobalSnapshot', classMeta, MutableSnapshot);
  setMetadataFor(Companion_11, 'Companion', objectMeta);
  setMetadataFor(SnapshotApplyResult, 'SnapshotApplyResult', classMeta);
  setMetadataFor(Success, 'Success', objectMeta, SnapshotApplyResult);
  setMetadataFor(Failure, 'Failure', classMeta, SnapshotApplyResult);
  setMetadataFor(TransparentObserverMutableSnapshot, 'TransparentObserverMutableSnapshot', classMeta, MutableSnapshot);
  setMetadataFor(ReadonlySnapshot, 'ReadonlySnapshot', classMeta, Snapshot);
  setMetadataFor(NestedMutableSnapshot, 'NestedMutableSnapshot', classMeta, MutableSnapshot);
  setMetadataFor(NestedReadonlySnapshot, 'NestedReadonlySnapshot', classMeta, Snapshot);
  setMetadataFor(SnapshotApplyConflictException, 'SnapshotApplyConflictException', classMeta, Exception);
  setMetadataFor(TransparentObserverSnapshot, 'TransparentObserverSnapshot', classMeta, Snapshot);
  setMetadataFor(SnapshotDoubleIndexHeap, 'SnapshotDoubleIndexHeap', classMeta, VOID, VOID, SnapshotDoubleIndexHeap);
  setMetadataFor(Companion_12, 'Companion', objectMeta);
  setMetadataFor(SnapshotIdSet$iterator$slambda, 'SnapshotIdSet$iterator$slambda', classMeta, CoroutineImpl, [CoroutineImpl], VOID, VOID, VOID, [1]);
  setMetadataFor(SnapshotIdSet, 'SnapshotIdSet', classMeta, VOID, [Iterable]);
  setMetadataFor(StateListStateRecord, 'StateListStateRecord', classMeta, StateRecord);
  setMetadataFor(SnapshotStateList, 'SnapshotStateList', classMeta, VOID, [MutableList, StateObject], SnapshotStateList);
  setMetadataFor(StateListIterator, 'StateListIterator', classMeta, VOID, [MutableListIterator]);
  setMetadataFor(SubList$listIterator$1, VOID, classMeta, VOID, [MutableListIterator]);
  setMetadataFor(SubList_1, 'SubList', classMeta, VOID, [MutableList]);
  setMetadataFor(SnapshotWeakSet, 'SnapshotWeakSet', classMeta, VOID, VOID, SnapshotWeakSet);
  setMetadataFor(StateFactoryMarker, 'StateFactoryMarker', classMeta, VOID, [Annotation]);
  setMetadataFor(AtomicReference, 'AtomicReference', classMeta);
  setMetadataFor(AtomicInt, 'AtomicInt', classMeta);
  setMetadataFor(TestOnly, 'TestOnly', classMeta, VOID, [Annotation]);
  setMetadataFor($withFrameNanosCOROUTINE$5, '$withFrameNanosCOROUTINE$5', classMeta, CoroutineImpl);
  setMetadataFor(MonotonicClockImpl, 'MonotonicClockImpl', classMeta, VOID, [MonotonicFrameClock], MonotonicClockImpl, VOID, VOID, [1]);
  setMetadataFor(Trace, 'Trace', objectMeta);
  setMetadataFor(ComposableLambda, 'ComposableLambda', interfaceMeta);
  setMetadataFor(ComposableLambdaImpl, 'ComposableLambdaImpl', classMeta, VOID, [ComposableLambda]);
  setMetadataFor(IntMap, 'IntMap', classMeta, VOID, VOID, IntMap);
  setMetadataFor(NoOp, 'NoOp', classMeta, VOID, [Annotation]);
  setMetadataFor(WeakReference, 'WeakReference', classMeta);
  //endregion
  function Applier() {
  }
  function _get_applier__gd3aca($this) {
    return $this.applier_1;
  }
  function _get_offset__c6qzmg($this) {
    return $this.offset_1;
  }
  function _set_nesting__ay39rv($this, _set____db54di) {
    $this.nesting_1 = _set____db54di;
  }
  function _get_nesting__eo50l5($this) {
    return $this.nesting_1;
  }
  function OffsetApplier(applier, offset) {
    this.applier_1 = applier;
    this.offset_1 = offset;
    this.nesting_1 = 0;
  }
  protoOf(OffsetApplier).get_current_jwi6j4_k$ = function () {
    return this.applier_1.get_current_jwi6j4_k$();
  };
  protoOf(OffsetApplier).down_vf2a4d_k$ = function (node) {
    this.nesting_1 = this.nesting_1 + 1 | 0;
    this.applier_1.down_vf2a4d_k$(node);
  };
  protoOf(OffsetApplier).up_jp5yk5_k$ = function () {
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!(this.nesting_1 > 0)) {
      // Inline function 'androidx.compose.runtime.OffsetApplier.up.<anonymous>' call
      var message = 'OffsetApplier up called with no corresponding down';
      composeRuntimeError(toString(message));
    }
    this.nesting_1 = this.nesting_1 - 1 | 0;
    this.applier_1.up_jp5yk5_k$();
  };
  protoOf(OffsetApplier).insertTopDown_7i64np_k$ = function (index, instance) {
    this.applier_1.insertTopDown_7i64np_k$(index + (this.nesting_1 === 0 ? this.offset_1 : 0) | 0, instance);
  };
  protoOf(OffsetApplier).insertBottomUp_31tc4s_k$ = function (index, instance) {
    this.applier_1.insertBottomUp_31tc4s_k$(index + (this.nesting_1 === 0 ? this.offset_1 : 0) | 0, instance);
  };
  protoOf(OffsetApplier).remove_ispuic_k$ = function (index, count) {
    this.applier_1.remove_ispuic_k$(index + (this.nesting_1 === 0 ? this.offset_1 : 0) | 0, count);
  };
  protoOf(OffsetApplier).move_vgi6vr_k$ = function (from, to, count) {
    var effectiveOffset = this.nesting_1 === 0 ? this.offset_1 : 0;
    this.applier_1.move_vgi6vr_k$(from + effectiveOffset | 0, to + effectiveOffset | 0, count);
  };
  protoOf(OffsetApplier).clear_j9egeb_k$ = function () {
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!false) {
      // Inline function 'androidx.compose.runtime.OffsetApplier.clear.<anonymous>' call
      var message = 'Clear is not valid on OffsetApplier';
      composeRuntimeError(toString(message));
    }
  };
  function _get_stack__b8zp2v($this) {
    return $this.stack_1;
  }
  function get_$stableprop() {
    return 8;
  }
  function AbstractApplier(root) {
    this.root_1 = root;
    var tmp = this;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp.stack_1 = ArrayList_init_$Create$();
    this.current_1 = this.root_1;
    this.$stable_1 = 8;
  }
  protoOf(AbstractApplier).get_root_wott0r_k$ = function () {
    return this.root_1;
  };
  protoOf(AbstractApplier).set_current_drxwhv_k$ = function (_set____db54di) {
    this.current_1 = _set____db54di;
  };
  protoOf(AbstractApplier).get_current_jwi6j4_k$ = function () {
    return this.current_1;
  };
  protoOf(AbstractApplier).down_t5voar_k$ = function (node) {
    this.stack_1.add_utx5q5_k$(this.get_current_jwi6j4_k$());
    this.set_current_drxwhv_k$(node);
  };
  protoOf(AbstractApplier).down_vf2a4d_k$ = function (node) {
    return this.down_t5voar_k$((node == null ? true : !(node == null)) ? node : THROW_CCE());
  };
  protoOf(AbstractApplier).up_jp5yk5_k$ = function () {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.collections.isNotEmpty' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!this.stack_1.isEmpty_y1axqb_k$()) {
      // Inline function 'kotlin.check.<anonymous>' call
      var message = 'Check failed.';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    this.set_current_drxwhv_k$(this.stack_1.removeAt_6niowx_k$(this.stack_1.get_size_woubt6_k$() - 1 | 0));
  };
  protoOf(AbstractApplier).clear_j9egeb_k$ = function () {
    this.stack_1.clear_j9egeb_k$();
    this.set_current_drxwhv_k$(this.root_1);
    this.onClear_8zx9zy_k$();
  };
  protoOf(AbstractApplier).remove_3x8jet_k$ = function (_this__u8e3s4, index, count) {
    if (count === 1) {
      _this__u8e3s4.removeAt_6niowx_k$(index);
    } else {
      _this__u8e3s4.subList_xle3r2_k$(index, index + count | 0).clear_j9egeb_k$();
    }
  };
  protoOf(AbstractApplier).move_1aslm2_k$ = function (_this__u8e3s4, from, to, count) {
    var dest = from > to ? to : to - count | 0;
    if (count === 1) {
      if (from === (to + 1 | 0) ? true : from === (to - 1 | 0)) {
        var fromEl = _this__u8e3s4.get_c1px32_k$(from);
        var toEl = _this__u8e3s4.set_82063s_k$(to, fromEl);
        _this__u8e3s4.set_82063s_k$(from, toEl);
      } else {
        var fromEl_0 = _this__u8e3s4.removeAt_6niowx_k$(from);
        _this__u8e3s4.add_dl6gt3_k$(dest, fromEl_0);
      }
    } else {
      var subView = _this__u8e3s4.subList_xle3r2_k$(from, from + count | 0);
      var subCopy = toMutableList(subView);
      subView.clear_j9egeb_k$();
      _this__u8e3s4.addAll_lxodh3_k$(dest, subCopy);
    }
  };
  function rol(_this__u8e3s4, other) {
    return rotateLeft(_this__u8e3s4, other);
  }
  function ror(_this__u8e3s4, other) {
    return rotateRight(_this__u8e3s4, other);
  }
  function _get_onNewAwaiters__7yo0qo($this) {
    return $this.onNewAwaiters_1;
  }
  function FrameAwaiter(onFrame, continuation) {
    this.onFrame_1 = onFrame;
    this.continuation_1 = continuation;
  }
  protoOf(FrameAwaiter).get_onFrame_l1kyl7_k$ = function () {
    return this.onFrame_1;
  };
  protoOf(FrameAwaiter).get_continuation_7yron4_k$ = function () {
    return this.continuation_1;
  };
  protoOf(FrameAwaiter).resume_x8gtqp_k$ = function (timeNanos) {
    // Inline function 'kotlin.runCatching' call
    var tmp;
    try {
      // Inline function 'kotlin.Companion.success' call
      Companion_getInstance();
      // Inline function 'androidx.compose.runtime.FrameAwaiter.resume.<anonymous>' call
      var value = this.onFrame_1(timeNanos);
      tmp = _Result___init__impl__xyqfz8(value);
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Error) {
        var e = $p;
        // Inline function 'kotlin.Companion.failure' call
        Companion_getInstance();
        tmp_0 = _Result___init__impl__xyqfz8(createFailure(e));
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    var tmp$ret$3 = tmp;
    this.continuation_1.resumeWith_dtxwbr_k$(tmp$ret$3);
  };
  function _get_lock__d9xa4g($this) {
    return $this.lock_1;
  }
  function _set_failureCause__b3t8oo($this, _set____db54di) {
    $this.failureCause_1 = _set____db54di;
  }
  function _get_failureCause__qnjz8s($this) {
    return $this.failureCause_1;
  }
  function _set_awaiters__gwt8jd($this, _set____db54di) {
    $this.awaiters_1 = _set____db54di;
  }
  function _get_awaiters__tppk05($this) {
    return $this.awaiters_1;
  }
  function _set_spareList__z82a8g($this, _set____db54di) {
    $this.spareList_1 = _set____db54di;
  }
  function _get_spareList__6i7bc4($this) {
    return $this.spareList_1;
  }
  function fail($this, cause) {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    $this.lock_1;
    if (!($this.failureCause_1 == null))
      return Unit_getInstance();
    $this.failureCause_1 = cause;
    // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
    var this_0 = $this.awaiters_1;
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    var last = this_0.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var item = this_0.get_c1px32_k$(index);
        // Inline function 'androidx.compose.runtime.BroadcastFrameClock.fail.<anonymous>.<anonymous>' call
        // Inline function 'kotlin.coroutines.resumeWithException' call
        var this_1 = item.continuation_1;
        // Inline function 'kotlin.Companion.failure' call
        Companion_getInstance();
        var tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(cause));
        this_1.resumeWith_dtxwbr_k$(tmp$ret$0);
      }
       while (inductionVariable <= last);
    $this.awaiters_1.clear_j9egeb_k$();
  }
  function get_$stableprop_0() {
    return 8;
  }
  function BroadcastFrameClock$withFrameNanos$lambda(this$0, $awaiter) {
    return function (it) {
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      this$0.lock_1;
      var tmp = this$0.awaiters_1;
      var tmp_0;
      if ($awaiter._v == null) {
        throwUninitializedPropertyAccessException('awaiter');
      } else {
        tmp_0 = $awaiter._v;
      }
      tmp.remove_cedx0m_k$(tmp_0);
      return Unit_getInstance();
    };
  }
  function BroadcastFrameClock(onNewAwaiters) {
    onNewAwaiters = onNewAwaiters === VOID ? null : onNewAwaiters;
    this.onNewAwaiters_1 = onNewAwaiters;
    this.lock_1 = createSynchronizedObject();
    this.failureCause_1 = null;
    var tmp = this;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp.awaiters_1 = ArrayList_init_$Create$();
    var tmp_0 = this;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp_0.spareList_1 = ArrayList_init_$Create$();
    this.$stable_1 = 8;
  }
  protoOf(BroadcastFrameClock).get_hasAwaiters_yh902p_k$ = function () {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.lock_1;
    // Inline function 'androidx.compose.runtime.BroadcastFrameClock.<get-hasAwaiters>.<anonymous>' call
    // Inline function 'kotlin.collections.isNotEmpty' call
    return !this.awaiters_1.isEmpty_y1axqb_k$();
  };
  protoOf(BroadcastFrameClock).sendFrame_f05udj_k$ = function (timeNanos) {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.lock_1;
    var toResume = this.awaiters_1;
    this.awaiters_1 = this.spareList_1;
    this.spareList_1 = toResume;
    var inductionVariable = 0;
    var last = toResume.get_size_woubt6_k$();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        toResume.get_c1px32_k$(i).resume_x8gtqp_k$(timeNanos);
      }
       while (inductionVariable < last);
    toResume.clear_j9egeb_k$();
  };
  protoOf(BroadcastFrameClock).withFrameNanos_8v58om_k$ = function (onFrame, $completion) {
    // Inline function 'kotlinx.coroutines.suspendCancellableCoroutine.<anonymous>' call
    var cancellable = new CancellableContinuationImpl(intercepted($completion), get_MODE_CANCELLABLE());
    cancellable.initCancellability_shqc60_k$();
    $l$block: {
      // Inline function 'androidx.compose.runtime.BroadcastFrameClock.withFrameNanos.<anonymous>' call
      var awaiter = {_v: null};
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      this.lock_1;
      // Inline function 'androidx.compose.runtime.BroadcastFrameClock.withFrameNanos.<anonymous>.<anonymous>' call
      var cause = this.failureCause_1;
      if (!(cause == null)) {
        // Inline function 'kotlin.coroutines.resumeWithException' call
        // Inline function 'kotlin.Companion.failure' call
        Companion_getInstance();
        var tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(cause));
        cancellable.resumeWith_dtxwbr_k$(tmp$ret$0);
        break $l$block;
      }
      awaiter._v = new FrameAwaiter(onFrame, cancellable);
      // Inline function 'kotlin.collections.isNotEmpty' call
      var hadAwaiters = !this.awaiters_1.isEmpty_y1axqb_k$();
      var tmp = this.awaiters_1;
      var tmp_0;
      if (awaiter._v == null) {
        throwUninitializedPropertyAccessException('awaiter');
      } else {
        tmp_0 = awaiter._v;
      }
      tmp.add_utx5q5_k$(tmp_0);
      var hasNewAwaiters = !hadAwaiters;
      cancellable.invokeOnCancellation_kffkqp_k$(BroadcastFrameClock$withFrameNanos$lambda(this, awaiter));
      if (hasNewAwaiters ? !(this.onNewAwaiters_1 == null) : false) {
        try {
          this.onNewAwaiters_1();
        } catch ($p) {
          if ($p instanceof Error) {
            var t = $p;
            fail(this, t);
          } else {
            throw $p;
          }
        }
      }
    }
    return cancellable.getResult_clfhg3_k$();
  };
  protoOf(BroadcastFrameClock).cancel_l0ce8h_k$ = function (cancellationException) {
    fail(this, cancellationException);
  };
  protoOf(BroadcastFrameClock).cancel$default_5uk156_k$ = function (cancellationException, $super) {
    cancellationException = cancellationException === VOID ? CancellationException_init_$Create$('clock cancelled') : cancellationException;
    var tmp;
    if ($super === VOID) {
      this.cancel_l0ce8h_k$(cancellationException);
      tmp = Unit_getInstance();
    } else {
      tmp = $super.cancel_l0ce8h_k$.call(this, cancellationException);
    }
    return tmp;
  };
  function Composable() {
  }
  protoOf(Composable).equals = function (other) {
    if (!(other instanceof Composable))
      return false;
    other instanceof Composable || THROW_CCE();
    return true;
  };
  protoOf(Composable).hashCode = function () {
    return 0;
  };
  protoOf(Composable).toString = function () {
    return '@androidx.compose.runtime.Composable()';
  };
  function ComposableInferredTarget(scheme) {
    this.scheme_1 = scheme;
  }
  protoOf(ComposableInferredTarget).get_scheme_je6tv2_k$ = function () {
    return this.scheme_1;
  };
  protoOf(ComposableInferredTarget).equals = function (other) {
    if (!(other instanceof ComposableInferredTarget))
      return false;
    var tmp0_other_with_cast = other instanceof ComposableInferredTarget ? other : THROW_CCE();
    if (!(this.scheme_1 === tmp0_other_with_cast.scheme_1))
      return false;
    return true;
  };
  protoOf(ComposableInferredTarget).hashCode = function () {
    return imul(getStringHashCode('scheme'), 127) ^ getStringHashCode(this.scheme_1);
  };
  protoOf(ComposableInferredTarget).toString = function () {
    return '@androidx.compose.runtime.ComposableInferredTarget(scheme=' + this.scheme_1 + ')';
  };
  function remember$composable(key1, calculation, $composer, $changed) {
    var $composer_0 = $composer;
    $composer_0.startReplaceableGroup_ip860b_k$(-838505973);
    sourceInformation($composer_0, 'CC(remember$composable)P(1):Composables.kt#9igjgp');
    // Inline function 'androidx.compose.runtime.cache' call
    var invalid = $composer_0.changed_ga7h3f_k$(key1);
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.cache.<anonymous>' call
    var it = $composer_0.rememberedValue_4dg93v_k$();
    var tmp;
    if (invalid ? true : it === Companion_getInstance_1().get_Empty_i9b85g_k$()) {
      var value = calculation();
      $composer_0.updateRememberedValue_l1wh71_k$(value);
      tmp = value;
    } else {
      tmp = it;
    }
    var tmp_0 = tmp;
    var tmp0 = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
    $composer_0.endReplaceableGroup_ern0ak_k$();
    return tmp0;
  }
  function remember$composable_0(calculation, $composer, $changed) {
    var $composer_0 = $composer;
    $composer_0.startReplaceableGroup_ip860b_k$(547886695);
    sourceInformation($composer_0, 'CC(remember$composable):Composables.kt#9igjgp');
    // Inline function 'androidx.compose.runtime.cache' call
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.cache.<anonymous>' call
    var it = $composer_0.rememberedValue_4dg93v_k$();
    var tmp;
    if (false ? true : it === Companion_getInstance_1().get_Empty_i9b85g_k$()) {
      var value = calculation();
      $composer_0.updateRememberedValue_l1wh71_k$(value);
      tmp = value;
    } else {
      tmp = it;
    }
    var tmp_0 = tmp;
    var tmp0 = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
    $composer_0.endReplaceableGroup_ern0ak_k$();
    return tmp0;
  }
  function invalidApplier() {
    var message = 'Invalid applier';
    throw IllegalStateException_init_$Create$(toString(message));
  }
  function remember$composable_1(key1, key2, key3, calculation, $composer, $changed) {
    var $composer_0 = $composer;
    $composer_0.startReplaceableGroup_ip860b_k$(-1058148781);
    sourceInformation($composer_0, 'CC(remember$composable)P(1,2,3):Composables.kt#9igjgp');
    // Inline function 'androidx.compose.runtime.cache' call
    var invalid = !!(!!($composer_0.changed_ga7h3f_k$(key1) | $composer_0.changed_ga7h3f_k$(key2)) | $composer_0.changed_ga7h3f_k$(key3));
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.cache.<anonymous>' call
    var it = $composer_0.rememberedValue_4dg93v_k$();
    var tmp;
    if (invalid ? true : it === Companion_getInstance_1().get_Empty_i9b85g_k$()) {
      var value = calculation();
      $composer_0.updateRememberedValue_l1wh71_k$(value);
      tmp = value;
    } else {
      tmp = it;
    }
    var tmp_0 = tmp;
    var tmp0 = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
    $composer_0.endReplaceableGroup_ern0ak_k$();
    return tmp0;
  }
  function remember$composable_2(keys, calculation, $composer, $changed) {
    var $composer_0 = $composer;
    $composer_0.startReplaceableGroup_ip860b_k$(-1603429786);
    sourceInformation($composer_0, 'CC(remember$composable)P(1):Composables.kt#9igjgp');
    var invalid = false;
    var inductionVariable = 0;
    var last = keys.length;
    while (inductionVariable < last) {
      var key = keys[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      invalid = !!(invalid | $composer_0.changed_ga7h3f_k$(key));
    }
    // Inline function 'androidx.compose.runtime.cache' call
    var invalid_0 = invalid;
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.cache.<anonymous>' call
    var it = $composer_0.rememberedValue_4dg93v_k$();
    var tmp;
    if (invalid_0 ? true : it === Companion_getInstance_1().get_Empty_i9b85g_k$()) {
      var value = calculation();
      $composer_0.updateRememberedValue_l1wh71_k$(value);
      tmp = value;
    } else {
      tmp = it;
    }
    var tmp_0 = tmp;
    var tmp0 = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
    $composer_0.endReplaceableGroup_ern0ak_k$();
    return tmp0;
  }
  function remember$composable_3(key1, key2, calculation, $composer, $changed) {
    var $composer_0 = $composer;
    $composer_0.startReplaceableGroup_ip860b_k$(-1124426577);
    sourceInformation($composer_0, 'CC(remember$composable)P(1,2):Composables.kt#9igjgp');
    // Inline function 'androidx.compose.runtime.cache' call
    var invalid = !!($composer_0.changed_ga7h3f_k$(key1) | $composer_0.changed_ga7h3f_k$(key2));
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.cache.<anonymous>' call
    var it = $composer_0.rememberedValue_4dg93v_k$();
    var tmp;
    if (invalid ? true : it === Companion_getInstance_1().get_Empty_i9b85g_k$()) {
      var value = calculation();
      $composer_0.updateRememberedValue_l1wh71_k$(value);
      tmp = value;
    } else {
      tmp = it;
    }
    var tmp_0 = tmp;
    var tmp0 = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
    $composer_0.endReplaceableGroup_ern0ak_k$();
    return tmp0;
  }
  function ComposeCompilerApi() {
  }
  protoOf(ComposeCompilerApi).equals = function (other) {
    if (!(other instanceof ComposeCompilerApi))
      return false;
    other instanceof ComposeCompilerApi || THROW_CCE();
    return true;
  };
  protoOf(ComposeCompilerApi).hashCode = function () {
    return 0;
  };
  protoOf(ComposeCompilerApi).toString = function () {
    return '@androidx.compose.runtime.ComposeCompilerApi()';
  };
  function ComposeNodeLifecycleCallback() {
  }
  function set_compositionTracer(_set____db54di) {
    _init_properties_Composer_kt__bmp4g0();
    compositionTracer = _set____db54di;
  }
  function get_compositionTracer() {
    _init_properties_Composer_kt__bmp4g0();
    return compositionTracer;
  }
  var compositionTracer;
  function get_removeCurrentGroupInstance() {
    _init_properties_Composer_kt__bmp4g0();
    return removeCurrentGroupInstance;
  }
  var removeCurrentGroupInstance;
  function get_skipToGroupEndInstance() {
    _init_properties_Composer_kt__bmp4g0();
    return skipToGroupEndInstance;
  }
  var skipToGroupEndInstance;
  function get_endGroupInstance() {
    _init_properties_Composer_kt__bmp4g0();
    return endGroupInstance;
  }
  var endGroupInstance;
  function get_startRootGroup() {
    _init_properties_Composer_kt__bmp4g0();
    return startRootGroup;
  }
  var startRootGroup;
  function get_resetSlotsInstance() {
    _init_properties_Composer_kt__bmp4g0();
    return resetSlotsInstance;
  }
  var resetSlotsInstance;
  function get_invocation() {
    _init_properties_Composer_kt__bmp4g0();
    return invocation;
  }
  var invocation;
  function get_provider() {
    _init_properties_Composer_kt__bmp4g0();
    return provider;
  }
  var provider;
  function get_compositionLocalMap() {
    _init_properties_Composer_kt__bmp4g0();
    return compositionLocalMap;
  }
  var compositionLocalMap;
  function get_providerValues() {
    _init_properties_Composer_kt__bmp4g0();
    return providerValues;
  }
  var providerValues;
  function get_providerMaps() {
    _init_properties_Composer_kt__bmp4g0();
    return providerMaps;
  }
  var providerMaps;
  function get_reference() {
    _init_properties_Composer_kt__bmp4g0();
    return reference;
  }
  var reference;
  function CompositionTracer() {
  }
  function RememberManager() {
  }
  function removeCurrentGroup(_this__u8e3s4, rememberManager) {
    _init_properties_Composer_kt__bmp4g0();
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = _this__u8e3s4.groupSlots_l0trzq_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var slot = tmp0_iterator.next_20eer_k$();
      if (!(slot == null) ? isInterface(slot, ComposeNodeLifecycleCallback) : false) {
        rememberManager.releasing_nz7zuh_k$(slot);
      }
      if (!(slot == null) ? isInterface(slot, RememberObserver) : false) {
        rememberManager.forgetting_k8kg92_k$(slot);
      }
      if (slot instanceof RecomposeScopeImpl) {
        slot.release_wu5yyf_k$();
      }
    }
    _this__u8e3s4.removeGroup_5800px_k$();
  }
  function ScopeUpdateScope() {
  }
  function Composer$Companion$Empty$1() {
  }
  protoOf(Composer$Companion$Empty$1).toString = function () {
    return 'Empty';
  };
  function Companion() {
    Companion_instance = this;
    var tmp = this;
    tmp.Empty_1 = new Composer$Companion$Empty$1();
  }
  protoOf(Companion).get_Empty_i9b85g_k$ = function () {
    return this.Empty_1;
  };
  protoOf(Companion).setTracer_1yunay_k$ = function (tracer) {
    set_compositionTracer(tracer);
  };
  var Companion_instance;
  function Companion_getInstance_1() {
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function Composer() {
  }
  var InvalidationResult_IGNORED_instance;
  var InvalidationResult_SCHEDULED_instance;
  var InvalidationResult_DEFERRED_instance;
  var InvalidationResult_IMMINENT_instance;
  function values() {
    return [InvalidationResult_IGNORED_getInstance(), InvalidationResult_SCHEDULED_getInstance(), InvalidationResult_DEFERRED_getInstance(), InvalidationResult_IMMINENT_getInstance()];
  }
  function valueOf(value) {
    switch (value) {
      case 'IGNORED':
        return InvalidationResult_IGNORED_getInstance();
      case 'SCHEDULED':
        return InvalidationResult_SCHEDULED_getInstance();
      case 'DEFERRED':
        return InvalidationResult_DEFERRED_getInstance();
      case 'IMMINENT':
        return InvalidationResult_IMMINENT_getInstance();
      default:
        InvalidationResult_initEntries();
        THROW_IAE('No enum constant value.');
        break;
    }
  }
  var InvalidationResult_entriesInitialized;
  function InvalidationResult_initEntries() {
    if (InvalidationResult_entriesInitialized)
      return Unit_getInstance();
    InvalidationResult_entriesInitialized = true;
    InvalidationResult_IGNORED_instance = new InvalidationResult('IGNORED', 0);
    InvalidationResult_SCHEDULED_instance = new InvalidationResult('SCHEDULED', 1);
    InvalidationResult_DEFERRED_instance = new InvalidationResult('DEFERRED', 2);
    InvalidationResult_IMMINENT_instance = new InvalidationResult('IMMINENT', 3);
  }
  function InvalidationResult(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function runtimeCheck(value, lazyMessage) {
    _init_properties_Composer_kt__bmp4g0();
    if (!value) {
      var message = lazyMessage();
      composeRuntimeError(toString(message));
    }
  }
  function runtimeCheck_0(value) {
    _init_properties_Composer_kt__bmp4g0();
    var tmp;
    if (!value) {
      // Inline function 'androidx.compose.runtime.runtimeCheck.<anonymous>' call
      var message = 'Check failed';
      composeRuntimeError(toString(message));
    }
    return tmp;
  }
  function sourceInformationMarkerStart(composer, key, sourceInformation) {
    _init_properties_Composer_kt__bmp4g0();
    composer.sourceInformationMarkerStart_cs2ebb_k$(key, sourceInformation);
  }
  function sourceInformationMarkerEnd(composer) {
    _init_properties_Composer_kt__bmp4g0();
    composer.sourceInformationMarkerEnd_ay99y8_k$();
  }
  function get_$stableprop_1() {
    return 0;
  }
  function ProvidedValue(compositionLocal, value, canOverride) {
    this.compositionLocal_1 = compositionLocal;
    this.value_1 = value;
    this.canOverride_1 = canOverride;
    this.$stable_1 = 0;
  }
  protoOf(ProvidedValue).get_compositionLocal_3mcxg6_k$ = function () {
    return this.compositionLocal_1;
  };
  protoOf(ProvidedValue).get_value_j01efc_k$ = function () {
    return this.value_1;
  };
  protoOf(ProvidedValue).get_canOverride_d3ev6b_k$ = function () {
    return this.canOverride_1;
  };
  function sourceInformation(composer, sourceInformation) {
    _init_properties_Composer_kt__bmp4g0();
    composer.sourceInformation_x808w7_k$(sourceInformation);
  }
  function isTraceInProgress() {
    _init_properties_Composer_kt__bmp4g0();
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.isTraceInProgress.<anonymous>' call
    var it = get_compositionTracer();
    return !(it == null) ? it.isTraceInProgress_jok3xv_k$() : false;
  }
  function traceEventStart(key, dirty1, dirty2, info) {
    _init_properties_Composer_kt__bmp4g0();
    var tmp0_safe_receiver = get_compositionTracer();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.traceEventStart_roky1r_k$(key, dirty1, dirty2, info);
    }
  }
  function traceEventEnd() {
    _init_properties_Composer_kt__bmp4g0();
    var tmp0_safe_receiver = get_compositionTracer();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.traceEventEnd_7tfg52_k$();
    }
  }
  function get_$stableprop_2() {
    return 0;
  }
  function MovableContent(content) {
    illegalDecoyCallException('<init>');
  }
  protoOf(MovableContent).get_content_h02jrk_k$ = function () {
    return this.content_1;
  };
  function MovableContent(content) {
    this.content_1 = content;
    this.$stable_1 = 0;
  }
  function get_$stableprop_3() {
    return 8;
  }
  function MovableContentStateReference(content, parameter, composition, slotTable, anchor, invalidations, locals) {
    this.content_1 = content;
    this.parameter_1 = parameter;
    this.composition_1 = composition;
    this.slotTable_1 = slotTable;
    this.anchor_1 = anchor;
    this.invalidations_1 = invalidations;
    this.locals_1 = locals;
    this.$stable_1 = 8;
  }
  protoOf(MovableContentStateReference).get_content_h02jrk_k$ = function () {
    return this.content_1;
  };
  protoOf(MovableContentStateReference).get_parameter_u6ydc0_k$ = function () {
    return this.parameter_1;
  };
  protoOf(MovableContentStateReference).get_composition_q729_k$ = function () {
    return this.composition_1;
  };
  protoOf(MovableContentStateReference).get_slotTable_jp6uvb_k$ = function () {
    return this.slotTable_1;
  };
  protoOf(MovableContentStateReference).get_anchor_b1c8n2_k$ = function () {
    return this.anchor_1;
  };
  protoOf(MovableContentStateReference).set_invalidations_sm1gr7_k$ = function (_set____db54di) {
    this.invalidations_1 = _set____db54di;
  };
  protoOf(MovableContentStateReference).get_invalidations_e3f710_k$ = function () {
    return this.invalidations_1;
  };
  protoOf(MovableContentStateReference).get_locals_g9dqb5_k$ = function () {
    return this.locals_1;
  };
  function composeRuntimeError(message) {
    _init_properties_Composer_kt__bmp4g0();
    throw new ComposeRuntimeError('Compose Runtime internal error. Unexpected or incorrect use of the Compose ' + ('internal runtime API (' + message + '). Please report to Google or use ') + 'https://goo.gle/compose-feedback');
  }
  function ComposeRuntimeError(message) {
    IllegalStateException_init_$Init$(this);
    captureStack(this, ComposeRuntimeError);
    this.message_1 = message;
  }
  protoOf(ComposeRuntimeError).get_message_h23axq_k$ = function () {
    return this.message_1;
  };
  function _set_compositionLocalScope__ya1b9q($this, _set____db54di) {
    var this_0 = $this.compositionLocalScope$delegate_1;
    compositionLocalScope$factory();
    this_0.set_value_v1vabv_k$(_set____db54di);
    return Unit_getInstance();
  }
  function _get_compositionLocalScope__ulge9q($this) {
    // Inline function 'androidx.compose.runtime.getValue' call
    var this_0 = $this.compositionLocalScope$delegate_1;
    compositionLocalScope$factory_0();
    return this_0.get_value_j01efc_k$();
  }
  function _get_parentContext__yfah4k($this) {
    return $this.parentContext_1;
  }
  function _get_slotTable__u1gzdr($this) {
    return $this.slotTable_1;
  }
  function _get_abandonSet__ipgbk2($this) {
    return $this.abandonSet_1;
  }
  function _set_changes__dfppnm($this, _set____db54di) {
    $this.changes_1 = _set____db54di;
  }
  function _get_changes__c6ikpe($this) {
    return $this.changes_1;
  }
  function _set_lateChanges__b8z1ig($this, _set____db54di) {
    $this.lateChanges_1 = _set____db54di;
  }
  function _get_lateChanges__thqu4s($this) {
    return $this.lateChanges_1;
  }
  function _get_pendingStack__2n1a2i($this) {
    return $this.pendingStack_1;
  }
  function _set_pending__51snjm($this, _set____db54di) {
    $this.pending_1 = _set____db54di;
  }
  function _get_pending__uo0xwm($this) {
    return $this.pending_1;
  }
  function _set_nodeIndex__zbc15h($this, _set____db54di) {
    $this.nodeIndex_1 = _set____db54di;
  }
  function _get_nodeIndex__6exkf3($this) {
    return $this.nodeIndex_1;
  }
  function _set_nodeIndexStack__8djmn5($this, _set____db54di) {
    $this.nodeIndexStack_1 = _set____db54di;
  }
  function _get_nodeIndexStack__h5jteb($this) {
    return $this.nodeIndexStack_1;
  }
  function _set_groupNodeCount__8janbr($this, _set____db54di) {
    $this.groupNodeCount_1 = _set____db54di;
  }
  function _get_groupNodeCount__gzsspp($this) {
    return $this.groupNodeCount_1;
  }
  function _set_groupNodeCountStack__w3o0ad($this, _set____db54di) {
    $this.groupNodeCountStack_1 = _set____db54di;
  }
  function _get_groupNodeCountStack__isxre1($this) {
    return $this.groupNodeCountStack_1;
  }
  function _set_nodeCountOverrides__jzizx9($this, _set____db54di) {
    $this.nodeCountOverrides_1 = _set____db54di;
  }
  function _get_nodeCountOverrides__dycb73($this) {
    return $this.nodeCountOverrides_1;
  }
  function _set_nodeCountVirtualOverrides__igsuv0($this, _set____db54di) {
    $this.nodeCountVirtualOverrides_1 = _set____db54di;
  }
  function _get_nodeCountVirtualOverrides__g7ybwo($this) {
    return $this.nodeCountVirtualOverrides_1;
  }
  function _set_forceRecomposeScopes__rbifz0($this, _set____db54di) {
    $this.forceRecomposeScopes_1 = _set____db54di;
  }
  function _get_forceRecomposeScopes__trixzs($this) {
    return $this.forceRecomposeScopes_1;
  }
  function _set_forciblyRecompose__utxwre($this, _set____db54di) {
    $this.forciblyRecompose_1 = _set____db54di;
  }
  function _get_forciblyRecompose__ihd8xe($this) {
    return $this.forciblyRecompose_1;
  }
  function _set_nodeExpected__u0io1v($this, _set____db54di) {
    $this.nodeExpected_1 = _set____db54di;
  }
  function _get_nodeExpected__egrxhr($this) {
    return $this.nodeExpected_1;
  }
  function _get_invalidations__zfm9no($this) {
    return $this.invalidations_1;
  }
  function _get_entersStack__dcpbwk($this) {
    return $this.entersStack_1;
  }
  function _set_parentProvider__tk8cp0($this, _set____db54di) {
    $this.parentProvider_1 = _set____db54di;
  }
  function _get_parentProvider__414wnk($this) {
    return $this.parentProvider_1;
  }
  function _get_providerUpdates__b97ee0($this) {
    return $this.providerUpdates_1;
  }
  function _set_providersInvalid__i3mb2a($this, _set____db54di) {
    $this.providersInvalid_1 = _set____db54di;
  }
  function _get_providersInvalid__nudhu2($this) {
    return $this.providersInvalid_1;
  }
  function _get_providersInvalidStack__fx4ndu($this) {
    return $this.providersInvalidStack_1;
  }
  function _set_reusing__ew3hqk($this, _set____db54di) {
    $this.reusing_1 = _set____db54di;
  }
  function _get_reusing__uis9vk($this) {
    return $this.reusing_1;
  }
  function _set_reusingGroup__z03av($this, _set____db54di) {
    $this.reusingGroup_1 = _set____db54di;
  }
  function _get_reusingGroup__ekqn99($this) {
    return $this.reusingGroup_1;
  }
  function _set_childrenComposing__50mjt7($this, _set____db54di) {
    $this.childrenComposing_1 = _set____db54di;
  }
  function _get_childrenComposing__qqfg3j($this) {
    return $this.childrenComposing_1;
  }
  function _set_compositionToken__e6l1e0($this, _set____db54di) {
    $this.compositionToken_1 = _set____db54di;
  }
  function _get_compositionToken__rreric($this) {
    return $this.compositionToken_1;
  }
  function _set_sourceInformationEnabled__49l3ix($this, _set____db54di) {
    $this.sourceInformationEnabled_1 = _set____db54di;
  }
  function _get_sourceInformationEnabled__8s44b($this) {
    return $this.sourceInformationEnabled_1;
  }
  function _get_derivedStateObserver__apm8m9($this) {
    return $this.derivedStateObserver_1;
  }
  function _get_invalidateStack__sz7wpo($this) {
    return $this.invalidateStack_1;
  }
  function _set_isComposing__pnlnfk($this, _set____db54di) {
    $this.isComposing_1 = _set____db54di;
  }
  function _set_isDisposed__7i5h54($this, _set____db54di) {
    $this.isDisposed_1 = _set____db54di;
  }
  function _set_reader__gtyyj0($this, _set____db54di) {
    $this.reader_1 = _set____db54di;
  }
  function _get_reader__fd8dw8($this) {
    return $this.reader_1;
  }
  function _set_writer__86txq4($this, _set____db54di) {
    $this.writer_1 = _set____db54di;
  }
  function _get_writer__6q3d3c($this) {
    return $this.writer_1;
  }
  function _set_writerHasAProvider__s3242c($this, _set____db54di) {
    $this.writerHasAProvider_1 = _set____db54di;
  }
  function _get_writerHasAProvider__906msg($this) {
    return $this.writerHasAProvider_1;
  }
  function _set_providerCache__w73o7o($this, _set____db54di) {
    $this.providerCache_1 = _set____db54di;
  }
  function _get_providerCache__gzc5pc($this) {
    return $this.providerCache_1;
  }
  function _set_insertAnchor__sgd9ah($this, _set____db54di) {
    $this.insertAnchor_1 = _set____db54di;
  }
  function _get_insertAnchor__r1024j($this) {
    return $this.insertAnchor_1;
  }
  function _get_insertFixups__qpkswh($this) {
    return $this.insertFixups_1;
  }
  function startRoot($this) {
    $this.reader_1 = $this.slotTable_1.openReader_51y0fh_k$();
    startGroup($this, 100);
    $this.parentContext_1.startComposing_mvf071_k$();
    $this.parentProvider_1 = $this.parentContext_1.getCompositionLocalScope_nk4i7x_k$();
    $this.providersInvalidStack_1.push_w5xqdu_k$(asInt($this.providersInvalid_1));
    $this.providersInvalid_1 = $this.changed_ga7h3f_k$($this.parentProvider_1);
    $this.providerCache_1 = null;
    if (!$this.forceRecomposeScopes_1) {
      $this.forceRecomposeScopes_1 = $this.parentContext_1.get_collectingParameterInformation_qgy3do_k$();
    }
    var tmp0_safe_receiver = read($this.parentProvider_1, get_LocalInspectionTables());
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      tmp0_safe_receiver.add_utx5q5_k$($this.slotTable_1);
      $this.parentContext_1.recordInspectionTable_v0ydx3_k$(tmp0_safe_receiver);
    }
    startGroup($this, $this.parentContext_1.get_compoundHashKey_elmli5_k$());
  }
  function endRoot($this) {
    endGroup($this);
    $this.parentContext_1.doneComposing_s7ssbn_k$();
    endGroup($this);
    recordEndRoot($this);
    finalizeCompose($this);
    $this.reader_1.close_yn9xrc_k$();
    $this.forciblyRecompose_1 = false;
  }
  function abortRoot($this) {
    cleanUpCompose($this);
    $this.pendingStack_1.clear_j9egeb_k$();
    $this.nodeIndexStack_1.clear_j9egeb_k$();
    $this.groupNodeCountStack_1.clear_j9egeb_k$();
    $this.entersStack_1.clear_j9egeb_k$();
    $this.providersInvalidStack_1.clear_j9egeb_k$();
    $this.providerUpdates_1.clear_j9egeb_k$();
    if (!$this.reader_1.get_closed_byjrzp_k$()) {
      $this.reader_1.close_yn9xrc_k$();
    }
    if (!$this.writer_1.get_closed_byjrzp_k$()) {
      $this.writer_1.close_yn9xrc_k$();
    }
    $this.insertFixups_1.clear_j9egeb_k$();
    createFreshInsertTable($this);
    $this.compoundKeyHash_1 = 0;
    $this.childrenComposing_1 = 0;
    $this.nodeExpected_1 = false;
    $this.inserting_1 = false;
    $this.reusing_1 = false;
    $this.isComposing_1 = false;
    $this.forciblyRecompose_1 = false;
    $this.reusingGroup_1 = -1;
  }
  function _set_inserting__yxut2c($this, _set____db54di) {
    $this.inserting_1 = _set____db54di;
  }
  function _set_compoundKeyHash__z5lfkt($this, _set____db54di) {
    $this.compoundKeyHash_1 = _set____db54di;
  }
  function startGroup($this, key) {
    return start($this, key, null, Companion_getInstance_2().Group_1, null);
  }
  function startGroup_0($this, key, dataKey) {
    return start($this, key, dataKey, Companion_getInstance_2().Group_1, null);
  }
  function endGroup($this) {
    return end($this, false);
  }
  function skipGroup($this) {
    $this.groupNodeCount_1 = $this.groupNodeCount_1 + $this.reader_1.skipGroup_y9vakg_k$() | 0;
  }
  function currentCompositionLocalScope($this) {
    var tmp0_safe_receiver = $this.providerCache_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return tmp0_safe_receiver;
    }
    return currentCompositionLocalScope_0($this, $this.reader_1.get_parent_hy4reb_k$());
  }
  function currentCompositionLocalScope_0($this, group) {
    if ($this.inserting_1 ? $this.writerHasAProvider_1 : false) {
      var current = $this.writer_1.get_parent_hy4reb_k$();
      while (current > 0) {
        if ($this.writer_1.groupKey_pe96ns_k$(current) === 202 ? equals($this.writer_1.groupObjectKey_7ge4pj_k$(current), get_compositionLocalMap()) : false) {
          var tmp = $this.writer_1.groupAux_dyi8kz_k$(current);
          var providers = (!(tmp == null) ? isInterface(tmp, PersistentCompositionLocalMap) : false) ? tmp : THROW_CCE();
          $this.providerCache_1 = providers;
          return providers;
        }
        current = $this.writer_1.parent_omvrla_k$(current);
      }
    }
    if ($this.reader_1.get_size_woubt6_k$() > 0) {
      var current_0 = group;
      while (current_0 > 0) {
        if ($this.reader_1.groupKey_pe96ns_k$(current_0) === 202 ? equals($this.reader_1.groupObjectKey_7ge4pj_k$(current_0), get_compositionLocalMap()) : false) {
          var tmp0_elvis_lhs = $this.providerUpdates_1.get_c1px32_k$(current_0);
          var tmp_0;
          if (tmp0_elvis_lhs == null) {
            var tmp_1 = $this.reader_1.groupAux_dyi8kz_k$(current_0);
            tmp_0 = (!(tmp_1 == null) ? isInterface(tmp_1, PersistentCompositionLocalMap) : false) ? tmp_1 : THROW_CCE();
          } else {
            tmp_0 = tmp0_elvis_lhs;
          }
          var providers_0 = tmp_0;
          $this.providerCache_1 = providers_0;
          return providers_0;
        }
        current_0 = $this.reader_1.parent_omvrla_k$(current_0);
      }
    }
    $this.providerCache_1 = $this.parentProvider_1;
    return $this.parentProvider_1;
  }
  function updateProviderMapGroup($this, parentScope, currentProviders) {
    // Inline function 'androidx.compose.runtime.mutate' call
    // Inline function 'kotlin.apply' call
    var this_0 = parentScope.builder_3thy1n_k$();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.ComposerImpl.updateProviderMapGroup.<anonymous>' call
    this_0.putAll_wgg6cj_k$(currentProviders);
    var providerScope = this_0.build_1k0s4u_k$();
    startGroup_0($this, 204, get_providerMaps());
    $this.changed_ga7h3f_k$(providerScope);
    $this.changed_ga7h3f_k$(currentProviders);
    endGroup($this);
    return providerScope;
  }
  function ensureWriter($this) {
    if ($this.writer_1.get_closed_byjrzp_k$()) {
      $this.writer_1 = $this.insertTable_1.openWriter_7mgvvh_k$();
      $this.writer_1.skipToGroupEnd_lh3zi2_k$();
      $this.writerHasAProvider_1 = false;
      $this.providerCache_1 = null;
    }
  }
  function createFreshInsertTable($this) {
    runtimeCheck_0($this.writer_1.get_closed_byjrzp_k$());
    $this.insertTable_1 = new SlotTable();
    var tmp = $this;
    // Inline function 'kotlin.also' call
    var this_0 = $this.insertTable_1.openWriter_7mgvvh_k$();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.ComposerImpl.createFreshInsertTable.<anonymous>' call
    this_0.close_yn9xrc_k$();
    tmp.writer_1 = this_0;
  }
  function startReaderGroup($this, isNode, data) {
    if (isNode) {
      $this.reader_1.startNode_htvs8k_k$();
    } else {
      if (!(data == null) ? !($this.reader_1.get_groupAux_nfh9iq_k$() === data) : false) {
        recordSlotTableOperation$default($this, VOID, ComposerImpl$startReaderGroup$lambda(data));
      }
      $this.reader_1.startGroup_hppv2r_k$();
    }
  }
  function start($this, key, objectKey, kind, data) {
    validateNodeNotExpected($this);
    updateCompoundKeyWhenWeEnterGroup($this, key, objectKey, data);
    // Inline function 'androidx.compose.runtime.GroupKind.isNode' call
    var isNode = !(_GroupKind___get_value__impl__cf5pqe(kind) === _GroupKind___get_value__impl__cf5pqe(Companion_getInstance_2().Group_1));
    if ($this.inserting_1) {
      $this.reader_1.beginEmpty_jmuic4_k$();
      var startIndex = $this.writer_1.get_currentGroup_sgvyz3_k$();
      if (isNode) {
        $this.writer_1.startNode_ggkkg5_k$(key, Companion_getInstance_1().Empty_1);
      } else if (!(data == null)) {
        var tmp = $this.writer_1;
        tmp.startData_eo706a_k$(key, objectKey == null ? Companion_getInstance_1().Empty_1 : objectKey, data);
      } else {
        var tmp_0 = $this.writer_1;
        tmp_0.startGroup_ezbmj8_k$(key, objectKey == null ? Companion_getInstance_1().Empty_1 : objectKey);
      }
      var tmp2_safe_receiver = $this.pending_1;
      if (tmp2_safe_receiver == null)
        null;
      else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.ComposerImpl.start.<anonymous>' call
        var insertKeyInfo = new KeyInfo(key, -1, insertedGroupVirtualIndex($this, startIndex), -1, 0);
        tmp2_safe_receiver.registerInsert_dzq4jf_k$(insertKeyInfo, $this.nodeIndex_1 - tmp2_safe_receiver.startIndex_1 | 0);
        tmp2_safe_receiver.recordUsed_r3m2ap_k$(insertKeyInfo);
      }
      enterGroup($this, isNode, null);
      return Unit_getInstance();
    }
    var tmp_1;
    // Inline function 'androidx.compose.runtime.GroupKind.isReusable' call
    if (!!(_GroupKind___get_value__impl__cf5pqe(kind) === _GroupKind___get_value__impl__cf5pqe(Companion_getInstance_2().Node_1))) {
      tmp_1 = $this.reusing_1;
    } else {
      tmp_1 = false;
    }
    var forceReplace = tmp_1;
    if ($this.pending_1 == null) {
      var slotKey = $this.reader_1.get_groupKey_nfh2hj_k$();
      if ((!forceReplace ? slotKey === key : false) ? equals(objectKey, $this.reader_1.get_groupObjectKey_4eay3a_k$()) : false) {
        startReaderGroup($this, isNode, data);
      } else {
        $this.pending_1 = new Pending($this.reader_1.extractKeys_u546c5_k$(), $this.nodeIndex_1);
      }
    }
    var pending = $this.pending_1;
    var newPending = null;
    if (!(pending == null)) {
      var keyInfo = pending.getNext_qqn9gw_k$(key, objectKey);
      if (!forceReplace ? !(keyInfo == null) : false) {
        pending.recordUsed_r3m2ap_k$(keyInfo);
        var location = keyInfo.get_location_d3s02_k$();
        $this.nodeIndex_1 = pending.nodePositionOf_ld11gz_k$(keyInfo) + pending.startIndex_1 | 0;
        var relativePosition = pending.slotPositionOf_65d1gv_k$(keyInfo);
        var currentRelativePosition = relativePosition - pending.groupIndex_1 | 0;
        pending.registerMoveSlot_n6zoe_k$(relativePosition, pending.groupIndex_1);
        recordReaderMoving($this, location);
        $this.reader_1.reposition_26fquk_k$(location);
        if (currentRelativePosition > 0) {
          recordSlotEditingOperation($this, ComposerImpl$start$lambda(currentRelativePosition));
        }
        startReaderGroup($this, isNode, data);
      } else {
        $this.reader_1.beginEmpty_jmuic4_k$();
        $this.inserting_1 = true;
        $this.providerCache_1 = null;
        ensureWriter($this);
        $this.writer_1.beginInsert_i2ehou_k$();
        var startIndex_0 = $this.writer_1.get_currentGroup_sgvyz3_k$();
        if (isNode) {
          $this.writer_1.startNode_ggkkg5_k$(key, Companion_getInstance_1().Empty_1);
        } else if (!(data == null)) {
          var tmp_2 = $this.writer_1;
          tmp_2.startData_eo706a_k$(key, objectKey == null ? Companion_getInstance_1().Empty_1 : objectKey, data);
        } else {
          var tmp_3 = $this.writer_1;
          tmp_3.startGroup_ezbmj8_k$(key, objectKey == null ? Companion_getInstance_1().Empty_1 : objectKey);
        }
        $this.insertAnchor_1 = $this.writer_1.anchor_wwz2f1_k$(startIndex_0);
        var insertKeyInfo_0 = new KeyInfo(key, -1, insertedGroupVirtualIndex($this, startIndex_0), -1, 0);
        pending.registerInsert_dzq4jf_k$(insertKeyInfo_0, $this.nodeIndex_1 - pending.startIndex_1 | 0);
        pending.recordUsed_r3m2ap_k$(insertKeyInfo_0);
        // Inline function 'kotlin.collections.mutableListOf' call
        var tmp$ret$4 = ArrayList_init_$Create$();
        newPending = new Pending(tmp$ret$4, isNode ? 0 : $this.nodeIndex_1);
      }
    }
    enterGroup($this, isNode, newPending);
  }
  function enterGroup($this, isNode, newPending) {
    $this.pendingStack_1.push_wwyl8r_k$($this.pending_1);
    $this.pending_1 = newPending;
    $this.nodeIndexStack_1.push_w5xqdu_k$($this.nodeIndex_1);
    if (isNode)
      $this.nodeIndex_1 = 0;
    $this.groupNodeCountStack_1.push_w5xqdu_k$($this.groupNodeCount_1);
    $this.groupNodeCount_1 = 0;
  }
  function exitGroup($this, expectedNodeCount, inserting) {
    var previousPending = $this.pendingStack_1.pop_2dsh_k$();
    if (!(previousPending == null) ? !inserting : false) {
      previousPending.groupIndex_1 = previousPending.groupIndex_1 + 1 | 0;
    }
    $this.pending_1 = previousPending;
    $this.nodeIndex_1 = $this.nodeIndexStack_1.pop_2dsh_k$() + expectedNodeCount | 0;
    $this.groupNodeCount_1 = $this.groupNodeCountStack_1.pop_2dsh_k$() + expectedNodeCount | 0;
  }
  function end($this, isNode) {
    if ($this.inserting_1) {
      var parent = $this.writer_1.get_parent_hy4reb_k$();
      updateCompoundKeyWhenWeExitGroup($this, $this.writer_1.groupKey_pe96ns_k$(parent), $this.writer_1.groupObjectKey_7ge4pj_k$(parent), $this.writer_1.groupAux_dyi8kz_k$(parent));
    } else {
      var parent_0 = $this.reader_1.get_parent_hy4reb_k$();
      updateCompoundKeyWhenWeExitGroup($this, $this.reader_1.groupKey_pe96ns_k$(parent_0), $this.reader_1.groupObjectKey_7ge4pj_k$(parent_0), $this.reader_1.groupAux_dyi8kz_k$(parent_0));
    }
    var expectedNodeCount = $this.groupNodeCount_1;
    var pending = $this.pending_1;
    if (!(pending == null) ? pending.keyInfos_1.get_size_woubt6_k$() > 0 : false) {
      var previous = pending.keyInfos_1;
      var current = pending.get_used_wovsp2_k$();
      var usedKeys = fastToSet(current);
      // Inline function 'kotlin.collections.mutableSetOf' call
      var placedKeys = LinkedHashSet_init_$Create$();
      var currentIndex = 0;
      var currentEnd = current.get_size_woubt6_k$();
      var previousIndex = 0;
      var previousEnd = previous.get_size_woubt6_k$();
      var nodeOffset = 0;
      $l$loop_0: while (previousIndex < previousEnd) {
        var previousInfo = previous.get_c1px32_k$(previousIndex);
        if (!usedKeys.contains_aljjnj_k$(previousInfo)) {
          var deleteOffset = pending.nodePositionOf_ld11gz_k$(previousInfo);
          recordRemoveNode($this, deleteOffset + pending.startIndex_1 | 0, previousInfo.get_nodes_ivvt6w_k$());
          pending.updateNodeCount_c63i58_k$(previousInfo.get_location_d3s02_k$(), 0);
          recordReaderMoving($this, previousInfo.get_location_d3s02_k$());
          $this.reader_1.reposition_26fquk_k$(previousInfo.get_location_d3s02_k$());
          recordDelete($this);
          $this.reader_1.skipGroup_y9vakg_k$();
          removeRange($this.invalidations_1, previousInfo.get_location_d3s02_k$(), previousInfo.get_location_d3s02_k$() + $this.reader_1.groupSize_ehpyh4_k$(previousInfo.get_location_d3s02_k$()) | 0);
          previousIndex = previousIndex + 1 | 0;
          continue $l$loop_0;
        }
        if (placedKeys.contains_aljjnj_k$(previousInfo)) {
          previousIndex = previousIndex + 1 | 0;
          continue $l$loop_0;
        }
        if (currentIndex < currentEnd) {
          var currentInfo = current.get_c1px32_k$(currentIndex);
          if (!(currentInfo === previousInfo)) {
            var nodePosition = pending.nodePositionOf_ld11gz_k$(currentInfo);
            placedKeys.add_utx5q5_k$(currentInfo);
            if (!(nodePosition === nodeOffset)) {
              var updatedCount = pending.updatedNodeCountOf_fsn86e_k$(currentInfo);
              recordMoveNode($this, nodePosition + pending.startIndex_1 | 0, nodeOffset + pending.startIndex_1 | 0, updatedCount);
              pending.registerMoveNode_cxpn9u_k$(nodePosition, nodeOffset, updatedCount);
            }
          } else {
            previousIndex = previousIndex + 1 | 0;
          }
          currentIndex = currentIndex + 1 | 0;
          nodeOffset = nodeOffset + pending.updatedNodeCountOf_fsn86e_k$(currentInfo) | 0;
        }
      }
      realizeMovement($this);
      if (previous.get_size_woubt6_k$() > 0) {
        recordReaderMoving($this, $this.reader_1.get_groupEnd_nfh6qj_k$());
        $this.reader_1.skipToGroupEnd_lh3zi2_k$();
      }
    }
    var removeIndex = $this.nodeIndex_1;
    while (!$this.reader_1.get_isGroupEnd_ox3235_k$()) {
      var startSlot = $this.reader_1.get_currentGroup_sgvyz3_k$();
      recordDelete($this);
      var nodesToRemove = $this.reader_1.skipGroup_y9vakg_k$();
      recordRemoveNode($this, removeIndex, nodesToRemove);
      removeRange($this.invalidations_1, startSlot, $this.reader_1.get_currentGroup_sgvyz3_k$());
    }
    var inserting = $this.inserting_1;
    if (inserting) {
      if (isNode) {
        registerInsertUpFixup($this);
        expectedNodeCount = 1;
      }
      $this.reader_1.endEmpty_pghzmm_k$();
      var parentGroup = $this.writer_1.get_parent_hy4reb_k$();
      $this.writer_1.endGroup_s64cis_k$();
      if (!$this.reader_1.get_inEmpty_wxmrsv_k$()) {
        var virtualIndex = insertedGroupVirtualIndex($this, parentGroup);
        $this.writer_1.endInsert_4o34x0_k$();
        $this.writer_1.close_yn9xrc_k$();
        recordInsert($this, $this.insertAnchor_1);
        $this.inserting_1 = false;
        if (!$this.slotTable_1.get_isEmpty_zauvru_k$()) {
          updateNodeCount($this, virtualIndex, 0);
          updateNodeCountOverrides($this, virtualIndex, expectedNodeCount);
        }
      }
    } else {
      if (isNode) {
        recordUp($this);
      }
      recordEndGroup($this);
      var parentGroup_0 = $this.reader_1.get_parent_hy4reb_k$();
      var parentNodeCount = updatedNodeCount($this, parentGroup_0);
      if (!(expectedNodeCount === parentNodeCount)) {
        updateNodeCountOverrides($this, parentGroup_0, expectedNodeCount);
      }
      if (isNode) {
        expectedNodeCount = 1;
      }
      $this.reader_1.endGroup_rw7puc_k$();
      realizeMovement($this);
    }
    exitGroup($this, expectedNodeCount, inserting);
  }
  function recomposeToGroupEnd($this) {
    var wasComposing = $this.isComposing_1;
    $this.isComposing_1 = true;
    var recomposed = false;
    var parent = $this.reader_1.get_parent_hy4reb_k$();
    var end = parent + $this.reader_1.groupSize_ehpyh4_k$(parent) | 0;
    var recomposeIndex = $this.nodeIndex_1;
    var recomposeCompoundKey = $this.compoundKeyHash_1;
    var oldGroupNodeCount = $this.groupNodeCount_1;
    var oldGroup = parent;
    var firstInRange_0 = firstInRange($this.invalidations_1, $this.reader_1.get_currentGroup_sgvyz3_k$(), end);
    while (!(firstInRange_0 == null)) {
      var location = firstInRange_0.location_1;
      removeLocation($this.invalidations_1, location);
      if (firstInRange_0.isInvalid_mtmbn1_k$()) {
        recomposed = true;
        $this.reader_1.reposition_26fquk_k$(location);
        var newGroup = $this.reader_1.get_currentGroup_sgvyz3_k$();
        recordUpsAndDowns($this, oldGroup, newGroup, parent);
        oldGroup = newGroup;
        $this.nodeIndex_1 = nodeIndexOf($this, location, newGroup, parent, recomposeIndex);
        $this.compoundKeyHash_1 = compoundKeyOf($this, $this.reader_1.parent_omvrla_k$(newGroup), parent, recomposeCompoundKey);
        $this.providerCache_1 = null;
        firstInRange_0.scope_1.compose_vc7t96_k$($this);
        $this.providerCache_1 = null;
        $this.reader_1.restoreParent_4v0mds_k$(parent);
      } else {
        $this.invalidateStack_1.push_wwyl8r_k$(firstInRange_0.scope_1);
        firstInRange_0.scope_1.rereadTrackedInstances_wcu0b1_k$();
        $this.invalidateStack_1.pop_2dsh_k$();
      }
      firstInRange_0 = firstInRange($this.invalidations_1, $this.reader_1.get_currentGroup_sgvyz3_k$(), end);
    }
    if (recomposed) {
      recordUpsAndDowns($this, oldGroup, parent, parent);
      $this.reader_1.skipToGroupEnd_lh3zi2_k$();
      var parentGroupNodes = updatedNodeCount($this, parent);
      $this.nodeIndex_1 = recomposeIndex + parentGroupNodes | 0;
      $this.groupNodeCount_1 = oldGroupNodeCount + parentGroupNodes | 0;
    } else {
      skipReaderToGroupEnd($this);
    }
    $this.compoundKeyHash_1 = recomposeCompoundKey;
    $this.isComposing_1 = wasComposing;
  }
  function insertedGroupVirtualIndex($this, index) {
    return -2 - index | 0;
  }
  function updateNodeCountOverrides($this, group, newCount) {
    var currentCount = updatedNodeCount($this, group);
    if (!(currentCount === newCount)) {
      var delta = newCount - currentCount | 0;
      var current = group;
      var minPending = $this.pendingStack_1.get_size_woubt6_k$() - 1 | 0;
      $l$loop_0: while (!(current === -1)) {
        var newCurrentNodes = updatedNodeCount($this, current) + delta | 0;
        updateNodeCount($this, current, newCurrentNodes);
        var inductionVariable = minPending;
        if (0 <= inductionVariable)
          $l$loop: do {
            var pendingIndex = inductionVariable;
            inductionVariable = inductionVariable + -1 | 0;
            var pending = $this.pendingStack_1.peek_6g603_k$(pendingIndex);
            if (!(pending == null) ? pending.updateNodeCount_c63i58_k$(current, newCurrentNodes) : false) {
              minPending = pendingIndex - 1 | 0;
              break $l$loop;
            }
          }
           while (0 <= inductionVariable);
        if (current < 0) {
          current = $this.reader_1.get_parent_hy4reb_k$();
        } else {
          if ($this.reader_1.isNode_keuxl8_k$(current))
            break $l$loop_0;
          current = $this.reader_1.parent_omvrla_k$(current);
        }
      }
    }
  }
  function nodeIndexOf($this, groupLocation, group, recomposeGroup, recomposeIndex) {
    var anchorGroup = $this.reader_1.parent_omvrla_k$(group);
    $l$loop: while (!(anchorGroup === recomposeGroup) && !$this.reader_1.isNode_keuxl8_k$(anchorGroup)) {
      anchorGroup = $this.reader_1.parent_omvrla_k$(anchorGroup);
    }
    var index = $this.reader_1.isNode_keuxl8_k$(anchorGroup) ? 0 : recomposeIndex;
    if (anchorGroup === group)
      return index;
    var current = anchorGroup;
    var nodeIndexLimit = index + (updatedNodeCount($this, anchorGroup) - $this.reader_1.nodeCount_48mp3f_k$(group) | 0) | 0;
    loop: while (index < nodeIndexLimit && current !== groupLocation) {
      current = current + 1 | 0;
      while (current < groupLocation) {
        var end = current + $this.reader_1.groupSize_ehpyh4_k$(current) | 0;
        if (groupLocation < end)
          continue loop;
        index = index + updatedNodeCount($this, current) | 0;
        current = end;
      }
      break loop;
    }
    return index;
  }
  function updatedNodeCount($this, group) {
    if (group < 0) {
      var tmp0_safe_receiver = $this.nodeCountVirtualOverrides_1;
      var tmp;
      if (tmp0_safe_receiver == null) {
        tmp = null;
      } else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.ComposerImpl.updatedNodeCount.<anonymous>' call
        tmp = tmp0_safe_receiver.get_wei43m_k$(group);
      }
      var tmp1_elvis_lhs = tmp;
      return tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    }
    var nodeCounts = $this.nodeCountOverrides_1;
    if (!(nodeCounts == null)) {
      var override = nodeCounts[group];
      if (override >= 0)
        return override;
    }
    return $this.reader_1.nodeCount_48mp3f_k$(group);
  }
  function updateNodeCount($this, group, count) {
    if (!(updatedNodeCount($this, group) === count)) {
      if (group < 0) {
        var tmp0_elvis_lhs = $this.nodeCountVirtualOverrides_1;
        var tmp;
        if (tmp0_elvis_lhs == null) {
          // Inline function 'kotlin.run' call
          // Inline function 'kotlin.contracts.contract' call
          // Inline function 'androidx.compose.runtime.ComposerImpl.updateNodeCount.<anonymous>' call
          var newCounts = HashMap_init_$Create$();
          $this.nodeCountVirtualOverrides_1 = newCounts;
          tmp = newCounts;
        } else {
          tmp = tmp0_elvis_lhs;
        }
        var virtualCounts = tmp;
        // Inline function 'kotlin.collections.set' call
        virtualCounts.put_4fpzoq_k$(group, count);
      } else {
        var tmp1_elvis_lhs = $this.nodeCountOverrides_1;
        var tmp_0;
        if (tmp1_elvis_lhs == null) {
          // Inline function 'kotlin.run' call
          // Inline function 'kotlin.contracts.contract' call
          // Inline function 'androidx.compose.runtime.ComposerImpl.updateNodeCount.<anonymous>' call
          var newCounts_0 = new Int32Array($this.reader_1.get_size_woubt6_k$());
          fill(newCounts_0, -1);
          $this.nodeCountOverrides_1 = newCounts_0;
          tmp_0 = newCounts_0;
        } else {
          tmp_0 = tmp1_elvis_lhs;
        }
        var nodeCounts = tmp_0;
        nodeCounts[group] = count;
      }
    }
  }
  function clearUpdatedNodeCounts($this) {
    $this.nodeCountOverrides_1 = null;
    $this.nodeCountVirtualOverrides_1 = null;
  }
  function recordUpsAndDowns($this, oldGroup, newGroup, commonRoot) {
    var reader = $this.reader_1;
    var nearestCommonRoot = nearestCommonRootOf(reader, oldGroup, newGroup, commonRoot);
    var current = oldGroup;
    while (current > 0 ? !(current === nearestCommonRoot) : false) {
      if (reader.isNode_keuxl8_k$(current)) {
        recordUp($this);
      }
      current = reader.parent_omvrla_k$(current);
    }
    doRecordDownsFor($this, newGroup, nearestCommonRoot);
  }
  function doRecordDownsFor($this, group, nearestCommonRoot) {
    if (group > 0 ? !(group === nearestCommonRoot) : false) {
      doRecordDownsFor($this, $this.reader_1.parent_omvrla_k$(group), nearestCommonRoot);
      if ($this.reader_1.isNode_keuxl8_k$(group)) {
        recordDown($this, nodeAt($this.reader_1, $this, group));
      }
    }
  }
  function compoundKeyOf($this, group, recomposeGroup, recomposeKey) {
    var tmp;
    if (group === recomposeGroup) {
      tmp = recomposeKey;
    } else {
      // Inline function 'kotlin.run' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.ComposerImpl.compoundKeyOf.<anonymous>' call
      var groupKey = groupCompoundKeyPart($this.reader_1, $this, group);
      var tmp_0;
      if (groupKey === get_movableContentKey()) {
        tmp_0 = groupKey;
      } else {
        // Inline function 'androidx.compose.runtime.rol' call
        var this_0 = compoundKeyOf($this, $this.reader_1.parent_omvrla_k$(group), recomposeGroup, recomposeKey);
        tmp_0 = rotateLeft(this_0, 3) ^ groupKey;
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function groupCompoundKeyPart(_this__u8e3s4, $this, group) {
    var tmp;
    if (_this__u8e3s4.hasObjectKey_2ypxn2_k$(group)) {
      var tmp0_safe_receiver = _this__u8e3s4.groupObjectKey_7ge4pj_k$(group);
      var tmp_0;
      if (tmp0_safe_receiver == null) {
        tmp_0 = null;
      } else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.ComposerImpl.groupCompoundKeyPart.<anonymous>' call
        var tmp_1;
        if (tmp0_safe_receiver instanceof Enum) {
          tmp_1 = tmp0_safe_receiver.get_ordinal_ip24qg_k$();
        } else {
          if (tmp0_safe_receiver instanceof MovableContent) {
            tmp_1 = get_movableContentKey();
          } else {
            tmp_1 = hashCode(tmp0_safe_receiver);
          }
        }
        tmp_0 = tmp_1;
      }
      var tmp1_elvis_lhs = tmp_0;
      tmp = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.ComposerImpl.groupCompoundKeyPart.<anonymous>' call
      var it = _this__u8e3s4.groupKey_pe96ns_k$(group);
      var tmp_2;
      if (it === 207) {
        var tmp0_safe_receiver_0 = _this__u8e3s4.groupAux_dyi8kz_k$(group);
        var tmp_3;
        if (tmp0_safe_receiver_0 == null) {
          tmp_3 = null;
        } else {
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          // Inline function 'androidx.compose.runtime.ComposerImpl.groupCompoundKeyPart.<anonymous>.<anonymous>' call
          tmp_3 = equals(tmp0_safe_receiver_0, Companion_getInstance_1().Empty_1) ? it : hashCode(tmp0_safe_receiver_0);
        }
        var tmp1_elvis_lhs_0 = tmp_3;
        tmp_2 = tmp1_elvis_lhs_0 == null ? it : tmp1_elvis_lhs_0;
      } else {
        tmp_2 = it;
      }
      tmp = tmp_2;
    }
    return tmp;
  }
  function skipReaderToGroupEnd($this) {
    $this.groupNodeCount_1 = $this.reader_1.get_parentNodes_uf6wfy_k$();
    $this.reader_1.skipToGroupEnd_lh3zi2_k$();
  }
  function addRecomposeScope($this) {
    if ($this.inserting_1) {
      var tmp = $this.composition_1;
      var scope = new RecomposeScopeImpl(tmp instanceof CompositionImpl ? tmp : THROW_CCE());
      $this.invalidateStack_1.push_wwyl8r_k$(scope);
      $this.updateValue_uuh8rr_k$(scope);
      scope.start_lvhmue_k$($this.compositionToken_1);
    } else {
      var invalidation = removeLocation($this.invalidations_1, $this.reader_1.get_parent_hy4reb_k$());
      var slot = $this.reader_1.next_20eer_k$();
      var tmp_0;
      if (equals(slot, Companion_getInstance_1().Empty_1)) {
        var tmp_1 = $this.composition_1;
        var newScope = new RecomposeScopeImpl(tmp_1 instanceof CompositionImpl ? tmp_1 : THROW_CCE());
        $this.updateValue_uuh8rr_k$(newScope);
        tmp_0 = newScope;
      } else {
        tmp_0 = slot instanceof RecomposeScopeImpl ? slot : THROW_CCE();
      }
      var scope_0 = tmp_0;
      scope_0.set_requiresRecompose_rcdn27_k$(!(invalidation == null));
      $this.invalidateStack_1.push_wwyl8r_k$(scope_0);
      scope_0.start_lvhmue_k$($this.compositionToken_1);
    }
  }
  function invokeMovableContentLambda($this, content, locals, parameter, force) {
    $this.startMovableGroup_clfloq_k$(get_movableContentKey(), content);
    $this.changed_ga7h3f_k$(parameter);
    var savedCompoundKeyHash = $this.compoundKeyHash_1;
    try {
      $this.compoundKeyHash_1 = get_movableContentKey();
      if ($this.inserting_1) {
        $this.writer_1.markGroup$default_b272ne_k$();
      }
      var providersChanged = $this.inserting_1 ? false : !equals($this.reader_1.get_groupAux_nfh9iq_k$(), locals);
      if (providersChanged) {
        $this.providerUpdates_1.set_yy77p4_k$($this.reader_1.get_currentGroup_sgvyz3_k$(), locals);
      }
      start($this, 202, get_compositionLocalMap(), Companion_getInstance_2().Group_1, locals);
      if ($this.inserting_1 ? !force : false) {
        $this.writerHasAProvider_1 = true;
        $this.providerCache_1 = null;
        var anchor = $this.writer_1.anchor_wwz2f1_k$($this.writer_1.parent_omvrla_k$($this.writer_1.get_parent_hy4reb_k$()));
        var reference = new MovableContentStateReference(content, parameter, $this.composition_1, $this.insertTable_1, anchor, emptyList(), currentCompositionLocalScope($this));
        $this.parentContext_1.insertMovableContent_46m3cf_k$(reference);
      } else {
        var savedProvidersInvalid = $this.providersInvalid_1;
        $this.providersInvalid_1 = providersChanged;
        invokeComposable$composable($this, ComposableLambda$invoke$ref(composableLambdaInstance(316014703, true, ComposerImpl$invokeMovableContentLambda$lambda(content, parameter))));
        $this.providersInvalid_1 = savedProvidersInvalid;
      }
    }finally {
      endGroup($this);
      $this.compoundKeyHash_1 = savedCompoundKeyHash;
      $this.endMovableGroup_kd2hcs_k$();
    }
  }
  function insertMovableContentGuarded($this, references) {
    $l$block_1: {
      // Inline function 'androidx.compose.runtime.ComposerImpl.withChanges' call
      var newChanges = $this.lateChanges_1;
      var savedChanges = $this.changes_1;
      try {
        $this.changes_1 = newChanges;
        record($this, get_resetSlotsInstance());
        // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
        // Inline function 'kotlin.contracts.contract' call
        var inductionVariable = 0;
        var last = references.get_size_woubt6_k$() - 1 | 0;
        if (inductionVariable <= last)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var item = references.get_c1px32_k$(index);
            // Inline function 'androidx.compose.runtime.ComposerImpl.insertMovableContentGuarded.<anonymous>.<anonymous>' call
            var to = item.component1_7eebsc_k$();
            var from = item.component2_7eebsb_k$();
            var anchor = to.anchor_1;
            var location = to.slotTable_1.anchorIndex_79wady_k$(anchor);
            var effectiveNodeIndex = {_v: 0};
            realizeUps($this);
            record($this, ComposerImpl$insertMovableContentGuarded$lambda(effectiveNodeIndex, anchor));
            if (from == null) {
              var toSlotTable = to.slotTable_1;
              if (equals(toSlotTable, $this.insertTable_1)) {
                createFreshInsertTable($this);
              }
              // Inline function 'androidx.compose.runtime.SlotTable.read' call
              // Inline function 'kotlin.let' call
              // Inline function 'kotlin.contracts.contract' call
              // Inline function 'androidx.compose.runtime.SlotTable.read.<anonymous>' call
              var reader = to.slotTable_1.openReader_51y0fh_k$();
              var tmp;
              try {
                reader.reposition_26fquk_k$(location);
                $this.writersReaderDelta_1 = location;
                // Inline function 'kotlin.collections.mutableListOf' call
                var offsetChanges = ArrayList_init_$Create$();
                recomposeMovableContent$default($this, VOID, VOID, VOID, VOID, ComposerImpl$insertMovableContentGuarded$lambda_0($this, offsetChanges, reader, to));
                var tmp_0;
                // Inline function 'kotlin.collections.isNotEmpty' call
                if (!offsetChanges.isEmpty_y1axqb_k$()) {
                  record($this, ComposerImpl$insertMovableContentGuarded$lambda_1(effectiveNodeIndex, offsetChanges));
                  tmp_0 = Unit_getInstance();
                }
                tmp = tmp_0;
              }finally {
                reader.close_yn9xrc_k$();
              }
            } else {
              var resolvedState = $this.parentContext_1.movableContentStateResolve_htz57n_k$(from);
              var tmp1_elvis_lhs = resolvedState == null ? null : resolvedState.slotTable_1;
              var fromTable = tmp1_elvis_lhs == null ? from.slotTable_1 : tmp1_elvis_lhs;
              var tmp3_safe_receiver = resolvedState == null ? null : resolvedState.slotTable_1;
              var tmp4_elvis_lhs = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.anchor_wwz2f1_k$(0);
              var fromAnchor = tmp4_elvis_lhs == null ? from.anchor_1 : tmp4_elvis_lhs;
              var nodesToInsert = collectNodesFrom(fromTable, fromAnchor);
              // Inline function 'kotlin.collections.isNotEmpty' call
              if (!nodesToInsert.isEmpty_y1axqb_k$()) {
                record($this, ComposerImpl$insertMovableContentGuarded$lambda_2(effectiveNodeIndex, nodesToInsert));
                if (equals(to.slotTable_1, $this.slotTable_1)) {
                  var group = $this.slotTable_1.anchorIndex_79wady_k$(anchor);
                  updateNodeCount($this, group, updatedNodeCount($this, group) + nodesToInsert.get_size_woubt6_k$() | 0);
                }
              }
              record($this, ComposerImpl$insertMovableContentGuarded$lambda_3(resolvedState, $this, from, to));
              // Inline function 'androidx.compose.runtime.SlotTable.read' call
              // Inline function 'kotlin.let' call
              // Inline function 'kotlin.contracts.contract' call
              // Inline function 'androidx.compose.runtime.SlotTable.read.<anonymous>' call
              var reader_0 = fromTable.openReader_51y0fh_k$();
              var tmp_1;
              try {
                var tmp$ret$9;
                $l$block_0: {
                  // Inline function 'androidx.compose.runtime.ComposerImpl.withReader' call
                  var savedReader = $this.reader_1;
                  var savedCountOverrides = $this.nodeCountOverrides_1;
                  $this.nodeCountOverrides_1 = null;
                  try {
                    $this.reader_1 = reader_0;
                    var newLocation = fromTable.anchorIndex_79wady_k$(fromAnchor);
                    reader_0.reposition_26fquk_k$(newLocation);
                    $this.writersReaderDelta_1 = newLocation;
                    // Inline function 'kotlin.collections.mutableListOf' call
                    var offsetChanges_0 = ArrayList_init_$Create$();
                    $l$block: {
                      // Inline function 'androidx.compose.runtime.ComposerImpl.withChanges' call
                      var savedChanges_0 = $this.changes_1;
                      try {
                        $this.changes_1 = offsetChanges_0;
                        var tmp_2 = reader_0.get_currentGroup_sgvyz3_k$();
                        var tmp_3 = from.invalidations_1;
                        recomposeMovableContent($this, from.composition_1, to.composition_1, tmp_2, tmp_3, ComposerImpl$insertMovableContentGuarded$lambda_4($this, to));
                        break $l$block;
                      }finally {
                        $this.changes_1 = savedChanges_0;
                      }
                    }
                    var tmp_4;
                    // Inline function 'kotlin.collections.isNotEmpty' call
                    if (!offsetChanges_0.isEmpty_y1axqb_k$()) {
                      record($this, ComposerImpl$insertMovableContentGuarded$lambda_5(effectiveNodeIndex, offsetChanges_0));
                      tmp_4 = Unit_getInstance();
                    }
                    tmp$ret$9 = tmp_4;
                    break $l$block_0;
                  }finally {
                    $this.reader_1 = savedReader;
                    $this.nodeCountOverrides_1 = savedCountOverrides;
                  }
                }
                tmp_1 = tmp$ret$9;
              }finally {
                reader_0.close_yn9xrc_k$();
              }
            }
            record($this, get_skipToGroupEndInstance());
          }
           while (inductionVariable <= last);
        record($this, ComposerImpl$insertMovableContentGuarded$lambda_6);
        $this.writersReaderDelta_1 = 0;
        break $l$block_1;
      }finally {
        $this.changes_1 = savedChanges;
      }
    }
  }
  function withChanges($this, newChanges, block) {
    var savedChanges = $this.changes_1;
    try {
      $this.changes_1 = newChanges;
      return block();
    }finally {
      $this.changes_1 = savedChanges;
    }
  }
  function withReader($this, reader, block) {
    var savedReader = $this.reader_1;
    var savedCountOverrides = $this.nodeCountOverrides_1;
    $this.nodeCountOverrides_1 = null;
    try {
      $this.reader_1 = reader;
      return block();
    }finally {
      $this.reader_1 = savedReader;
      $this.nodeCountOverrides_1 = savedCountOverrides;
    }
  }
  function recomposeMovableContent($this, from, to, index, invalidations, block) {
    var savedImplicitRootStart = $this.implicitRootStart_1;
    var savedIsComposing = $this.isComposing_1;
    var savedNodeIndex = $this.nodeIndex_1;
    try {
      $this.implicitRootStart_1 = false;
      $this.isComposing_1 = true;
      $this.nodeIndex_1 = 0;
      // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable = 0;
      var last = invalidations.get_size_woubt6_k$() - 1 | 0;
      if (inductionVariable <= last)
        do {
          var index_0 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var item = invalidations.get_c1px32_k$(index_0);
          // Inline function 'androidx.compose.runtime.ComposerImpl.recomposeMovableContent.<anonymous>' call
          var scope = item.component1_7eebsc_k$();
          var instances = item.component2_7eebsb_k$();
          if (!(instances == null)) {
            // Inline function 'androidx.compose.runtime.collection.IdentityArraySet.fastForEach' call
            // Inline function 'kotlin.contracts.contract' call
            var values = instances.get_values_ksazhn_k$();
            var inductionVariable_0 = 0;
            var last_0 = instances.get_size_woubt6_k$();
            if (inductionVariable_0 < last_0)
              do {
                var i = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.compose.runtime.ComposerImpl.recomposeMovableContent.<anonymous>.<anonymous>' call
                var tmp = values[i];
                var instance = !(tmp == null) ? tmp : THROW_CCE();
                $this.tryImminentInvalidation_sfbwjl_k$(scope, instance);
              }
               while (inductionVariable_0 < last_0);
          } else {
            $this.tryImminentInvalidation_sfbwjl_k$(scope, null);
          }
        }
         while (inductionVariable <= last);
      var tmp_0;
      if (from == null) {
        tmp_0 = null;
      } else {
        tmp_0 = from.delegateInvalidations_uh0kaw_k$(to, index == null ? -1 : index, block);
      }
      var tmp2_elvis_lhs = tmp_0;
      return tmp2_elvis_lhs == null ? block() : tmp2_elvis_lhs;
    }finally {
      $this.implicitRootStart_1 = savedImplicitRootStart;
      $this.isComposing_1 = savedIsComposing;
      $this.nodeIndex_1 = savedNodeIndex;
    }
  }
  function recomposeMovableContent$default($this, from, to, index, invalidations, block, $super) {
    from = from === VOID ? null : from;
    to = to === VOID ? null : to;
    index = index === VOID ? null : index;
    invalidations = invalidations === VOID ? emptyList() : invalidations;
    return recomposeMovableContent($this, from, to, index, invalidations, block);
  }
  function doCompose($this, invalidationsRequested, content) {
    illegalDecoyCallException('doCompose');
  }
  function _get_node__db0vwp(_this__u8e3s4, $this) {
    return _this__u8e3s4.node_dyvdau_k$(_this__u8e3s4.get_parent_hy4reb_k$());
  }
  function nodeAt(_this__u8e3s4, $this, index) {
    return _this__u8e3s4.node_dyvdau_k$(index);
  }
  function validateNodeExpected($this) {
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!$this.nodeExpected_1) {
      // Inline function 'androidx.compose.runtime.ComposerImpl.validateNodeExpected.<anonymous>' call
      var message = 'A call to createNode(), emitNode() or useNode() expected was not expected';
      composeRuntimeError(toString(message));
    }
    $this.nodeExpected_1 = false;
  }
  function validateNodeNotExpected($this) {
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!!$this.nodeExpected_1) {
      // Inline function 'androidx.compose.runtime.ComposerImpl.validateNodeNotExpected.<anonymous>' call
      var message = 'A call to createNode(), emitNode() or useNode() expected';
      composeRuntimeError(toString(message));
    }
  }
  function record($this, change) {
    $this.changes_1.add_utx5q5_k$(change);
  }
  function recordApplierOperation($this, change) {
    realizeUps($this);
    realizeDowns_0($this);
    record($this, change);
  }
  function recordSlotEditingOperation($this, change) {
    realizeOperationLocation$default($this);
    recordSlotEditing($this);
    record($this, change);
  }
  function recordSlotTableOperation($this, forParent, change) {
    realizeOperationLocation($this, forParent);
    record($this, change);
  }
  function recordSlotTableOperation$default($this, forParent, change, $super) {
    forParent = forParent === VOID ? false : forParent;
    return recordSlotTableOperation($this, forParent, change);
  }
  function _set_pendingUps__2a1cie($this, _set____db54di) {
    $this.pendingUps_1 = _set____db54di;
  }
  function _get_pendingUps__cs78mu($this) {
    return $this.pendingUps_1;
  }
  function _set_downNodes__vepg22($this, _set____db54di) {
    $this.downNodes_1 = _set____db54di;
  }
  function _get_downNodes__23uzni($this) {
    return $this.downNodes_1;
  }
  function realizeUps($this) {
    var count = $this.pendingUps_1;
    if (count > 0) {
      $this.pendingUps_1 = 0;
      record($this, ComposerImpl$realizeUps$lambda(count));
    }
  }
  function realizeDowns($this, nodes) {
    record($this, ComposerImpl$realizeDowns$lambda(nodes));
  }
  function realizeDowns_0($this) {
    if ($this.downNodes_1.isNotEmpty_cjxbwk_k$()) {
      realizeDowns($this, $this.downNodes_1.toArray_jjyjqa_k$());
      $this.downNodes_1.clear_j9egeb_k$();
    }
  }
  function recordDown($this, node) {
    $this.downNodes_1.push_wwyl8r_k$(node);
  }
  function recordUp($this) {
    if ($this.downNodes_1.isNotEmpty_cjxbwk_k$()) {
      $this.downNodes_1.pop_2dsh_k$();
    } else {
      $this.pendingUps_1 = $this.pendingUps_1 + 1 | 0;
    }
  }
  function _set_writersReaderDelta__egrmki($this, _set____db54di) {
    $this.writersReaderDelta_1 = _set____db54di;
  }
  function _get_writersReaderDelta__jh3oju($this) {
    return $this.writersReaderDelta_1;
  }
  function _set_startedGroup__8frotj($this, _set____db54di) {
    $this.startedGroup_1 = _set____db54di;
  }
  function _get_startedGroup__73z1ql($this) {
    return $this.startedGroup_1;
  }
  function _set_implicitRootStart__6h9skq($this, _set____db54di) {
    $this.implicitRootStart_1 = _set____db54di;
  }
  function _get_implicitRootStart__f8j3pm($this) {
    return $this.implicitRootStart_1;
  }
  function _get_startedGroups__7buda4($this) {
    return $this.startedGroups_1;
  }
  function realizeOperationLocation($this, forParent) {
    var location = forParent ? $this.reader_1.get_parent_hy4reb_k$() : $this.reader_1.get_currentGroup_sgvyz3_k$();
    var distance = location - $this.writersReaderDelta_1 | 0;
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!(distance >= 0)) {
      // Inline function 'androidx.compose.runtime.ComposerImpl.realizeOperationLocation.<anonymous>' call
      var message = 'Tried to seek backward';
      composeRuntimeError(toString(message));
    }
    if (distance > 0) {
      record($this, ComposerImpl$realizeOperationLocation$lambda(distance));
      $this.writersReaderDelta_1 = location;
    }
  }
  function realizeOperationLocation$default($this, forParent, $super) {
    forParent = forParent === VOID ? false : forParent;
    return realizeOperationLocation($this, forParent);
  }
  function recordInsert($this, anchor) {
    if ($this.insertFixups_1.isEmpty_y1axqb_k$()) {
      var insertTable = $this.insertTable_1;
      recordSlotEditingOperation($this, ComposerImpl$recordInsert$lambda(insertTable, anchor));
    } else {
      var fixups = toMutableList($this.insertFixups_1);
      $this.insertFixups_1.clear_j9egeb_k$();
      realizeUps($this);
      realizeDowns_0($this);
      var insertTable_0 = $this.insertTable_1;
      recordSlotEditingOperation($this, ComposerImpl$recordInsert$lambda_0(insertTable_0, fixups, anchor));
    }
  }
  function recordFixup($this, change) {
    $this.insertFixups_1.add_utx5q5_k$(change);
  }
  function _get_insertUpFixups__i9avsc($this) {
    return $this.insertUpFixups_1;
  }
  function recordInsertUpFixup($this, change) {
    $this.insertUpFixups_1.push_wwyl8r_k$(change);
  }
  function registerInsertUpFixup($this) {
    $this.insertFixups_1.add_utx5q5_k$($this.insertUpFixups_1.pop_2dsh_k$());
  }
  function recordDelete($this) {
    reportFreeMovableContent($this, $this.reader_1.get_currentGroup_sgvyz3_k$());
    recordSlotEditingOperation($this, get_removeCurrentGroupInstance());
    $this.writersReaderDelta_1 = $this.writersReaderDelta_1 + $this.reader_1.get_groupSize_g0fedl_k$() | 0;
  }
  function reportFreeMovableContent($this, groupBeingRemoved) {
    reportFreeMovableContent$reportGroup($this, groupBeingRemoved, false, 0);
    realizeMovement($this);
  }
  function releaseMovableGroupAtCurrent($this, reference, slots) {
    var slotTable = new SlotTable();
    // Inline function 'androidx.compose.runtime.SlotTable.write' call
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.SlotTable.write.<anonymous>' call
    var writer = slotTable.openWriter_7mgvvh_k$();
    var tmp;
    try {
      // Inline function 'androidx.compose.runtime.ComposerImpl.releaseMovableGroupAtCurrent.<anonymous>' call
      writer.beginInsert_i2ehou_k$();
      writer.startGroup_ezbmj8_k$(get_movableContentKey(), reference.content_1);
      writer.markGroup$default_b272ne_k$();
      writer.update_dpycsq_k$(reference.parameter_1);
      var anchors = slots.moveTo_ylt62i_k$(reference.anchor_1, 1, writer);
      writer.skipGroup_y9vakg_k$();
      writer.endGroup_s64cis_k$();
      writer.endInsert_4o34x0_k$();
      tmp = anchors;
    }finally {
      writer.close_yn9xrc_k$();
    }
    var anchors_0 = tmp;
    var state = new MovableContentState(slotTable);
    if (Companion_getInstance_4().hasAnchoredRecomposeScopes_gbc55h_k$(slotTable, anchors_0)) {
      var composition = $this.composition_1;
      var movableContentRecomposeScopeOwner = new ComposerImpl$releaseMovableGroupAtCurrent$movableContentRecomposeScopeOwner$1(composition, reference);
      // Inline function 'androidx.compose.runtime.SlotTable.write' call
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.SlotTable.write.<anonymous>' call
      var writer_0 = slotTable.openWriter_7mgvvh_k$();
      var tmp_0;
      try {
        Companion_getInstance_4().adoptAnchoredScopes_vqqdu5_k$(writer_0, anchors_0, movableContentRecomposeScopeOwner);
        tmp_0 = Unit_getInstance();
      }finally {
        writer_0.close_yn9xrc_k$();
      }
    }
    $this.parentContext_1.movableContentStateReleased_wudwew_k$(reference, state);
  }
  function reportAllMovableContent($this) {
    if ($this.slotTable_1.containsMark_zez3hw_k$()) {
      // Inline function 'kotlin.collections.mutableListOf' call
      var changes = ArrayList_init_$Create$();
      $this.deferredChanges_1 = changes;
      // Inline function 'androidx.compose.runtime.SlotTable.read' call
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.SlotTable.read.<anonymous>' call
      var reader = $this.slotTable_1.openReader_51y0fh_k$();
      var tmp;
      try {
        $this.reader_1 = reader;
        var tmp$ret$1;
        $l$block: {
          // Inline function 'androidx.compose.runtime.ComposerImpl.withChanges' call
          var savedChanges = $this.changes_1;
          try {
            $this.changes_1 = changes;
            reportFreeMovableContent($this, 0);
            realizeUps($this);
            var tmp_0;
            if ($this.startedGroup_1) {
              record($this, get_skipToGroupEndInstance());
              recordEndRoot($this);
              tmp_0 = Unit_getInstance();
            }
            tmp$ret$1 = tmp_0;
            break $l$block;
          }finally {
            $this.changes_1 = savedChanges;
          }
        }
        tmp = tmp$ret$1;
      }finally {
        reader.close_yn9xrc_k$();
      }
    }
  }
  function recordReaderMoving($this, location) {
    var distance = $this.reader_1.get_currentGroup_sgvyz3_k$() - $this.writersReaderDelta_1 | 0;
    $this.writersReaderDelta_1 = location - distance | 0;
  }
  function recordSlotEditing($this) {
    if ($this.reader_1.get_size_woubt6_k$() > 0) {
      var reader = $this.reader_1;
      var location = reader.get_parent_hy4reb_k$();
      if (!($this.startedGroups_1.peekOr_nt91iy_k$(-2) === location)) {
        if (!$this.startedGroup_1 ? $this.implicitRootStart_1 : false) {
          recordSlotTableOperation$default($this, VOID, get_startRootGroup());
          $this.startedGroup_1 = true;
        }
        if (location > 0) {
          var anchor = reader.anchor_wwz2f1_k$(location);
          $this.startedGroups_1.push_w5xqdu_k$(location);
          recordSlotTableOperation$default($this, VOID, ComposerImpl$recordSlotEditing$lambda(anchor));
        }
      }
    }
  }
  function recordEndGroup($this) {
    var location = $this.reader_1.get_parent_hy4reb_k$();
    var currentStartedGroup = $this.startedGroups_1.peekOr_nt91iy_k$(-1);
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!(currentStartedGroup <= location)) {
      // Inline function 'androidx.compose.runtime.ComposerImpl.recordEndGroup.<anonymous>' call
      var message = 'Missed recording an endGroup';
      composeRuntimeError(toString(message));
    }
    if ($this.startedGroups_1.peekOr_nt91iy_k$(-1) === location) {
      $this.startedGroups_1.pop_2dsh_k$();
      recordSlotTableOperation$default($this, VOID, get_endGroupInstance());
    }
  }
  function recordEndRoot($this) {
    if ($this.startedGroup_1) {
      recordSlotTableOperation$default($this, VOID, get_endGroupInstance());
      $this.startedGroup_1 = false;
    }
  }
  function finalizeCompose($this) {
    realizeUps($this);
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!$this.pendingStack_1.isEmpty_y1axqb_k$()) {
      // Inline function 'androidx.compose.runtime.ComposerImpl.finalizeCompose.<anonymous>' call
      var message = 'Start/end imbalance';
      composeRuntimeError(toString(message));
    }
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!$this.startedGroups_1.isEmpty_y1axqb_k$()) {
      // Inline function 'androidx.compose.runtime.ComposerImpl.finalizeCompose.<anonymous>' call
      var message_0 = 'Missed recording an endGroup()';
      composeRuntimeError(toString(message_0));
    }
    cleanUpCompose($this);
  }
  function cleanUpCompose($this) {
    $this.pending_1 = null;
    $this.nodeIndex_1 = 0;
    $this.groupNodeCount_1 = 0;
    $this.writersReaderDelta_1 = 0;
    $this.compoundKeyHash_1 = 0;
    $this.nodeExpected_1 = false;
    $this.startedGroup_1 = false;
    $this.startedGroups_1.clear_j9egeb_k$();
    $this.invalidateStack_1.clear_j9egeb_k$();
    clearUpdatedNodeCounts($this);
  }
  function _set_previousRemove__2bdq1o($this, _set____db54di) {
    $this.previousRemove_1 = _set____db54di;
  }
  function _get_previousRemove__ruh634($this) {
    return $this.previousRemove_1;
  }
  function _set_previousMoveFrom__jxqlet($this, _set____db54di) {
    $this.previousMoveFrom_1 = _set____db54di;
  }
  function _get_previousMoveFrom__m097hj($this) {
    return $this.previousMoveFrom_1;
  }
  function _set_previousMoveTo__4tpnck($this, _set____db54di) {
    $this.previousMoveTo_1 = _set____db54di;
  }
  function _get_previousMoveTo__uct3e0($this) {
    return $this.previousMoveTo_1;
  }
  function _set_previousCount__g1j10t($this, _set____db54di) {
    $this.previousCount_1 = _set____db54di;
  }
  function _get_previousCount__triih($this) {
    return $this.previousCount_1;
  }
  function recordRemoveNode($this, nodeIndex, count) {
    if (count > 0) {
      // Inline function 'androidx.compose.runtime.runtimeCheck' call
      if (!(nodeIndex >= 0)) {
        // Inline function 'androidx.compose.runtime.ComposerImpl.recordRemoveNode.<anonymous>' call
        var message = 'Invalid remove index ' + nodeIndex;
        composeRuntimeError(toString(message));
      }
      if ($this.previousRemove_1 === nodeIndex) {
        $this.previousCount_1 = $this.previousCount_1 + count | 0;
      } else {
        realizeMovement($this);
        $this.previousRemove_1 = nodeIndex;
        $this.previousCount_1 = count;
      }
    }
  }
  function recordMoveNode($this, from, to, count) {
    if (count > 0) {
      if (($this.previousCount_1 > 0 ? $this.previousMoveFrom_1 === (from - $this.previousCount_1 | 0) : false) ? $this.previousMoveTo_1 === (to - $this.previousCount_1 | 0) : false) {
        $this.previousCount_1 = $this.previousCount_1 + count | 0;
      } else {
        realizeMovement($this);
        $this.previousMoveFrom_1 = from;
        $this.previousMoveTo_1 = to;
        $this.previousCount_1 = count;
      }
    }
  }
  function realizeMovement($this) {
    var count = $this.previousCount_1;
    $this.previousCount_1 = 0;
    if (count > 0) {
      if ($this.previousRemove_1 >= 0) {
        var removeIndex = $this.previousRemove_1;
        $this.previousRemove_1 = -1;
        recordApplierOperation($this, ComposerImpl$realizeMovement$lambda(removeIndex, count));
      } else {
        var from = $this.previousMoveFrom_1;
        $this.previousMoveFrom_1 = -1;
        var to = $this.previousMoveTo_1;
        $this.previousMoveTo_1 = -1;
        recordApplierOperation($this, ComposerImpl$realizeMovement$lambda_0(from, to, count));
      }
    }
  }
  function CompositionContextHolder(ref) {
    this.ref_1 = ref;
  }
  protoOf(CompositionContextHolder).get_ref_18ix1y_k$ = function () {
    return this.ref_1;
  };
  protoOf(CompositionContextHolder).onRemembered_68t2e3_k$ = function () {
  };
  protoOf(CompositionContextHolder).onAbandoned_1gx7a3_k$ = function () {
    this.ref_1.dispose_3nnxhr_k$();
  };
  protoOf(CompositionContextHolder).onForgotten_pbqifp_k$ = function () {
    this.ref_1.dispose_3nnxhr_k$();
  };
  function CompositionContextImpl($outer, compoundHashKey, collectingParameterInformation) {
    this.$this_1 = $outer;
    CompositionContext.call(this);
    this.compoundHashKey_1 = compoundHashKey;
    this.collectingParameterInformation_1 = collectingParameterInformation;
    this.inspectionTables_1 = null;
    var tmp = this;
    // Inline function 'kotlin.collections.mutableSetOf' call
    tmp.composers_1 = LinkedHashSet_init_$Create$();
    this.compositionLocalScope$delegate_1 = mutableStateOf(persistentCompositionLocalHashMapOf());
  }
  protoOf(CompositionContextImpl).get_compoundHashKey_elmli5_k$ = function () {
    return this.compoundHashKey_1;
  };
  protoOf(CompositionContextImpl).get_collectingParameterInformation_qgy3do_k$ = function () {
    return this.collectingParameterInformation_1;
  };
  protoOf(CompositionContextImpl).set_inspectionTables_fz17vj_k$ = function (_set____db54di) {
    this.inspectionTables_1 = _set____db54di;
  };
  protoOf(CompositionContextImpl).get_inspectionTables_h8xum6_k$ = function () {
    return this.inspectionTables_1;
  };
  protoOf(CompositionContextImpl).get_composers_emuuza_k$ = function () {
    return this.composers_1;
  };
  protoOf(CompositionContextImpl).dispose_3nnxhr_k$ = function () {
    // Inline function 'kotlin.collections.isNotEmpty' call
    if (!this.composers_1.isEmpty_y1axqb_k$()) {
      var tmp0_safe_receiver = this.inspectionTables_1;
      if (tmp0_safe_receiver == null)
        null;
      else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        var tmp0_iterator = this.composers_1.iterator_jk1svi_k$();
        while (tmp0_iterator.hasNext_bitz1p_k$()) {
          var composer = tmp0_iterator.next_20eer_k$();
          var tmp1_iterator = tmp0_safe_receiver.iterator_jk1svi_k$();
          while (tmp1_iterator.hasNext_bitz1p_k$()) {
            var table = tmp1_iterator.next_20eer_k$();
            table.remove_cedx0m_k$(composer.slotTable_1);
          }
        }
      }
      this.composers_1.clear_j9egeb_k$();
    }
  };
  protoOf(CompositionContextImpl).registerComposer_4k9eh7_k$ = function (composer) {
    protoOf(CompositionContext).registerComposer_4k9eh7_k$.call(this, composer instanceof ComposerImpl ? composer : THROW_CCE());
    this.composers_1.add_utx5q5_k$(composer);
  };
  protoOf(CompositionContextImpl).unregisterComposer_3dsghw_k$ = function (composer) {
    var tmp0_safe_receiver = this.inspectionTables_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.collections.forEach' call
      var tmp0_iterator = tmp0_safe_receiver.iterator_jk1svi_k$();
      while (tmp0_iterator.hasNext_bitz1p_k$()) {
        var element = tmp0_iterator.next_20eer_k$();
        // Inline function 'androidx.compose.runtime.CompositionContextImpl.unregisterComposer.<anonymous>' call
        element.remove_cedx0m_k$((composer instanceof ComposerImpl ? composer : THROW_CCE()).slotTable_1);
      }
    }
    // Inline function 'kotlin.collections.remove' call
    var this_0 = this.composers_1;
    (isInterface(this_0, MutableCollection) ? this_0 : THROW_CCE()).remove_cedx0m_k$(composer);
  };
  protoOf(CompositionContextImpl).registerComposition_zfb9ze_k$ = function (composition) {
    this.$this_1.parentContext_1.registerComposition_zfb9ze_k$(composition);
  };
  protoOf(CompositionContextImpl).unregisterComposition_ok1mjz_k$ = function (composition) {
    this.$this_1.parentContext_1.unregisterComposition_ok1mjz_k$(composition);
  };
  protoOf(CompositionContextImpl).get_effectCoroutineContext_dfl5kh_k$ = function () {
    return this.$this_1.parentContext_1.get_effectCoroutineContext_dfl5kh_k$();
  };
  protoOf(CompositionContextImpl).get_recomposeCoroutineContext_5qac6l_k$ = function () {
    return get_recomposeCoroutineContext(this.$this_1.composition_1);
  };
  protoOf(CompositionContextImpl).composeInitial_k0zvwz_k$ = function (composition, content) {
    illegalDecoyCallException('composeInitial');
  };
  protoOf(CompositionContextImpl).invalidate_sa779a_k$ = function (composition) {
    this.$this_1.parentContext_1.invalidate_sa779a_k$(this.$this_1.composition_1);
    this.$this_1.parentContext_1.invalidate_sa779a_k$(composition);
  };
  protoOf(CompositionContextImpl).invalidateScope_ngs86p_k$ = function (scope) {
    this.$this_1.parentContext_1.invalidateScope_ngs86p_k$(scope);
  };
  protoOf(CompositionContextImpl).getCompositionLocalScope_nk4i7x_k$ = function () {
    return _get_compositionLocalScope__ulge9q(this);
  };
  protoOf(CompositionContextImpl).updateCompositionLocalScope_w6bi9a_k$ = function (scope) {
    _set_compositionLocalScope__ya1b9q(this, scope);
  };
  protoOf(CompositionContextImpl).recordInspectionTable_v0ydx3_k$ = function (table) {
    var tmp0_elvis_lhs = this.inspectionTables_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      // Inline function 'kotlin.also' call
      var this_0 = HashSet_init_$Create$();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.CompositionContextImpl.recordInspectionTable.<anonymous>' call
      this.inspectionTables_1 = this_0;
      tmp = this_0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    tmp.add_utx5q5_k$(table);
  };
  protoOf(CompositionContextImpl).startComposing_mvf071_k$ = function () {
    var tmp0_this = this.$this_1;
    tmp0_this.childrenComposing_1 = tmp0_this.childrenComposing_1 + 1 | 0;
  };
  protoOf(CompositionContextImpl).doneComposing_s7ssbn_k$ = function () {
    var tmp0_this = this.$this_1;
    tmp0_this.childrenComposing_1 = tmp0_this.childrenComposing_1 - 1 | 0;
  };
  protoOf(CompositionContextImpl).insertMovableContent_46m3cf_k$ = function (reference) {
    this.$this_1.parentContext_1.insertMovableContent_46m3cf_k$(reference);
  };
  protoOf(CompositionContextImpl).deletedMovableContent_25esy7_k$ = function (reference) {
    this.$this_1.parentContext_1.deletedMovableContent_25esy7_k$(reference);
  };
  protoOf(CompositionContextImpl).movableContentStateResolve_htz57n_k$ = function (reference) {
    return this.$this_1.parentContext_1.movableContentStateResolve_htz57n_k$(reference);
  };
  protoOf(CompositionContextImpl).movableContentStateReleased_wudwew_k$ = function (reference, data) {
    this.$this_1.parentContext_1.movableContentStateReleased_wudwew_k$(reference, data);
  };
  protoOf(CompositionContextImpl).reportRemovedComposition_6q2ts1_k$ = function (composition) {
    this.$this_1.parentContext_1.reportRemovedComposition_6q2ts1_k$(composition);
  };
  protoOf(CompositionContextImpl).composeInitial$composable_bp8pey_k$ = function (composition, content) {
    this.$this_1.parentContext_1.composeInitial$composable_bp8pey_k$(composition, content);
  };
  function updateCompoundKeyWhenWeEnterGroup($this, groupKey, dataKey, data) {
    if (dataKey == null)
      if ((!(data == null) ? groupKey === 207 : false) ? !equals(data, Companion_getInstance_1().Empty_1) : false) {
        updateCompoundKeyWhenWeEnterGroupKeyHash($this, hashCode(data));
      } else {
        updateCompoundKeyWhenWeEnterGroupKeyHash($this, groupKey);
      }
     else {
      if (dataKey instanceof Enum) {
        updateCompoundKeyWhenWeEnterGroupKeyHash($this, dataKey.get_ordinal_ip24qg_k$());
      } else {
        updateCompoundKeyWhenWeEnterGroupKeyHash($this, hashCode(dataKey));
      }
    }
  }
  function updateCompoundKeyWhenWeEnterGroupKeyHash($this, keyHash) {
    var tmp = $this;
    // Inline function 'androidx.compose.runtime.rol' call
    var this_0 = $this.compoundKeyHash_1;
    tmp.compoundKeyHash_1 = rotateLeft(this_0, 3) ^ keyHash;
  }
  function updateCompoundKeyWhenWeExitGroup($this, groupKey, dataKey, data) {
    if (dataKey == null)
      if ((!(data == null) ? groupKey === 207 : false) ? !equals(data, Companion_getInstance_1().Empty_1) : false) {
        updateCompoundKeyWhenWeExitGroupKeyHash($this, hashCode(data));
      } else {
        updateCompoundKeyWhenWeExitGroupKeyHash($this, groupKey);
      }
     else {
      if (dataKey instanceof Enum) {
        updateCompoundKeyWhenWeExitGroupKeyHash($this, dataKey.get_ordinal_ip24qg_k$());
      } else {
        updateCompoundKeyWhenWeExitGroupKeyHash($this, hashCode(dataKey));
      }
    }
  }
  function updateCompoundKeyWhenWeExitGroupKeyHash($this, groupKey) {
    var tmp = $this;
    // Inline function 'androidx.compose.runtime.ror' call
    var this_0 = $this.compoundKeyHash_1 ^ groupKey;
    tmp.compoundKeyHash_1 = rotateRight(this_0, 3);
  }
  function doCompose$composable($this, invalidationsRequested, content) {
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!!$this.isComposing_1) {
      // Inline function 'androidx.compose.runtime.ComposerImpl.doCompose$composable.<anonymous>' call
      var message = 'Reentrant composition is not supported';
      composeRuntimeError(toString(message));
    }
    $l$block: {
      // Inline function 'androidx.compose.runtime.trace' call
      var sectionName = 'Compose:recompose';
      var token = Trace_getInstance().beginSection_2k8ef6_k$(sectionName);
      try {
        $this.compositionToken_1 = currentSnapshot().get_id_kntnx8_k$();
        $this.providerUpdates_1.clear_j9egeb_k$();
        // Inline function 'androidx.compose.runtime.collection.IdentityArrayMap.forEach' call
        var inductionVariable = 0;
        var last = invalidationsRequested.get_size_woubt6_k$();
        if (inductionVariable < last)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            // Inline function 'androidx.compose.runtime.ComposerImpl.doCompose$composable.<anonymous>.<anonymous>' call
            var tmp = invalidationsRequested.get_keys_wop4xp_k$()[index];
            var scope = !(tmp == null) ? tmp : THROW_CCE();
            var tmp_0 = invalidationsRequested.get_values_ksazhn_k$()[index];
            var set = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
            var tmp0_safe_receiver = scope.get_anchor_b1c8n2_k$();
            var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.get_location_d3s02_k$();
            var tmp_1;
            if (tmp1_elvis_lhs == null) {
              return Unit_getInstance();
            } else {
              tmp_1 = tmp1_elvis_lhs;
            }
            var location = tmp_1;
            $this.invalidations_1.add_utx5q5_k$(new Invalidation(scope, location, set));
          }
           while (inductionVariable < last);
        // Inline function 'kotlin.collections.sortBy' call
        var this_0 = $this.invalidations_1;
        if (this_0.get_size_woubt6_k$() > 1) {
          // Inline function 'kotlin.comparisons.compareBy' call
          var tmp_2 = ComposerImpl$doCompose$composable$lambda;
          var tmp$ret$1 = new sam$kotlin_Comparator$0(tmp_2);
          sortWith(this_0, tmp$ret$1);
        }
        $this.nodeIndex_1 = 0;
        var complete = false;
        $this.isComposing_1 = true;
        var tmp_3;
        try {
          startRoot($this);
          var savedContent = $this.nextSlot_nk19qp_k$();
          if (!(savedContent === content) ? !(content == null) : false) {
            $this.updateValue_uuh8rr_k$((content == null ? true : !(content == null)) ? content : THROW_CCE());
          }
          // Inline function 'androidx.compose.runtime.observeDerivedStateRecalculations' call
          var observer = $this.derivedStateObserver_1;
          var observers = derivedStateObservers_0();
          try {
            observers.add_wl2rvy_k$(observer);
            // Inline function 'androidx.compose.runtime.ComposerImpl.doCompose$composable.<anonymous>.<anonymous>' call
            if (!(content == null)) {
              startGroup_0($this, 200, get_invocation());
              invokeComposable$composable($this, content);
              endGroup($this);
            } else if ((($this.forciblyRecompose_1 ? true : $this.providersInvalid_1) ? !(savedContent == null) : false) ? !equals(savedContent, Companion_getInstance_1().Empty_1) : false) {
              startGroup_0($this, 200, get_invocation());
              invokeComposable$composable($this, (!(savedContent == null) ? typeof savedContent === 'function' : false) ? savedContent : THROW_CCE());
              endGroup($this);
            } else {
              $this.skipCurrentGroup_1h4u23_k$();
            }
          }finally {
            // Inline function 'androidx.compose.runtime.collection.MutableVector.lastIndex' call
            var tmp$ret$2 = observers.get_size_woubt6_k$() - 1 | 0;
            observers.removeAt_6niowx_k$(tmp$ret$2);
          }
          endRoot($this);
          complete = true;
          tmp_3 = Unit_getInstance();
        }finally {
          $this.isComposing_1 = false;
          $this.invalidations_1.clear_j9egeb_k$();
          if (!complete) {
            abortRoot($this);
          }
        }
        break $l$block;
      }finally {
        Trace_getInstance().endSection_5rdvi3_k$(token);
      }
    }
  }
  function sam$kotlin_Comparator$0(function_0) {
    this.function_1 = function_0;
  }
  protoOf(sam$kotlin_Comparator$0).compare_bczr_k$ = function (a, b) {
    return this.function_1(a, b);
  };
  protoOf(sam$kotlin_Comparator$0).compare = function (a, b) {
    return this.compare_bczr_k$(a, b);
  };
  function insertMovableContentGuarded$positionToParentOf(slots, applier, index) {
    while (!slots.indexInParent_c47dp3_k$(index)) {
      slots.skipToGroupEnd_lh3zi2_k$();
      if (slots.isNode_keuxl8_k$(slots.get_parent_hy4reb_k$())) {
        applier.up_jp5yk5_k$();
      }
      slots.endGroup_s64cis_k$();
    }
  }
  function insertMovableContentGuarded$currentNodeIndex(slots) {
    var original = slots.get_currentGroup_sgvyz3_k$();
    var current = slots.get_parent_hy4reb_k$();
    while (current >= 0 ? !slots.isNode_keuxl8_k$(current) : false) {
      current = slots.parent_omvrla_k$(current);
    }
    var index = 0;
    current = current + 1 | 0;
    while (current < original) {
      if (slots.indexInGroup_dlgg14_k$(original, current)) {
        if (slots.isNode_keuxl8_k$(current))
          index = 0;
        current = current + 1 | 0;
      } else {
        index = index + (slots.isNode_keuxl8_k$(current) ? 1 : slots.nodeCount_48mp3f_k$(current)) | 0;
        current = current + slots.groupSize_ehpyh4_k$(current) | 0;
      }
    }
    return index;
  }
  function insertMovableContentGuarded$positionToInsert(slots, anchor, applier) {
    var destination = slots.anchorIndex_79wady_k$(anchor);
    runtimeCheck_0(slots.get_currentGroup_sgvyz3_k$() < destination);
    insertMovableContentGuarded$positionToParentOf(slots, applier, destination);
    var nodeIndex = insertMovableContentGuarded$currentNodeIndex(slots);
    while (slots.get_currentGroup_sgvyz3_k$() < destination) {
      if (slots.indexInCurrentGroup_ya2kmz_k$(destination)) {
        if (slots.get_isNode_ew2wyd_k$()) {
          applier.down_vf2a4d_k$(slots.node_dyvdau_k$(slots.get_currentGroup_sgvyz3_k$()));
          nodeIndex = 0;
        }
        slots.startGroup_hppv2r_k$();
      } else
        nodeIndex = nodeIndex + slots.skipGroup_y9vakg_k$() | 0;
    }
    runtimeCheck_0(slots.get_currentGroup_sgvyz3_k$() === destination);
    return nodeIndex;
  }
  function reportFreeMovableContent$reportGroup(this$0, group, needsNodeDelete, nodeIndex) {
    var tmp;
    if (this$0.reader_1.hasMark_ahdlb_k$(group)) {
      var key = this$0.reader_1.groupKey_pe96ns_k$(group);
      var objectKey = this$0.reader_1.groupObjectKey_7ge4pj_k$(group);
      var tmp_0;
      var tmp_1;
      if (key === get_movableContentKey()) {
        tmp_1 = objectKey instanceof MovableContent;
      } else {
        tmp_1 = false;
      }
      if (tmp_1) {
        var movableContent = objectKey instanceof MovableContent ? objectKey : THROW_CCE();
        var parameter = this$0.reader_1.groupGet_pxa5uf_k$(group, 0);
        var anchor = this$0.reader_1.anchor_wwz2f1_k$(group);
        var end = group + this$0.reader_1.groupSize_ehpyh4_k$(group) | 0;
        // Inline function 'androidx.compose.runtime.snapshots.fastMap' call
        var this_0 = filterToRange(this$0.invalidations_1, group, end);
        // Inline function 'kotlin.contracts.contract' call
        var target = ArrayList_init_$Create$_0(this_0.get_size_woubt6_k$());
        // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
        // Inline function 'kotlin.contracts.contract' call
        var inductionVariable = 0;
        var last = this_0.get_size_woubt6_k$() - 1 | 0;
        if (inductionVariable <= last)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var item = this_0.get_c1px32_k$(index);
            // Inline function 'androidx.compose.runtime.snapshots.fastMap.<anonymous>' call
            // Inline function 'kotlin.collections.plusAssign' call
            // Inline function 'androidx.compose.runtime.ComposerImpl.reportFreeMovableContent.reportGroup.<anonymous>' call
            var element = to(item.scope_1, item.instances_1);
            target.add_utx5q5_k$(element);
          }
           while (inductionVariable <= last);
        var invalidations = target;
        var reference = new MovableContentStateReference(movableContent, parameter, this$0.composition_1, this$0.slotTable_1, anchor, invalidations, currentCompositionLocalScope_0(this$0, group));
        this$0.parentContext_1.deletedMovableContent_25esy7_k$(reference);
        recordSlotEditing(this$0);
        record(this$0, ComposerImpl$reportFreeMovableContent$reportGroup$lambda(this$0, reference));
        var tmp_2;
        if (needsNodeDelete) {
          realizeMovement(this$0);
          realizeUps(this$0);
          realizeDowns_0(this$0);
          var nodeCount = this$0.reader_1.isNode_keuxl8_k$(group) ? 1 : this$0.reader_1.nodeCount_48mp3f_k$(group);
          if (nodeCount > 0) {
            recordRemoveNode(this$0, nodeIndex, nodeCount);
          }
          tmp_2 = 0;
        } else {
          tmp_2 = this$0.reader_1.nodeCount_48mp3f_k$(group);
        }
        tmp_0 = tmp_2;
      } else {
        if (key === 206 ? equals(objectKey, get_reference()) : false) {
          var tmp_3 = this$0.reader_1.groupGet_pxa5uf_k$(group, 0);
          var contextHolder = tmp_3 instanceof CompositionContextHolder ? tmp_3 : null;
          if (!(contextHolder == null)) {
            var compositionContext = contextHolder.ref_1;
            // Inline function 'kotlin.collections.forEach' call
            var tmp0_iterator = compositionContext.composers_1.iterator_jk1svi_k$();
            while (tmp0_iterator.hasNext_bitz1p_k$()) {
              var element_0 = tmp0_iterator.next_20eer_k$();
              // Inline function 'androidx.compose.runtime.ComposerImpl.reportFreeMovableContent.reportGroup.<anonymous>' call
              reportAllMovableContent(element_0);
              this$0.parentContext_1.reportRemovedComposition_6q2ts1_k$(element_0.composition_1);
            }
          }
          tmp_0 = this$0.reader_1.nodeCount_48mp3f_k$(group);
        } else {
          tmp_0 = this$0.reader_1.nodeCount_48mp3f_k$(group);
        }
      }
      tmp = tmp_0;
    } else if (this$0.reader_1.containsMark_201c98_k$(group)) {
      var size = this$0.reader_1.groupSize_ehpyh4_k$(group);
      var end_0 = group + size | 0;
      var current = group + 1 | 0;
      var runningNodeCount = 0;
      while (current < end_0) {
        var isNode = this$0.reader_1.isNode_keuxl8_k$(current);
        if (isNode) {
          realizeMovement(this$0);
          recordDown(this$0, this$0.reader_1.node_dyvdau_k$(current));
        }
        runningNodeCount = runningNodeCount + reportFreeMovableContent$reportGroup(this$0, current, isNode ? true : needsNodeDelete, isNode ? 0 : nodeIndex + runningNodeCount | 0) | 0;
        if (isNode) {
          realizeMovement(this$0);
          recordUp(this$0);
        }
        current = current + this$0.reader_1.groupSize_ehpyh4_k$(current) | 0;
      }
      tmp = runningNodeCount;
    } else {
      tmp = this$0.reader_1.nodeCount_48mp3f_k$(group);
    }
    return tmp;
  }
  function ComposerImpl$derivedStateObserver$1(this$0) {
    this.this$0__1 = this$0;
  }
  protoOf(ComposerImpl$derivedStateObserver$1).start_f2neau_k$ = function (derivedState) {
    var tmp0_this = this.this$0__1;
    tmp0_this.childrenComposing_1 = tmp0_this.childrenComposing_1 + 1 | 0;
  };
  protoOf(ComposerImpl$derivedStateObserver$1).done_h2vlx6_k$ = function (derivedState) {
    var tmp0_this = this.this$0__1;
    tmp0_this.childrenComposing_1 = tmp0_this.childrenComposing_1 - 1 | 0;
  };
  function ComposerImpl$createNode$lambda($factory, $groupAnchor, $insertIndex) {
    return function (applier, slots, _anonymous_parameter_2__qggqfi) {
      var node = $factory();
      slots.updateNode_nqgdaf_k$($groupAnchor, node);
      var nodeApplier = isInterface(applier, Applier) ? applier : THROW_CCE();
      nodeApplier.insertTopDown_7i64np_k$($insertIndex, node);
      applier.down_vf2a4d_k$(node);
      return Unit_getInstance();
    };
  }
  function ComposerImpl$createNode$lambda_0($groupAnchor, $insertIndex) {
    return function (applier, slots, _anonymous_parameter_2__qggqfi) {
      var nodeToInsert = slots.node_e1wn0x_k$($groupAnchor);
      applier.up_jp5yk5_k$();
      var nodeApplier = isInterface(applier, Applier) ? applier : THROW_CCE();
      nodeApplier.insertBottomUp_31tc4s_k$($insertIndex, nodeToInsert);
      return Unit_getInstance();
    };
  }
  function ComposerImpl$useNode$lambda(applier, _anonymous_parameter_1__qggqgd, _anonymous_parameter_2__qggqfi) {
    var tmp = applier.get_current_jwi6j4_k$();
    ((!(tmp == null) ? isInterface(tmp, ComposeNodeLifecycleCallback) : false) ? tmp : THROW_CCE()).onReuse_7u58ud_k$();
    return Unit_getInstance();
  }
  function ComposerImpl$apply$lambda($block, $value) {
    return function (applier, _anonymous_parameter_1__qggqgd, _anonymous_parameter_2__qggqfi) {
      var tmp = applier.get_current_jwi6j4_k$();
      $block((tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE(), $value);
      return Unit_getInstance();
    };
  }
  function ComposerImpl$updateValue$lambda($value) {
    return function (_anonymous_parameter_0__qggqh8, _anonymous_parameter_1__qggqgd, rememberManager) {
      rememberManager.remembering_91gjs0_k$($value);
      return Unit_getInstance();
    };
  }
  function ComposerImpl$updateValue$lambda_0($value, $groupSlotIndex) {
    return function (_anonymous_parameter_0__qggqh8, slots, rememberManager) {
      var tmp;
      if (!($value == null) ? isInterface($value, RememberObserver) : false) {
        rememberManager.remembering_91gjs0_k$($value);
        tmp = Unit_getInstance();
      }
      var previous = slots.set_sg4drr_k$($groupSlotIndex, $value);
      var tmp_0;
      if (!(previous == null) ? isInterface(previous, RememberObserver) : false) {
        rememberManager.forgetting_k8kg92_k$(previous);
        tmp_0 = Unit_getInstance();
      } else {
        if (previous instanceof RecomposeScopeImpl) {
          previous.release_wu5yyf_k$();
          tmp_0 = Unit_getInstance();
        }
      }
      return Unit_getInstance();
    };
  }
  function ComposerImpl$recordSideEffect$lambda($effect) {
    return function (_anonymous_parameter_0__qggqh8, _anonymous_parameter_1__qggqgd, rememberManager) {
      rememberManager.sideEffect_b2rsnk_k$($effect);
      return Unit_getInstance();
    };
  }
  function ComposerImpl$startProviders$lambda($values, $parentScope) {
    return function ($composer, $changed) {
      var $composer_0 = $composer;
      $composer_0.startReplaceableGroup_ip860b_k$(-948105361);
      sourceInformation($composer_0, 'C1996@73844L42:Composer.kt#9igjgp');
      var tmp;
      if (isTraceInProgress()) {
        traceEventStart(-948105361, $changed, -1, 'androidx.compose.runtime.ComposerImpl.startProviders.<anonymous> (Composer.kt:1995)');
        tmp = Unit_getInstance();
      }
      var tmp0 = compositionLocalMapOf$composable($values, $parentScope, $composer_0, 0);
      var tmp_0;
      if (isTraceInProgress()) {
        traceEventEnd();
        tmp_0 = Unit_getInstance();
      }
      $composer_0.endReplaceableGroup_ern0ak_k$();
      return tmp0;
    };
  }
  function ComposerImpl$startReaderGroup$lambda($data) {
    return function (_anonymous_parameter_0__qggqh8, slots, _anonymous_parameter_2__qggqfi) {
      slots.updateAux_k8b4ks_k$($data);
      return Unit_getInstance();
    };
  }
  function ComposerImpl$start$lambda($currentRelativePosition) {
    return function (_anonymous_parameter_0__qggqh8, slots, _anonymous_parameter_2__qggqfi) {
      slots.moveGroup_ikfgiu_k$($currentRelativePosition);
      return Unit_getInstance();
    };
  }
  function ComposerImpl$deactivateToEndGroup$lambda($node) {
    return function (_anonymous_parameter_0__qggqh8, _anonymous_parameter_1__qggqgd, rememberManager) {
      rememberManager.deactivating_62b1kc_k$($node);
      return Unit_getInstance();
    };
  }
  function ComposerImpl$deactivateToEndGroup$lambda$lambda($data, $index) {
    return function (_anonymous_parameter_0__qggqh8, slots, rememberManager) {
      var tmp;
      if (!equals($data, slots.slot_xuatfm_k$(slots.get_currentGroup_sgvyz3_k$(), $index))) {
        // Inline function 'androidx.compose.runtime.ComposerImpl.deactivateToEndGroup.<anonymous>.<anonymous>.<anonymous>' call
        var message = 'Slot table is out of sync';
        composeRuntimeError(toString(message));
      }
      rememberManager.forgetting_k8kg92_k$($data);
      slots.set_sg4drr_k$($index, Companion_getInstance_1().Empty_1);
      return Unit_getInstance();
    };
  }
  function ComposerImpl$deactivateToEndGroup$lambda$lambda_0($data, $index) {
    return function (_anonymous_parameter_0__qggqh8, slots, _anonymous_parameter_2__qggqfi) {
      var tmp;
      if (!equals($data, slots.slot_xuatfm_k$(slots.get_currentGroup_sgvyz3_k$(), $index))) {
        // Inline function 'androidx.compose.runtime.ComposerImpl.deactivateToEndGroup.<anonymous>.<anonymous>.<anonymous>' call
        var message = 'Slot table is out of sync';
        composeRuntimeError(toString(message));
      }
      slots.set_sg4drr_k$($index, Companion_getInstance_1().Empty_1);
      return Unit_getInstance();
    };
  }
  function ComposerImpl$deactivateToEndGroup$lambda_0(this$0, $group) {
    return function (index, data) {
      var tmp;
      if (!(data == null) ? isInterface(data, RememberObserver) : false) {
        this$0.reader_1.reposition_26fquk_k$($group);
        recordSlotTableOperation$default(this$0, VOID, ComposerImpl$deactivateToEndGroup$lambda$lambda(data, index));
        tmp = Unit_getInstance();
      } else {
        if (data instanceof RecomposeScopeImpl) {
          data.release_wu5yyf_k$();
          this$0.reader_1.reposition_26fquk_k$($group);
          recordSlotTableOperation$default(this$0, VOID, ComposerImpl$deactivateToEndGroup$lambda$lambda_0(data, index));
          tmp = Unit_getInstance();
        }
      }
      return Unit_getInstance();
    };
  }
  function ComposerImpl$endRestartGroup$lambda($this, this$0) {
    return function (_anonymous_parameter_0__qggqh8, _anonymous_parameter_1__qggqgd, _anonymous_parameter_2__qggqfi) {
      $this(this$0.composition_1);
      return Unit_getInstance();
    };
  }
  function ComposableLambda$invoke$ref($boundThis) {
    return function (p0, p1) {
      return $boundThis.invoke_z8di7s_k$(p0, p1);
    };
  }
  function ComposerImpl$invokeMovableContentLambda$lambda($content, $parameter) {
    return function ($composer, $changed) {
      var $composer_0 = $composer;
      sourceInformation($composer_0, 'C2947@112623L18:Composer.kt#9igjgp');
      var tmp;
      if (!(($changed & 11) === 2) ? true : !$composer_0.get_skipping_3owdve_k$()) {
        if (isTraceInProgress()) {
          traceEventStart(316014703, $changed, -1, 'androidx.compose.runtime.ComposerImpl.invokeMovableContentLambda.<anonymous> (Composer.kt:2947)');
        }
        $content.content_1($parameter, $composer_0, 0);
        var tmp_0;
        if (isTraceInProgress()) {
          traceEventEnd();
          tmp_0 = Unit_getInstance();
        }
        tmp = tmp_0;
      } else {
        $composer_0.skipToGroupEnd_lh3zi2_k$();
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function ComposerImpl$insertMovableContentGuarded$lambda($effectiveNodeIndex, $anchor) {
    return function (applier, slots, _anonymous_parameter_2__qggqfi) {
      if (!isInterface(applier, Applier))
        THROW_CCE();
      $effectiveNodeIndex._v = insertMovableContentGuarded$positionToInsert(slots, $anchor, applier);
      return Unit_getInstance();
    };
  }
  function ComposerImpl$insertMovableContentGuarded$lambda_0(this$0, $offsetChanges, $reader, $to) {
    return function () {
      $l$block_0: {
        // Inline function 'androidx.compose.runtime.ComposerImpl.withChanges' call
        var this_0 = this$0;
        var newChanges = $offsetChanges;
        var savedChanges = this_0.changes_1;
        try {
          this_0.changes_1 = newChanges;
          $l$block: {
            // Inline function 'androidx.compose.runtime.ComposerImpl.withReader' call
            var this_1 = this$0;
            var reader = $reader;
            var savedReader = this_1.reader_1;
            var savedCountOverrides = this_1.nodeCountOverrides_1;
            this_1.nodeCountOverrides_1 = null;
            try {
              this_1.reader_1 = reader;
              invokeMovableContentLambda(this$0, $to.content_1, $to.locals_1, $to.parameter_1, true);
              break $l$block;
            }finally {
              this_1.reader_1 = savedReader;
              this_1.nodeCountOverrides_1 = savedCountOverrides;
            }
          }
          break $l$block_0;
        }finally {
          this_0.changes_1 = savedChanges;
        }
      }
      return Unit_getInstance();
    };
  }
  function ComposerImpl$insertMovableContentGuarded$lambda_1($effectiveNodeIndex, $offsetChanges) {
    return function (applier, slots, rememberManager) {
      var offsetApplier = $effectiveNodeIndex._v > 0 ? new OffsetApplier(applier, $effectiveNodeIndex._v) : applier;
      var this_0 = $offsetChanges;
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable = 0;
      var last = this_0.get_size_woubt6_k$() - 1 | 0;
      var tmp;
      if (inductionVariable <= last) {
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var item = this_0.get_c1px32_k$(index);
          // Inline function 'androidx.compose.runtime.ComposerImpl.insertMovableContentGuarded.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
          item(offsetApplier, slots, rememberManager);
        }
         while (inductionVariable <= last);
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function ComposerImpl$insertMovableContentGuarded$lambda_2($effectiveNodeIndex, $nodesToInsert) {
    return function (applier, _anonymous_parameter_1__qggqgd, _anonymous_parameter_2__qggqfi) {
      var base = $effectiveNodeIndex._v;
      var this_0 = $nodesToInsert;
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable = 0;
      var last = this_0.get_size_woubt6_k$() - 1 | 0;
      var tmp;
      if (inductionVariable <= last) {
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var item = this_0.get_c1px32_k$(index);
          // Inline function 'androidx.compose.runtime.ComposerImpl.insertMovableContentGuarded.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
          if (!isInterface(applier, Applier))
            THROW_CCE();
          applier.insertBottomUp_31tc4s_k$(base + index | 0, item);
          applier.insertTopDown_7i64np_k$(base + index | 0, item);
        }
         while (inductionVariable <= last);
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function ComposerImpl$insertMovableContentGuarded$lambda_3($resolvedState, this$0, $from, $to) {
    return function (_anonymous_parameter_0__qggqh8, slots, _anonymous_parameter_2__qggqfi) {
      var tmp0_elvis_lhs = $resolvedState;
      var tmp1_elvis_lhs = tmp0_elvis_lhs == null ? this$0.parentContext_1.movableContentStateResolve_htz57n_k$($from) : tmp0_elvis_lhs;
      var tmp;
      if (tmp1_elvis_lhs == null) {
        composeRuntimeError('Could not resolve state for movable content');
      } else {
        tmp = tmp1_elvis_lhs;
      }
      var state = tmp;
      var anchors = slots.moveIntoGroupFrom_437syc_k$(1, state.slotTable_1, 2);
      var tmp_0 = Companion_getInstance_4();
      var tmp_1 = $to.composition_1;
      tmp_0.adoptAnchoredScopes_vqqdu5_k$(slots, anchors, isInterface(tmp_1, RecomposeScopeOwner) ? tmp_1 : THROW_CCE());
      return Unit_getInstance();
    };
  }
  function ComposerImpl$insertMovableContentGuarded$lambda_4(this$0, $to) {
    return function () {
      invokeMovableContentLambda(this$0, $to.content_1, $to.locals_1, $to.parameter_1, true);
      return Unit_getInstance();
    };
  }
  function ComposerImpl$insertMovableContentGuarded$lambda_5($effectiveNodeIndex, $offsetChanges) {
    return function (applier, slots, rememberManager) {
      var offsetApplier = $effectiveNodeIndex._v > 0 ? new OffsetApplier(applier, $effectiveNodeIndex._v) : applier;
      var this_0 = $offsetChanges;
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable = 0;
      var last = this_0.get_size_woubt6_k$() - 1 | 0;
      var tmp;
      if (inductionVariable <= last) {
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var item = this_0.get_c1px32_k$(index);
          // Inline function 'androidx.compose.runtime.ComposerImpl.insertMovableContentGuarded.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
          item(offsetApplier, slots, rememberManager);
        }
         while (inductionVariable <= last);
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function ComposerImpl$insertMovableContentGuarded$lambda_6(applier, slots, _anonymous_parameter_2__qggqfi) {
    if (!isInterface(applier, Applier))
      THROW_CCE();
    insertMovableContentGuarded$positionToParentOf(slots, applier, 0);
    slots.endGroup_s64cis_k$();
    return Unit_getInstance();
  }
  function ComposerImpl$realizeUps$lambda($count) {
    return function (applier, _anonymous_parameter_1__qggqgd, _anonymous_parameter_2__qggqfi) {
      var times = $count;
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable = 0;
      var tmp;
      if (inductionVariable < times) {
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          // Inline function 'androidx.compose.runtime.ComposerImpl.realizeUps.<anonymous>.<anonymous>' call
          applier.up_jp5yk5_k$();
        }
         while (inductionVariable < times);
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function ComposerImpl$realizeDowns$lambda($nodes) {
    return function (applier, _anonymous_parameter_1__qggqgd, _anonymous_parameter_2__qggqfi) {
      var inductionVariable = 0;
      var last = $nodes.length - 1 | 0;
      var tmp;
      if (inductionVariable <= last) {
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var nodeApplier = isInterface(applier, Applier) ? applier : THROW_CCE();
          nodeApplier.down_vf2a4d_k$($nodes[index]);
        }
         while (inductionVariable <= last);
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function ComposerImpl$realizeOperationLocation$lambda($distance) {
    return function (_anonymous_parameter_0__qggqh8, slots, _anonymous_parameter_2__qggqfi) {
      slots.advanceBy_3na3gx_k$($distance);
      return Unit_getInstance();
    };
  }
  function ComposerImpl$recordInsert$lambda($insertTable, $anchor) {
    return function (_anonymous_parameter_0__qggqh8, slots, _anonymous_parameter_2__qggqfi) {
      slots.beginInsert_i2ehou_k$();
      slots.moveFrom_n55mw2_k$($insertTable, $anchor.toIndexFor_xhkkx2_k$($insertTable), false);
      slots.endInsert_4o34x0_k$();
      return Unit_getInstance();
    };
  }
  function ComposerImpl$recordInsert$lambda_0($insertTable, $fixups, $anchor) {
    return function (applier, slots, rememberManager) {
      // Inline function 'androidx.compose.runtime.SlotTable.write' call
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.SlotTable.write.<anonymous>' call
      var writer = $insertTable.openWriter_7mgvvh_k$();
      var tmp;
      try {
        var this_0 = $fixups;
        // Inline function 'kotlin.contracts.contract' call
        var inductionVariable = 0;
        var last = this_0.get_size_woubt6_k$() - 1 | 0;
        var tmp_0;
        if (inductionVariable <= last) {
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var item = this_0.get_c1px32_k$(index);
            // Inline function 'androidx.compose.runtime.ComposerImpl.recordInsert.<anonymous>.<anonymous>.<anonymous>' call
            item(applier, writer, rememberManager);
          }
           while (inductionVariable <= last);
          tmp_0 = Unit_getInstance();
        }
        tmp = tmp_0;
      }finally {
        writer.close_yn9xrc_k$();
      }
      slots.beginInsert_i2ehou_k$();
      slots.moveFrom_n55mw2_k$($insertTable, $anchor.toIndexFor_xhkkx2_k$($insertTable), false);
      slots.endInsert_4o34x0_k$();
      return Unit_getInstance();
    };
  }
  function ComposerImpl$releaseMovableGroupAtCurrent$movableContentRecomposeScopeOwner$1($composition, $reference) {
    this.$composition_1 = $composition;
    this.$reference_1 = $reference;
  }
  protoOf(ComposerImpl$releaseMovableGroupAtCurrent$movableContentRecomposeScopeOwner$1).invalidate_673xr8_k$ = function (scope, instance) {
    var tmp = this.$composition_1;
    var tmp0_safe_receiver = isInterface(tmp, RecomposeScopeOwner) ? tmp : null;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.invalidate_673xr8_k$(scope, instance);
    var result = tmp1_elvis_lhs == null ? InvalidationResult_IGNORED_getInstance() : tmp1_elvis_lhs;
    if (result.equals(InvalidationResult_IGNORED_getInstance())) {
      var tmp2_this = this.$reference_1;
      var tmp_0 = tmp2_this;
      var tmp_1 = tmp2_this.invalidations_1;
      var tmp_2;
      if (instance == null) {
        tmp_2 = null;
      } else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.<no name provided>.invalidate.<anonymous>' call
        // Inline function 'kotlin.also' call
        var this_0 = new IdentityArraySet();
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.<no name provided>.invalidate.<anonymous>.<anonymous>' call
        this_0.add_jkjo25_k$(this_0);
        tmp_2 = this_0;
      }
      tmp_0.invalidations_1 = plus_0(tmp_1, to(scope, tmp_2));
      return InvalidationResult_SCHEDULED_getInstance();
    }
    return result;
  };
  protoOf(ComposerImpl$releaseMovableGroupAtCurrent$movableContentRecomposeScopeOwner$1).recomposeScopeReleased_y5qeye_k$ = function (scope) {
  };
  protoOf(ComposerImpl$releaseMovableGroupAtCurrent$movableContentRecomposeScopeOwner$1).recordReadOf_1u1d8w_k$ = function (value) {
  };
  function ComposerImpl$recordSlotEditing$lambda($anchor) {
    return function (_anonymous_parameter_0__qggqh8, slots, _anonymous_parameter_2__qggqfi) {
      slots.ensureStarted_4qdm0w_k$($anchor);
      return Unit_getInstance();
    };
  }
  function ComposerImpl$realizeMovement$lambda($removeIndex, $count) {
    return function (applier, _anonymous_parameter_1__qggqgd, _anonymous_parameter_2__qggqfi) {
      applier.remove_ispuic_k$($removeIndex, $count);
      return Unit_getInstance();
    };
  }
  function ComposerImpl$realizeMovement$lambda_0($from, $to, $count) {
    return function (applier, _anonymous_parameter_1__qggqgd, _anonymous_parameter_2__qggqfi) {
      applier.move_vgi6vr_k$($from, $to, $count);
      return Unit_getInstance();
    };
  }
  function ComposerImpl$doCompose$composable$lambda(a, b) {
    // Inline function 'kotlin.comparisons.compareValuesBy' call
    // Inline function 'androidx.compose.runtime.ComposerImpl.doCompose$composable.<anonymous>.<anonymous>' call
    var tmp = a.location_1;
    // Inline function 'androidx.compose.runtime.ComposerImpl.doCompose$composable.<anonymous>.<anonymous>' call
    var tmp$ret$1 = b.location_1;
    return compareValues(tmp, tmp$ret$1);
  }
  function ComposerImpl$reportFreeMovableContent$reportGroup$lambda(this$0, $reference) {
    return function (_anonymous_parameter_0__qggqh8, slots, _anonymous_parameter_2__qggqfi) {
      releaseMovableGroupAtCurrent(this$0, $reference, slots);
      return Unit_getInstance();
    };
  }
  function ComposerImpl(applier, parentContext, slotTable, abandonSet, changes, lateChanges, composition) {
    this.applier_1 = applier;
    this.parentContext_1 = parentContext;
    this.slotTable_1 = slotTable;
    this.abandonSet_1 = abandonSet;
    this.changes_1 = changes;
    this.lateChanges_1 = lateChanges;
    this.composition_1 = composition;
    this.pendingStack_1 = new Stack();
    this.pending_1 = null;
    this.nodeIndex_1 = 0;
    this.nodeIndexStack_1 = new IntStack();
    this.groupNodeCount_1 = 0;
    this.groupNodeCountStack_1 = new IntStack();
    this.nodeCountOverrides_1 = null;
    this.nodeCountVirtualOverrides_1 = null;
    this.forceRecomposeScopes_1 = false;
    this.forciblyRecompose_1 = false;
    this.nodeExpected_1 = false;
    var tmp = this;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp.invalidations_1 = ArrayList_init_$Create$();
    this.entersStack_1 = new IntStack();
    this.parentProvider_1 = persistentCompositionLocalHashMapOf();
    this.providerUpdates_1 = new IntMap();
    this.providersInvalid_1 = false;
    this.providersInvalidStack_1 = new IntStack();
    this.reusing_1 = false;
    this.reusingGroup_1 = -1;
    this.childrenComposing_1 = 0;
    this.compositionToken_1 = 0;
    this.sourceInformationEnabled_1 = true;
    var tmp_0 = this;
    tmp_0.derivedStateObserver_1 = new ComposerImpl$derivedStateObserver$1(this);
    this.invalidateStack_1 = new Stack();
    this.isComposing_1 = false;
    this.isDisposed_1 = false;
    var tmp_1 = this;
    // Inline function 'kotlin.also' call
    var this_0 = this.slotTable_1.openReader_51y0fh_k$();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.ComposerImpl.reader.<anonymous>' call
    this_0.close_yn9xrc_k$();
    tmp_1.reader_1 = this_0;
    this.insertTable_1 = new SlotTable();
    var tmp_2 = this;
    // Inline function 'kotlin.also' call
    var this_1 = this.insertTable_1.openWriter_7mgvvh_k$();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.ComposerImpl.writer.<anonymous>' call
    this_1.close_yn9xrc_k$();
    tmp_2.writer_1 = this_1;
    this.writerHasAProvider_1 = false;
    this.providerCache_1 = null;
    this.deferredChanges_1 = null;
    var tmp_3 = this;
    // Inline function 'androidx.compose.runtime.SlotTable.read' call
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.SlotTable.read.<anonymous>' call
    var reader = this.insertTable_1.openReader_51y0fh_k$();
    var tmp_4;
    try {
      // Inline function 'androidx.compose.runtime.ComposerImpl.insertAnchor.<anonymous>' call
      tmp_4 = reader.anchor_wwz2f1_k$(0);
    }finally {
      reader.close_yn9xrc_k$();
    }
    tmp_3.insertAnchor_1 = tmp_4;
    var tmp_5 = this;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp_5.insertFixups_1 = ArrayList_init_$Create$();
    this.inserting_1 = false;
    this.compoundKeyHash_1 = 0;
    this.pendingUps_1 = 0;
    this.downNodes_1 = new Stack();
    this.writersReaderDelta_1 = 0;
    this.startedGroup_1 = false;
    this.implicitRootStart_1 = true;
    this.startedGroups_1 = new IntStack();
    this.insertUpFixups_1 = new Stack();
    this.previousRemove_1 = -1;
    this.previousMoveFrom_1 = -1;
    this.previousMoveTo_1 = -1;
    this.previousCount_1 = 0;
  }
  protoOf(ComposerImpl).get_applier_bupu8u_k$ = function () {
    return this.applier_1;
  };
  protoOf(ComposerImpl).get_composition_q729_k$ = function () {
    return this.composition_1;
  };
  protoOf(ComposerImpl).get_isComposing_a8f9zw_k$ = function () {
    return this.isComposing_1;
  };
  protoOf(ComposerImpl).get_isDisposed_skr1u0_k$ = function () {
    return this.isDisposed_1;
  };
  protoOf(ComposerImpl).get_areChildrenComposing_wtz02j_k$ = function () {
    return this.childrenComposing_1 > 0;
  };
  protoOf(ComposerImpl).get_hasPendingChanges_ruhuf7_k$ = function () {
    // Inline function 'kotlin.collections.isNotEmpty' call
    return !this.changes_1.isEmpty_y1axqb_k$();
  };
  protoOf(ComposerImpl).set_insertTable_ux994s_k$ = function (_set____db54di) {
    this.insertTable_1 = _set____db54di;
  };
  protoOf(ComposerImpl).get_insertTable_c0eejw_k$ = function () {
    return this.insertTable_1;
  };
  protoOf(ComposerImpl).set_deferredChanges_e24kzk_k$ = function (_set____db54di) {
    this.deferredChanges_1 = _set____db54di;
  };
  protoOf(ComposerImpl).get_deferredChanges_v7wg79_k$ = function () {
    return this.deferredChanges_1;
  };
  protoOf(ComposerImpl).get_applyCoroutineContext_gadgx0_k$ = function () {
    return this.parentContext_1.get_effectCoroutineContext_dfl5kh_k$();
  };
  protoOf(ComposerImpl).startReplaceableGroup_ip860b_k$ = function (key) {
    return start(this, key, null, Companion_getInstance_2().Group_1, null);
  };
  protoOf(ComposerImpl).endReplaceableGroup_ern0ak_k$ = function () {
    return endGroup(this);
  };
  protoOf(ComposerImpl).startDefaults_g83kzo_k$ = function () {
    return start(this, -127, null, Companion_getInstance_2().Group_1, null);
  };
  protoOf(ComposerImpl).endDefaults_b0s0ot_k$ = function () {
    endGroup(this);
    var scope = this.get_currentRecomposeScope_c5ni63_k$();
    if (!(scope == null) ? scope.get_used_wovsp2_k$() : false) {
      scope.set_defaultsInScope_b4bwsr_k$(true);
    }
  };
  protoOf(ComposerImpl).get_defaultsInvalid_y88fc4_k$ = function () {
    var tmp;
    if (this.providersInvalid_1) {
      tmp = true;
    } else {
      var tmp0_safe_receiver = this.get_currentRecomposeScope_c5ni63_k$();
      tmp = (tmp0_safe_receiver == null ? null : tmp0_safe_receiver.get_defaultsInvalid_y88fc4_k$()) === true;
    }
    return tmp;
  };
  protoOf(ComposerImpl).startMovableGroup_clfloq_k$ = function (key, dataKey) {
    return start(this, key, dataKey, Companion_getInstance_2().Group_1, null);
  };
  protoOf(ComposerImpl).endMovableGroup_kd2hcs_k$ = function () {
    return endGroup(this);
  };
  protoOf(ComposerImpl).changesApplied_368txy_k$ = function () {
    createFreshInsertTable(this);
    this.providerUpdates_1.clear_j9egeb_k$();
  };
  protoOf(ComposerImpl).get_inserting_25mlsw_k$ = function () {
    return this.inserting_1;
  };
  protoOf(ComposerImpl).get_skipping_3owdve_k$ = function () {
    var tmp;
    var tmp_0;
    if ((!this.inserting_1 ? !this.reusing_1 : false) ? !this.providersInvalid_1 : false) {
      var tmp0_safe_receiver = this.get_currentRecomposeScope_c5ni63_k$();
      tmp_0 = (tmp0_safe_receiver == null ? null : tmp0_safe_receiver.get_requiresRecompose_c1aaig_k$()) === false;
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = !this.forciblyRecompose_1;
    } else {
      tmp = false;
    }
    return tmp;
  };
  protoOf(ComposerImpl).get_compoundKeyHash_afdblz_k$ = function () {
    return this.compoundKeyHash_1;
  };
  protoOf(ComposerImpl).collectParameterInformation_24b5fh_k$ = function () {
    this.forceRecomposeScopes_1 = true;
  };
  protoOf(ComposerImpl).dispose_3nnxhr_k$ = function () {
    $l$block: {
      // Inline function 'androidx.compose.runtime.trace' call
      var sectionName = 'Compose:Composer.dispose';
      var token = Trace_getInstance().beginSection_2k8ef6_k$(sectionName);
      try {
        this.parentContext_1.unregisterComposer_3dsghw_k$(this);
        this.invalidateStack_1.clear_j9egeb_k$();
        this.invalidations_1.clear_j9egeb_k$();
        this.changes_1.clear_j9egeb_k$();
        this.providerUpdates_1.clear_j9egeb_k$();
        this.applier_1.clear_j9egeb_k$();
        this.isDisposed_1 = true;
        break $l$block;
      }finally {
        Trace_getInstance().endSection_5rdvi3_k$(token);
      }
    }
  };
  protoOf(ComposerImpl).forceRecomposeScopes_n5zvgz_k$ = function () {
    var tmp;
    if (!this.forceRecomposeScopes_1) {
      this.forceRecomposeScopes_1 = true;
      this.forciblyRecompose_1 = true;
      tmp = true;
    } else {
      tmp = false;
    }
    return tmp;
  };
  protoOf(ComposerImpl).startNode_htvs8k_k$ = function () {
    start(this, 125, null, Companion_getInstance_2().Node_1, null);
    this.nodeExpected_1 = true;
  };
  protoOf(ComposerImpl).startReusableNode_jjgeyp_k$ = function () {
    start(this, 125, null, Companion_getInstance_2().ReusableNode_1, null);
    this.nodeExpected_1 = true;
  };
  protoOf(ComposerImpl).createNode_ahrd54_k$ = function (factory) {
    validateNodeExpected(this);
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!this.inserting_1) {
      // Inline function 'androidx.compose.runtime.ComposerImpl.createNode.<anonymous>' call
      var message = 'createNode() can only be called when inserting';
      composeRuntimeError(toString(message));
    }
    var insertIndex = this.nodeIndexStack_1.peek_21nx7_k$();
    var groupAnchor = this.writer_1.anchor_wwz2f1_k$(this.writer_1.get_parent_hy4reb_k$());
    this.groupNodeCount_1 = this.groupNodeCount_1 + 1 | 0;
    recordFixup(this, ComposerImpl$createNode$lambda(factory, groupAnchor, insertIndex));
    recordInsertUpFixup(this, ComposerImpl$createNode$lambda_0(groupAnchor, insertIndex));
  };
  protoOf(ComposerImpl).useNode_io5s9l_k$ = function () {
    validateNodeExpected(this);
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!!this.inserting_1) {
      // Inline function 'androidx.compose.runtime.ComposerImpl.useNode.<anonymous>' call
      var message = 'useNode() called while inserting';
      composeRuntimeError(toString(message));
    }
    var node = _get_node__db0vwp(this.reader_1, this);
    recordDown(this, node);
    var tmp;
    if (this.reusing_1) {
      tmp = !(node == null) ? isInterface(node, ComposeNodeLifecycleCallback) : false;
    } else {
      tmp = false;
    }
    if (tmp) {
      recordApplierOperation(this, ComposerImpl$useNode$lambda);
    }
  };
  protoOf(ComposerImpl).endNode_3m0yfn_k$ = function () {
    return end(this, true);
  };
  protoOf(ComposerImpl).startReusableGroup_1qdhl_k$ = function (key, dataKey) {
    if ((this.reader_1.get_groupKey_nfh2hj_k$() === key ? !equals(this.reader_1.get_groupAux_nfh9iq_k$(), dataKey) : false) ? this.reusingGroup_1 < 0 : false) {
      this.reusingGroup_1 = this.reader_1.get_currentGroup_sgvyz3_k$();
      this.reusing_1 = true;
    }
    start(this, key, null, Companion_getInstance_2().Group_1, dataKey);
  };
  protoOf(ComposerImpl).endReusableGroup_jx82af_k$ = function () {
    if (this.reusing_1 ? this.reader_1.get_parent_hy4reb_k$() === this.reusingGroup_1 : false) {
      this.reusingGroup_1 = -1;
      this.reusing_1 = false;
    }
    end(this, false);
  };
  protoOf(ComposerImpl).disableReusing_y2m0tj_k$ = function () {
    this.reusing_1 = false;
  };
  protoOf(ComposerImpl).enableReusing_6jj7oi_k$ = function () {
    this.reusing_1 = this.reusingGroup_1 >= 0;
  };
  protoOf(ComposerImpl).get_currentMarker_wr5e5m_k$ = function () {
    return this.inserting_1 ? -this.writer_1.get_parent_hy4reb_k$() | 0 : this.reader_1.get_parent_hy4reb_k$();
  };
  protoOf(ComposerImpl).endToMarker_cba708_k$ = function (marker) {
    if (marker < 0) {
      var writerLocation = -marker | 0;
      var writer = this.writer_1;
      $l$loop: while (true) {
        var parent = writer.get_parent_hy4reb_k$();
        if (parent <= writerLocation)
          break $l$loop;
        end(this, writer.isNode_keuxl8_k$(parent));
      }
    } else {
      if (this.inserting_1) {
        var writer_0 = this.writer_1;
        while (this.inserting_1) {
          end(this, writer_0.isNode_keuxl8_k$(writer_0.get_parent_hy4reb_k$()));
        }
      }
      var reader = this.reader_1;
      $l$loop_0: while (true) {
        var parent_0 = reader.get_parent_hy4reb_k$();
        if (parent_0 <= marker)
          break $l$loop_0;
        end(this, reader.isNode_keuxl8_k$(parent_0));
      }
    }
  };
  protoOf(ComposerImpl).apply_pk82p8_k$ = function (value, block) {
    var operation = ComposerImpl$apply$lambda(block, value);
    if (this.inserting_1) {
      recordFixup(this, operation);
    } else {
      recordApplierOperation(this, operation);
    }
  };
  protoOf(ComposerImpl).joinKey_gqlbxl_k$ = function (left, right) {
    var tmp0_elvis_lhs = getKey(this.reader_1.get_groupObjectKey_4eay3a_k$(), left, right);
    return tmp0_elvis_lhs == null ? new JoinedKey(left, right) : tmp0_elvis_lhs;
  };
  protoOf(ComposerImpl).nextSlot_nk19qp_k$ = function () {
    var tmp;
    if (this.inserting_1) {
      validateNodeNotExpected(this);
      tmp = Companion_getInstance_1().Empty_1;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.ComposerImpl.nextSlot.<anonymous>' call
      var it = this.reader_1.next_20eer_k$();
      tmp = this.reusing_1 ? Companion_getInstance_1().Empty_1 : it;
    }
    return tmp;
  };
  protoOf(ComposerImpl).changed_ga7h3f_k$ = function (value) {
    var tmp;
    if (!equals(this.nextSlot_nk19qp_k$(), value)) {
      this.updateValue_uuh8rr_k$(value);
      tmp = true;
    } else {
      tmp = false;
    }
    return tmp;
  };
  protoOf(ComposerImpl).changedInstance_s1wkiy_k$ = function (value) {
    var tmp;
    if (!(this.nextSlot_nk19qp_k$() === value)) {
      this.updateValue_uuh8rr_k$(value);
      tmp = true;
    } else {
      tmp = false;
    }
    return tmp;
  };
  protoOf(ComposerImpl).changed_ldy5dl_k$ = function (value) {
    var next = this.nextSlot_nk19qp_k$();
    if (next instanceof Char) {
      var nextPrimitive = next.value_1;
      if (value === nextPrimitive)
        return false;
    }
    this.updateValue_uuh8rr_k$(new Char(value));
    return true;
  };
  protoOf(ComposerImpl).changed_peqns4_k$ = function (value) {
    var next = this.nextSlot_nk19qp_k$();
    if (!(next == null) ? typeof next === 'number' : false) {
      var nextPrimitive = next;
      if (value === nextPrimitive)
        return false;
    }
    this.updateValue_uuh8rr_k$(value);
    return true;
  };
  protoOf(ComposerImpl).changed_bs3wl8_k$ = function (value) {
    var next = this.nextSlot_nk19qp_k$();
    if (!(next == null) ? typeof next === 'number' : false) {
      var nextPrimitive = next;
      if (value === nextPrimitive)
        return false;
    }
    this.updateValue_uuh8rr_k$(value);
    return true;
  };
  protoOf(ComposerImpl).changed_jpyyrz_k$ = function (value) {
    var next = this.nextSlot_nk19qp_k$();
    if (!(next == null) ? typeof next === 'boolean' : false) {
      var nextPrimitive = next;
      if (value === nextPrimitive)
        return false;
    }
    this.updateValue_uuh8rr_k$(value);
    return true;
  };
  protoOf(ComposerImpl).changed_i8bvic_k$ = function (value) {
    var next = this.nextSlot_nk19qp_k$();
    if (!(next == null) ? typeof next === 'number' : false) {
      var nextPrimitive = next;
      if (value === nextPrimitive)
        return false;
    }
    this.updateValue_uuh8rr_k$(value);
    return true;
  };
  protoOf(ComposerImpl).changed_j54hty_k$ = function (value) {
    var next = this.nextSlot_nk19qp_k$();
    if (next instanceof Long) {
      var nextPrimitive = next;
      if (value.equals(nextPrimitive))
        return false;
    }
    this.updateValue_uuh8rr_k$(value);
    return true;
  };
  protoOf(ComposerImpl).changed_qyxff6_k$ = function (value) {
    var next = this.nextSlot_nk19qp_k$();
    if (!(next == null) ? typeof next === 'number' : false) {
      var nextPrimitive = next;
      if (value === nextPrimitive)
        return false;
    }
    this.updateValue_uuh8rr_k$(value);
    return true;
  };
  protoOf(ComposerImpl).changed_kpusro_k$ = function (value) {
    var next = this.nextSlot_nk19qp_k$();
    if (!(next == null) ? typeof next === 'number' : false) {
      var nextPrimitive = next;
      if (value === nextPrimitive)
        return false;
    }
    this.updateValue_uuh8rr_k$(value);
    return true;
  };
  protoOf(ComposerImpl).cache_s8z86b_k$ = function (invalid, block) {
    var result = this.nextSlot_nk19qp_k$();
    if (result === Companion_getInstance_1().Empty_1 ? true : invalid) {
      var value = block();
      this.updateValue_uuh8rr_k$(value);
      result = value;
    }
    return (result == null ? true : !(result == null)) ? result : THROW_CCE();
  };
  protoOf(ComposerImpl).updateValue_uuh8rr_k$ = function (value) {
    if (this.inserting_1) {
      this.writer_1.update_dpycsq_k$(value);
      if (!(value == null) ? isInterface(value, RememberObserver) : false) {
        record(this, ComposerImpl$updateValue$lambda(value));
        this.abandonSet_1.add_utx5q5_k$(value);
      }
    } else {
      var groupSlotIndex = this.reader_1.get_groupSlotIndex_v9fbni_k$() - 1 | 0;
      if (!(value == null) ? isInterface(value, RememberObserver) : false) {
        this.abandonSet_1.add_utx5q5_k$(value);
      }
      recordSlotTableOperation(this, true, ComposerImpl$updateValue$lambda_0(value, groupSlotIndex));
    }
  };
  protoOf(ComposerImpl).updateCachedValue_bl2r55_k$ = function (value) {
    this.updateValue_uuh8rr_k$(value);
  };
  protoOf(ComposerImpl).get_compositionData_dva2k5_k$ = function () {
    return this.slotTable_1;
  };
  protoOf(ComposerImpl).recordSideEffect_pzrgf_k$ = function (effect) {
    record(this, ComposerImpl$recordSideEffect$lambda(effect));
  };
  protoOf(ComposerImpl).get_currentCompositionLocalMap_fmcf79_k$ = function () {
    return currentCompositionLocalScope(this);
  };
  protoOf(ComposerImpl).startProviders_3uyo2a_k$ = function (values) {
    var parentScope = currentCompositionLocalScope(this);
    startGroup_0(this, 201, get_provider());
    startGroup_0(this, 203, get_providerValues());
    var currentProviders = invokeComposableForResult$composable(this, ComposerImpl$startProviders$lambda(values, parentScope));
    endGroup(this);
    var providers;
    var invalid;
    if (this.inserting_1) {
      providers = updateProviderMapGroup(this, parentScope, currentProviders);
      invalid = false;
      this.writerHasAProvider_1 = true;
    } else {
      var tmp = this.reader_1.groupGet_9d91k1_k$(0);
      var oldScope = (!(tmp == null) ? isInterface(tmp, PersistentCompositionLocalMap) : false) ? tmp : THROW_CCE();
      var tmp_0 = this.reader_1.groupGet_9d91k1_k$(1);
      var oldValues = (!(tmp_0 == null) ? isInterface(tmp_0, PersistentCompositionLocalMap) : false) ? tmp_0 : THROW_CCE();
      if (!this.get_skipping_3owdve_k$() ? true : !equals(oldValues, currentProviders)) {
        providers = updateProviderMapGroup(this, parentScope, currentProviders);
        invalid = !equals(providers, oldScope);
      } else {
        skipGroup(this);
        providers = oldScope;
        invalid = false;
      }
    }
    if (invalid ? !this.inserting_1 : false) {
      this.providerUpdates_1.set_yy77p4_k$(this.reader_1.get_currentGroup_sgvyz3_k$(), providers);
    }
    this.providersInvalidStack_1.push_w5xqdu_k$(asInt(this.providersInvalid_1));
    this.providersInvalid_1 = invalid;
    this.providerCache_1 = providers;
    start(this, 202, get_compositionLocalMap(), Companion_getInstance_2().Group_1, providers);
  };
  protoOf(ComposerImpl).endProviders_fp8qbb_k$ = function () {
    endGroup(this);
    endGroup(this);
    this.providersInvalid_1 = asBool(this.providersInvalidStack_1.pop_2dsh_k$());
    this.providerCache_1 = null;
  };
  protoOf(ComposerImpl).consume_ebzcrh_k$ = function (key) {
    return read(currentCompositionLocalScope(this), key);
  };
  protoOf(ComposerImpl).buildContext_55mlr3_k$ = function () {
    startGroup_0(this, 206, get_reference());
    if (this.inserting_1) {
      this.writer_1.markGroup$default_b272ne_k$();
    }
    var tmp = this.nextSlot_nk19qp_k$();
    var holder = tmp instanceof CompositionContextHolder ? tmp : null;
    if (holder == null) {
      holder = new CompositionContextHolder(new CompositionContextImpl(this, this.compoundKeyHash_1, this.forceRecomposeScopes_1));
      this.updateValue_uuh8rr_k$(holder);
    }
    holder.ref_1.updateCompositionLocalScope_w6bi9a_k$(currentCompositionLocalScope(this));
    endGroup(this);
    return holder.ref_1;
  };
  protoOf(ComposerImpl).get_changeCount_dwazvu_k$ = function () {
    return this.changes_1.get_size_woubt6_k$();
  };
  protoOf(ComposerImpl).get_currentRecomposeScope_c5ni63_k$ = function () {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.ComposerImpl.<get-currentRecomposeScope>.<anonymous>' call
    var it = this.invalidateStack_1;
    return (this.childrenComposing_1 === 0 ? it.isNotEmpty_cjxbwk_k$() : false) ? it.peek_21nx7_k$() : null;
  };
  protoOf(ComposerImpl).tryImminentInvalidation_sfbwjl_k$ = function (scope, instance) {
    var tmp0_elvis_lhs = scope.get_anchor_b1c8n2_k$();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var anchor = tmp;
    var slotTable = this.reader_1.get_table_iyxllx_k$();
    var location = anchor.toIndexFor_xhkkx2_k$(slotTable);
    if (this.isComposing_1 ? location >= this.reader_1.get_currentGroup_sgvyz3_k$() : false) {
      insertIfMissing(this.invalidations_1, location, scope, instance);
      return true;
    }
    return false;
  };
  protoOf(ComposerImpl).parentKey_y8lw0l_k$ = function () {
    var tmp;
    if (this.inserting_1) {
      tmp = this.writer_1.groupKey_pe96ns_k$(this.writer_1.get_parent_hy4reb_k$());
    } else {
      tmp = this.reader_1.groupKey_pe96ns_k$(this.reader_1.get_parent_hy4reb_k$());
    }
    return tmp;
  };
  protoOf(ComposerImpl).skipCurrentGroup_1h4u23_k$ = function () {
    if (this.invalidations_1.isEmpty_y1axqb_k$()) {
      skipGroup(this);
    } else {
      var reader = this.reader_1;
      var key = reader.get_groupKey_nfh2hj_k$();
      var dataKey = reader.get_groupObjectKey_4eay3a_k$();
      var aux = reader.get_groupAux_nfh9iq_k$();
      updateCompoundKeyWhenWeEnterGroup(this, key, dataKey, aux);
      startReaderGroup(this, reader.get_isNode_ew2wyd_k$(), null);
      recomposeToGroupEnd(this);
      reader.endGroup_rw7puc_k$();
      updateCompoundKeyWhenWeExitGroup(this, key, dataKey, aux);
    }
  };
  protoOf(ComposerImpl).skipToGroupEnd_lh3zi2_k$ = function () {
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!(this.groupNodeCount_1 === 0)) {
      // Inline function 'androidx.compose.runtime.ComposerImpl.skipToGroupEnd.<anonymous>' call
      var message = 'No nodes can be emitted before calling skipAndEndGroup';
      composeRuntimeError(toString(message));
    }
    var tmp0_safe_receiver = this.get_currentRecomposeScope_c5ni63_k$();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.scopeSkipped_cff2j8_k$();
    }
    if (this.invalidations_1.isEmpty_y1axqb_k$()) {
      skipReaderToGroupEnd(this);
    } else {
      recomposeToGroupEnd(this);
    }
  };
  protoOf(ComposerImpl).deactivateToEndGroup_a5wv32_k$ = function (changed) {
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!(this.groupNodeCount_1 === 0)) {
      // Inline function 'androidx.compose.runtime.ComposerImpl.deactivateToEndGroup.<anonymous>' call
      var message = 'No nodes can be emitted before calling dactivateToEndGroup';
      composeRuntimeError(toString(message));
    }
    if (!this.inserting_1) {
      if (!changed) {
        skipReaderToGroupEnd(this);
        return Unit_getInstance();
      }
      var start = this.reader_1.get_currentGroup_sgvyz3_k$();
      var end = this.reader_1.get_currentEnd_wuhyy3_k$();
      var inductionVariable = start;
      if (inductionVariable < end)
        do {
          var group = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (this.reader_1.isNode_keuxl8_k$(group)) {
            var node = this.reader_1.node_dyvdau_k$(group);
            if (!(node == null) ? isInterface(node, ComposeNodeLifecycleCallback) : false) {
              record(this, ComposerImpl$deactivateToEndGroup$lambda(node));
            }
          }
          var tmp = this.reader_1;
          tmp.forEachData_37qzd6_k$(group, ComposerImpl$deactivateToEndGroup$lambda_0(this, group));
        }
         while (inductionVariable < end);
      removeRange(this.invalidations_1, start, end);
      this.reader_1.reposition_26fquk_k$(start);
      this.reader_1.skipToGroupEnd_lh3zi2_k$();
    }
  };
  protoOf(ComposerImpl).startRestartGroup_lebv1i_k$ = function (key) {
    start(this, key, null, Companion_getInstance_2().Group_1, null);
    addRecomposeScope(this);
    return this;
  };
  protoOf(ComposerImpl).endRestartGroup_yxpjv9_k$ = function () {
    var scope = this.invalidateStack_1.isNotEmpty_cjxbwk_k$() ? this.invalidateStack_1.pop_2dsh_k$() : null;
    if (scope != null) {
      scope.set_requiresRecompose_rcdn27_k$(false);
    }
    var tmp2_safe_receiver = scope == null ? null : scope.end_1skgdf_k$(this.compositionToken_1);
    if (tmp2_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      record(this, ComposerImpl$endRestartGroup$lambda(tmp2_safe_receiver, this));
    }
    var tmp;
    if ((!(scope == null) ? !scope.get_skipped_y90x4p_k$() : false) ? scope.get_used_wovsp2_k$() ? true : this.forceRecomposeScopes_1 : false) {
      if (scope.get_anchor_b1c8n2_k$() == null) {
        var tmp_0;
        if (this.inserting_1) {
          tmp_0 = this.writer_1.anchor_wwz2f1_k$(this.writer_1.get_parent_hy4reb_k$());
        } else {
          tmp_0 = this.reader_1.anchor_wwz2f1_k$(this.reader_1.get_parent_hy4reb_k$());
        }
        scope.set_anchor_cz29di_k$(tmp_0);
      }
      scope.set_defaultsInvalid_xwkxv1_k$(false);
      tmp = scope;
    } else {
      tmp = null;
    }
    var result = tmp;
    end(this, false);
    return result;
  };
  protoOf(ComposerImpl).insertMovableContent_pximxa_k$ = function (value, parameter) {
    invokeMovableContentLambda(this, value instanceof MovableContent ? value : THROW_CCE(), currentCompositionLocalScope(this), parameter, false);
  };
  protoOf(ComposerImpl).insertMovableContentReferences_aqsjqf_k$ = function (references) {
    var completed = false;
    try {
      insertMovableContentGuarded(this, references);
      completed = true;
    }finally {
      if (completed) {
        cleanUpCompose(this);
      } else {
        abortRoot(this);
      }
    }
  };
  protoOf(ComposerImpl).sourceInformation_x808w7_k$ = function (sourceInformation) {
    if (this.inserting_1 ? this.sourceInformationEnabled_1 : false) {
      this.writer_1.insertAux_urnksc_k$(sourceInformation);
    }
  };
  protoOf(ComposerImpl).sourceInformationMarkerStart_cs2ebb_k$ = function (key, sourceInformation) {
    if (this.sourceInformationEnabled_1) {
      start(this, key, null, Companion_getInstance_2().Group_1, sourceInformation);
    }
  };
  protoOf(ComposerImpl).sourceInformationMarkerEnd_ay99y8_k$ = function () {
    if (this.sourceInformationEnabled_1) {
      end(this, false);
    }
  };
  protoOf(ComposerImpl).disableSourceInformation_lgo1mh_k$ = function () {
    this.sourceInformationEnabled_1 = false;
  };
  protoOf(ComposerImpl).composeContent_cm5zpk_k$ = function (invalidationsRequested, content) {
    illegalDecoyCallException('composeContent');
  };
  protoOf(ComposerImpl).prepareCompose_lcmlpp_k$ = function (block) {
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!!this.isComposing_1) {
      // Inline function 'androidx.compose.runtime.ComposerImpl.prepareCompose.<anonymous>' call
      var message = 'Preparing a composition while composing is not supported';
      composeRuntimeError(toString(message));
    }
    this.isComposing_1 = true;
    try {
      block();
    }finally {
      this.isComposing_1 = false;
    }
  };
  protoOf(ComposerImpl).recompose_1lke6w_k$ = function (invalidationsRequested) {
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!this.changes_1.isEmpty_y1axqb_k$()) {
      // Inline function 'androidx.compose.runtime.ComposerImpl.recompose.<anonymous>' call
      var message = 'Expected applyChanges() to have been called';
      composeRuntimeError(toString(message));
    }
    var tmp;
    var tmp_0;
    if (invalidationsRequested.isNotEmpty_cjxbwk_k$()) {
      tmp_0 = true;
    } else {
      // Inline function 'kotlin.collections.isNotEmpty' call
      tmp_0 = !this.invalidations_1.isEmpty_y1axqb_k$();
    }
    if (tmp_0) {
      tmp = true;
    } else {
      tmp = this.forciblyRecompose_1;
    }
    if (tmp) {
      doCompose$composable(this, invalidationsRequested, null);
      // Inline function 'kotlin.collections.isNotEmpty' call
      return !this.changes_1.isEmpty_y1axqb_k$();
    }
    return false;
  };
  protoOf(ComposerImpl).get_hasInvalidations_z5m4o4_k$ = function () {
    // Inline function 'kotlin.collections.isNotEmpty' call
    return !this.invalidations_1.isEmpty_y1axqb_k$();
  };
  protoOf(ComposerImpl).verifyConsistent_iu76e3_k$ = function () {
    this.insertTable_1.verifyWellFormed_n3o9cq_k$();
  };
  protoOf(ComposerImpl).get_recomposeScope_4f1ace_k$ = function () {
    return this.get_currentRecomposeScope_c5ni63_k$();
  };
  protoOf(ComposerImpl).get_recomposeScopeIdentity_ivrp8k_k$ = function () {
    var tmp0_safe_receiver = this.get_currentRecomposeScope_c5ni63_k$();
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.get_anchor_b1c8n2_k$();
  };
  protoOf(ComposerImpl).rememberedValue_4dg93v_k$ = function () {
    return this.nextSlot_nk19qp_k$();
  };
  protoOf(ComposerImpl).updateRememberedValue_l1wh71_k$ = function (value) {
    return this.updateValue_uuh8rr_k$(value);
  };
  protoOf(ComposerImpl).recordUsed_vtkf9n_k$ = function (scope) {
    var tmp0_safe_receiver = scope instanceof RecomposeScopeImpl ? scope : null;
    if (tmp0_safe_receiver != null) {
      tmp0_safe_receiver.set_used_1kdhet_k$(true);
    }
  };
  protoOf(ComposerImpl).composeContent$composable_50l8f5_k$ = function (invalidationsRequested, content) {
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!this.changes_1.isEmpty_y1axqb_k$()) {
      // Inline function 'androidx.compose.runtime.ComposerImpl.composeContent$composable.<anonymous>' call
      var message = 'Expected applyChanges() to have been called';
      composeRuntimeError(toString(message));
    }
    doCompose$composable(this, invalidationsRequested, content);
  };
  function get_$stableprop_4() {
    return 8;
  }
  function MovableContentState(slotTable) {
    this.slotTable_1 = slotTable;
    this.$stable_1 = 8;
  }
  protoOf(MovableContentState).get_slotTable_jp6uvb_k$ = function () {
    return this.slotTable_1;
  };
  function _get_usedKeys__n6i9i2($this) {
    return $this.usedKeys_1;
  }
  function _get_groupInfos__ngxvcr($this) {
    return $this.groupInfos_1;
  }
  function Pending$keyMap$delegate$lambda(this$0) {
    return function () {
      // Inline function 'kotlin.also' call
      var this_0 = multiMap();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.Pending.keyMap$delegate.<anonymous>.<anonymous>' call
      var inductionVariable = 0;
      var last = this$0.keyInfos_1.get_size_woubt6_k$();
      if (inductionVariable < last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var keyInfo = this$0.keyInfos_1.get_c1px32_k$(index);
          put(this_0, get_joinedKey(keyInfo), keyInfo);
        }
         while (inductionVariable < last);
      return this_0;
    };
  }
  function Pending(keyInfos, startIndex) {
    this.keyInfos_1 = keyInfos;
    this.startIndex_1 = startIndex;
    this.groupIndex_1 = 0;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(this.startIndex_1 >= 0)) {
      // Inline function 'androidx.compose.runtime.Pending.<anonymous>' call
      var message = 'Invalid start index';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    var tmp = this;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp.usedKeys_1 = ArrayList_init_$Create$();
    var tmp_0 = this;
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.Pending.groupInfos.<anonymous>' call
    var runningNodeIndex = 0;
    // Inline function 'kotlin.collections.hashMapOf' call
    var result = HashMap_init_$Create$();
    var inductionVariable = 0;
    var last = this.keyInfos_1.get_size_woubt6_k$();
    if (inductionVariable < last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var keyInfo = this.keyInfos_1.get_c1px32_k$(index);
        // Inline function 'kotlin.collections.set' call
        var key = keyInfo.get_location_d3s02_k$();
        var value = new GroupInfo(index, runningNodeIndex, keyInfo.get_nodes_ivvt6w_k$());
        result.put_4fpzoq_k$(key, value);
        runningNodeIndex = runningNodeIndex + keyInfo.get_nodes_ivvt6w_k$() | 0;
      }
       while (inductionVariable < last);
    tmp_0.groupInfos_1 = result;
    var tmp_1 = this;
    tmp_1.keyMap$delegate_1 = lazy(Pending$keyMap$delegate$lambda(this));
  }
  protoOf(Pending).get_keyInfos_nus91t_k$ = function () {
    return this.keyInfos_1;
  };
  protoOf(Pending).get_startIndex_oi1lp5_k$ = function () {
    return this.startIndex_1;
  };
  protoOf(Pending).set_groupIndex_fx0irs_k$ = function (_set____db54di) {
    this.groupIndex_1 = _set____db54di;
  };
  protoOf(Pending).get_groupIndex_p3sws_k$ = function () {
    return this.groupIndex_1;
  };
  protoOf(Pending).get_keyMap_fn7sli_k$ = function () {
    // Inline function 'kotlin.getValue' call
    var this_0 = this.keyMap$delegate_1;
    keyMap$factory();
    return this_0.get_value_j01efc_k$();
  };
  protoOf(Pending).getNext_qqn9gw_k$ = function (key, dataKey) {
    var joinedKey = !(dataKey == null) ? new JoinedKey(key, dataKey) : key;
    return pop(this.get_keyMap_fn7sli_k$(), joinedKey);
  };
  protoOf(Pending).recordUsed_r3m2ap_k$ = function (keyInfo) {
    return this.usedKeys_1.add_utx5q5_k$(keyInfo);
  };
  protoOf(Pending).get_used_wovsp2_k$ = function () {
    return this.usedKeys_1;
  };
  protoOf(Pending).registerMoveSlot_n6zoe_k$ = function (from, to) {
    if (from > to) {
      // Inline function 'kotlin.collections.forEach' call
      var tmp0_iterator = this.groupInfos_1.get_values_ksazhn_k$().iterator_jk1svi_k$();
      while (tmp0_iterator.hasNext_bitz1p_k$()) {
        var element = tmp0_iterator.next_20eer_k$();
        // Inline function 'androidx.compose.runtime.Pending.registerMoveSlot.<anonymous>' call
        var position = element.slotIndex_1;
        if (position === from)
          element.slotIndex_1 = to;
        else if (to <= position ? position < from : false)
          element.slotIndex_1 = position + 1 | 0;
      }
    } else if (to > from) {
      // Inline function 'kotlin.collections.forEach' call
      var tmp0_iterator_0 = this.groupInfos_1.get_values_ksazhn_k$().iterator_jk1svi_k$();
      while (tmp0_iterator_0.hasNext_bitz1p_k$()) {
        var element_0 = tmp0_iterator_0.next_20eer_k$();
        // Inline function 'androidx.compose.runtime.Pending.registerMoveSlot.<anonymous>' call
        var position_0 = element_0.slotIndex_1;
        if (position_0 === from)
          element_0.slotIndex_1 = to;
        else if ((from + 1 | 0) <= position_0 ? position_0 < to : false)
          element_0.slotIndex_1 = position_0 - 1 | 0;
      }
    }
  };
  protoOf(Pending).registerMoveNode_cxpn9u_k$ = function (from, to, count) {
    if (from > to) {
      // Inline function 'kotlin.collections.forEach' call
      var tmp0_iterator = this.groupInfos_1.get_values_ksazhn_k$().iterator_jk1svi_k$();
      while (tmp0_iterator.hasNext_bitz1p_k$()) {
        var element = tmp0_iterator.next_20eer_k$();
        // Inline function 'androidx.compose.runtime.Pending.registerMoveNode.<anonymous>' call
        var position = element.nodeIndex_1;
        if (from <= position ? position < (from + count | 0) : false)
          element.nodeIndex_1 = to + (position - from | 0) | 0;
        else if (to <= position ? position < from : false)
          element.nodeIndex_1 = position + count | 0;
      }
    } else if (to > from) {
      // Inline function 'kotlin.collections.forEach' call
      var tmp0_iterator_0 = this.groupInfos_1.get_values_ksazhn_k$().iterator_jk1svi_k$();
      while (tmp0_iterator_0.hasNext_bitz1p_k$()) {
        var element_0 = tmp0_iterator_0.next_20eer_k$();
        // Inline function 'androidx.compose.runtime.Pending.registerMoveNode.<anonymous>' call
        var position_0 = element_0.nodeIndex_1;
        if (from <= position_0 ? position_0 < (from + count | 0) : false)
          element_0.nodeIndex_1 = to + (position_0 - from | 0) | 0;
        else if ((from + 1 | 0) <= position_0 ? position_0 < to : false)
          element_0.nodeIndex_1 = position_0 - count | 0;
      }
    }
  };
  protoOf(Pending).registerInsert_dzq4jf_k$ = function (keyInfo, insertIndex) {
    // Inline function 'kotlin.collections.set' call
    var this_0 = this.groupInfos_1;
    var key = keyInfo.get_location_d3s02_k$();
    var value = new GroupInfo(-1, insertIndex, 0);
    this_0.put_4fpzoq_k$(key, value);
  };
  protoOf(Pending).updateNodeCount_c63i58_k$ = function (group, newCount) {
    var groupInfo = this.groupInfos_1.get_wei43m_k$(group);
    if (!(groupInfo == null)) {
      var index = groupInfo.nodeIndex_1;
      var difference = newCount - groupInfo.nodeCount_1 | 0;
      groupInfo.nodeCount_1 = newCount;
      if (!(difference === 0)) {
        // Inline function 'kotlin.collections.forEach' call
        var tmp0_iterator = this.groupInfos_1.get_values_ksazhn_k$().iterator_jk1svi_k$();
        while (tmp0_iterator.hasNext_bitz1p_k$()) {
          var element = tmp0_iterator.next_20eer_k$();
          // Inline function 'androidx.compose.runtime.Pending.updateNodeCount.<anonymous>' call
          if (element.nodeIndex_1 >= index ? !equals(element, groupInfo) : false) {
            var newIndex = element.nodeIndex_1 + difference | 0;
            if (newIndex >= 0)
              element.nodeIndex_1 = newIndex;
          }
        }
      }
      return true;
    }
    return false;
  };
  protoOf(Pending).slotPositionOf_65d1gv_k$ = function (keyInfo) {
    var tmp0_safe_receiver = this.groupInfos_1.get_wei43m_k$(keyInfo.get_location_d3s02_k$());
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.slotIndex_1;
    return tmp1_elvis_lhs == null ? -1 : tmp1_elvis_lhs;
  };
  protoOf(Pending).nodePositionOf_ld11gz_k$ = function (keyInfo) {
    var tmp0_safe_receiver = this.groupInfos_1.get_wei43m_k$(keyInfo.get_location_d3s02_k$());
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.nodeIndex_1;
    return tmp1_elvis_lhs == null ? -1 : tmp1_elvis_lhs;
  };
  protoOf(Pending).updatedNodeCountOf_fsn86e_k$ = function (keyInfo) {
    var tmp0_safe_receiver = this.groupInfos_1.get_wei43m_k$(keyInfo.get_location_d3s02_k$());
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.nodeCount_1;
    return tmp1_elvis_lhs == null ? keyInfo.get_nodes_ivvt6w_k$() : tmp1_elvis_lhs;
  };
  function Invalidation(scope, location, instances) {
    this.scope_1 = scope;
    this.location_1 = location;
    this.instances_1 = instances;
  }
  protoOf(Invalidation).get_scope_iyfcq3_k$ = function () {
    return this.scope_1;
  };
  protoOf(Invalidation).get_location_d3s02_k$ = function () {
    return this.location_1;
  };
  protoOf(Invalidation).set_instances_l9cjfm_k$ = function (_set____db54di) {
    this.instances_1 = _set____db54di;
  };
  protoOf(Invalidation).get_instances_8zuh1x_k$ = function () {
    return this.instances_1;
  };
  protoOf(Invalidation).isInvalid_mtmbn1_k$ = function () {
    return this.scope_1.isInvalidFor_r5kyc7_k$(this.instances_1);
  };
  function _GroupKind___init__impl__iwqg06(value) {
    return value;
  }
  function _GroupKind___get_value__impl__cf5pqe($this) {
    return $this;
  }
  function _GroupKind___get_isNode__impl__do62br($this) {
    return !(_GroupKind___get_value__impl__cf5pqe($this) === _GroupKind___get_value__impl__cf5pqe(Companion_getInstance_2().Group_1));
  }
  function _GroupKind___get_isReusable__impl__2cgzb6($this) {
    return !(_GroupKind___get_value__impl__cf5pqe($this) === _GroupKind___get_value__impl__cf5pqe(Companion_getInstance_2().Node_1));
  }
  function Companion_0() {
    Companion_instance_0 = this;
    this.Group_1 = _GroupKind___init__impl__iwqg06(0);
    this.Node_1 = _GroupKind___init__impl__iwqg06(1);
    this.ReusableNode_1 = _GroupKind___init__impl__iwqg06(2);
  }
  protoOf(Companion_0).get_Group_el63wl_k$ = function () {
    return this.Group_1;
  };
  protoOf(Companion_0).get_Node_pgpy1c_k$ = function () {
    return this.Node_1;
  };
  protoOf(Companion_0).get_ReusableNode_881shx_k$ = function () {
    return this.ReusableNode_1;
  };
  var Companion_instance_0;
  function Companion_getInstance_2() {
    if (Companion_instance_0 == null)
      new Companion_0();
    return Companion_instance_0;
  }
  function GroupKind__toString_impl_ru3jzm($this) {
    return 'GroupKind(value=' + $this + ')';
  }
  function GroupKind__hashCode_impl_lful6n($this) {
    return $this;
  }
  function GroupKind__equals_impl_z2mrq3($this, other) {
    if (!(other instanceof GroupKind))
      return false;
    if (!($this === (other instanceof GroupKind ? other.value_1 : THROW_CCE())))
      return false;
    return true;
  }
  function GroupKind(value) {
    Companion_getInstance_2();
    this.value_1 = value;
  }
  protoOf(GroupKind).toString = function () {
    return GroupKind__toString_impl_ru3jzm(this.value_1);
  };
  protoOf(GroupKind).hashCode = function () {
    return GroupKind__hashCode_impl_lful6n(this.value_1);
  };
  protoOf(GroupKind).equals = function (other) {
    return GroupKind__equals_impl_z2mrq3(this.value_1, other);
  };
  function get_defaultsKey() {
    return defaultsKey;
  }
  var defaultsKey;
  function get_rootKey() {
    return rootKey;
  }
  var rootKey;
  function asInt(_this__u8e3s4) {
    _init_properties_Composer_kt__bmp4g0();
    return _this__u8e3s4 ? 1 : 0;
  }
  function get_nodeKey() {
    return nodeKey;
  }
  var nodeKey;
  function getKey(value, left, right) {
    _init_properties_Composer_kt__bmp4g0();
    var tmp0_safe_receiver = value instanceof JoinedKey ? value : null;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.getKey.<anonymous>' call
      var tmp_0;
      if (equals(tmp0_safe_receiver.get_left_woprgw_k$(), left) ? equals(tmp0_safe_receiver.get_right_ixz7xv_k$(), right) : false) {
        tmp_0 = value;
      } else {
        var tmp0_elvis_lhs = getKey(tmp0_safe_receiver.get_left_woprgw_k$(), left, right);
        tmp_0 = tmp0_elvis_lhs == null ? getKey(tmp0_safe_receiver.get_right_ixz7xv_k$(), left, right) : tmp0_elvis_lhs;
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function get_compositionLocalMapKey() {
    return compositionLocalMapKey;
  }
  var compositionLocalMapKey;
  function get_providerMapsKey() {
    return providerMapsKey;
  }
  var providerMapsKey;
  function get_providerKey() {
    return providerKey;
  }
  var providerKey;
  function get_providerValuesKey() {
    return providerValuesKey;
  }
  var providerValuesKey;
  function asBool(_this__u8e3s4) {
    _init_properties_Composer_kt__bmp4g0();
    return !(_this__u8e3s4 === 0);
  }
  function get_referenceKey() {
    return referenceKey;
  }
  var referenceKey;
  function removeRange(_this__u8e3s4, start, end) {
    _init_properties_Composer_kt__bmp4g0();
    var index = findInsertLocation(_this__u8e3s4, start);
    $l$loop: while (index < _this__u8e3s4.get_size_woubt6_k$()) {
      var validation = _this__u8e3s4.get_c1px32_k$(index);
      if (validation.location_1 < end) {
        _this__u8e3s4.removeAt_6niowx_k$(index);
      } else
        break $l$loop;
    }
  }
  function firstInRange(_this__u8e3s4, start, end) {
    _init_properties_Composer_kt__bmp4g0();
    var index = findInsertLocation(_this__u8e3s4, start);
    if (index < _this__u8e3s4.get_size_woubt6_k$()) {
      var firstInvalidation = _this__u8e3s4.get_c1px32_k$(index);
      if (firstInvalidation.location_1 < end)
        return firstInvalidation;
    }
    return null;
  }
  function removeLocation(_this__u8e3s4, location) {
    _init_properties_Composer_kt__bmp4g0();
    var index = findLocation(_this__u8e3s4, location);
    return index >= 0 ? _this__u8e3s4.removeAt_6niowx_k$(index) : null;
  }
  function nearestCommonRootOf(_this__u8e3s4, a, b, common) {
    _init_properties_Composer_kt__bmp4g0();
    if (a === b)
      return a;
    if (a === common ? true : b === common)
      return common;
    if (_this__u8e3s4.parent_omvrla_k$(a) === b)
      return b;
    if (_this__u8e3s4.parent_omvrla_k$(b) === a)
      return a;
    if (_this__u8e3s4.parent_omvrla_k$(a) === _this__u8e3s4.parent_omvrla_k$(b))
      return _this__u8e3s4.parent_omvrla_k$(a);
    var currentA = a;
    var currentB = b;
    var aDistance = distanceFrom(_this__u8e3s4, a, common);
    var bDistance = distanceFrom(_this__u8e3s4, b, common);
    // Inline function 'kotlin.repeat' call
    var times = aDistance - bDistance | 0;
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    if (inductionVariable < times)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.compose.runtime.nearestCommonRootOf.<anonymous>' call
        currentA = _this__u8e3s4.parent_omvrla_k$(currentA);
      }
       while (inductionVariable < times);
    // Inline function 'kotlin.repeat' call
    var times_0 = bDistance - aDistance | 0;
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable_0 = 0;
    if (inductionVariable_0 < times_0)
      do {
        var index_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        // Inline function 'androidx.compose.runtime.nearestCommonRootOf.<anonymous>' call
        currentB = _this__u8e3s4.parent_omvrla_k$(currentB);
      }
       while (inductionVariable_0 < times_0);
    while (!(currentA === currentB)) {
      currentA = _this__u8e3s4.parent_omvrla_k$(currentA);
      currentB = _this__u8e3s4.parent_omvrla_k$(currentB);
    }
    return currentA;
  }
  function get_reuseKey() {
    return reuseKey;
  }
  var reuseKey;
  function insertIfMissing(_this__u8e3s4, location, scope, instance) {
    _init_properties_Composer_kt__bmp4g0();
    var index = findLocation(_this__u8e3s4, location);
    if (index < 0) {
      var tmp = -(index + 1 | 0) | 0;
      var tmp_0;
      if (instance == null) {
        tmp_0 = null;
      } else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.insertIfMissing.<anonymous>' call
        // Inline function 'kotlin.also' call
        var this_0 = new IdentityArraySet();
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.insertIfMissing.<anonymous>.<anonymous>' call
        this_0.add_jkjo25_k$(instance);
        tmp_0 = this_0;
      }
      _this__u8e3s4.add_dl6gt3_k$(tmp, new Invalidation(scope, location, tmp_0));
    } else {
      if (instance == null) {
        _this__u8e3s4.get_c1px32_k$(index).instances_1 = null;
      } else {
        var tmp1_safe_receiver = _this__u8e3s4.get_c1px32_k$(index).instances_1;
        if (tmp1_safe_receiver == null)
          null;
        else
          tmp1_safe_receiver.add_jkjo25_k$(instance);
      }
    }
  }
  function collectNodesFrom(_this__u8e3s4, anchor) {
    _init_properties_Composer_kt__bmp4g0();
    // Inline function 'kotlin.collections.mutableListOf' call
    var result = ArrayList_init_$Create$();
    // Inline function 'androidx.compose.runtime.SlotTable.read' call
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.SlotTable.read.<anonymous>' call
    var reader = _this__u8e3s4.openReader_51y0fh_k$();
    var tmp;
    try {
      var index = _this__u8e3s4.anchorIndex_79wady_k$(anchor);
      collectNodesFrom$_anonymous_$collectFromGroup_lmwduz(reader, result, index);
      tmp = Unit_getInstance();
    }finally {
      reader.close_yn9xrc_k$();
    }
    return result;
  }
  function filterToRange(_this__u8e3s4, start, end) {
    _init_properties_Composer_kt__bmp4g0();
    // Inline function 'kotlin.collections.mutableListOf' call
    var result = ArrayList_init_$Create$();
    var index = findInsertLocation(_this__u8e3s4, start);
    $l$loop: while (index < _this__u8e3s4.get_size_woubt6_k$()) {
      var invalidation = _this__u8e3s4.get_c1px32_k$(index);
      if (invalidation.location_1 < end) {
        result.add_utx5q5_k$(invalidation);
      } else
        break $l$loop;
      index = index + 1 | 0;
    }
    return result;
  }
  function get_invalidGroupLocation() {
    return invalidGroupLocation;
  }
  var invalidGroupLocation;
  function get_invocationKey() {
    return invocationKey;
  }
  var invocationKey;
  function GroupInfo(slotIndex, nodeIndex, nodeCount) {
    this.slotIndex_1 = slotIndex;
    this.nodeIndex_1 = nodeIndex;
    this.nodeCount_1 = nodeCount;
  }
  protoOf(GroupInfo).set_slotIndex_lirfm9_k$ = function (_set____db54di) {
    this.slotIndex_1 = _set____db54di;
  };
  protoOf(GroupInfo).get_slotIndex_jjdgi3_k$ = function () {
    return this.slotIndex_1;
  };
  protoOf(GroupInfo).set_nodeIndex_4ygv8r_k$ = function (_set____db54di) {
    this.nodeIndex_1 = _set____db54di;
  };
  protoOf(GroupInfo).get_nodeIndex_fvnhaf_k$ = function () {
    return this.nodeIndex_1;
  };
  protoOf(GroupInfo).set_nodeCount_ldd5a0_k$ = function (_set____db54di) {
    this.nodeCount_1 = _set____db54di;
  };
  protoOf(GroupInfo).get_nodeCount_fsdpj8_k$ = function () {
    return this.nodeCount_1;
  };
  function put(_this__u8e3s4, key, value) {
    _init_properties_Composer_kt__bmp4g0();
    // Inline function 'kotlin.collections.getOrPut' call
    var value_0 = _this__u8e3s4.get_wei43m_k$(key);
    var tmp;
    if (value_0 == null) {
      // Inline function 'androidx.compose.runtime.put.<anonymous>' call
      var answer = LinkedHashSet_init_$Create$();
      _this__u8e3s4.put_4fpzoq_k$(key, answer);
      tmp = answer;
    } else {
      tmp = value_0;
    }
    return tmp.add_utx5q5_k$(value);
  }
  function get_joinedKey(_this__u8e3s4) {
    _init_properties_Composer_kt__bmp4g0();
    return !(_this__u8e3s4.get_objectKey_g4ct8p_k$() == null) ? new JoinedKey(_this__u8e3s4.get_key_18j28a_k$(), _this__u8e3s4.get_objectKey_g4ct8p_k$()) : _this__u8e3s4.get_key_18j28a_k$();
  }
  function multiMap() {
    _init_properties_Composer_kt__bmp4g0();
    return HashMap_init_$Create$();
  }
  function pop(_this__u8e3s4, key) {
    _init_properties_Composer_kt__bmp4g0();
    var tmp0_safe_receiver = _this__u8e3s4.get_wei43m_k$(key);
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : firstOrNull(tmp0_safe_receiver);
    var tmp;
    if (tmp1_safe_receiver == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.also' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.pop.<anonymous>' call
      remove(_this__u8e3s4, key, tmp1_safe_receiver);
      tmp = tmp1_safe_receiver;
    }
    return tmp;
  }
  function findInsertLocation(_this__u8e3s4, location) {
    _init_properties_Composer_kt__bmp4g0();
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.findInsertLocation.<anonymous>' call
    var it = findLocation(_this__u8e3s4, location);
    return it < 0 ? -(it + 1 | 0) | 0 : it;
  }
  function findLocation(_this__u8e3s4, location) {
    _init_properties_Composer_kt__bmp4g0();
    var low = 0;
    var high = _this__u8e3s4.get_size_woubt6_k$() - 1 | 0;
    while (low <= high) {
      var mid = (low + high | 0) >>> 1 | 0;
      var midVal = _this__u8e3s4.get_c1px32_k$(mid);
      var cmp = compareTo(midVal.location_1, location);
      if (cmp < 0)
        low = mid + 1 | 0;
      else if (cmp > 0)
        high = mid - 1 | 0;
      else
        return mid;
    }
    return -(low + 1 | 0) | 0;
  }
  function distanceFrom(_this__u8e3s4, index, root) {
    _init_properties_Composer_kt__bmp4g0();
    var count = 0;
    var current = index;
    while (current > 0 ? !(current === root) : false) {
      current = _this__u8e3s4.parent_omvrla_k$(current);
      count = count + 1 | 0;
    }
    return count;
  }
  function remove(_this__u8e3s4, key, value) {
    _init_properties_Composer_kt__bmp4g0();
    var tmp0_safe_receiver = _this__u8e3s4.get_wei43m_k$(key);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      tmp0_safe_receiver.remove_cedx0m_k$(value);
      var tmp_0;
      if (tmp0_safe_receiver.isEmpty_y1axqb_k$()) {
        _this__u8e3s4.remove_gppy8k_k$(key);
        tmp_0 = Unit_getInstance();
      }
      tmp = Unit_getInstance();
    }
    return tmp;
  }
  function cache(_this__u8e3s4, invalid, block) {
    _init_properties_Composer_kt__bmp4g0();
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.cache.<anonymous>' call
    var it = _this__u8e3s4.rememberedValue_4dg93v_k$();
    var tmp;
    if (invalid ? true : it === Companion_getInstance_1().Empty_1) {
      var value = block();
      _this__u8e3s4.updateRememberedValue_l1wh71_k$(value);
      tmp = value;
    } else {
      tmp = it;
    }
    var tmp_0 = tmp;
    return (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
  }
  function _Updater___init__impl__rbfxm8(composer) {
    return composer;
  }
  function _Updater___get_composer__impl__9ty7av($this) {
    return $this;
  }
  function Updater__set_impl_v7kwss($this, value, block) {
    // Inline function 'kotlin.with' call
    // Inline function 'kotlin.contracts.contract' call
    var $this$with = _Updater___get_composer__impl__9ty7av($this);
    var tmp;
    if ($this$with.get_inserting_25mlsw_k$() ? true : !equals($this$with.rememberedValue_4dg93v_k$(), value)) {
      $this$with.updateRememberedValue_l1wh71_k$(value);
      _Updater___get_composer__impl__9ty7av($this).apply_pk82p8_k$(value, block);
      tmp = Unit_getInstance();
    }
    return tmp;
  }
  function Updater__set_impl_v7kwss_0($this, value, block) {
    // Inline function 'kotlin.with' call
    // Inline function 'kotlin.contracts.contract' call
    var $this$with = _Updater___get_composer__impl__9ty7av($this);
    var tmp;
    if ($this$with.get_inserting_25mlsw_k$() ? true : !equals($this$with.rememberedValue_4dg93v_k$(), value)) {
      $this$with.updateRememberedValue_l1wh71_k$(value);
      _Updater___get_composer__impl__9ty7av($this).apply_pk82p8_k$(value, block);
      tmp = Unit_getInstance();
    }
    return tmp;
  }
  function Updater__update_impl_l6nupx($this, value, block) {
    // Inline function 'kotlin.with' call
    // Inline function 'kotlin.contracts.contract' call
    var $this$with = _Updater___get_composer__impl__9ty7av($this);
    var inserting = $this$with.get_inserting_25mlsw_k$();
    var tmp;
    if (inserting ? true : !equals($this$with.rememberedValue_4dg93v_k$(), value)) {
      $this$with.updateRememberedValue_l1wh71_k$(value);
      var tmp_0;
      if (!inserting) {
        $this$with.apply_pk82p8_k$(value, block);
        tmp_0 = Unit_getInstance();
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function Updater__update_impl_l6nupx_0($this, value, block) {
    // Inline function 'kotlin.with' call
    // Inline function 'kotlin.contracts.contract' call
    var $this$with = _Updater___get_composer__impl__9ty7av($this);
    var inserting = $this$with.get_inserting_25mlsw_k$();
    var tmp;
    if (inserting ? true : !equals($this$with.rememberedValue_4dg93v_k$(), value)) {
      $this$with.updateRememberedValue_l1wh71_k$(value);
      var tmp_0;
      if (!inserting) {
        $this$with.apply_pk82p8_k$(value, block);
        tmp_0 = Unit_getInstance();
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function Updater__init_impl_uaeges($this, block) {
    if (_Updater___get_composer__impl__9ty7av($this).get_inserting_25mlsw_k$()) {
      var tmp = _Updater___get_composer__impl__9ty7av($this);
      tmp.apply_pk82p8_k$(Unit_getInstance(), Updater$init$lambda(block));
    }
  }
  function Updater__reconcile_impl_1mfi6g($this, block) {
    var tmp = _Updater___get_composer__impl__9ty7av($this);
    tmp.apply_pk82p8_k$(Unit_getInstance(), Updater$reconcile$lambda(block));
  }
  function Updater__toString_impl_xbgnns($this) {
    return 'Updater(composer=' + $this + ')';
  }
  function Updater__hashCode_impl_fyhhih($this) {
    return hashCode($this);
  }
  function Updater__equals_impl_pu56kb($this, other) {
    if (!(other instanceof Updater))
      return false;
    var tmp0_other_with_cast = other instanceof Updater ? other.composer_1 : THROW_CCE();
    if (!equals($this, tmp0_other_with_cast))
      return false;
    return true;
  }
  function Updater$init$lambda($block) {
    return function ($this$apply, it) {
      $block($this$apply);
      return Unit_getInstance();
    };
  }
  function Updater$reconcile$lambda($block) {
    return function ($this$apply, it) {
      $block($this$apply);
      return Unit_getInstance();
    };
  }
  function Updater(composer) {
    this.composer_1 = composer;
  }
  protoOf(Updater).toString = function () {
    return Updater__toString_impl_xbgnns(this.composer_1);
  };
  protoOf(Updater).hashCode = function () {
    return Updater__hashCode_impl_fyhhih(this.composer_1);
  };
  protoOf(Updater).equals = function (other) {
    return Updater__equals_impl_pu56kb(this.composer_1, other);
  };
  function _SkippableUpdater___init__impl__4ft0t9(composer) {
    return composer;
  }
  function _SkippableUpdater___get_composer__impl__6t7yne($this) {
    return $this;
  }
  function SkippableUpdater__update_impl_yrdzqy($this, block) {
    _SkippableUpdater___get_composer__impl__6t7yne($this).startReplaceableGroup_ip860b_k$(509942095);
    block(new Updater(_Updater___init__impl__rbfxm8(_SkippableUpdater___get_composer__impl__6t7yne($this))));
    _SkippableUpdater___get_composer__impl__6t7yne($this).endReplaceableGroup_ern0ak_k$();
  }
  function SkippableUpdater__toString_impl_9wisn1($this) {
    return 'SkippableUpdater(composer=' + $this + ')';
  }
  function SkippableUpdater__hashCode_impl_vnopfw($this) {
    return hashCode($this);
  }
  function SkippableUpdater__equals_impl_vm8qds($this, other) {
    if (!(other instanceof SkippableUpdater))
      return false;
    var tmp0_other_with_cast = other instanceof SkippableUpdater ? other.composer_1 : THROW_CCE();
    if (!equals($this, tmp0_other_with_cast))
      return false;
    return true;
  }
  function SkippableUpdater(composer) {
    this.composer_1 = composer;
  }
  protoOf(SkippableUpdater).toString = function () {
    return SkippableUpdater__toString_impl_9wisn1(this.composer_1);
  };
  protoOf(SkippableUpdater).hashCode = function () {
    return SkippableUpdater__hashCode_impl_vnopfw(this.composer_1);
  };
  protoOf(SkippableUpdater).equals = function (other) {
    return SkippableUpdater__equals_impl_vm8qds(this.composer_1, other);
  };
  function collectNodesFrom$_anonymous_$collectFromGroup_lmwduz($reader, result, group) {
    if ($reader.isNode_keuxl8_k$(group)) {
      result.add_utx5q5_k$($reader.node_dyvdau_k$(group));
    } else {
      var current = group + 1 | 0;
      var end = group + $reader.groupSize_ehpyh4_k$(group) | 0;
      while (current < end) {
        collectNodesFrom$_anonymous_$collectFromGroup_lmwduz($reader, result, current);
        current = current + $reader.groupSize_ehpyh4_k$(current) | 0;
      }
    }
  }
  function removeCurrentGroupInstance$lambda(_anonymous_parameter_0__qggqh8, slots, rememberManager) {
    _init_properties_Composer_kt__bmp4g0();
    removeCurrentGroup(slots, rememberManager);
    return Unit_getInstance();
  }
  function skipToGroupEndInstance$lambda(_anonymous_parameter_0__qggqh8, slots, _anonymous_parameter_2__qggqfi) {
    _init_properties_Composer_kt__bmp4g0();
    slots.skipToGroupEnd_lh3zi2_k$();
    return Unit_getInstance();
  }
  function endGroupInstance$lambda(_anonymous_parameter_0__qggqh8, slots, _anonymous_parameter_2__qggqfi) {
    _init_properties_Composer_kt__bmp4g0();
    slots.endGroup_s64cis_k$();
    return Unit_getInstance();
  }
  function startRootGroup$lambda(_anonymous_parameter_0__qggqh8, slots, _anonymous_parameter_2__qggqfi) {
    _init_properties_Composer_kt__bmp4g0();
    slots.ensureStarted_2xsx51_k$(0);
    return Unit_getInstance();
  }
  function resetSlotsInstance$lambda(_anonymous_parameter_0__qggqh8, slots, _anonymous_parameter_2__qggqfi) {
    _init_properties_Composer_kt__bmp4g0();
    slots.reset_5u6xz3_k$();
    return Unit_getInstance();
  }
  function InvalidationResult_IGNORED_getInstance() {
    InvalidationResult_initEntries();
    return InvalidationResult_IGNORED_instance;
  }
  function InvalidationResult_SCHEDULED_getInstance() {
    InvalidationResult_initEntries();
    return InvalidationResult_SCHEDULED_instance;
  }
  function InvalidationResult_DEFERRED_getInstance() {
    InvalidationResult_initEntries();
    return InvalidationResult_DEFERRED_instance;
  }
  function InvalidationResult_IMMINENT_getInstance() {
    InvalidationResult_initEntries();
    return InvalidationResult_IMMINENT_instance;
  }
  function compositionLocalScope$factory() {
    return getPropertyCallableRef('compositionLocalScope', 1, KMutableProperty1, function (receiver) {
      return _get_compositionLocalScope__ulge9q(receiver);
    }, function (receiver, value) {
      return _set_compositionLocalScope__ya1b9q(receiver, value);
    });
  }
  function compositionLocalScope$factory_0() {
    return getPropertyCallableRef('compositionLocalScope', 1, KMutableProperty1, function (receiver) {
      return _get_compositionLocalScope__ulge9q(receiver);
    }, function (receiver, value) {
      return _set_compositionLocalScope__ya1b9q(receiver, value);
    });
  }
  function keyMap$factory() {
    return getPropertyCallableRef('keyMap', 1, KProperty1, function (receiver) {
      return receiver.get_keyMap_fn7sli_k$();
    }, null);
  }
  var properties_initialized_Composer_kt_89qzc2;
  function _init_properties_Composer_kt__bmp4g0() {
    if (!properties_initialized_Composer_kt_89qzc2) {
      properties_initialized_Composer_kt_89qzc2 = true;
      compositionTracer = null;
      removeCurrentGroupInstance = removeCurrentGroupInstance$lambda;
      skipToGroupEndInstance = skipToGroupEndInstance$lambda;
      endGroupInstance = endGroupInstance$lambda;
      startRootGroup = startRootGroup$lambda;
      resetSlotsInstance = resetSlotsInstance$lambda;
      invocation = new OpaqueKey('provider');
      provider = new OpaqueKey('provider');
      compositionLocalMap = new OpaqueKey('compositionLocalMap');
      providerValues = new OpaqueKey('providerValues');
      providerMaps = new OpaqueKey('providers');
      reference = new OpaqueKey('reference');
    }
  }
  function get_PendingApplyNoModifications() {
    _init_properties_Composition_kt__t5pjw8();
    return PendingApplyNoModifications;
  }
  var PendingApplyNoModifications;
  function Composition() {
  }
  function _get_abandoning__ip23he($this) {
    return $this.abandoning_1;
  }
  function _get_remembering__h7m0ak($this) {
    return $this.remembering_1;
  }
  function _get_forgetting__l2s040($this) {
    return $this.forgetting_1;
  }
  function _get_sideEffects__rprkca($this) {
    return $this.sideEffects_1;
  }
  function _set_deactivating__obah8a($this, _set____db54di) {
    $this.deactivating_1 = _set____db54di;
  }
  function _get_deactivating__8rjqo6($this) {
    return $this.deactivating_1;
  }
  function _set_releasing__4zizsv($this, _set____db54di) {
    $this.releasing_1 = _set____db54di;
  }
  function _get_releasing__obbglp($this) {
    return $this.releasing_1;
  }
  function _get_parent__oo9xup($this) {
    return $this.parent_1;
  }
  function _get_applier__gd3aca_0($this) {
    return $this.applier_1;
  }
  function _get_pendingModifications__8076tn($this) {
    return $this.pendingModifications_1;
  }
  function _get_lock__d9xa4g_0($this) {
    return $this.lock_1;
  }
  function _get_abandonSet__ipgbk2_0($this) {
    return $this.abandonSet_1;
  }
  function _get_observations__mbmfs4($this) {
    return $this.observations_1;
  }
  function _get_conditionallyInvalidatedScopes__l6o5fu($this) {
    return $this.conditionallyInvalidatedScopes_1;
  }
  function _get_derivedStates__unprda($this) {
    return $this.derivedStates_1;
  }
  function _get_changes__c6ikpe_0($this) {
    return $this.changes_1;
  }
  function _get_lateChanges__thqu4s_0($this) {
    return $this.lateChanges_1;
  }
  function _get_observationsProcessed__qv97rq($this) {
    return $this.observationsProcessed_1;
  }
  function _set_invalidations__k7ur5c($this, _set____db54di) {
    $this.invalidations_1 = _set____db54di;
  }
  function _get_invalidations__zfm9no_0($this) {
    return $this.invalidations_1;
  }
  function _set_invalidationDelegate__al2gr0($this, _set____db54di) {
    $this.invalidationDelegate_1 = _set____db54di;
  }
  function _get_invalidationDelegate__oj54rc($this) {
    return $this.invalidationDelegate_1;
  }
  function _set_invalidationDelegateGroup__toutqh($this, _set____db54di) {
    $this.invalidationDelegateGroup_1 = _set____db54di;
  }
  function _get_invalidationDelegateGroup__rg0as5($this) {
    return $this.invalidationDelegateGroup_1;
  }
  function _get_composer__1cv6i3($this) {
    return $this.composer_1;
  }
  function _get__recomposeContext__iu69y6($this) {
    return $this._recomposeContext_1;
  }
  function _set_disposed__tklm7i($this, _set____db54di) {
    $this.disposed_1 = _set____db54di;
  }
  function _get_disposed__snm4au($this) {
    return $this.disposed_1;
  }
  function _get_areChildrenComposing__c1uwup($this) {
    return $this.composer_1.get_areChildrenComposing_wtz02j_k$();
  }
  function drainPendingModificationsForCompositionLocked($this) {
    var toRecord = $this.pendingModifications_1.getAndSet_6mmyt0_k$(get_PendingApplyNoModifications());
    if (toRecord != null) {
      if (equals(toRecord, get_PendingApplyNoModifications())) {
        composeRuntimeError('pending composition has not been applied');
      } else {
        if (!(toRecord == null) ? isInterface(toRecord, Set) : false) {
          addPendingInvalidationsLocked_0($this, (!(toRecord == null) ? isInterface(toRecord, Set) : false) ? toRecord : THROW_CCE(), true);
        } else {
          if (!(toRecord == null) ? isArray(toRecord) : false) {
            var indexedObject = (!(toRecord == null) ? isArray(toRecord) : false) ? toRecord : THROW_CCE();
            var inductionVariable = 0;
            var last = indexedObject.length;
            while (inductionVariable < last) {
              var changed = indexedObject[inductionVariable];
              inductionVariable = inductionVariable + 1 | 0;
              addPendingInvalidationsLocked_0($this, changed, true);
            }
          } else {
            composeRuntimeError('corrupt pendingModifications drain: ' + $this.pendingModifications_1);
          }
        }
      }
    }
  }
  function drainPendingModificationsLocked($this) {
    var toRecord = $this.pendingModifications_1.getAndSet_6mmyt0_k$(null);
    if (!equals(toRecord, get_PendingApplyNoModifications())) {
      if (!(toRecord == null) ? isInterface(toRecord, Set) : false) {
        addPendingInvalidationsLocked_0($this, (!(toRecord == null) ? isInterface(toRecord, Set) : false) ? toRecord : THROW_CCE(), false);
      } else {
        if (!(toRecord == null) ? isArray(toRecord) : false) {
          var indexedObject = (!(toRecord == null) ? isArray(toRecord) : false) ? toRecord : THROW_CCE();
          var inductionVariable = 0;
          var last = indexedObject.length;
          while (inductionVariable < last) {
            var changed = indexedObject[inductionVariable];
            inductionVariable = inductionVariable + 1 | 0;
            addPendingInvalidationsLocked_0($this, changed, false);
          }
        } else {
          if (toRecord == null) {
            composeRuntimeError('calling recordModificationsOf and applyChanges concurrently is not supported');
          } else {
            composeRuntimeError('corrupt pendingModifications drain: ' + $this.pendingModifications_1);
          }
        }
      }
    }
  }
  function addPendingInvalidationsLocked(_this__u8e3s4, $this, value, forgetConditionalScopes) {
    var set = _this__u8e3s4;
    // Inline function 'androidx.compose.runtime.collection.IdentityScopeMap.forEachScopeOf' call
    var this_0 = $this.observations_1;
    var index = find_3(this_0, value);
    if (index >= 0) {
      // Inline function 'androidx.compose.runtime.collection.IdentityArraySet.fastForEach' call
      var this_1 = scopeSetAt(this_0, index);
      // Inline function 'kotlin.contracts.contract' call
      var values = this_1.get_values_ksazhn_k$();
      var inductionVariable = 0;
      var last = this_1.get_size_woubt6_k$();
      if (inductionVariable < last)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          // Inline function 'androidx.compose.runtime.CompositionImpl.addPendingInvalidationsLocked.<anonymous>' call
          var tmp = values[i];
          var scope = !(tmp == null) ? tmp : THROW_CCE();
          if (!$this.observationsProcessed_1.remove_kuwh0s_k$(value, scope) ? !scope.invalidateForResult_qzazm4_k$(value).equals(InvalidationResult_IGNORED_getInstance()) : false) {
            if (scope.get_isConditional_4jybl9_k$() ? !forgetConditionalScopes : false) {
              $this.conditionallyInvalidatedScopes_1.add_utx5q5_k$(scope);
            } else {
              if (set == null)
                set = HashSet_init_$Create$();
              var tmp0_safe_receiver = set;
              if (tmp0_safe_receiver == null)
                null;
              else
                tmp0_safe_receiver.add_utx5q5_k$(scope);
            }
          }
        }
         while (inductionVariable < last);
    }
    return set;
  }
  function addPendingInvalidationsLocked_0($this, values, forgetConditionalScopes) {
    var invalidated = null;
    // Inline function 'androidx.compose.runtime.collection.fastForEach' call
    if (values instanceof IdentityArraySet) {
      // Inline function 'androidx.compose.runtime.collection.IdentityArraySet.fastForEach' call
      // Inline function 'kotlin.contracts.contract' call
      var values_0 = values.get_values_ksazhn_k$();
      var inductionVariable = 0;
      var last = values.get_size_woubt6_k$();
      if (inductionVariable < last)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          // Inline function 'androidx.compose.runtime.CompositionImpl.addPendingInvalidationsLocked.<anonymous>' call
          var tmp = values_0[i];
          var value = !(tmp == null) ? tmp : THROW_CCE();
          if (value instanceof RecomposeScopeImpl) {
            value.invalidateForResult_qzazm4_k$(null);
          } else {
            invalidated = addPendingInvalidationsLocked(invalidated, $this, value, forgetConditionalScopes);
            // Inline function 'androidx.compose.runtime.collection.IdentityScopeMap.forEachScopeOf' call
            var this_0 = $this.derivedStates_1;
            var index = find_3(this_0, value);
            if (index >= 0) {
              // Inline function 'androidx.compose.runtime.collection.IdentityArraySet.fastForEach' call
              var this_1 = scopeSetAt(this_0, index);
              // Inline function 'kotlin.contracts.contract' call
              var values_1 = this_1.get_values_ksazhn_k$();
              var inductionVariable_0 = 0;
              var last_0 = this_1.get_size_woubt6_k$();
              if (inductionVariable_0 < last_0)
                do {
                  var i_0 = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  // Inline function 'androidx.compose.runtime.CompositionImpl.addPendingInvalidationsLocked.<anonymous>.<anonymous>' call
                  var tmp_0 = values_1[i_0];
                  var it = !(tmp_0 == null) ? tmp_0 : THROW_CCE();
                  invalidated = addPendingInvalidationsLocked(invalidated, $this, it, forgetConditionalScopes);
                }
                 while (inductionVariable_0 < last_0);
            }
          }
        }
         while (inductionVariable < last);
    } else {
      // Inline function 'kotlin.collections.forEach' call
      var tmp0_iterator = values.iterator_jk1svi_k$();
      while (tmp0_iterator.hasNext_bitz1p_k$()) {
        var element = tmp0_iterator.next_20eer_k$();
        // Inline function 'androidx.compose.runtime.CompositionImpl.addPendingInvalidationsLocked.<anonymous>' call
        if (element instanceof RecomposeScopeImpl) {
          element.invalidateForResult_qzazm4_k$(null);
        } else {
          invalidated = addPendingInvalidationsLocked(invalidated, $this, element, forgetConditionalScopes);
          // Inline function 'androidx.compose.runtime.collection.IdentityScopeMap.forEachScopeOf' call
          var this_2 = $this.derivedStates_1;
          var index_0 = find_3(this_2, element);
          if (index_0 >= 0) {
            // Inline function 'androidx.compose.runtime.collection.IdentityArraySet.fastForEach' call
            var this_3 = scopeSetAt(this_2, index_0);
            // Inline function 'kotlin.contracts.contract' call
            var values_2 = this_3.get_values_ksazhn_k$();
            var inductionVariable_1 = 0;
            var last_1 = this_3.get_size_woubt6_k$();
            if (inductionVariable_1 < last_1)
              do {
                var i_1 = inductionVariable_1;
                inductionVariable_1 = inductionVariable_1 + 1 | 0;
                // Inline function 'androidx.compose.runtime.CompositionImpl.addPendingInvalidationsLocked.<anonymous>.<anonymous>' call
                var tmp_1 = values_2[i_1];
                var it_0 = !(tmp_1 == null) ? tmp_1 : THROW_CCE();
                invalidated = addPendingInvalidationsLocked(invalidated, $this, it_0, forgetConditionalScopes);
              }
               while (inductionVariable_1 < last_1);
          }
        }
      }
    }
    var tmp_2;
    if (forgetConditionalScopes) {
      // Inline function 'kotlin.collections.isNotEmpty' call
      tmp_2 = !$this.conditionallyInvalidatedScopes_1.isEmpty_y1axqb_k$();
    } else {
      tmp_2 = false;
    }
    if (tmp_2) {
      // Inline function 'androidx.compose.runtime.collection.IdentityScopeMap.removeValueIf' call
      // Inline function 'androidx.compose.runtime.collection.IdentityScopeMap.removingScopes' call
      var this_4 = $this.observations_1;
      var valueOrder = this_4.get_valueOrder_ddggkm_k$();
      var scopeSets = this_4.get_scopeSets_s963ms_k$();
      var values_3 = this_4.get_values_ksazhn_k$();
      var destinationIndex = 0;
      var inductionVariable_2 = 0;
      var last_2 = this_4.get_size_woubt6_k$();
      if (inductionVariable_2 < last_2)
        do {
          var i_2 = inductionVariable_2;
          inductionVariable_2 = inductionVariable_2 + 1 | 0;
          var valueIndex = valueOrder[i_2];
          var set = ensureNotNull(scopeSets[valueIndex]);
          // Inline function 'androidx.compose.runtime.collection.IdentityScopeMap.removeValueIf.<anonymous>' call
          // Inline function 'androidx.compose.runtime.collection.IdentityArraySet.removeValueIf' call
          var values_4 = set.get_values_ksazhn_k$();
          var size = set.get_size_woubt6_k$();
          var destinationIndex_0 = 0;
          var inductionVariable_3 = 0;
          if (inductionVariable_3 < size)
            do {
              var i_3 = inductionVariable_3;
              inductionVariable_3 = inductionVariable_3 + 1 | 0;
              var tmp_3 = values_4[i_3];
              var item = !(tmp_3 == null) ? tmp_3 : THROW_CCE();
              // Inline function 'androidx.compose.runtime.CompositionImpl.addPendingInvalidationsLocked.<anonymous>' call
              var tmp_4;
              if ($this.conditionallyInvalidatedScopes_1.contains_aljjnj_k$(item)) {
                tmp_4 = true;
              } else {
                var tmp0_safe_receiver = invalidated;
                var tmp_5;
                if (tmp0_safe_receiver == null) {
                  tmp_5 = null;
                } else {
                  // Inline function 'kotlin.let' call
                  // Inline function 'kotlin.contracts.contract' call
                  // Inline function 'androidx.compose.runtime.CompositionImpl.addPendingInvalidationsLocked.<anonymous>.<anonymous>' call
                  tmp_5 = tmp0_safe_receiver.contains_aljjnj_k$(item);
                }
                tmp_4 = tmp_5 === true;
              }
              if (!tmp_4) {
                if (!(destinationIndex_0 === i_3)) {
                  values_4[destinationIndex_0] = item;
                }
                destinationIndex_0 = destinationIndex_0 + 1 | 0;
              }
            }
             while (inductionVariable_3 < size);
          var inductionVariable_4 = destinationIndex_0;
          if (inductionVariable_4 < size)
            do {
              var i_4 = inductionVariable_4;
              inductionVariable_4 = inductionVariable_4 + 1 | 0;
              values_4[i_4] = null;
            }
             while (inductionVariable_4 < size);
          _set_size__9twho6_1(set, destinationIndex_0);
          if (set.get_size_woubt6_k$() > 0) {
            if (!(destinationIndex === i_2)) {
              var destinationKeyOrder = valueOrder[destinationIndex];
              valueOrder[destinationIndex] = valueIndex;
              valueOrder[i_2] = destinationKeyOrder;
            }
            destinationIndex = destinationIndex + 1 | 0;
          }
        }
         while (inductionVariable_2 < last_2);
      var inductionVariable_5 = destinationIndex;
      var last_3 = this_4.get_size_woubt6_k$();
      if (inductionVariable_5 < last_3)
        do {
          var i_5 = inductionVariable_5;
          inductionVariable_5 = inductionVariable_5 + 1 | 0;
          values_3[valueOrder[i_5]] = null;
        }
         while (inductionVariable_5 < last_3);
      this_4.set_size_e2677a_k$(destinationIndex);
      $this.conditionallyInvalidatedScopes_1.clear_j9egeb_k$();
      cleanUpDerivedStateObservations($this);
    } else {
      var tmp0_safe_receiver_0 = invalidated;
      if (tmp0_safe_receiver_0 == null)
        null;
      else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.collection.IdentityScopeMap.removeValueIf' call
        // Inline function 'androidx.compose.runtime.collection.IdentityScopeMap.removingScopes' call
        var this_5 = $this.observations_1;
        var valueOrder_0 = this_5.get_valueOrder_ddggkm_k$();
        var scopeSets_0 = this_5.get_scopeSets_s963ms_k$();
        var values_5 = this_5.get_values_ksazhn_k$();
        var destinationIndex_1 = 0;
        var inductionVariable_6 = 0;
        var last_4 = this_5.get_size_woubt6_k$();
        if (inductionVariable_6 < last_4)
          do {
            var i_6 = inductionVariable_6;
            inductionVariable_6 = inductionVariable_6 + 1 | 0;
            var valueIndex_0 = valueOrder_0[i_6];
            var set_0 = ensureNotNull(scopeSets_0[valueIndex_0]);
            // Inline function 'androidx.compose.runtime.collection.IdentityScopeMap.removeValueIf.<anonymous>' call
            // Inline function 'androidx.compose.runtime.collection.IdentityArraySet.removeValueIf' call
            var values_6 = set_0.get_values_ksazhn_k$();
            var size_0 = set_0.get_size_woubt6_k$();
            var destinationIndex_2 = 0;
            var inductionVariable_7 = 0;
            if (inductionVariable_7 < size_0)
              do {
                var i_7 = inductionVariable_7;
                inductionVariable_7 = inductionVariable_7 + 1 | 0;
                var tmp_6 = values_6[i_7];
                var item_0 = !(tmp_6 == null) ? tmp_6 : THROW_CCE();
                // Inline function 'androidx.compose.runtime.CompositionImpl.addPendingInvalidationsLocked.<anonymous>.<anonymous>' call
                if (!tmp0_safe_receiver_0.contains_aljjnj_k$(item_0)) {
                  if (!(destinationIndex_2 === i_7)) {
                    values_6[destinationIndex_2] = item_0;
                  }
                  destinationIndex_2 = destinationIndex_2 + 1 | 0;
                }
              }
               while (inductionVariable_7 < size_0);
            var inductionVariable_8 = destinationIndex_2;
            if (inductionVariable_8 < size_0)
              do {
                var i_8 = inductionVariable_8;
                inductionVariable_8 = inductionVariable_8 + 1 | 0;
                values_6[i_8] = null;
              }
               while (inductionVariable_8 < size_0);
            _set_size__9twho6_1(set_0, destinationIndex_2);
            if (set_0.get_size_woubt6_k$() > 0) {
              if (!(destinationIndex_1 === i_6)) {
                var destinationKeyOrder_0 = valueOrder_0[destinationIndex_1];
                valueOrder_0[destinationIndex_1] = valueIndex_0;
                valueOrder_0[i_6] = destinationKeyOrder_0;
              }
              destinationIndex_1 = destinationIndex_1 + 1 | 0;
            }
          }
           while (inductionVariable_6 < last_4);
        var inductionVariable_9 = destinationIndex_1;
        var last_5 = this_5.get_size_woubt6_k$();
        if (inductionVariable_9 < last_5)
          do {
            var i_9 = inductionVariable_9;
            inductionVariable_9 = inductionVariable_9 + 1 | 0;
            values_5[valueOrder_0[i_9]] = null;
          }
           while (inductionVariable_9 < last_5);
        this_5.set_size_e2677a_k$(destinationIndex_1);
        cleanUpDerivedStateObservations($this);
      }
    }
  }
  function cleanUpDerivedStateObservations($this) {
    // Inline function 'androidx.compose.runtime.collection.IdentityScopeMap.removeValueIf' call
    // Inline function 'androidx.compose.runtime.collection.IdentityScopeMap.removingScopes' call
    var this_0 = $this.derivedStates_1;
    var valueOrder = this_0.get_valueOrder_ddggkm_k$();
    var scopeSets = this_0.get_scopeSets_s963ms_k$();
    var values = this_0.get_values_ksazhn_k$();
    var destinationIndex = 0;
    var inductionVariable = 0;
    var last = this_0.get_size_woubt6_k$();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var valueIndex = valueOrder[i];
        var set = ensureNotNull(scopeSets[valueIndex]);
        // Inline function 'androidx.compose.runtime.collection.IdentityScopeMap.removeValueIf.<anonymous>' call
        // Inline function 'androidx.compose.runtime.collection.IdentityArraySet.removeValueIf' call
        var values_0 = set.get_values_ksazhn_k$();
        var size = set.get_size_woubt6_k$();
        var destinationIndex_0 = 0;
        var inductionVariable_0 = 0;
        if (inductionVariable_0 < size)
          do {
            var i_0 = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var tmp = values_0[i_0];
            var item = !(tmp == null) ? tmp : THROW_CCE();
            // Inline function 'androidx.compose.runtime.CompositionImpl.cleanUpDerivedStateObservations.<anonymous>' call
            if (!!$this.observations_1.contains_1pg03j_k$(item)) {
              if (!(destinationIndex_0 === i_0)) {
                values_0[destinationIndex_0] = item;
              }
              destinationIndex_0 = destinationIndex_0 + 1 | 0;
            }
          }
           while (inductionVariable_0 < size);
        var inductionVariable_1 = destinationIndex_0;
        if (inductionVariable_1 < size)
          do {
            var i_1 = inductionVariable_1;
            inductionVariable_1 = inductionVariable_1 + 1 | 0;
            values_0[i_1] = null;
          }
           while (inductionVariable_1 < size);
        _set_size__9twho6_1(set, destinationIndex_0);
        if (set.get_size_woubt6_k$() > 0) {
          if (!(destinationIndex === i)) {
            var destinationKeyOrder = valueOrder[destinationIndex];
            valueOrder[destinationIndex] = valueIndex;
            valueOrder[i] = destinationKeyOrder;
          }
          destinationIndex = destinationIndex + 1 | 0;
        }
      }
       while (inductionVariable < last);
    var inductionVariable_2 = destinationIndex;
    var last_0 = this_0.get_size_woubt6_k$();
    if (inductionVariable_2 < last_0)
      do {
        var i_2 = inductionVariable_2;
        inductionVariable_2 = inductionVariable_2 + 1 | 0;
        values[valueOrder[i_2]] = null;
      }
       while (inductionVariable_2 < last_0);
    this_0.set_size_e2677a_k$(destinationIndex);
    // Inline function 'kotlin.collections.isNotEmpty' call
    if (!$this.conditionallyInvalidatedScopes_1.isEmpty_y1axqb_k$()) {
      // Inline function 'androidx.compose.runtime.removeValueIf' call
      var iter = $this.conditionallyInvalidatedScopes_1.iterator_jk1svi_k$();
      while (iter.hasNext_bitz1p_k$()) {
        // Inline function 'androidx.compose.runtime.CompositionImpl.cleanUpDerivedStateObservations.<anonymous>' call
        if (!iter.next_20eer_k$().get_isConditional_4jybl9_k$()) {
          iter.remove_ldkf9o_k$();
        }
      }
    }
  }
  function invalidateScopeOfLocked($this, value) {
    // Inline function 'androidx.compose.runtime.collection.IdentityScopeMap.forEachScopeOf' call
    var this_0 = $this.observations_1;
    var index = find_3(this_0, value);
    if (index >= 0) {
      // Inline function 'androidx.compose.runtime.collection.IdentityArraySet.fastForEach' call
      var this_1 = scopeSetAt(this_0, index);
      // Inline function 'kotlin.contracts.contract' call
      var values = this_1.get_values_ksazhn_k$();
      var inductionVariable = 0;
      var last = this_1.get_size_woubt6_k$();
      if (inductionVariable < last)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          // Inline function 'androidx.compose.runtime.CompositionImpl.invalidateScopeOfLocked.<anonymous>' call
          var tmp = values[i];
          var scope = !(tmp == null) ? tmp : THROW_CCE();
          if (scope.invalidateForResult_qzazm4_k$(value).equals(InvalidationResult_IMMINENT_getInstance())) {
            $this.observationsProcessed_1.add_euavbj_k$(value, scope);
          }
        }
         while (inductionVariable < last);
    }
  }
  function applyChangesInLocked($this, changes) {
    var manager = new RememberEventDispatcher($this.abandonSet_1);
    try {
      if (changes.isEmpty_y1axqb_k$())
        return Unit_getInstance();
      $l$block: {
        // Inline function 'androidx.compose.runtime.trace' call
        var sectionName = 'Compose:applyChanges';
        var token = Trace_getInstance().beginSection_2k8ef6_k$(sectionName);
        try {
          $this.applier_1.onBeginChanges_yqtnrd_k$();
          // Inline function 'androidx.compose.runtime.SlotTable.write' call
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          // Inline function 'androidx.compose.runtime.SlotTable.write.<anonymous>' call
          var writer = $this.slotTable_1.openWriter_7mgvvh_k$();
          var tmp;
          try {
            var applier = $this.applier_1;
            // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
            // Inline function 'kotlin.contracts.contract' call
            var inductionVariable = 0;
            var last = changes.get_size_woubt6_k$() - 1 | 0;
            if (inductionVariable <= last)
              do {
                var index = inductionVariable;
                inductionVariable = inductionVariable + 1 | 0;
                var item = changes.get_c1px32_k$(index);
                // Inline function 'androidx.compose.runtime.CompositionImpl.applyChangesInLocked.<anonymous>.<anonymous>.<anonymous>' call
                item(applier, writer, manager);
              }
               while (inductionVariable <= last);
            changes.clear_j9egeb_k$();
            tmp = Unit_getInstance();
          }finally {
            writer.close_yn9xrc_k$();
          }
          $this.applier_1.onEndChanges_k5kb87_k$();
          break $l$block;
        }finally {
          Trace_getInstance().endSection_5rdvi3_k$(token);
        }
      }
      manager.dispatchRememberObservers_gqht0m_k$();
      manager.dispatchSideEffects_gjp88x_k$();
      if ($this.pendingInvalidScopes_1) {
        $l$block_0: {
          // Inline function 'androidx.compose.runtime.trace' call
          var sectionName_0 = 'Compose:unobserve';
          var token_0 = Trace_getInstance().beginSection_2k8ef6_k$(sectionName_0);
          try {
            $this.pendingInvalidScopes_1 = false;
            // Inline function 'androidx.compose.runtime.collection.IdentityScopeMap.removeValueIf' call
            // Inline function 'androidx.compose.runtime.collection.IdentityScopeMap.removingScopes' call
            var this_0 = $this.observations_1;
            var valueOrder = this_0.get_valueOrder_ddggkm_k$();
            var scopeSets = this_0.get_scopeSets_s963ms_k$();
            var values = this_0.get_values_ksazhn_k$();
            var destinationIndex = 0;
            var inductionVariable_0 = 0;
            var last_0 = this_0.get_size_woubt6_k$();
            if (inductionVariable_0 < last_0)
              do {
                var i = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                var valueIndex = valueOrder[i];
                var set = ensureNotNull(scopeSets[valueIndex]);
                // Inline function 'androidx.compose.runtime.collection.IdentityScopeMap.removeValueIf.<anonymous>' call
                // Inline function 'androidx.compose.runtime.collection.IdentityArraySet.removeValueIf' call
                var values_0 = set.get_values_ksazhn_k$();
                var size = set.get_size_woubt6_k$();
                var destinationIndex_0 = 0;
                var inductionVariable_1 = 0;
                if (inductionVariable_1 < size)
                  do {
                    var i_0 = inductionVariable_1;
                    inductionVariable_1 = inductionVariable_1 + 1 | 0;
                    var tmp_0 = values_0[i_0];
                    var item_0 = !(tmp_0 == null) ? tmp_0 : THROW_CCE();
                    // Inline function 'androidx.compose.runtime.CompositionImpl.applyChangesInLocked.<anonymous>.<anonymous>' call
                    if (!!item_0.get_valid_j01e4z_k$()) {
                      if (!(destinationIndex_0 === i_0)) {
                        values_0[destinationIndex_0] = item_0;
                      }
                      destinationIndex_0 = destinationIndex_0 + 1 | 0;
                    }
                  }
                   while (inductionVariable_1 < size);
                var inductionVariable_2 = destinationIndex_0;
                if (inductionVariable_2 < size)
                  do {
                    var i_1 = inductionVariable_2;
                    inductionVariable_2 = inductionVariable_2 + 1 | 0;
                    values_0[i_1] = null;
                  }
                   while (inductionVariable_2 < size);
                _set_size__9twho6_1(set, destinationIndex_0);
                if (set.get_size_woubt6_k$() > 0) {
                  if (!(destinationIndex === i)) {
                    var destinationKeyOrder = valueOrder[destinationIndex];
                    valueOrder[destinationIndex] = valueIndex;
                    valueOrder[i] = destinationKeyOrder;
                  }
                  destinationIndex = destinationIndex + 1 | 0;
                }
              }
               while (inductionVariable_0 < last_0);
            var inductionVariable_3 = destinationIndex;
            var last_1 = this_0.get_size_woubt6_k$();
            if (inductionVariable_3 < last_1)
              do {
                var i_2 = inductionVariable_3;
                inductionVariable_3 = inductionVariable_3 + 1 | 0;
                values[valueOrder[i_2]] = null;
              }
               while (inductionVariable_3 < last_1);
            this_0.set_size_e2677a_k$(destinationIndex);
            cleanUpDerivedStateObservations($this);
            break $l$block_0;
          }finally {
            Trace_getInstance().endSection_5rdvi3_k$(token_0);
          }
        }
      }
    }finally {
      if ($this.lateChanges_1.isEmpty_y1axqb_k$()) {
        manager.dispatchAbandons_yvcxp4_k$();
      }
    }
  }
  function guardInvalidationsLocked($this, block) {
    var invalidations = takeInvalidations($this);
    var tmp;
    try {
      tmp = block(invalidations);
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Exception) {
        var e = $p;
        $this.invalidations_1 = invalidations;
        throw e;
      } else {
        throw $p;
      }
    }
    return tmp;
  }
  function guardChanges($this, block) {
    var tmp;
    try {
      // Inline function 'androidx.compose.runtime.CompositionImpl.trackAbandonedValues' call
      var success = false;
      var tmp_0;
      try {
        // Inline function 'kotlin.also' call
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.CompositionImpl.trackAbandonedValues.<anonymous>' call
        success = true;
        tmp_0 = block();
      }finally {
        var tmp_1;
        if (!success) {
          // Inline function 'kotlin.collections.isNotEmpty' call
          tmp_1 = !$this.abandonSet_1.isEmpty_y1axqb_k$();
        } else {
          tmp_1 = false;
        }
        if (tmp_1) {
          (new RememberEventDispatcher($this.abandonSet_1)).dispatchAbandons_yvcxp4_k$();
        }
      }
      tmp = tmp_0;
    } catch ($p) {
      var tmp_2;
      if ($p instanceof Exception) {
        var e = $p;
        abandonChanges($this);
        throw e;
      } else {
        throw $p;
      }
    }
    return tmp;
  }
  function abandonChanges($this) {
    $this.pendingModifications_1.set_inogor_k$(null);
    $this.changes_1.clear_j9egeb_k$();
    $this.lateChanges_1.clear_j9egeb_k$();
    $this.abandonSet_1.clear_j9egeb_k$();
  }
  function tryImminentInvalidation($this, scope, instance) {
    return $this.get_isComposing_a8f9zw_k$() ? $this.composer_1.tryImminentInvalidation_sfbwjl_k$(scope, instance) : false;
  }
  function invalidateChecked($this, scope, anchor, instance) {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    $this.lock_1;
    // Inline function 'androidx.compose.runtime.CompositionImpl.invalidateChecked.<anonymous>' call
    var tmp0_safe_receiver = $this.invalidationDelegate_1;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.CompositionImpl.invalidateChecked.<anonymous>.<anonymous>' call
      var tmp_0;
      if ($this.slotTable_1.groupContainsAnchor_wx4eku_k$($this.invalidationDelegateGroup_1, anchor)) {
        tmp_0 = tmp0_safe_receiver;
      } else {
        tmp_0 = null;
      }
      tmp = tmp_0;
    }
    var delegate = tmp;
    if (delegate == null) {
      if (tryImminentInvalidation($this, scope, instance)) {
        return InvalidationResult_IMMINENT_getInstance();
      }
      if (instance == null) {
        $this.invalidations_1.set_d3rebl_k$(scope, null);
      } else {
        addValue($this.invalidations_1, scope, instance);
      }
    }
    var delegate_0 = delegate;
    if (!(delegate_0 == null)) {
      return invalidateChecked(delegate_0, scope, anchor, instance);
    }
    $this.parent_1.invalidate_sa779a_k$($this);
    return $this.get_isComposing_a8f9zw_k$() ? InvalidationResult_DEFERRED_getInstance() : InvalidationResult_SCHEDULED_getInstance();
  }
  function takeInvalidations($this) {
    var invalidations = $this.invalidations_1;
    $this.invalidations_1 = new IdentityArrayMap();
    return invalidations;
  }
  function validateRecomposeScopeAnchors($this, slotTable) {
    // Inline function 'kotlin.collections.mapNotNull' call
    // Inline function 'kotlin.collections.mapNotNullTo' call
    var this_0 = slotTable.get_slots_iyl3po_k$();
    var destination = ArrayList_init_$Create$();
    // Inline function 'kotlin.collections.forEach' call
    var inductionVariable = 0;
    var last = this_0.length;
    while (inductionVariable < last) {
      var element = this_0[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'kotlin.collections.mapNotNullTo.<anonymous>' call
      // Inline function 'androidx.compose.runtime.CompositionImpl.validateRecomposeScopeAnchors.<anonymous>' call
      var tmp0_safe_receiver = element instanceof RecomposeScopeImpl ? element : null;
      if (tmp0_safe_receiver == null)
        null;
      else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        destination.add_utx5q5_k$(tmp0_safe_receiver);
      }
    }
    var scopes = destination;
    // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable_0 = 0;
    var last_0 = scopes.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable_0 <= last_0)
      do {
        var index = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var item = scopes.get_c1px32_k$(index);
        // Inline function 'androidx.compose.runtime.CompositionImpl.validateRecomposeScopeAnchors.<anonymous>' call
        var tmp0_safe_receiver_0 = item.get_anchor_b1c8n2_k$();
        if (tmp0_safe_receiver_0 == null)
          null;
        else {
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          // Inline function 'kotlin.contracts.contract' call
          var tmp;
          if (!slotTable.slotsOf_u1tyj8_k$(tmp0_safe_receiver_0.toIndexFor_xhkkx2_k$(slotTable)).contains_aljjnj_k$(item)) {
            // Inline function 'androidx.compose.runtime.CompositionImpl.validateRecomposeScopeAnchors.<anonymous>.<anonymous>.<anonymous>' call
            var dataIndex = indexOf(slotTable.get_slots_iyl3po_k$(), item);
            var message = 'Misaligned anchor ' + tmp0_safe_receiver_0 + ' in scope ' + item + ' encountered, scope found at ' + ('' + dataIndex);
            throw IllegalStateException_init_$Create$(toString(message));
          }
        }
      }
       while (inductionVariable_0 <= last_0);
  }
  function trackAbandonedValues($this, block) {
    var success = false;
    var tmp;
    try {
      // Inline function 'kotlin.also' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.CompositionImpl.trackAbandonedValues.<anonymous>' call
      success = true;
      tmp = block();
    }finally {
      var tmp_0;
      if (!success) {
        // Inline function 'kotlin.collections.isNotEmpty' call
        tmp_0 = !$this.abandonSet_1.isEmpty_y1axqb_k$();
      } else {
        tmp_0 = false;
      }
      if (tmp_0) {
        (new RememberEventDispatcher($this.abandonSet_1)).dispatchAbandons_yvcxp4_k$();
      }
    }
    return tmp;
  }
  function RememberEventDispatcher(abandoning) {
    this.abandoning_1 = abandoning;
    var tmp = this;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp.remembering_1 = ArrayList_init_$Create$();
    var tmp_0 = this;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp_0.forgetting_1 = ArrayList_init_$Create$();
    var tmp_1 = this;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp_1.sideEffects_1 = ArrayList_init_$Create$();
    this.deactivating_1 = null;
    this.releasing_1 = null;
  }
  protoOf(RememberEventDispatcher).remembering_91gjs0_k$ = function (instance) {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.RememberEventDispatcher.remembering.<anonymous>' call
    var index = this.forgetting_1.lastIndexOf_v2p1fv_k$(instance);
    var tmp;
    if (index >= 0) {
      this.forgetting_1.removeAt_6niowx_k$(index);
      tmp = this.abandoning_1.remove_cedx0m_k$(instance);
    } else {
      tmp = this.remembering_1.add_utx5q5_k$(instance);
    }
  };
  protoOf(RememberEventDispatcher).forgetting_k8kg92_k$ = function (instance) {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.RememberEventDispatcher.forgetting.<anonymous>' call
    var index = this.remembering_1.lastIndexOf_v2p1fv_k$(instance);
    var tmp;
    if (index >= 0) {
      this.remembering_1.removeAt_6niowx_k$(index);
      tmp = this.abandoning_1.remove_cedx0m_k$(instance);
    } else {
      tmp = this.forgetting_1.add_utx5q5_k$(instance);
    }
  };
  protoOf(RememberEventDispatcher).sideEffect_b2rsnk_k$ = function (effect) {
    // Inline function 'kotlin.collections.plusAssign' call
    this.sideEffects_1.add_utx5q5_k$(effect);
  };
  protoOf(RememberEventDispatcher).deactivating_62b1kc_k$ = function (instance) {
    // Inline function 'kotlin.collections.plusAssign' call
    var tmp0_elvis_lhs = this.deactivating_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      // Inline function 'kotlin.also' call
      // Inline function 'kotlin.collections.mutableListOf' call
      var this_0 = ArrayList_init_$Create$();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.RememberEventDispatcher.deactivating.<anonymous>' call
      this.deactivating_1 = this_0;
      tmp = this_0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    tmp.add_utx5q5_k$(instance);
  };
  protoOf(RememberEventDispatcher).releasing_nz7zuh_k$ = function (instance) {
    // Inline function 'kotlin.collections.plusAssign' call
    var tmp0_elvis_lhs = this.releasing_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      // Inline function 'kotlin.also' call
      // Inline function 'kotlin.collections.mutableListOf' call
      var this_0 = ArrayList_init_$Create$();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.RememberEventDispatcher.releasing.<anonymous>' call
      this.releasing_1 = this_0;
      tmp = this_0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    tmp.add_utx5q5_k$(instance);
  };
  protoOf(RememberEventDispatcher).dispatchRememberObservers_gqht0m_k$ = function () {
    var deactivating = this.deactivating_1;
    // Inline function 'kotlin.collections.isNullOrEmpty' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(deactivating == null ? true : deactivating.isEmpty_y1axqb_k$())) {
      $l$block: {
        // Inline function 'androidx.compose.runtime.trace' call
        var sectionName = 'Compose:deactivations';
        var token = Trace_getInstance().beginSection_2k8ef6_k$(sectionName);
        try {
          var inductionVariable = deactivating.get_size_woubt6_k$() - 1 | 0;
          var tmp;
          if (0 <= inductionVariable) {
            do {
              var i = inductionVariable;
              inductionVariable = inductionVariable + -1 | 0;
              var instance = deactivating.get_c1px32_k$(i);
              instance.onDeactivate_cdxmn7_k$();
            }
             while (0 <= inductionVariable);
            tmp = Unit_getInstance();
          }
          break $l$block;
        }finally {
          Trace_getInstance().endSection_5rdvi3_k$(token);
        }
      }
      deactivating.clear_j9egeb_k$();
    }
    // Inline function 'kotlin.collections.isNotEmpty' call
    if (!this.forgetting_1.isEmpty_y1axqb_k$()) {
      $l$block_0: {
        // Inline function 'androidx.compose.runtime.trace' call
        var sectionName_0 = 'Compose:onForgotten';
        var token_0 = Trace_getInstance().beginSection_2k8ef6_k$(sectionName_0);
        try {
          var inductionVariable_0 = this.forgetting_1.get_size_woubt6_k$() - 1 | 0;
          var tmp_0;
          if (0 <= inductionVariable_0) {
            do {
              var i_0 = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + -1 | 0;
              var instance_0 = this.forgetting_1.get_c1px32_k$(i_0);
              if (!this.abandoning_1.contains_aljjnj_k$(instance_0)) {
                instance_0.onForgotten_pbqifp_k$();
              }
            }
             while (0 <= inductionVariable_0);
            tmp_0 = Unit_getInstance();
          }
          break $l$block_0;
        }finally {
          Trace_getInstance().endSection_5rdvi3_k$(token_0);
        }
      }
    }
    // Inline function 'kotlin.collections.isNotEmpty' call
    if (!this.remembering_1.isEmpty_y1axqb_k$()) {
      $l$block_1: {
        // Inline function 'androidx.compose.runtime.trace' call
        var sectionName_1 = 'Compose:onRemembered';
        var token_1 = Trace_getInstance().beginSection_2k8ef6_k$(sectionName_1);
        try {
          var this_0 = this.remembering_1;
          // Inline function 'kotlin.contracts.contract' call
          var inductionVariable_1 = 0;
          var last = this_0.get_size_woubt6_k$() - 1 | 0;
          var tmp_1;
          if (inductionVariable_1 <= last) {
            do {
              var index = inductionVariable_1;
              inductionVariable_1 = inductionVariable_1 + 1 | 0;
              var item = this_0.get_c1px32_k$(index);
              // Inline function 'androidx.compose.runtime.RememberEventDispatcher.dispatchRememberObservers.<anonymous>.<anonymous>' call
              this.abandoning_1.remove_cedx0m_k$(item);
              item.onRemembered_68t2e3_k$();
            }
             while (inductionVariable_1 <= last);
            tmp_1 = Unit_getInstance();
          }
          break $l$block_1;
        }finally {
          Trace_getInstance().endSection_5rdvi3_k$(token_1);
        }
      }
    }
    var releasing = this.releasing_1;
    // Inline function 'kotlin.collections.isNullOrEmpty' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(releasing == null ? true : releasing.isEmpty_y1axqb_k$())) {
      $l$block_2: {
        // Inline function 'androidx.compose.runtime.trace' call
        var sectionName_2 = 'Compose:releases';
        var token_2 = Trace_getInstance().beginSection_2k8ef6_k$(sectionName_2);
        try {
          var inductionVariable_2 = releasing.get_size_woubt6_k$() - 1 | 0;
          var tmp_2;
          if (0 <= inductionVariable_2) {
            do {
              var i_1 = inductionVariable_2;
              inductionVariable_2 = inductionVariable_2 + -1 | 0;
              var instance_1 = releasing.get_c1px32_k$(i_1);
              instance_1.onRelease_f1rf6w_k$();
            }
             while (0 <= inductionVariable_2);
            tmp_2 = Unit_getInstance();
          }
          break $l$block_2;
        }finally {
          Trace_getInstance().endSection_5rdvi3_k$(token_2);
        }
      }
      releasing.clear_j9egeb_k$();
    }
  };
  protoOf(RememberEventDispatcher).dispatchSideEffects_gjp88x_k$ = function () {
    // Inline function 'kotlin.collections.isNotEmpty' call
    if (!this.sideEffects_1.isEmpty_y1axqb_k$()) {
      $l$block: {
        // Inline function 'androidx.compose.runtime.trace' call
        var sectionName = 'Compose:sideeffects';
        var token = Trace_getInstance().beginSection_2k8ef6_k$(sectionName);
        try {
          // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
          var this_0 = this.sideEffects_1;
          // Inline function 'kotlin.contracts.contract' call
          var inductionVariable = 0;
          var last = this_0.get_size_woubt6_k$() - 1 | 0;
          if (inductionVariable <= last)
            do {
              var index = inductionVariable;
              inductionVariable = inductionVariable + 1 | 0;
              var item = this_0.get_c1px32_k$(index);
              // Inline function 'androidx.compose.runtime.RememberEventDispatcher.dispatchSideEffects.<anonymous>.<anonymous>' call
              item();
            }
             while (inductionVariable <= last);
          this.sideEffects_1.clear_j9egeb_k$();
          break $l$block;
        }finally {
          Trace_getInstance().endSection_5rdvi3_k$(token);
        }
      }
    }
  };
  protoOf(RememberEventDispatcher).dispatchAbandons_yvcxp4_k$ = function () {
    // Inline function 'kotlin.collections.isNotEmpty' call
    if (!this.abandoning_1.isEmpty_y1axqb_k$()) {
      $l$block: {
        // Inline function 'androidx.compose.runtime.trace' call
        var sectionName = 'Compose:abandons';
        var token = Trace_getInstance().beginSection_2k8ef6_k$(sectionName);
        try {
          var iterator = this.abandoning_1.iterator_jk1svi_k$();
          while (iterator.hasNext_bitz1p_k$()) {
            var instance = iterator.next_20eer_k$();
            iterator.remove_ldkf9o_k$();
            instance.onAbandoned_1gx7a3_k$();
          }
          break $l$block;
        }finally {
          Trace_getInstance().endSection_5rdvi3_k$(token);
        }
      }
    }
  };
  function CompositionImpl(parent, applier, recomposeContext) {
    recomposeContext = recomposeContext === VOID ? null : recomposeContext;
    this.parent_1 = parent;
    this.applier_1 = applier;
    this.pendingModifications_1 = new AtomicReference(null);
    this.lock_1 = createSynchronizedObject();
    this.abandonSet_1 = HashSet_init_$Create$();
    this.slotTable_1 = new SlotTable();
    this.observations_1 = new IdentityScopeMap();
    this.conditionallyInvalidatedScopes_1 = HashSet_init_$Create$();
    this.derivedStates_1 = new IdentityScopeMap();
    var tmp = this;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp.changes_1 = ArrayList_init_$Create$();
    var tmp_0 = this;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp_0.lateChanges_1 = ArrayList_init_$Create$();
    this.observationsProcessed_1 = new IdentityScopeMap();
    this.invalidations_1 = new IdentityArrayMap();
    this.pendingInvalidScopes_1 = false;
    this.invalidationDelegate_1 = null;
    this.invalidationDelegateGroup_1 = 0;
    var tmp_1 = this;
    // Inline function 'kotlin.also' call
    var this_0 = new ComposerImpl(this.applier_1, this.parent_1, this.slotTable_1, this.abandonSet_1, this.changes_1, this.lateChanges_1, this);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.CompositionImpl.composer.<anonymous>' call
    this.parent_1.registerComposer_4k9eh7_k$(this_0);
    tmp_1.composer_1 = this_0;
    this._recomposeContext_1 = recomposeContext;
    var tmp_2 = this;
    var tmp_3 = this.parent_1;
    tmp_2.isRoot_1 = tmp_3 instanceof Recomposer;
    this.disposed_1 = false;
    this.composable_1 = ComposableSingletons$CompositionKt_getInstance().lambda_1_r8sbbp_1;
  }
  protoOf(CompositionImpl).get_slotTable_jp6uvb_k$ = function () {
    return this.slotTable_1;
  };
  protoOf(CompositionImpl).get_observedObjects_ab1ef7_k$ = function () {
    return filterNotNull(this.observations_1.get_values_ksazhn_k$());
  };
  protoOf(CompositionImpl).get_derivedStateDependencies_80y2yi_k$ = function () {
    return filterNotNull(this.derivedStates_1.get_values_ksazhn_k$());
  };
  protoOf(CompositionImpl).get_conditionalScopes_lh0yxw_k$ = function () {
    return toList(this.conditionallyInvalidatedScopes_1);
  };
  protoOf(CompositionImpl).set_pendingInvalidScopes_yjsyh3_k$ = function (_set____db54di) {
    this.pendingInvalidScopes_1 = _set____db54di;
  };
  protoOf(CompositionImpl).get_pendingInvalidScopes_o1k5g8_k$ = function () {
    return this.pendingInvalidScopes_1;
  };
  protoOf(CompositionImpl).get_recomposeContext_wkc8ef_k$ = function () {
    var tmp0_elvis_lhs = this._recomposeContext_1;
    return tmp0_elvis_lhs == null ? this.parent_1.get_recomposeCoroutineContext_5qac6l_k$() : tmp0_elvis_lhs;
  };
  protoOf(CompositionImpl).get_isRoot_ew5h6d_k$ = function () {
    return this.isRoot_1;
  };
  protoOf(CompositionImpl).set_composable_ge01ce_k$ = function (_set____db54di) {
    illegalDecoyCallException('<set-composable>');
  };
  protoOf(CompositionImpl).get_composable_rhz8fe_k$ = function () {
    return this.composable_1;
  };
  protoOf(CompositionImpl).get_isComposing_a8f9zw_k$ = function () {
    return this.composer_1.get_isComposing_a8f9zw_k$();
  };
  protoOf(CompositionImpl).get_isDisposed_skr1u0_k$ = function () {
    return this.disposed_1;
  };
  protoOf(CompositionImpl).get_hasPendingChanges_ruhuf7_k$ = function () {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.lock_1;
    // Inline function 'androidx.compose.runtime.CompositionImpl.<get-hasPendingChanges>.<anonymous>' call
    return this.composer_1.get_hasPendingChanges_ruhuf7_k$();
  };
  protoOf(CompositionImpl).setContent_uteiin_k$ = function (content) {
    illegalDecoyCallException('setContent');
  };
  protoOf(CompositionImpl).invalidateGroupsWithKey_235shq_k$ = function (key) {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.lock_1;
    // Inline function 'androidx.compose.runtime.CompositionImpl.invalidateGroupsWithKey.<anonymous>' call
    var scopesToInvalidate = this.slotTable_1.invalidateGroupsWithKey_ja0e5u_k$(key);
    var tmp;
    if (scopesToInvalidate == null) {
      tmp = true;
    } else {
      var tmp$ret$4;
      $l$block: {
        // Inline function 'androidx.compose.runtime.snapshots.fastAny' call
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
        // Inline function 'kotlin.contracts.contract' call
        var inductionVariable = 0;
        var last = scopesToInvalidate.get_size_woubt6_k$() - 1 | 0;
        if (inductionVariable <= last)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var item = scopesToInvalidate.get_c1px32_k$(index);
            // Inline function 'androidx.compose.runtime.snapshots.fastAny.<anonymous>' call
            // Inline function 'androidx.compose.runtime.CompositionImpl.invalidateGroupsWithKey.<anonymous>' call
            if (item.invalidateForResult_qzazm4_k$(null).equals(InvalidationResult_IGNORED_getInstance())) {
              tmp$ret$4 = true;
              break $l$block;
            }
          }
           while (inductionVariable <= last);
        tmp$ret$4 = false;
      }
      tmp = tmp$ret$4;
    }
    var forceComposition = tmp;
    if (forceComposition ? this.composer_1.forceRecomposeScopes_n5zvgz_k$() : false) {
      this.parent_1.invalidate_sa779a_k$(this);
    }
  };
  protoOf(CompositionImpl).composeContent_t66upd_k$ = function (content) {
    illegalDecoyCallException('composeContent');
  };
  protoOf(CompositionImpl).dispose_3nnxhr_k$ = function () {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.lock_1;
    var tmp;
    if (!this.disposed_1) {
      this.disposed_1 = true;
      this.$set_composable$$composable_lbzvrn_k$(ComposableSingletons$CompositionKt_getInstance().lambda_2_r8sbbo_1);
      var deferredChanges = this.composer_1.get_deferredChanges_v7wg79_k$();
      if (!(deferredChanges == null)) {
        applyChangesInLocked(this, deferredChanges);
      }
      var nonEmptySlotTable = this.slotTable_1.get_groupsSize_1bq1dq_k$() > 0;
      var tmp_0;
      if (nonEmptySlotTable) {
        tmp_0 = true;
      } else {
        // Inline function 'kotlin.collections.isNotEmpty' call
        tmp_0 = !this.abandonSet_1.isEmpty_y1axqb_k$();
      }
      if (tmp_0) {
        var manager = new RememberEventDispatcher(this.abandonSet_1);
        if (nonEmptySlotTable) {
          this.applier_1.onBeginChanges_yqtnrd_k$();
          // Inline function 'androidx.compose.runtime.SlotTable.write' call
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          // Inline function 'androidx.compose.runtime.SlotTable.write.<anonymous>' call
          var writer = this.slotTable_1.openWriter_7mgvvh_k$();
          var tmp_1;
          try {
            removeCurrentGroup(writer, manager);
            tmp_1 = Unit_getInstance();
          }finally {
            writer.close_yn9xrc_k$();
          }
          this.applier_1.clear_j9egeb_k$();
          this.applier_1.onEndChanges_k5kb87_k$();
          manager.dispatchRememberObservers_gqht0m_k$();
        }
        manager.dispatchAbandons_yvcxp4_k$();
      }
      this.composer_1.dispose_3nnxhr_k$();
      tmp = Unit_getInstance();
    }
    this.parent_1.unregisterComposition_ok1mjz_k$(this);
  };
  protoOf(CompositionImpl).get_hasInvalidations_z5m4o4_k$ = function () {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.lock_1;
    // Inline function 'androidx.compose.runtime.CompositionImpl.<get-hasInvalidations>.<anonymous>' call
    return this.invalidations_1.get_size_woubt6_k$() > 0;
  };
  protoOf(CompositionImpl).recordModificationsOf_wnqd8_k$ = function (values) {
    $l$loop: while (true) {
      var old = this.pendingModifications_1.get_26vq_k$();
      var tmp;
      if (old == null ? true : equals(old, get_PendingApplyNoModifications())) {
        tmp = values;
      } else {
        if (!(old == null) ? isInterface(old, Set) : false) {
          // Inline function 'kotlin.arrayOf' call
          // Inline function 'kotlin.js.unsafeCast' call
          // Inline function 'kotlin.js.asDynamic' call
          tmp = [old, values];
        } else {
          if (!(old == null) ? isArray(old) : false) {
            tmp = plus_1((!(old == null) ? isArray(old) : false) ? old : THROW_CCE(), values);
          } else {
            var message = 'corrupt pendingModifications: ' + this.pendingModifications_1;
            throw IllegalStateException_init_$Create$(toString(message));
          }
        }
      }
      var new_0 = tmp;
      if (this.pendingModifications_1.compareAndSet_10iwom_k$(old, new_0)) {
        if (old == null) {
          // Inline function 'androidx.compose.runtime.synchronized' call
          // Inline function 'kotlinx.atomicfu.locks.synchronized' call
          this.lock_1;
          drainPendingModificationsLocked(this);
        }
        break $l$loop;
      }
    }
  };
  protoOf(CompositionImpl).observesAnyOf_t1oyg3_k$ = function (values) {
    var tmp0_iterator = values.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var value = tmp0_iterator.next_20eer_k$();
      if (this.observations_1.contains_1pg03j_k$(value) ? true : this.derivedStates_1.contains_1pg03j_k$(value))
        return true;
    }
    return false;
  };
  protoOf(CompositionImpl).prepareCompose_lcmlpp_k$ = function (block) {
    return this.composer_1.prepareCompose_lcmlpp_k$(block);
  };
  protoOf(CompositionImpl).recordReadOf_1u1d8w_k$ = function (value) {
    if (!_get_areChildrenComposing__c1uwup(this)) {
      var tmp0_safe_receiver = this.composer_1.get_currentRecomposeScope_c5ni63_k$();
      if (tmp0_safe_receiver == null)
        null;
      else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        tmp0_safe_receiver.set_used_1kdhet_k$(true);
        var alreadyRead = tmp0_safe_receiver.recordRead_ceszxl_k$(value);
        var tmp;
        if (!alreadyRead) {
          this.observations_1.add_euavbj_k$(value, tmp0_safe_receiver);
          var tmp_0;
          if (isInterface(value, DerivedState)) {
            this.derivedStates_1.removeScope_golunm_k$(value);
            var indexedObject = value.get_currentRecord_z6b6yp_k$().get_dependencies_cvhxma_k$();
            var inductionVariable = 0;
            var last = indexedObject.length;
            $l$loop: while (inductionVariable < last) {
              var dependency = indexedObject[inductionVariable];
              inductionVariable = inductionVariable + 1 | 0;
              if (dependency == null)
                break $l$loop;
              this.derivedStates_1.add_euavbj_k$(dependency, value);
            }
            tmp_0 = Unit_getInstance();
          }
          tmp = tmp_0;
        }
      }
    }
  };
  protoOf(CompositionImpl).recordWriteOf_gexenr_k$ = function (value) {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.lock_1;
    invalidateScopeOfLocked(this, value);
    var this_0 = this.derivedStates_1;
    var index = find_3(this_0, value);
    var tmp;
    if (index >= 0) {
      var this_1 = scopeSetAt(this_0, index);
      // Inline function 'kotlin.contracts.contract' call
      var values = this_1.get_values_ksazhn_k$();
      var inductionVariable = 0;
      var last = this_1.get_size_woubt6_k$();
      var tmp_0;
      if (inductionVariable < last) {
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          // Inline function 'androidx.compose.runtime.CompositionImpl.recordWriteOf.<anonymous>.<anonymous>' call
          var tmp_1 = values[i];
          var it = !(tmp_1 == null) ? tmp_1 : THROW_CCE();
          invalidateScopeOfLocked(this, it);
        }
         while (inductionVariable < last);
        tmp_0 = Unit_getInstance();
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  protoOf(CompositionImpl).recompose_gd07pb_k$ = function () {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.lock_1;
    // Inline function 'androidx.compose.runtime.CompositionImpl.recompose.<anonymous>' call
    drainPendingModificationsForCompositionLocked(this);
    // Inline function 'androidx.compose.runtime.CompositionImpl.guardChanges' call
    var tmp;
    try {
      // Inline function 'androidx.compose.runtime.CompositionImpl.trackAbandonedValues' call
      var success = false;
      var tmp_0;
      try {
        // Inline function 'kotlin.also' call
        // Inline function 'androidx.compose.runtime.CompositionImpl.recompose.<anonymous>.<anonymous>' call
        // Inline function 'androidx.compose.runtime.CompositionImpl.guardInvalidationsLocked' call
        var invalidations = takeInvalidations(this);
        var tmp_1;
        try {
          // Inline function 'androidx.compose.runtime.CompositionImpl.recompose.<anonymous>.<anonymous>.<anonymous>' call
          // Inline function 'kotlin.also' call
          var this_0 = this.composer_1.recompose_1lke6w_k$(invalidations);
          // Inline function 'kotlin.contracts.contract' call
          // Inline function 'androidx.compose.runtime.CompositionImpl.recompose.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
          if (!this_0) {
            drainPendingModificationsLocked(this);
          }
          tmp_1 = this_0;
        } catch ($p) {
          var tmp_2;
          if ($p instanceof Exception) {
            var e = $p;
            this.invalidations_1 = invalidations;
            throw e;
          } else {
            throw $p;
          }
        }
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.CompositionImpl.trackAbandonedValues.<anonymous>' call
        success = true;
        tmp_0 = tmp_1;
      }finally {
        var tmp_3;
        if (!success) {
          // Inline function 'kotlin.collections.isNotEmpty' call
          tmp_3 = !this.abandonSet_1.isEmpty_y1axqb_k$();
        } else {
          tmp_3 = false;
        }
        if (tmp_3) {
          (new RememberEventDispatcher(this.abandonSet_1)).dispatchAbandons_yvcxp4_k$();
        }
      }
      tmp = tmp_0;
    } catch ($p) {
      var tmp_4;
      if ($p instanceof Exception) {
        var e_0 = $p;
        abandonChanges(this);
        throw e_0;
      } else {
        throw $p;
      }
    }
    return tmp;
  };
  protoOf(CompositionImpl).insertMovableContent_a71or3_k$ = function (references) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'androidx.compose.runtime.snapshots.fastAll' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable = 0;
      var last = references.get_size_woubt6_k$() - 1 | 0;
      if (inductionVariable <= last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var item = references.get_c1px32_k$(index);
          // Inline function 'androidx.compose.runtime.snapshots.fastAll.<anonymous>' call
          // Inline function 'androidx.compose.runtime.CompositionImpl.insertMovableContent.<anonymous>' call
          if (!equals(item.get_first_irdx8n_k$().get_composition_q729_k$(), this)) {
            tmp$ret$1 = false;
            break $l$block;
          }
        }
         while (inductionVariable <= last);
      tmp$ret$1 = true;
    }
    runtimeCheck_0(tmp$ret$1);
    // Inline function 'androidx.compose.runtime.CompositionImpl.guardChanges' call
    var tmp;
    try {
      // Inline function 'androidx.compose.runtime.CompositionImpl.trackAbandonedValues' call
      var success = false;
      var tmp_0;
      try {
        // Inline function 'kotlin.also' call
        this.composer_1.insertMovableContentReferences_aqsjqf_k$(references);
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.CompositionImpl.trackAbandonedValues.<anonymous>' call
        success = true;
        tmp_0 = Unit_getInstance();
      }finally {
        var tmp_1;
        if (!success) {
          // Inline function 'kotlin.collections.isNotEmpty' call
          tmp_1 = !this.abandonSet_1.isEmpty_y1axqb_k$();
        } else {
          tmp_1 = false;
        }
        if (tmp_1) {
          (new RememberEventDispatcher(this.abandonSet_1)).dispatchAbandons_yvcxp4_k$();
        }
      }
      tmp = tmp_0;
    } catch ($p) {
      var tmp_2;
      if ($p instanceof Exception) {
        var e = $p;
        abandonChanges(this);
        throw e;
      } else {
        throw $p;
      }
    }
  };
  protoOf(CompositionImpl).disposeUnusedMovableContent_bobx08_k$ = function (state) {
    var manager = new RememberEventDispatcher(this.abandonSet_1);
    var slotTable = state.get_slotTable_jp6uvb_k$();
    // Inline function 'androidx.compose.runtime.SlotTable.write' call
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.SlotTable.write.<anonymous>' call
    var writer = slotTable.openWriter_7mgvvh_k$();
    var tmp;
    try {
      removeCurrentGroup(writer, manager);
      tmp = Unit_getInstance();
    }finally {
      writer.close_yn9xrc_k$();
    }
    manager.dispatchRememberObservers_gqht0m_k$();
  };
  protoOf(CompositionImpl).applyChanges_ynn7tn_k$ = function () {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.lock_1;
    // Inline function 'androidx.compose.runtime.CompositionImpl.guardChanges' call
    var tmp;
    try {
      // Inline function 'androidx.compose.runtime.CompositionImpl.trackAbandonedValues' call
      var success = false;
      var tmp_0;
      try {
        // Inline function 'kotlin.also' call
        applyChangesInLocked(this, this.changes_1);
        drainPendingModificationsLocked(this);
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.CompositionImpl.trackAbandonedValues.<anonymous>' call
        success = true;
        tmp_0 = Unit_getInstance();
      }finally {
        var tmp_1;
        if (!success) {
          // Inline function 'kotlin.collections.isNotEmpty' call
          tmp_1 = !this.abandonSet_1.isEmpty_y1axqb_k$();
        } else {
          tmp_1 = false;
        }
        if (tmp_1) {
          (new RememberEventDispatcher(this.abandonSet_1)).dispatchAbandons_yvcxp4_k$();
        }
      }
      tmp = tmp_0;
    } catch ($p) {
      var tmp_2;
      if ($p instanceof Exception) {
        var e = $p;
        abandonChanges(this);
        throw e;
      } else {
        throw $p;
      }
    }
  };
  protoOf(CompositionImpl).applyLateChanges_bkcue9_k$ = function () {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.lock_1;
    // Inline function 'androidx.compose.runtime.CompositionImpl.guardChanges' call
    var tmp;
    try {
      // Inline function 'androidx.compose.runtime.CompositionImpl.trackAbandonedValues' call
      var success = false;
      var tmp_0;
      try {
        // Inline function 'kotlin.also' call
        // Inline function 'androidx.compose.runtime.CompositionImpl.applyLateChanges.<anonymous>.<anonymous>' call
        // Inline function 'kotlin.collections.isNotEmpty' call
        if (!this.lateChanges_1.isEmpty_y1axqb_k$()) {
          applyChangesInLocked(this, this.lateChanges_1);
        }
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.CompositionImpl.trackAbandonedValues.<anonymous>' call
        success = true;
        tmp_0 = Unit_getInstance();
      }finally {
        var tmp_1;
        if (!success) {
          // Inline function 'kotlin.collections.isNotEmpty' call
          tmp_1 = !this.abandonSet_1.isEmpty_y1axqb_k$();
        } else {
          tmp_1 = false;
        }
        if (tmp_1) {
          (new RememberEventDispatcher(this.abandonSet_1)).dispatchAbandons_yvcxp4_k$();
        }
      }
      tmp = tmp_0;
    } catch ($p) {
      var tmp_2;
      if ($p instanceof Exception) {
        var e = $p;
        abandonChanges(this);
        throw e;
      } else {
        throw $p;
      }
    }
  };
  protoOf(CompositionImpl).changesApplied_368txy_k$ = function () {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.lock_1;
    // Inline function 'androidx.compose.runtime.CompositionImpl.guardChanges' call
    var tmp;
    try {
      // Inline function 'androidx.compose.runtime.CompositionImpl.trackAbandonedValues' call
      var success = false;
      var tmp_0;
      try {
        // Inline function 'kotlin.also' call
        // Inline function 'androidx.compose.runtime.CompositionImpl.changesApplied.<anonymous>.<anonymous>' call
        this.composer_1.changesApplied_368txy_k$();
        // Inline function 'kotlin.collections.isNotEmpty' call
        if (!this.abandonSet_1.isEmpty_y1axqb_k$()) {
          (new RememberEventDispatcher(this.abandonSet_1)).dispatchAbandons_yvcxp4_k$();
        }
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.CompositionImpl.trackAbandonedValues.<anonymous>' call
        success = true;
        tmp_0 = Unit_getInstance();
      }finally {
        var tmp_1;
        if (!success) {
          // Inline function 'kotlin.collections.isNotEmpty' call
          tmp_1 = !this.abandonSet_1.isEmpty_y1axqb_k$();
        } else {
          tmp_1 = false;
        }
        if (tmp_1) {
          (new RememberEventDispatcher(this.abandonSet_1)).dispatchAbandons_yvcxp4_k$();
        }
      }
      tmp = tmp_0;
    } catch ($p) {
      var tmp_2;
      if ($p instanceof Exception) {
        var e = $p;
        abandonChanges(this);
        throw e;
      } else {
        throw $p;
      }
    }
  };
  protoOf(CompositionImpl).invalidateAll_yol1g6_k$ = function () {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.lock_1;
    var indexedObject = this.slotTable_1.get_slots_iyl3po_k$();
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var element = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'androidx.compose.runtime.CompositionImpl.invalidateAll.<anonymous>.<anonymous>' call
      var tmp0_safe_receiver = element instanceof RecomposeScopeImpl ? element : null;
      if (tmp0_safe_receiver == null)
        null;
      else {
        tmp0_safe_receiver.invalidate_p4aufp_k$();
      }
    }
  };
  protoOf(CompositionImpl).verifyConsistent_iu76e3_k$ = function () {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.lock_1;
    var tmp;
    if (!this.get_isComposing_a8f9zw_k$()) {
      this.composer_1.verifyConsistent_iu76e3_k$();
      this.slotTable_1.verifyWellFormed_n3o9cq_k$();
      validateRecomposeScopeAnchors(this, this.slotTable_1);
      tmp = Unit_getInstance();
    }
  };
  protoOf(CompositionImpl).delegateInvalidations_uh0kaw_k$ = function (to, groupIndex, block) {
    var tmp;
    if ((!(to == null) ? !equals(to, this) : false) ? groupIndex >= 0 : false) {
      var tmp_0 = this;
      tmp_0.invalidationDelegate_1 = to instanceof CompositionImpl ? to : THROW_CCE();
      this.invalidationDelegateGroup_1 = groupIndex;
      var tmp_1;
      try {
        tmp_1 = block();
      }finally {
        this.invalidationDelegate_1 = null;
        this.invalidationDelegateGroup_1 = 0;
      }
      tmp = tmp_1;
    } else {
      tmp = block();
    }
    return tmp;
  };
  protoOf(CompositionImpl).invalidate_673xr8_k$ = function (scope, instance) {
    if (scope.get_defaultsInScope_yrfvqk_k$()) {
      scope.set_defaultsInvalid_xwkxv1_k$(true);
    }
    var anchor = scope.get_anchor_b1c8n2_k$();
    if (anchor == null ? true : !anchor.get_valid_j01e4z_k$())
      return InvalidationResult_IGNORED_getInstance();
    if (!this.slotTable_1.ownsAnchor_x2d87l_k$(anchor)) {
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      this.lock_1;
      // Inline function 'androidx.compose.runtime.CompositionImpl.invalidate.<anonymous>' call
      var delegate = this.invalidationDelegate_1;
      if ((delegate == null ? null : tryImminentInvalidation(delegate, scope, instance)) === true)
        return InvalidationResult_IMMINENT_getInstance();
      return InvalidationResult_IGNORED_getInstance();
    }
    if (!scope.get_canRecompose_8in6u0_k$())
      return InvalidationResult_IGNORED_getInstance();
    return invalidateChecked(this, scope, anchor, instance);
  };
  protoOf(CompositionImpl).recomposeScopeReleased_y5qeye_k$ = function (scope) {
    this.pendingInvalidScopes_1 = true;
  };
  protoOf(CompositionImpl).removeObservation_4c843y_k$ = function (instance, scope) {
    this.observations_1.remove_kuwh0s_k$(instance, scope);
  };
  protoOf(CompositionImpl).removeDerivedStateObservation_i55afc_k$ = function (state) {
    if (!this.observations_1.contains_1pg03j_k$(state)) {
      this.derivedStates_1.removeScope_golunm_k$(state);
    }
  };
  protoOf(CompositionImpl).$set_composable$$composable_lbzvrn_k$ = function (set__$_ezb9bk) {
    this.composable_1 = set__$_ezb9bk;
  };
  protoOf(CompositionImpl).setContent$composable_hmey4i_k$ = function (content) {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!this.disposed_1) {
      // Inline function 'androidx.compose.runtime.CompositionImpl.setContent$composable.<anonymous>' call
      var message = 'The composition is disposed';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    this.$set_composable$$composable_lbzvrn_k$(content);
    this.parent_1.composeInitial$composable_bp8pey_k$(this, this.composable_1);
  };
  protoOf(CompositionImpl).composeContent$composable_pp6goe_k$ = function (content) {
    // Inline function 'androidx.compose.runtime.CompositionImpl.guardChanges' call
    var tmp;
    try {
      // Inline function 'androidx.compose.runtime.CompositionImpl.trackAbandonedValues' call
      var success = false;
      var tmp_0;
      try {
        // Inline function 'kotlin.also' call
        // Inline function 'androidx.compose.runtime.CompositionImpl.composeContent$composable.<anonymous>' call
        // Inline function 'androidx.compose.runtime.synchronized' call
        // Inline function 'kotlinx.atomicfu.locks.synchronized' call
        this.lock_1;
        drainPendingModificationsForCompositionLocked(this);
        // Inline function 'androidx.compose.runtime.CompositionImpl.guardInvalidationsLocked' call
        var invalidations = takeInvalidations(this);
        var tmp_1;
        try {
          this.composer_1.composeContent$composable_50l8f5_k$(invalidations, content);
          tmp_1 = Unit_getInstance();
        } catch ($p) {
          var tmp_2;
          if ($p instanceof Exception) {
            var e = $p;
            this.invalidations_1 = invalidations;
            throw e;
          } else {
            throw $p;
          }
        }
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.CompositionImpl.trackAbandonedValues.<anonymous>' call
        success = true;
        tmp_0 = Unit_getInstance();
      }finally {
        var tmp_3;
        if (!success) {
          // Inline function 'kotlin.collections.isNotEmpty' call
          tmp_3 = !this.abandonSet_1.isEmpty_y1axqb_k$();
        } else {
          tmp_3 = false;
        }
        if (tmp_3) {
          (new RememberEventDispatcher(this.abandonSet_1)).dispatchAbandons_yvcxp4_k$();
        }
      }
      tmp = tmp_0;
    } catch ($p) {
      var tmp_4;
      if ($p instanceof Exception) {
        var e_0 = $p;
        abandonChanges(this);
        throw e_0;
      } else {
        throw $p;
      }
    }
  };
  function ControlledComposition() {
  }
  function ComposableLambda$invoke$ref_0($boundThis) {
    return function (p0, p1) {
      return $boundThis.invoke_z8di7s_k$(p0, p1);
    };
  }
  function ComposableSingletons$CompositionKt$lambda_1$lambda_xm0u9s($composer, $changed) {
    var $composer_0 = $composer;
    sourceInformation($composer_0, 'C:Composition.kt#9igjgp');
    if (!(($changed & 11) === 2) ? true : !$composer_0.get_skipping_3owdve_k$()) {
      if (isTraceInProgress()) {
        traceEventStart(954879418, $changed, -1, 'androidx.compose.runtime.ComposableSingletons$CompositionKt.lambda-1.<anonymous> (Composition.kt:506)');
      }
      if (isTraceInProgress()) {
        traceEventEnd();
      }
    } else {
      $composer_0.skipToGroupEnd_lh3zi2_k$();
    }
    return Unit_getInstance();
  }
  function ComposableLambda$invoke$ref_1($boundThis) {
    return function (p0, p1) {
      return $boundThis.invoke_z8di7s_k$(p0, p1);
    };
  }
  function ComposableSingletons$CompositionKt$lambda_2$lambda_8lgqn5($composer, $changed) {
    var $composer_0 = $composer;
    sourceInformation($composer_0, 'C:Composition.kt#9igjgp');
    if (!(($changed & 11) === 2) ? true : !$composer_0.get_skipping_3owdve_k$()) {
      if (isTraceInProgress()) {
        traceEventStart(1918065384, $changed, -1, 'androidx.compose.runtime.ComposableSingletons$CompositionKt.lambda-2.<anonymous> (Composition.kt:597)');
      }
      if (isTraceInProgress()) {
        traceEventEnd();
      }
    } else {
      $composer_0.skipToGroupEnd_lh3zi2_k$();
    }
    return Unit_getInstance();
  }
  function ComposableSingletons$CompositionKt() {
    ComposableSingletons$CompositionKt_instance = this;
    var tmp = this;
    tmp.lambda_1_r8sbbp_1 = ComposableLambda$invoke$ref_0(composableLambdaInstance(954879418, false, ComposableSingletons$CompositionKt$lambda_1$lambda_xm0u9s));
    var tmp_0 = this;
    tmp_0.lambda_2_r8sbbo_1 = ComposableLambda$invoke$ref_1(composableLambdaInstance(1918065384, false, ComposableSingletons$CompositionKt$lambda_2$lambda_8lgqn5));
  }
  protoOf(ComposableSingletons$CompositionKt).get_lambda_1_bzdzzo_k$ = function () {
    return this.lambda_1_r8sbbp_1;
  };
  protoOf(ComposableSingletons$CompositionKt).get_lambda_2_bzdzzp_k$ = function () {
    return this.lambda_2_r8sbbo_1;
  };
  var ComposableSingletons$CompositionKt_instance;
  function ComposableSingletons$CompositionKt_getInstance() {
    if (ComposableSingletons$CompositionKt_instance == null)
      new ComposableSingletons$CompositionKt();
    return ComposableSingletons$CompositionKt_instance;
  }
  function removeValueIf(_this__u8e3s4, predicate) {
    _init_properties_Composition_kt__t5pjw8();
    var iter = _this__u8e3s4.iterator_jk1svi_k$();
    while (iter.hasNext_bitz1p_k$()) {
      if (predicate(iter.next_20eer_k$())) {
        iter.remove_ldkf9o_k$();
      }
    }
  }
  function addValue(_this__u8e3s4, key, value) {
    _init_properties_Composition_kt__t5pjw8();
    if (_this__u8e3s4.contains_qayb5o_k$(key)) {
      var tmp0_safe_receiver = _this__u8e3s4.get_csq61f_k$(key);
      if (tmp0_safe_receiver == null)
        null;
      else
        tmp0_safe_receiver.add_jkjo25_k$(value);
    } else {
      // Inline function 'kotlin.also' call
      var this_0 = new IdentityArraySet();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.addValue.<anonymous>' call
      this_0.add_jkjo25_k$(value);
      _this__u8e3s4.set_d3rebl_k$(key, this_0);
    }
  }
  function get_recomposeCoroutineContext(_this__u8e3s4) {
    _init_properties_Composition_kt__t5pjw8();
    var tmp0_safe_receiver = _this__u8e3s4 instanceof CompositionImpl ? _this__u8e3s4 : null;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.get_recomposeContext_wkc8ef_k$();
    return tmp1_elvis_lhs == null ? EmptyCoroutineContext_getInstance() : tmp1_elvis_lhs;
  }
  function ControlledComposition_0(applier, parent) {
    _init_properties_Composition_kt__t5pjw8();
    return new CompositionImpl(parent, applier);
  }
  var properties_initialized_Composition_kt_u7hvq2;
  function _init_properties_Composition_kt__t5pjw8() {
    if (!properties_initialized_Composition_kt_u7hvq2) {
      properties_initialized_Composition_kt_u7hvq2 = true;
      PendingApplyNoModifications = new Object();
    }
  }
  function get_EmptyPersistentCompositionLocalMap() {
    _init_properties_CompositionContext_kt__4g1p1h();
    return EmptyPersistentCompositionLocalMap;
  }
  var EmptyPersistentCompositionLocalMap;
  function get_$stableprop_5() {
    return 0;
  }
  function CompositionContext() {
    this.$stable_1 = 0;
  }
  protoOf(CompositionContext).recordInspectionTable_v0ydx3_k$ = function (table) {
  };
  protoOf(CompositionContext).registerComposer_4k9eh7_k$ = function (composer) {
  };
  protoOf(CompositionContext).unregisterComposer_3dsghw_k$ = function (composer) {
  };
  protoOf(CompositionContext).getCompositionLocalScope_nk4i7x_k$ = function () {
    return get_EmptyPersistentCompositionLocalMap();
  };
  protoOf(CompositionContext).startComposing_mvf071_k$ = function () {
  };
  protoOf(CompositionContext).doneComposing_s7ssbn_k$ = function () {
  };
  protoOf(CompositionContext).movableContentStateResolve_htz57n_k$ = function (reference) {
    return null;
  };
  var properties_initialized_CompositionContext_kt_mk393b;
  function _init_properties_CompositionContext_kt__4g1p1h() {
    if (!properties_initialized_CompositionContext_kt_mk393b) {
      properties_initialized_CompositionContext_kt_mk393b = true;
      EmptyPersistentCompositionLocalMap = persistentCompositionLocalHashMapOf();
    }
  }
  function get_$stableprop_6() {
    return 0;
  }
  function CompositionLocal(defaultFactory) {
    this.defaultValueHolder_1 = new LazyValueHolder(defaultFactory);
    this.$stable_1 = 0;
  }
  protoOf(CompositionLocal).get_defaultValueHolder_fyv2md_k$ = function () {
    return this.defaultValueHolder_1;
  };
  protoOf(CompositionLocal).get_current_jwi6j4_k$ = function () {
    illegalDecoyCallException('<get-current>');
  };
  protoOf(CompositionLocal).$get_current$$composable_nxoy3y_k$ = function ($composer, $changed) {
    var $composer_0 = $composer;
    sourceInformationMarkerStart($composer_0, 858843746, 'CC($get-current$$composable):CompositionLocal.kt#9igjgp');
    var tmp0 = $composer_0.consume_ebzcrh_k$(this);
    sourceInformationMarkerEnd($composer_0);
    return tmp0;
  };
  function get_$stableprop_7() {
    return 0;
  }
  function ProvidableCompositionLocal(defaultFactory) {
    CompositionLocal.call(this, defaultFactory);
    this.$stable_2 = 0;
  }
  protoOf(ProvidableCompositionLocal).provides_3agxel_k$ = function (value) {
    return new ProvidedValue(this, value, true);
  };
  protoOf(ProvidableCompositionLocal).providesDefault_33irs0_k$ = function (value) {
    return new ProvidedValue(this, value, false);
  };
  function staticCompositionLocalOf(defaultFactory) {
    return new StaticProvidableCompositionLocal(defaultFactory);
  }
  function StaticProvidableCompositionLocal(defaultFactory) {
    ProvidableCompositionLocal.call(this, defaultFactory);
  }
  protoOf(StaticProvidableCompositionLocal).provided_m49nu4_k$ = function (value) {
    illegalDecoyCallException('provided');
  };
  protoOf(StaticProvidableCompositionLocal).provided$composable_k94bei_k$ = function (value, $composer, $changed) {
    var $composer_0 = $composer;
    $composer_0.startReplaceableGroup_ip860b_k$(571516549);
    sourceInformation($composer_0, 'C(provided$composable):CompositionLocal.kt#9igjgp');
    if (isTraceInProgress()) {
      traceEventStart(571516549, $changed, -1, 'androidx.compose.runtime.StaticProvidableCompositionLocal.provided$composable (CompositionLocal.kt:139)');
    }
    var tmp0 = new StaticValueHolder(value);
    if (isTraceInProgress()) {
      traceEventEnd();
    }
    $composer_0.endReplaceableGroup_ern0ak_k$();
    return tmp0;
  };
  function compositionLocalOf(policy, defaultFactory) {
    policy = policy === VOID ? structuralEqualityPolicy() : policy;
    return new DynamicProvidableCompositionLocal(policy, defaultFactory);
  }
  function CompositionLocalProvider$composable(values, content, $composer, $changed) {
    var $composer_0 = $composer;
    $composer_0 = $composer_0.startRestartGroup_lebv1i_k$(-266554972);
    sourceInformation($composer_0, 'C(CompositionLocalProvider$composable)P(1)227@10002L9:CompositionLocal.kt#9igjgp');
    var $dirty = $changed;
    if (isTraceInProgress()) {
      traceEventStart(-266554972, $dirty, -1, 'androidx.compose.runtime.CompositionLocalProvider$composable (CompositionLocal.kt:225)');
    }
    $composer_0.startProviders_3uyo2a_k$(values);
    content($composer_0, 14 & $dirty >> 3);
    $composer_0.endProviders_fp8qbb_k$();
    if (isTraceInProgress()) {
      traceEventEnd();
    }
    var tmp0_safe_receiver = $composer_0.endRestartGroup_yxpjv9_k$();
    if (tmp0_safe_receiver === null)
      null;
    else {
      tmp0_safe_receiver.updateScope_t8jcf_k$(CompositionLocalProvider$composable$lambda(values, content, $changed));
    }
  }
  function _get_policy__v7o7q1($this) {
    return $this.policy_1;
  }
  function DynamicProvidableCompositionLocal(policy, defaultFactory) {
    ProvidableCompositionLocal.call(this, defaultFactory);
    this.policy_1 = policy;
  }
  protoOf(DynamicProvidableCompositionLocal).provided_m49nu4_k$ = function (value) {
    illegalDecoyCallException('provided');
  };
  protoOf(DynamicProvidableCompositionLocal).provided$composable_k94bei_k$ = function (value, $composer, $changed) {
    var $composer_0 = $composer;
    $composer_0.startReplaceableGroup_ip860b_k$(-1327537144);
    sourceInformation($composer_0, 'C(provided$composable)*125@5325L42:CompositionLocal.kt#9igjgp');
    if (isTraceInProgress()) {
      traceEventStart(-1327537144, $changed, -1, 'androidx.compose.runtime.DynamicProvidableCompositionLocal.provided$composable (CompositionLocal.kt:125)');
    }
    // Inline function 'kotlin.apply' call
    // Inline function 'androidx.compose.runtime.remember$composable' call
    var $composer_1 = $composer_0;
    $composer_1.startReplaceableGroup_ip860b_k$(547886695);
    sourceInformation($composer_1, 'CC(remember$composable):Composables.kt#9igjgp');
    // Inline function 'androidx.compose.runtime.cache' call
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.cache.<anonymous>' call
    var it = $composer_1.rememberedValue_4dg93v_k$();
    var tmp;
    if (false ? true : it === Companion_getInstance_1().get_Empty_i9b85g_k$()) {
      // Inline function 'androidx.compose.runtime.DynamicProvidableCompositionLocal.provided$composable.<anonymous>' call
      var value_0 = mutableStateOf(value, this.policy_1);
      $composer_1.updateRememberedValue_l1wh71_k$(value_0);
      tmp = value_0;
    } else {
      tmp = it;
    }
    var tmp_0 = tmp;
    var tmp0 = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
    $composer_1.endReplaceableGroup_ern0ak_k$();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.DynamicProvidableCompositionLocal.provided$composable.<anonymous>' call
    tmp0.set_value_v1vabv_k$(value);
    if (isTraceInProgress()) {
      traceEventEnd();
    }
    $composer_0.endReplaceableGroup_ern0ak_k$();
    return tmp0;
  };
  function CompositionLocalProvider$composable$lambda($values, $content, $$changed) {
    return function ($composer, $force) {
      CompositionLocalProvider$composable($values.slice(), $content, $composer, updateChangedFlags($$changed | 1));
      return Unit_getInstance();
    };
  }
  function Builder() {
  }
  function PersistentCompositionLocalMap() {
  }
  function Companion_1() {
    Companion_instance_1 = this;
    this.Empty_1 = persistentCompositionLocalHashMapOf();
  }
  protoOf(Companion_1).get_Empty_i9b85g_k$ = function () {
    return this.Empty_1;
  };
  var Companion_instance_1;
  function Companion_getInstance_3() {
    if (Companion_instance_1 == null)
      new Companion_1();
    return Companion_instance_1;
  }
  function CompositionLocalMap() {
  }
  function read(_this__u8e3s4, key) {
    var tmp;
    if (contains_0(_this__u8e3s4, key)) {
      tmp = getValueOf(_this__u8e3s4, key);
    } else {
      tmp = key.get_defaultValueHolder_fyv2md_k$().get_value_j01efc_k$();
    }
    return tmp;
  }
  function contains_0(_this__u8e3s4, key) {
    return _this__u8e3s4.containsKey_aw81wo_k$(key instanceof CompositionLocal ? key : THROW_CCE());
  }
  function getValueOf(_this__u8e3s4, key) {
    var tmp0_safe_receiver = _this__u8e3s4.get_wei43m_k$(key instanceof CompositionLocal ? key : THROW_CCE());
    var tmp = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.get_value_j01efc_k$();
    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
  }
  function mutate(_this__u8e3s4, mutator) {
    // Inline function 'kotlin.apply' call
    var this_0 = _this__u8e3s4.builder_3thy1n_k$();
    // Inline function 'kotlin.contracts.contract' call
    mutator(this_0);
    return this_0.build_1k0s4u_k$();
  }
  function compositionLocalMapOf$composable(values, parentScope, $composer, $changed) {
    var $composer_0 = $composer;
    $composer_0.startReplaceableGroup_ip860b_k$(-2040419351);
    sourceInformation($composer_0, 'C(compositionLocalMapOf$composable)P(1):CompositionLocalMap.kt#9igjgp');
    if (isTraceInProgress()) {
      traceEventStart(-2040419351, $changed, -1, 'androidx.compose.runtime.compositionLocalMapOf$composable (CompositionLocalMap.kt:91)');
    }
    var result = persistentCompositionLocalHashMapOf();
    // Inline function 'androidx.compose.runtime.mutate' call
    // Inline function 'kotlin.apply' call
    var this_0 = result.builder_3thy1n_k$();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.compositionLocalMapOf$composable.<anonymous>' call
    var inductionVariable = 0;
    var last = values.length;
    while (inductionVariable < last) {
      var provided = values[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      $composer_0.startReplaceableGroup_ip860b_k$(1391435594);
      sourceInformation($composer_0, '*101@4372L24');
      if (provided.get_canOverride_d3ev6b_k$() ? true : !contains_0(parentScope, provided.get_compositionLocal_3mcxg6_k$())) {
        // Inline function 'kotlin.collections.set' call
        var tmp = provided.get_compositionLocal_3mcxg6_k$();
        var key = tmp instanceof CompositionLocal ? tmp : THROW_CCE();
        var value = provided.get_compositionLocal_3mcxg6_k$().provided$composable_k94bei_k$(provided.get_value_j01efc_k$(), $composer_0, 0);
        this_0.put_4fpzoq_k$(key, value);
      }
      $composer_0.endReplaceableGroup_ern0ak_k$();
    }
    var tmp0 = this_0.build_1k0s4u_k$();
    if (isTraceInProgress()) {
      traceEventEnd();
    }
    $composer_0.endReplaceableGroup_ern0ak_k$();
    return tmp0;
  }
  function get_calculationBlockNestedLevel() {
    _init_properties_DerivedState_kt__eqt0x8();
    return calculationBlockNestedLevel;
  }
  var calculationBlockNestedLevel;
  function get_derivedStateObservers() {
    _init_properties_DerivedState_kt__eqt0x8();
    return derivedStateObservers;
  }
  var derivedStateObservers;
  function DerivedStateObserver() {
  }
  function Record() {
  }
  function DerivedState() {
  }
  function observeDerivedStateRecalculations(observer, block) {
    _init_properties_DerivedState_kt__eqt0x8();
    var observers = derivedStateObservers_0();
    try {
      observers.add_wl2rvy_k$(observer);
      block();
    }finally {
      // Inline function 'androidx.compose.runtime.collection.MutableVector.lastIndex' call
      var tmp$ret$0 = observers.get_size_woubt6_k$() - 1 | 0;
      observers.removeAt_6niowx_k$(tmp$ret$0);
    }
  }
  function derivedStateObservers_0() {
    _init_properties_DerivedState_kt__eqt0x8();
    var tmp0_elvis_lhs = get_derivedStateObservers().get_26vq_k$();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      // Inline function 'kotlin.also' call
      // Inline function 'androidx.compose.runtime.collection.MutableVector' call
      // Inline function 'kotlin.arrayOfNulls' call
      var tmp$ret$0 = fillArrayVal(Array(0), null);
      var this_0 = new MutableVector(tmp$ret$0, 0);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.derivedStateObservers.<anonymous>' call
      get_derivedStateObservers().set_bjwkek_k$(this_0);
      tmp = this_0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  var properties_initialized_DerivedState_kt_scch8q;
  function _init_properties_DerivedState_kt__eqt0x8() {
    if (!properties_initialized_DerivedState_kt_scch8q) {
      properties_initialized_DerivedState_kt_scch8q = true;
      calculationBlockNestedLevel = new SnapshotThreadLocal();
      derivedStateObservers = new SnapshotThreadLocal();
    }
  }
  function DisallowComposableCalls() {
  }
  protoOf(DisallowComposableCalls).equals = function (other) {
    if (!(other instanceof DisallowComposableCalls))
      return false;
    other instanceof DisallowComposableCalls || THROW_CCE();
    return true;
  };
  protoOf(DisallowComposableCalls).hashCode = function () {
    return 0;
  };
  protoOf(DisallowComposableCalls).toString = function () {
    return '@androidx.compose.runtime.DisallowComposableCalls()';
  };
  function get_InternalDisposableEffectScope() {
    _init_properties_Effects_kt__be5lps();
    return InternalDisposableEffectScope;
  }
  var InternalDisposableEffectScope;
  function get_$stableprop_8() {
    return 0;
  }
  function _no_name_provided__qut3iv($onDisposeEffect) {
    this.$onDisposeEffect_1 = $onDisposeEffect;
  }
  protoOf(_no_name_provided__qut3iv).dispose_3nnxhr_k$ = function () {
    this.$onDisposeEffect_1();
  };
  function DisposableEffectScope() {
    this.$stable_1 = 0;
  }
  protoOf(DisposableEffectScope).onDispose_5padaw_k$ = function (onDisposeEffect) {
    return new _no_name_provided__qut3iv(onDisposeEffect);
  };
  function DisposableEffectResult() {
  }
  function LaunchedEffect$composable(key1, block, $composer, $changed) {
    _init_properties_Effects_kt__be5lps();
    var $composer_0 = $composer;
    $composer_0.startReplaceableGroup_ip860b_k$(1556009691);
    sourceInformation($composer_0, 'C(LaunchedEffect$composable)P(1)337@14241L58:Effects.kt#9igjgp');
    if (isTraceInProgress()) {
      traceEventStart(1556009691, $changed, -1, 'androidx.compose.runtime.LaunchedEffect$composable (Effects.kt:332)');
    }
    var applyContext = $composer_0.get_applyCoroutineContext_gadgx0_k$();
    // Inline function 'androidx.compose.runtime.remember$composable' call
    var $composer_1 = $composer_0;
    $composer_1.startReplaceableGroup_ip860b_k$(-838505973);
    sourceInformation($composer_1, 'CC(remember$composable)P(1):Composables.kt#9igjgp');
    // Inline function 'androidx.compose.runtime.cache' call
    var invalid = $composer_1.changed_ga7h3f_k$(key1);
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.cache.<anonymous>' call
    var it = $composer_1.rememberedValue_4dg93v_k$();
    var tmp;
    if (invalid ? true : it === Companion_getInstance_1().get_Empty_i9b85g_k$()) {
      // Inline function 'androidx.compose.runtime.LaunchedEffect$composable.<anonymous>' call
      var value = new LaunchedEffectImpl(applyContext, block);
      $composer_1.updateRememberedValue_l1wh71_k$(value);
      tmp = value;
    } else {
      tmp = it;
    }
    var tmp_0 = tmp;
    (tmp_0 == null ? true : !(tmp_0 == null)) || THROW_CCE();
    $composer_1.endReplaceableGroup_ern0ak_k$();
    if (isTraceInProgress()) {
      traceEventEnd();
    }
    $composer_0.endReplaceableGroup_ern0ak_k$();
  }
  function _get_task__de30x2($this) {
    return $this.task_1;
  }
  function _get_scope__bi2zur($this) {
    return $this.scope_1;
  }
  function _set_job__4w8fzc($this, _set____db54di) {
    $this.job_1 = _set____db54di;
  }
  function _get_job__e6b14k($this) {
    return $this.job_1;
  }
  function LaunchedEffectImpl(parentCoroutineContext, task) {
    this.task_1 = task;
    this.scope_1 = CoroutineScope(parentCoroutineContext);
    this.job_1 = null;
  }
  protoOf(LaunchedEffectImpl).onRemembered_68t2e3_k$ = function () {
    var tmp0_safe_receiver = this.job_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      cancel(tmp0_safe_receiver, 'Old job was still running!');
    }
    this.job_1 = launch(this.scope_1, VOID, VOID, this.task_1);
  };
  protoOf(LaunchedEffectImpl).onForgotten_pbqifp_k$ = function () {
    var tmp0_safe_receiver = this.job_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.cancel_hkmm2i_k$(new LeftCompositionCancellationException());
    }
    this.job_1 = null;
  };
  protoOf(LaunchedEffectImpl).onAbandoned_1gx7a3_k$ = function () {
    var tmp0_safe_receiver = this.job_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.cancel_hkmm2i_k$(new LeftCompositionCancellationException());
    }
    this.job_1 = null;
  };
  function LeftCompositionCancellationException() {
    PlatformOptimizedCancellationException.call(this, 'The coroutine scope left the composition');
    captureStack(this, LeftCompositionCancellationException);
  }
  function DisposableEffect$composable(key1, effect, $composer, $changed) {
    _init_properties_Effects_kt__be5lps();
    var $composer_0 = $composer;
    $composer_0.startReplaceableGroup_ip860b_k$(927399050);
    sourceInformation($composer_0, 'C(DisposableEffect$composable)P(1)154@6171L47:Effects.kt#9igjgp');
    if (isTraceInProgress()) {
      traceEventStart(927399050, $changed, -1, 'androidx.compose.runtime.DisposableEffect$composable (Effects.kt:150)');
    }
    // Inline function 'androidx.compose.runtime.remember$composable' call
    var $composer_1 = $composer_0;
    $composer_1.startReplaceableGroup_ip860b_k$(-838505973);
    sourceInformation($composer_1, 'CC(remember$composable)P(1):Composables.kt#9igjgp');
    // Inline function 'androidx.compose.runtime.cache' call
    var invalid = $composer_1.changed_ga7h3f_k$(key1);
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.cache.<anonymous>' call
    var it = $composer_1.rememberedValue_4dg93v_k$();
    var tmp;
    if (invalid ? true : it === Companion_getInstance_1().get_Empty_i9b85g_k$()) {
      // Inline function 'androidx.compose.runtime.DisposableEffect$composable.<anonymous>' call
      var value = new DisposableEffectImpl(effect);
      $composer_1.updateRememberedValue_l1wh71_k$(value);
      tmp = value;
    } else {
      tmp = it;
    }
    var tmp_0 = tmp;
    (tmp_0 == null ? true : !(tmp_0 == null)) || THROW_CCE();
    $composer_1.endReplaceableGroup_ern0ak_k$();
    if (isTraceInProgress()) {
      traceEventEnd();
    }
    $composer_0.endReplaceableGroup_ern0ak_k$();
  }
  function SideEffect$composable(effect, $composer, $changed) {
    _init_properties_Effects_kt__be5lps();
    var $composer_0 = $composer;
    $composer_0.startReplaceableGroup_ip860b_k$(-706403066);
    sourceInformation($composer_0, 'C(SideEffect$composable):Effects.kt#9igjgp');
    if (isTraceInProgress()) {
      traceEventStart(-706403066, $changed, -1, 'androidx.compose.runtime.SideEffect$composable (Effects.kt:44)');
    }
    $composer_0.recordSideEffect_pzrgf_k$(effect);
    if (isTraceInProgress()) {
      traceEventEnd();
    }
    $composer_0.endReplaceableGroup_ern0ak_k$();
  }
  function _get_effect__7gra1m($this) {
    return $this.effect_1;
  }
  function _set_onDispose__eibnf($this, _set____db54di) {
    $this.onDispose_1 = _set____db54di;
  }
  function _get_onDispose__swc4r5($this) {
    return $this.onDispose_1;
  }
  function DisposableEffectImpl(effect) {
    this.effect_1 = effect;
    this.onDispose_1 = null;
  }
  protoOf(DisposableEffectImpl).onRemembered_68t2e3_k$ = function () {
    this.onDispose_1 = this.effect_1(get_InternalDisposableEffectScope());
  };
  protoOf(DisposableEffectImpl).onForgotten_pbqifp_k$ = function () {
    var tmp0_safe_receiver = this.onDispose_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.dispose_3nnxhr_k$();
    }
    this.onDispose_1 = null;
  };
  protoOf(DisposableEffectImpl).onAbandoned_1gx7a3_k$ = function () {
  };
  function DisposableEffect$composable_0(keys, effect, $composer, $changed) {
    _init_properties_Effects_kt__be5lps();
    var $composer_0 = $composer;
    $composer_0.startReplaceableGroup_ip860b_k$(-1541565433);
    sourceInformation($composer_0, 'C(DisposableEffect$composable)P(1)275@11877L48:Effects.kt#9igjgp');
    if (isTraceInProgress()) {
      traceEventStart(-1541565433, $changed, -1, 'androidx.compose.runtime.DisposableEffect$composable (Effects.kt:271)');
    }
    // Inline function 'androidx.compose.runtime.remember$composable' call
    var keys_0 = keys.slice();
    var $composer_1 = $composer_0;
    $composer_1.startReplaceableGroup_ip860b_k$(-1603429786);
    sourceInformation($composer_1, 'CC(remember$composable)P(1):Composables.kt#9igjgp');
    var invalid = false;
    var inductionVariable = 0;
    var last = keys_0.length;
    while (inductionVariable < last) {
      var key = keys_0[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      invalid = !!(invalid | $composer_1.changed_ga7h3f_k$(key));
    }
    // Inline function 'androidx.compose.runtime.cache' call
    var invalid_0 = invalid;
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.cache.<anonymous>' call
    var it = $composer_1.rememberedValue_4dg93v_k$();
    var tmp;
    if (invalid_0 ? true : it === Companion_getInstance_1().get_Empty_i9b85g_k$()) {
      // Inline function 'androidx.compose.runtime.DisposableEffect$composable.<anonymous>' call
      var value = new DisposableEffectImpl(effect);
      $composer_1.updateRememberedValue_l1wh71_k$(value);
      tmp = value;
    } else {
      tmp = it;
    }
    var tmp_0 = tmp;
    (tmp_0 == null ? true : !(tmp_0 == null)) || THROW_CCE();
    $composer_1.endReplaceableGroup_ern0ak_k$();
    if (isTraceInProgress()) {
      traceEventEnd();
    }
    $composer_0.endReplaceableGroup_ern0ak_k$();
  }
  function DisposableEffect$composable_1(key1, key2, effect, $composer, $changed) {
    _init_properties_Effects_kt__be5lps();
    var $composer_0 = $composer;
    $composer_0.startReplaceableGroup_ip860b_k$(235732070);
    sourceInformation($composer_0, 'C(DisposableEffect$composable)P(1,2)194@8057L53:Effects.kt#9igjgp');
    if (isTraceInProgress()) {
      traceEventStart(235732070, $changed, -1, 'androidx.compose.runtime.DisposableEffect$composable (Effects.kt:189)');
    }
    // Inline function 'androidx.compose.runtime.remember$composable' call
    var $composer_1 = $composer_0;
    $composer_1.startReplaceableGroup_ip860b_k$(-1124426577);
    sourceInformation($composer_1, 'CC(remember$composable)P(1,2):Composables.kt#9igjgp');
    // Inline function 'androidx.compose.runtime.cache' call
    var invalid = !!($composer_1.changed_ga7h3f_k$(key1) | $composer_1.changed_ga7h3f_k$(key2));
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.cache.<anonymous>' call
    var it = $composer_1.rememberedValue_4dg93v_k$();
    var tmp;
    if (invalid ? true : it === Companion_getInstance_1().get_Empty_i9b85g_k$()) {
      // Inline function 'androidx.compose.runtime.DisposableEffect$composable.<anonymous>' call
      var value = new DisposableEffectImpl(effect);
      $composer_1.updateRememberedValue_l1wh71_k$(value);
      tmp = value;
    } else {
      tmp = it;
    }
    var tmp_0 = tmp;
    (tmp_0 == null ? true : !(tmp_0 == null)) || THROW_CCE();
    $composer_1.endReplaceableGroup_ern0ak_k$();
    if (isTraceInProgress()) {
      traceEventEnd();
    }
    $composer_0.endReplaceableGroup_ern0ak_k$();
  }
  var properties_initialized_Effects_kt_cj8kem;
  function _init_properties_Effects_kt__be5lps() {
    if (!properties_initialized_Effects_kt_cj8kem) {
      properties_initialized_Effects_kt_cj8kem = true;
      InternalDisposableEffectScope = new DisposableEffectScope();
    }
  }
  function ExperimentalComposeApi() {
  }
  protoOf(ExperimentalComposeApi).equals = function (other) {
    if (!(other instanceof ExperimentalComposeApi))
      return false;
    other instanceof ExperimentalComposeApi || THROW_CCE();
    return true;
  };
  protoOf(ExperimentalComposeApi).hashCode = function () {
    return 0;
  };
  protoOf(ExperimentalComposeApi).toString = function () {
    return '@androidx.compose.runtime.ExperimentalComposeApi()';
  };
  function ExplicitGroupsComposable() {
  }
  protoOf(ExplicitGroupsComposable).equals = function (other) {
    if (!(other instanceof ExplicitGroupsComposable))
      return false;
    other instanceof ExplicitGroupsComposable || THROW_CCE();
    return true;
  };
  protoOf(ExplicitGroupsComposable).hashCode = function () {
    return 0;
  };
  protoOf(ExplicitGroupsComposable).toString = function () {
    return '@androidx.compose.runtime.ExplicitGroupsComposable()';
  };
  function Immutable() {
  }
  protoOf(Immutable).equals = function (other) {
    if (!(other instanceof Immutable))
      return false;
    other instanceof Immutable || THROW_CCE();
    return true;
  };
  protoOf(Immutable).hashCode = function () {
    return 0;
  };
  protoOf(Immutable).toString = function () {
    return '@androidx.compose.runtime.Immutable()';
  };
  function InternalComposeApi() {
  }
  protoOf(InternalComposeApi).equals = function (other) {
    if (!(other instanceof InternalComposeApi))
      return false;
    other instanceof InternalComposeApi || THROW_CCE();
    return true;
  };
  protoOf(InternalComposeApi).hashCode = function () {
    return 0;
  };
  protoOf(InternalComposeApi).toString = function () {
    return '@androidx.compose.runtime.InternalComposeApi()';
  };
  function InternalComposeTracingApi() {
  }
  protoOf(InternalComposeTracingApi).equals = function (other) {
    if (!(other instanceof InternalComposeTracingApi))
      return false;
    other instanceof InternalComposeTracingApi || THROW_CCE();
    return true;
  };
  protoOf(InternalComposeTracingApi).hashCode = function () {
    return 0;
  };
  protoOf(InternalComposeTracingApi).toString = function () {
    return '@androidx.compose.runtime.InternalComposeTracingApi()';
  };
  function hashCodeOf($this, value) {
    var tmp;
    if (value instanceof Enum) {
      tmp = value.get_ordinal_ip24qg_k$();
    } else {
      var tmp1_elvis_lhs = value == null ? null : hashCode(value);
      tmp = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    }
    return tmp;
  }
  function JoinedKey(left, right) {
    this.left_1 = left;
    this.right_1 = right;
  }
  protoOf(JoinedKey).get_left_woprgw_k$ = function () {
    return this.left_1;
  };
  protoOf(JoinedKey).get_right_ixz7xv_k$ = function () {
    return this.right_1;
  };
  protoOf(JoinedKey).hashCode = function () {
    return imul(hashCodeOf(this, this.left_1), 31) + hashCodeOf(this, this.right_1) | 0;
  };
  protoOf(JoinedKey).component1_7eebsc_k$ = function () {
    return this.left_1;
  };
  protoOf(JoinedKey).component2_7eebsb_k$ = function () {
    return this.right_1;
  };
  protoOf(JoinedKey).copy_o0yww9_k$ = function (left, right) {
    return new JoinedKey(left, right);
  };
  protoOf(JoinedKey).copy$default_u8cs3_k$ = function (left, right, $super) {
    left = left === VOID ? this.left_1 : left;
    right = right === VOID ? this.right_1 : right;
    return $super === VOID ? this.copy_o0yww9_k$(left, right) : $super.copy_o0yww9_k$.call(this, left, right);
  };
  protoOf(JoinedKey).toString = function () {
    return 'JoinedKey(left=' + toString_0(this.left_1) + ', right=' + toString_0(this.right_1) + ')';
  };
  protoOf(JoinedKey).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof JoinedKey))
      return false;
    var tmp0_other_with_cast = other instanceof JoinedKey ? other : THROW_CCE();
    if (!equals(this.left_1, tmp0_other_with_cast.left_1))
      return false;
    if (!equals(this.right_1, tmp0_other_with_cast.right_1))
      return false;
    return true;
  };
  function Key_0() {
    Key_instance = this;
  }
  var Key_instance;
  function Key_getInstance_0() {
    if (Key_instance == null)
      new Key_0();
    return Key_instance;
  }
  function MonotonicFrameClock() {
  }
  function get_monotonicFrameClock(_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4.get_y2st91_k$(Key_getInstance_0());
    var tmp;
    if (tmp0_elvis_lhs == null) {
      var message = 'A MonotonicFrameClock is not available in this CoroutineContext. Callers should supply an appropriate MonotonicFrameClock using withContext.';
      throw IllegalStateException_init_$Create$(toString(message));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  function get_movableContentKey() {
    return movableContentKey;
  }
  var movableContentKey;
  function NoLiveLiterals() {
  }
  protoOf(NoLiveLiterals).equals = function (other) {
    if (!(other instanceof NoLiveLiterals))
      return false;
    other instanceof NoLiveLiterals || THROW_CCE();
    return true;
  };
  protoOf(NoLiveLiterals).hashCode = function () {
    return 0;
  };
  protoOf(NoLiveLiterals).toString = function () {
    return '@androidx.compose.runtime.NoLiveLiterals()';
  };
  function NonRestartableComposable() {
  }
  protoOf(NonRestartableComposable).equals = function (other) {
    if (!(other instanceof NonRestartableComposable))
      return false;
    other instanceof NonRestartableComposable || THROW_CCE();
    return true;
  };
  protoOf(NonRestartableComposable).hashCode = function () {
    return 0;
  };
  protoOf(NonRestartableComposable).toString = function () {
    return '@androidx.compose.runtime.NonRestartableComposable()';
  };
  function OpaqueKey(key) {
    this.key_1 = key;
  }
  protoOf(OpaqueKey).get_key_18j28a_k$ = function () {
    return this.key_1;
  };
  protoOf(OpaqueKey).component1_7eebsc_k$ = function () {
    return this.key_1;
  };
  protoOf(OpaqueKey).copy_a35qlh_k$ = function (key) {
    return new OpaqueKey(key);
  };
  protoOf(OpaqueKey).copy$default_g73tgw_k$ = function (key, $super) {
    key = key === VOID ? this.key_1 : key;
    return $super === VOID ? this.copy_a35qlh_k$(key) : $super.copy_a35qlh_k$.call(this, key);
  };
  protoOf(OpaqueKey).toString = function () {
    return 'OpaqueKey(key=' + this.key_1 + ')';
  };
  protoOf(OpaqueKey).hashCode = function () {
    return getStringHashCode(this.key_1);
  };
  protoOf(OpaqueKey).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof OpaqueKey))
      return false;
    var tmp0_other_with_cast = other instanceof OpaqueKey ? other : THROW_CCE();
    if (!(this.key_1 === tmp0_other_with_cast.key_1))
      return false;
    return true;
  };
  function produceState$composable(initialValue, producer, $composer, $changed) {
    var $composer_0 = $composer;
    $composer_0.startReplaceableGroup_ip860b_k$(1150638565);
    sourceInformation($composer_0, 'C(produceState$composable)80@2911L41,81@2957L95:ProduceState.kt#9igjgp');
    if (isTraceInProgress()) {
      traceEventStart(1150638565, $changed, -1, 'androidx.compose.runtime.produceState$composable (ProduceState.kt:76)');
    }
    // Inline function 'androidx.compose.runtime.remember$composable' call
    var $composer_1 = $composer_0;
    $composer_1.startReplaceableGroup_ip860b_k$(547886695);
    sourceInformation($composer_1, 'CC(remember$composable):Composables.kt#9igjgp');
    // Inline function 'androidx.compose.runtime.cache' call
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.cache.<anonymous>' call
    var it = $composer_1.rememberedValue_4dg93v_k$();
    var tmp;
    if (false ? true : it === Companion_getInstance_1().get_Empty_i9b85g_k$()) {
      // Inline function 'androidx.compose.runtime.produceState$composable.<anonymous>' call
      var value = mutableStateOf(initialValue);
      $composer_1.updateRememberedValue_l1wh71_k$(value);
      tmp = value;
    } else {
      tmp = it;
    }
    var tmp_0 = tmp;
    var tmp0 = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
    $composer_1.endReplaceableGroup_ern0ak_k$();
    var result = tmp0;
    LaunchedEffect$composable(Unit_getInstance(), produceState$composable$slambda_0(producer, result, null), $composer_0, 6);
    if (isTraceInProgress()) {
      traceEventEnd();
    }
    $composer_0.endReplaceableGroup_ern0ak_k$();
    return result;
  }
  function ProduceStateScope() {
  }
  function $awaitDisposeCOROUTINE$0(_this__u8e3s4, onDispose, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this._this__u8e3s4__1 = _this__u8e3s4;
    this.onDispose_1 = onDispose;
  }
  protoOf($awaitDisposeCOROUTINE$0).doResume_5yljmg_k$ = function () {
    var suspendResult = this.get_result_iyg5d2_k$();
    $sm: do
      try {
        var tmp = this.get_state_iypx7s_k$();
        switch (tmp) {
          case 0:
            this.set_exceptionState_fex74n_k$(5);
            this.set_state_rjd8d0_k$(1);
            continue $sm;
          case 1:
            this.set_exceptionState_fex74n_k$(4);
            this.set_state_rjd8d0_k$(2);
            var cancellable = new CancellableContinuationImpl(intercepted(this), get_MODE_CANCELLABLE());
            cancellable.initCancellability_shqc60_k$();
            suspendResult = returnIfSuspended(cancellable.getResult_clfhg3_k$(), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.tmp$ret$00__1 = throwKotlinNothingValueException();
            this.set_exceptionState_fex74n_k$(5);
            this.set_state_rjd8d0_k$(3);
            continue $sm;
          case 3:
            this.set_exceptionState_fex74n_k$(5);
            this.onDispose_1();
            return Unit_getInstance();
          case 4:
            this.set_exceptionState_fex74n_k$(5);
            var t = this.get_exception_x0n6w6_k$();
            this.onDispose_1();
            throw t;
          case 5:
            throw this.get_exception_x0n6w6_k$();
        }
      } catch ($p) {
        var e = $p;
        if (this.get_exceptionState_wflpxn_k$() === 5) {
          throw e;
        } else {
          this.set_state_rjd8d0_k$(this.get_exceptionState_wflpxn_k$());
          this.set_exception_px07aa_k$(e);
        }
      }
     while (true);
  };
  function ProduceStateScopeImpl(state, coroutineContext) {
    this.coroutineContext_1 = coroutineContext;
    this.$$delegate_0__1 = state;
  }
  protoOf(ProduceStateScopeImpl).get_coroutineContext_115oqo_k$ = function () {
    return this.coroutineContext_1;
  };
  protoOf(ProduceStateScopeImpl).set_value_v1vabv_k$ = function (_set____db54di) {
    this.$$delegate_0__1.set_value_v1vabv_k$(_set____db54di);
  };
  protoOf(ProduceStateScopeImpl).get_value_j01efc_k$ = function () {
    return this.$$delegate_0__1.get_value_j01efc_k$();
  };
  protoOf(ProduceStateScopeImpl).component1_7eebsc_k$ = function () {
    return this.$$delegate_0__1.component1_7eebsc_k$();
  };
  protoOf(ProduceStateScopeImpl).component2_7eebsb_k$ = function () {
    return this.$$delegate_0__1.component2_7eebsb_k$();
  };
  protoOf(ProduceStateScopeImpl).awaitDispose_z1s878_k$ = function (onDispose, $completion) {
    var tmp = new $awaitDisposeCOROUTINE$0(this, onDispose, $completion);
    tmp.set_result_xj64lm_k$(Unit_getInstance());
    tmp.set_exception_px07aa_k$(null);
    return tmp.doResume_5yljmg_k$();
  };
  function produceState$composable$slambda($producer, $result, resultContinuation) {
    this.$producer_1 = $producer;
    this.$result_1 = $result;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(produceState$composable$slambda).invoke_d9fzmj_k$ = function ($this$LaunchedEffect, $completion) {
    var tmp = this.create_rcuf4x_k$($this$LaunchedEffect, $completion);
    tmp.set_result_xj64lm_k$(Unit_getInstance());
    tmp.set_exception_px07aa_k$(null);
    return tmp.doResume_5yljmg_k$();
  };
  protoOf(produceState$composable$slambda).invoke_qns8j1_k$ = function (p1, $completion) {
    return this.invoke_d9fzmj_k$((!(p1 == null) ? isInterface(p1, CoroutineScope_0) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(produceState$composable$slambda).doResume_5yljmg_k$ = function () {
    var suspendResult = this.get_result_iyg5d2_k$();
    $sm: do
      try {
        var tmp = this.get_state_iypx7s_k$();
        switch (tmp) {
          case 0:
            this.set_exceptionState_fex74n_k$(2);
            this.set_state_rjd8d0_k$(1);
            suspendResult = this.$producer_1(new ProduceStateScopeImpl(this.$result_1, this.$this$LaunchedEffect_1.get_coroutineContext_115oqo_k$()), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return Unit_getInstance();
          case 2:
            throw this.get_exception_x0n6w6_k$();
        }
      } catch ($p) {
        var e = $p;
        if (this.get_exceptionState_wflpxn_k$() === 2) {
          throw e;
        } else {
          this.set_state_rjd8d0_k$(this.get_exceptionState_wflpxn_k$());
          this.set_exception_px07aa_k$(e);
        }
      }
     while (true);
  };
  protoOf(produceState$composable$slambda).create_rcuf4x_k$ = function ($this$LaunchedEffect, completion) {
    var i = new produceState$composable$slambda(this.$producer_1, this.$result_1, completion);
    i.$this$LaunchedEffect_1 = $this$LaunchedEffect;
    return i;
  };
  protoOf(produceState$composable$slambda).create_wyq9v6_k$ = function (value, completion) {
    return this.create_rcuf4x_k$((!(value == null) ? isInterface(value, CoroutineScope_0) : false) ? value : THROW_CCE(), completion);
  };
  function produceState$composable$slambda_0($producer, $result, resultContinuation) {
    var i = new produceState$composable$slambda($producer, $result, resultContinuation);
    var l = function ($this$LaunchedEffect, $completion) {
      return i.invoke_d9fzmj_k$($this$LaunchedEffect, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function ReadOnlyComposable() {
  }
  protoOf(ReadOnlyComposable).equals = function (other) {
    if (!(other instanceof ReadOnlyComposable))
      return false;
    other instanceof ReadOnlyComposable || THROW_CCE();
    return true;
  };
  protoOf(ReadOnlyComposable).hashCode = function () {
    return 0;
  };
  protoOf(ReadOnlyComposable).toString = function () {
    return '@androidx.compose.runtime.ReadOnlyComposable()';
  };
  function _set_flags__ei5eou($this, _set____db54di) {
    $this.flags_1 = _set____db54di;
  }
  function _get_flags__hiz1sm($this) {
    return $this.flags_1;
  }
  function _set_owner__ixu036($this, _set____db54di) {
    $this.owner_1 = _set____db54di;
  }
  function _get_owner__d3agea($this) {
    return $this.owner_1;
  }
  function _set_block__cm7rrs($this, _set____db54di) {
    $this.block_1 = _set____db54di;
  }
  function _get_block__jewopo($this) {
    return $this.block_1;
  }
  function _set_currentToken__hn5is7($this, _set____db54di) {
    $this.currentToken_1 = _set____db54di;
  }
  function _get_currentToken__x6w9cb($this) {
    return $this.currentToken_1;
  }
  function _set_trackedInstances__jisfs3($this, _set____db54di) {
    $this.trackedInstances_1 = _set____db54di;
  }
  function _get_trackedInstances__mf7d49($this) {
    return $this.trackedInstances_1;
  }
  function _set_trackedDependencies__q445qm($this, _set____db54di) {
    $this.trackedDependencies_1 = _set____db54di;
  }
  function _get_trackedDependencies__ctdwua($this) {
    return $this.trackedDependencies_1;
  }
  function _set_rereading__pnqtpo($this, value) {
    if (value) {
      $this.flags_1 = $this.flags_1 | 32;
    } else {
      $this.flags_1 = $this.flags_1 & -33;
    }
  }
  function _get_rereading__g2iruw($this) {
    return !(($this.flags_1 & 32) === 0);
  }
  function _set_skipped__p8q2c5($this, value) {
    if (value) {
      $this.flags_1 = $this.flags_1 | 16;
    } else {
      $this.flags_1 = $this.flags_1 & -17;
    }
  }
  function Companion_2() {
    Companion_instance_2 = this;
  }
  protoOf(Companion_2).adoptAnchoredScopes_vqqdu5_k$ = function (slots, anchors, newOwner) {
    // Inline function 'kotlin.collections.isNotEmpty' call
    if (!anchors.isEmpty_y1axqb_k$()) {
      // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable = 0;
      var last = anchors.get_size_woubt6_k$() - 1 | 0;
      if (inductionVariable <= last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var item = anchors.get_c1px32_k$(index);
          // Inline function 'androidx.compose.runtime.Companion.adoptAnchoredScopes.<anonymous>' call
          var tmp = slots.slot_es8k2r_k$(item, 0);
          var recomposeScope = tmp instanceof RecomposeScopeImpl ? tmp : null;
          if (recomposeScope == null)
            null;
          else {
            recomposeScope.adoptedBy_qz5zqi_k$(newOwner);
          }
        }
         while (inductionVariable <= last);
    }
  };
  protoOf(Companion_2).hasAnchoredRecomposeScopes_gbc55h_k$ = function (slots, anchors) {
    var tmp;
    // Inline function 'kotlin.collections.isNotEmpty' call
    if (!anchors.isEmpty_y1axqb_k$()) {
      var tmp$ret$2;
      $l$block: {
        // Inline function 'androidx.compose.runtime.snapshots.fastAny' call
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
        // Inline function 'kotlin.contracts.contract' call
        var inductionVariable = 0;
        var last = anchors.get_size_woubt6_k$() - 1 | 0;
        if (inductionVariable <= last)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var item = anchors.get_c1px32_k$(index);
            // Inline function 'androidx.compose.runtime.snapshots.fastAny.<anonymous>' call
            // Inline function 'androidx.compose.runtime.Companion.hasAnchoredRecomposeScopes.<anonymous>' call
            var tmp_0;
            if (slots.ownsAnchor_x2d87l_k$(item)) {
              var tmp_1 = slots.slot_xuatfm_k$(slots.anchorIndex_79wady_k$(item), 0);
              tmp_0 = tmp_1 instanceof RecomposeScopeImpl;
            } else {
              tmp_0 = false;
            }
            if (tmp_0) {
              tmp$ret$2 = true;
              break $l$block;
            }
          }
           while (inductionVariable <= last);
        tmp$ret$2 = false;
      }
      tmp = tmp$ret$2;
    } else {
      tmp = false;
    }
    return tmp;
  };
  var Companion_instance_2;
  function Companion_getInstance_4() {
    if (Companion_instance_2 == null)
      new Companion_2();
    return Companion_instance_2;
  }
  function RecomposeScopeImpl$end$lambda(this$0, $token, $instances) {
    return function (composition) {
      var tmp;
      var tmp_0;
      if (this$0.currentToken_1 === $token ? equals($instances, this$0.trackedInstances_1) : false) {
        tmp_0 = composition instanceof CompositionImpl;
      } else {
        tmp_0 = false;
      }
      if (tmp_0) {
        // Inline function 'androidx.compose.runtime.collection.IdentityArrayIntMap.removeValueIf' call
        var this_0 = $instances;
        var keys = this_0.get_keys_wop4xp_k$();
        var values = this_0.get_values_ksazhn_k$();
        var size = this_0.get_size_woubt6_k$();
        var destinationIndex = 0;
        var inductionVariable = 0;
        if (inductionVariable < size)
          do {
            var i = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var tmp_1 = keys[i];
            var key = !(tmp_1 == null) ? tmp_1 : THROW_CCE();
            var value = values[i];
            // Inline function 'androidx.compose.runtime.RecomposeScopeImpl.end.<anonymous>.<anonymous>.<anonymous>' call
            // Inline function 'kotlin.also' call
            var this_1 = !(value === $token);
            // Inline function 'kotlin.contracts.contract' call
            // Inline function 'androidx.compose.runtime.RecomposeScopeImpl.end.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
            if (this_1) {
              composition.removeObservation_4c843y_k$(key, this$0);
              var tmp0_safe_receiver = isInterface(key, DerivedState) ? key : null;
              if (tmp0_safe_receiver == null)
                null;
              else {
                // Inline function 'kotlin.let' call
                // Inline function 'kotlin.contracts.contract' call
                // Inline function 'androidx.compose.runtime.RecomposeScopeImpl.end.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
                composition.removeDerivedStateObservation_i55afc_k$(tmp0_safe_receiver);
                var tmp0_safe_receiver_0 = this$0.trackedDependencies_1;
                var tmp_2;
                if (tmp0_safe_receiver_0 == null) {
                  tmp_2 = null;
                } else {
                  // Inline function 'kotlin.let' call
                  // Inline function 'kotlin.contracts.contract' call
                  tmp0_safe_receiver_0.remove_no9i4h_k$(tmp0_safe_receiver);
                  var tmp_3;
                  if (tmp0_safe_receiver_0.get_size_woubt6_k$() === 0) {
                    this$0.trackedDependencies_1 = null;
                    tmp_3 = Unit_getInstance();
                  }
                  tmp_2 = Unit_getInstance();
                }
              }
            }
            if (!this_1) {
              if (!(destinationIndex === i)) {
                keys[destinationIndex] = key;
                values[destinationIndex] = value;
              }
              destinationIndex = destinationIndex + 1 | 0;
            }
          }
           while (inductionVariable < size);
        var inductionVariable_0 = destinationIndex;
        if (inductionVariable_0 < size)
          do {
            var i_0 = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            keys[i_0] = null;
          }
           while (inductionVariable_0 < size);
        _set_size__9twho6(this_0, destinationIndex);
        var tmp_4;
        if ($instances.get_size_woubt6_k$() === 0) {
          this$0.trackedInstances_1 = null;
          tmp_4 = Unit_getInstance();
        }
        tmp = tmp_4;
      }
      return Unit_getInstance();
    };
  }
  function RecomposeScopeImpl(owner) {
    Companion_getInstance_4();
    this.flags_1 = 0;
    this.owner_1 = owner;
    this.anchor_1 = null;
    this.block_1 = null;
    this.currentToken_1 = 0;
    this.trackedInstances_1 = null;
    this.trackedDependencies_1 = null;
  }
  protoOf(RecomposeScopeImpl).set_anchor_cz29di_k$ = function (_set____db54di) {
    this.anchor_1 = _set____db54di;
  };
  protoOf(RecomposeScopeImpl).get_anchor_b1c8n2_k$ = function () {
    return this.anchor_1;
  };
  protoOf(RecomposeScopeImpl).get_valid_j01e4z_k$ = function () {
    var tmp;
    if (!(this.owner_1 == null)) {
      var tmp0_safe_receiver = this.anchor_1;
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.get_valid_j01e4z_k$();
      tmp = tmp1_elvis_lhs == null ? false : tmp1_elvis_lhs;
    } else {
      tmp = false;
    }
    return tmp;
  };
  protoOf(RecomposeScopeImpl).get_canRecompose_8in6u0_k$ = function () {
    return !(this.block_1 == null);
  };
  protoOf(RecomposeScopeImpl).set_used_1kdhet_k$ = function (value) {
    if (value) {
      this.flags_1 = this.flags_1 | 1;
    } else {
      this.flags_1 = this.flags_1 & -2;
    }
  };
  protoOf(RecomposeScopeImpl).get_used_wovsp2_k$ = function () {
    return !((this.flags_1 & 1) === 0);
  };
  protoOf(RecomposeScopeImpl).set_defaultsInScope_b4bwsr_k$ = function (value) {
    if (value) {
      this.flags_1 = this.flags_1 | 2;
    } else {
      this.flags_1 = this.flags_1 & -3;
    }
  };
  protoOf(RecomposeScopeImpl).get_defaultsInScope_yrfvqk_k$ = function () {
    return !((this.flags_1 & 2) === 0);
  };
  protoOf(RecomposeScopeImpl).set_defaultsInvalid_xwkxv1_k$ = function (value) {
    if (value) {
      this.flags_1 = this.flags_1 | 4;
    } else {
      this.flags_1 = this.flags_1 & -5;
    }
  };
  protoOf(RecomposeScopeImpl).get_defaultsInvalid_y88fc4_k$ = function () {
    return !((this.flags_1 & 4) === 0);
  };
  protoOf(RecomposeScopeImpl).set_requiresRecompose_rcdn27_k$ = function (value) {
    if (value) {
      this.flags_1 = this.flags_1 | 8;
    } else {
      this.flags_1 = this.flags_1 & -9;
    }
  };
  protoOf(RecomposeScopeImpl).get_requiresRecompose_c1aaig_k$ = function () {
    return !((this.flags_1 & 8) === 0);
  };
  protoOf(RecomposeScopeImpl).compose_vc7t96_k$ = function (composer) {
    var tmp0_safe_receiver = this.block_1;
    if ((tmp0_safe_receiver == null ? null : tmp0_safe_receiver(composer, 1)) == null) {
      // Inline function 'kotlin.error' call
      var message = 'Invalid restart scope';
      throw IllegalStateException_init_$Create$(toString(message));
    }
  };
  protoOf(RecomposeScopeImpl).invalidateForResult_qzazm4_k$ = function (value) {
    var tmp0_safe_receiver = this.owner_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.invalidate_673xr8_k$(this, value);
    return tmp1_elvis_lhs == null ? InvalidationResult_IGNORED_getInstance() : tmp1_elvis_lhs;
  };
  protoOf(RecomposeScopeImpl).release_wu5yyf_k$ = function () {
    var tmp0_safe_receiver = this.owner_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.recomposeScopeReleased_y5qeye_k$(this);
    }
    this.owner_1 = null;
    this.trackedInstances_1 = null;
    this.trackedDependencies_1 = null;
  };
  protoOf(RecomposeScopeImpl).adoptedBy_qz5zqi_k$ = function (owner) {
    this.owner_1 = owner;
  };
  protoOf(RecomposeScopeImpl).invalidate_p4aufp_k$ = function () {
    var tmp0_safe_receiver = this.owner_1;
    if (tmp0_safe_receiver == null)
      null;
    else
      tmp0_safe_receiver.invalidate_673xr8_k$(this, null);
  };
  protoOf(RecomposeScopeImpl).updateScope_t8jcf_k$ = function (block) {
    this.block_1 = block;
  };
  protoOf(RecomposeScopeImpl).get_skipped_y90x4p_k$ = function () {
    return !((this.flags_1 & 16) === 0);
  };
  protoOf(RecomposeScopeImpl).start_lvhmue_k$ = function (token) {
    this.currentToken_1 = token;
    _set_skipped__p8q2c5(this, false);
  };
  protoOf(RecomposeScopeImpl).scopeSkipped_cff2j8_k$ = function () {
    _set_skipped__p8q2c5(this, true);
  };
  protoOf(RecomposeScopeImpl).recordRead_ceszxl_k$ = function (instance) {
    if (_get_rereading__g2iruw(this))
      return false;
    var tmp0_elvis_lhs = this.trackedInstances_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      // Inline function 'kotlin.also' call
      var this_0 = new IdentityArrayIntMap();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.RecomposeScopeImpl.recordRead.<anonymous>' call
      this.trackedInstances_1 = this_0;
      tmp = this_0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var token = tmp.add_lujshn_k$(instance, this.currentToken_1);
    if (token === this.currentToken_1) {
      return true;
    }
    if (isInterface(instance, DerivedState)) {
      var tmp1_elvis_lhs = this.trackedDependencies_1;
      var tmp_0;
      if (tmp1_elvis_lhs == null) {
        // Inline function 'kotlin.also' call
        var this_1 = new IdentityArrayMap();
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.RecomposeScopeImpl.recordRead.<anonymous>' call
        this.trackedDependencies_1 = this_1;
        tmp_0 = this_1;
      } else {
        tmp_0 = tmp1_elvis_lhs;
      }
      var tracked = tmp_0;
      tracked.set_d3rebl_k$(instance, instance.get_currentRecord_z6b6yp_k$().get_currentValue_sotyv5_k$());
    }
    return false;
  };
  protoOf(RecomposeScopeImpl).get_isConditional_4jybl9_k$ = function () {
    return !(this.trackedDependencies_1 == null);
  };
  protoOf(RecomposeScopeImpl).isInvalidFor_r5kyc7_k$ = function (instances) {
    if (instances == null)
      return true;
    var tmp0_elvis_lhs = this.trackedDependencies_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return true;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var trackedDependencies = tmp;
    var tmp_0;
    if (instances.isNotEmpty_cjxbwk_k$()) {
      var tmp$ret$0;
      $l$block_0: {
        // Inline function 'kotlin.collections.all' call
        var tmp_1;
        if (isInterface(instances, Collection)) {
          tmp_1 = instances.isEmpty_y1axqb_k$();
        } else {
          tmp_1 = false;
        }
        if (tmp_1) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
        var tmp0_iterator = instances.iterator_jk1svi_k$();
        while (tmp0_iterator.hasNext_bitz1p_k$()) {
          var element = tmp0_iterator.next_20eer_k$();
          // Inline function 'androidx.compose.runtime.RecomposeScopeImpl.isInvalidFor.<anonymous>' call
          var tmp_2;
          if (isInterface(element, DerivedState)) {
            // Inline function 'kotlin.let' call
            // Inline function 'kotlin.contracts.contract' call
            // Inline function 'androidx.compose.runtime.RecomposeScopeImpl.isInvalidFor.<anonymous>.<anonymous>' call
            if (!isInterface(element, DerivedState))
              THROW_CCE();
            var tmp0_elvis_lhs_0 = element.get_policy_i5q4hn_k$();
            var policy = tmp0_elvis_lhs_0 == null ? structuralEqualityPolicy() : tmp0_elvis_lhs_0;
            tmp_2 = policy.equivalent_gz6us_k$(element.get_currentRecord_z6b6yp_k$().get_currentValue_sotyv5_k$(), trackedDependencies.get_csq61f_k$(element));
          } else {
            tmp_2 = false;
          }
          if (!tmp_2) {
            tmp$ret$0 = false;
            break $l$block_0;
          }
        }
        tmp$ret$0 = true;
      }
      tmp_0 = tmp$ret$0;
    } else {
      tmp_0 = false;
    }
    if (tmp_0)
      return false;
    return true;
  };
  protoOf(RecomposeScopeImpl).rereadTrackedInstances_wcu0b1_k$ = function () {
    var tmp0_safe_receiver = this.owner_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.RecomposeScopeImpl.rereadTrackedInstances.<anonymous>' call
      var tmp0_safe_receiver_0 = this.trackedInstances_1;
      var tmp;
      if (tmp0_safe_receiver_0 == null) {
        tmp = null;
      } else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        _set_rereading__pnqtpo(this, true);
        var tmp_0;
        try {
          var keys = tmp0_safe_receiver_0.get_keys_wop4xp_k$();
          var values = tmp0_safe_receiver_0.get_values_ksazhn_k$();
          var size = tmp0_safe_receiver_0.get_size_woubt6_k$();
          var inductionVariable = 0;
          var tmp_1;
          if (inductionVariable < size) {
            do {
              var i = inductionVariable;
              inductionVariable = inductionVariable + 1 | 0;
              // Inline function 'androidx.compose.runtime.RecomposeScopeImpl.rereadTrackedInstances.<anonymous>.<anonymous>.<anonymous>' call
              var tmp_2 = keys[i];
              var value = !(tmp_2 == null) ? tmp_2 : THROW_CCE();
              values[i];
              tmp0_safe_receiver.recordReadOf_1u1d8w_k$(value);
            }
             while (inductionVariable < size);
            tmp_1 = Unit_getInstance();
          }
          tmp_0 = tmp_1;
        }finally {
          _set_rereading__pnqtpo(this, false);
        }
        tmp = Unit_getInstance();
      }
    }
  };
  protoOf(RecomposeScopeImpl).end_1skgdf_k$ = function (token) {
    var tmp0_safe_receiver = this.trackedInstances_1;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.RecomposeScopeImpl.end.<anonymous>' call
      var tmp_0;
      var tmp_1;
      if (!this.get_skipped_y90x4p_k$()) {
        var tmp$ret$1;
        $l$block: {
          // Inline function 'androidx.compose.runtime.collection.IdentityArrayIntMap.any' call
          var keys = tmp0_safe_receiver.get_keys_wop4xp_k$();
          var values = tmp0_safe_receiver.get_values_ksazhn_k$();
          var size = tmp0_safe_receiver.get_size_woubt6_k$();
          var inductionVariable = 0;
          if (inductionVariable < size)
            do {
              var i = inductionVariable;
              inductionVariable = inductionVariable + 1 | 0;
              // Inline function 'androidx.compose.runtime.RecomposeScopeImpl.end.<anonymous>.<anonymous>' call
              var tmp_2 = keys[i];
              !(tmp_2 == null) || THROW_CCE();
              if (!(values[i] === token)) {
                tmp$ret$1 = true;
                break $l$block;
              }
            }
             while (inductionVariable < size);
          tmp$ret$1 = false;
        }
        tmp_1 = tmp$ret$1;
      } else {
        tmp_1 = false;
      }
      if (tmp_1) {
        tmp_0 = RecomposeScopeImpl$end$lambda(this, token, tmp0_safe_receiver);
      } else {
        tmp_0 = null;
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  function RecomposeScope() {
  }
  function RecomposeScopeOwner() {
  }
  function get_UsedFlag() {
    return UsedFlag;
  }
  var UsedFlag;
  function get_DefaultsInScopeFlag() {
    return DefaultsInScopeFlag;
  }
  var DefaultsInScopeFlag;
  function get_DefaultsInvalidFlag() {
    return DefaultsInvalidFlag;
  }
  var DefaultsInvalidFlag;
  function get_RequiresRecomposeFlag() {
    return RequiresRecomposeFlag;
  }
  var RequiresRecomposeFlag;
  function get_RereadingFlag() {
    return RereadingFlag;
  }
  var RereadingFlag;
  function get_SkippedFlag() {
    return SkippedFlag;
  }
  var SkippedFlag;
  function updateChangedFlags(flags) {
    var lowBits = flags & 306783378;
    var highBits = flags & 613566756;
    return flags & -920350135 | (lowBits | highBits >> 1) | lowBits << 1 & highBits;
  }
  function get_changedLowBitMask() {
    return changedLowBitMask;
  }
  var changedLowBitMask;
  function get_changedHighBitMask() {
    return changedHighBitMask;
  }
  var changedHighBitMask;
  function get_changedMask() {
    return changedMask;
  }
  var changedMask;
  function get_ProduceAnotherFrame() {
    _init_properties_Recomposer_kt__nj7w3x();
    return ProduceAnotherFrame;
  }
  var ProduceAnotherFrame;
  function get_FramePending() {
    _init_properties_Recomposer_kt__nj7w3x();
    return FramePending;
  }
  var FramePending;
  var State_ShutDown_instance;
  var State_ShuttingDown_instance;
  var State_Inactive_instance;
  var State_InactivePendingWork_instance;
  var State_Idle_instance;
  var State_PendingWork_instance;
  function values_0() {
    return [State_ShutDown_getInstance(), State_ShuttingDown_getInstance(), State_Inactive_getInstance(), State_InactivePendingWork_getInstance(), State_Idle_getInstance(), State_PendingWork_getInstance()];
  }
  function valueOf_0(value) {
    switch (value) {
      case 'ShutDown':
        return State_ShutDown_getInstance();
      case 'ShuttingDown':
        return State_ShuttingDown_getInstance();
      case 'Inactive':
        return State_Inactive_getInstance();
      case 'InactivePendingWork':
        return State_InactivePendingWork_getInstance();
      case 'Idle':
        return State_Idle_getInstance();
      case 'PendingWork':
        return State_PendingWork_getInstance();
      default:
        State_initEntries();
        THROW_IAE('No enum constant value.');
        break;
    }
  }
  var State_entriesInitialized;
  function State_initEntries() {
    if (State_entriesInitialized)
      return Unit_getInstance();
    State_entriesInitialized = true;
    State_ShutDown_instance = new State('ShutDown', 0);
    State_ShuttingDown_instance = new State('ShuttingDown', 1);
    State_Inactive_instance = new State('Inactive', 2);
    State_InactivePendingWork_instance = new State('InactivePendingWork', 3);
    State_Idle_instance = new State('Idle', 4);
    State_PendingWork_instance = new State('PendingWork', 5);
  }
  function _get_composition__nfuip3($this) {
    return $this.composition_1;
  }
  function _set_composable__u50992($this, _set____db54di) {
    illegalDecoyCallException('<set-composable>');
  }
  function _get_composable__ptv7ku($this) {
    return $this.composable_1;
  }
  function $set_composable$$composable_86vbd($this, set__$_ezb9bk) {
    $this.composable_1 = set__$_ezb9bk;
  }
  function _get__runningRecomposers__h74w9b($this) {
    return $this._runningRecomposers_1;
  }
  function _get__hotReloadEnabled__2rsdt5($this) {
    return $this._hotReloadEnabled_1;
  }
  function addRunning($this, info) {
    $l$loop: while (true) {
      var old = $this._runningRecomposers_1.get_value_j01efc_k$();
      var new_0 = old.add_utx5q5_k$(info);
      if (old === new_0 ? true : $this._runningRecomposers_1.compareAndSet_l3595a_k$(old, new_0))
        break $l$loop;
    }
  }
  function removeRunning($this, info) {
    $l$loop: while (true) {
      var old = $this._runningRecomposers_1.get_value_j01efc_k$();
      var new_0 = old.remove_cedx0m_k$(info);
      if (old === new_0 ? true : $this._runningRecomposers_1.compareAndSet_l3595a_k$(old, new_0))
        break $l$loop;
    }
  }
  function invoke$clearRecompositionState(toRecompose, toInsert, toApply, toLateApply, toComplete) {
    toRecompose.clear_j9egeb_k$();
    toInsert.clear_j9egeb_k$();
    toApply.clear_j9egeb_k$();
    toLateApply.clear_j9egeb_k$();
    toComplete.clear_j9egeb_k$();
  }
  function invoke$fillToInsert(toInsert, this$0) {
    toInsert.clear_j9egeb_k$();
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this$0.stateLock_1;
    // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
    var this_0 = this$0.compositionValuesAwaitingInsert_1;
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    var last = this_0.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var item = this_0.get_c1px32_k$(index);
        // Inline function 'androidx.compose.runtime.Recomposer$runRecomposeAndApplyChanges$slambda.invoke.fillToInsert.<anonymous>.<anonymous>' call
        // Inline function 'kotlin.collections.plusAssign' call
        toInsert.add_utx5q5_k$(item);
      }
       while (inductionVariable <= last);
    this$0.compositionValuesAwaitingInsert_1.clear_j9egeb_k$();
  }
  function Recomposer$runRecomposeAndApplyChanges$slambda$lambda(this$0, $toRecompose, $toInsert, $toApply, $toLateApply, $toComplete) {
    return function (frameTime) {
      var tmp;
      if (_get_hasBroadcastFrameClockAwaiters__y6inql(this$0)) {
        $l$block: {
          // Inline function 'androidx.compose.runtime.trace' call
          var sectionName = 'Recomposer:animation';
          var token = Trace_getInstance().beginSection_2k8ef6_k$(sectionName);
          try {
            this$0.broadcastFrameClock_1.sendFrame_f05udj_k$(frameTime);
            Companion_getInstance_12().sendApplyNotifications_z1qgb2_k$();
            break $l$block;
          }finally {
            Trace_getInstance().endSection_5rdvi3_k$(token);
          }
        }
        tmp = Unit_getInstance();
      }
      $l$block_0: {
        // Inline function 'androidx.compose.runtime.trace' call
        var sectionName_0 = 'Recomposer:recompose';
        var token_0 = Trace_getInstance().beginSection_2k8ef6_k$(sectionName_0);
        try {
          recordComposerModifications(this$0);
          // Inline function 'androidx.compose.runtime.synchronized' call
          // Inline function 'kotlinx.atomicfu.locks.synchronized' call
          this$0.stateLock_1;
          // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
          var this_0 = this$0.compositionInvalidations_1;
          // Inline function 'kotlin.contracts.contract' call
          var inductionVariable = 0;
          var last = this_0.get_size_woubt6_k$() - 1 | 0;
          if (inductionVariable <= last)
            do {
              var index = inductionVariable;
              inductionVariable = inductionVariable + 1 | 0;
              var item = this_0.get_c1px32_k$(index);
              // Inline function 'androidx.compose.runtime.Recomposer.runRecomposeAndApplyChanges.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
              // Inline function 'kotlin.collections.plusAssign' call
              $toRecompose.add_utx5q5_k$(item);
            }
             while (inductionVariable <= last);
          this$0.compositionInvalidations_1.clear_j9egeb_k$();
          var modifiedValues = new IdentityArraySet();
          var alreadyComposed = new IdentityArraySet();
          $l$loop: while (true) {
            var tmp_0;
            // Inline function 'kotlin.collections.isNotEmpty' call
            if (!$toRecompose.isEmpty_y1axqb_k$()) {
              tmp_0 = true;
            } else {
              // Inline function 'kotlin.collections.isNotEmpty' call
              tmp_0 = !$toInsert.isEmpty_y1axqb_k$();
            }
            if (!tmp_0) {
              break $l$loop;
            }
            try {
              // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
              var this_1 = $toRecompose;
              // Inline function 'kotlin.contracts.contract' call
              var inductionVariable_0 = 0;
              var last_0 = this_1.get_size_woubt6_k$() - 1 | 0;
              if (inductionVariable_0 <= last_0)
                do {
                  var index_0 = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  var item_0 = this_1.get_c1px32_k$(index_0);
                  // Inline function 'androidx.compose.runtime.Recomposer.runRecomposeAndApplyChanges.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
                  alreadyComposed.add_jkjo25_k$(item_0);
                  var tmp0_safe_receiver = performRecompose(this$0, item_0, modifiedValues);
                  if (tmp0_safe_receiver == null)
                    null;
                  else {
                    // Inline function 'kotlin.let' call
                    // Inline function 'kotlin.contracts.contract' call
                    $toApply.add_utx5q5_k$(tmp0_safe_receiver);
                  }
                }
                 while (inductionVariable_0 <= last_0);
            } catch ($p) {
              if ($p instanceof Exception) {
                var e = $p;
                processCompositionError$default(this$0, e, VOID, true);
                invoke$clearRecompositionState($toRecompose, $toInsert, $toApply, $toLateApply, $toComplete);
                return Unit_getInstance();
              } else {
                throw $p;
              }
            }
            finally {
              $toRecompose.clear_j9egeb_k$();
            }
            if (modifiedValues.isNotEmpty_cjxbwk_k$()) {
              // Inline function 'androidx.compose.runtime.synchronized' call
              // Inline function 'kotlinx.atomicfu.locks.synchronized' call
              this$0.stateLock_1;
              var this_2 = this$0.knownCompositions_1;
              // Inline function 'kotlin.contracts.contract' call
              var inductionVariable_1 = 0;
              var last_1 = this_2.get_size_woubt6_k$() - 1 | 0;
              var tmp_1;
              if (inductionVariable_1 <= last_1) {
                do {
                  var index_1 = inductionVariable_1;
                  inductionVariable_1 = inductionVariable_1 + 1 | 0;
                  var item_1 = this_2.get_c1px32_k$(index_1);
                  // Inline function 'androidx.compose.runtime.Recomposer.runRecomposeAndApplyChanges.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
                  if (!alreadyComposed.contains_r3i6dr_k$(item_1) ? item_1.observesAnyOf_t1oyg3_k$(modifiedValues) : false) {
                    // Inline function 'kotlin.collections.plusAssign' call
                    $toRecompose.add_utx5q5_k$(item_1);
                  }
                }
                 while (inductionVariable_1 <= last_1);
                tmp_1 = Unit_getInstance();
              }
            }
            if ($toRecompose.isEmpty_y1axqb_k$()) {
              try {
                invoke$fillToInsert($toInsert, this$0);
                $l$loop_0: while (true) {
                  // Inline function 'kotlin.collections.isNotEmpty' call
                  if (!!$toInsert.isEmpty_y1axqb_k$()) {
                    break $l$loop_0;
                  }
                  // Inline function 'kotlin.collections.plusAssign' call
                  var this_3 = $toLateApply;
                  var elements = performInsertValues(this$0, $toInsert, modifiedValues);
                  addAll(this_3, elements);
                  invoke$fillToInsert($toInsert, this$0);
                }
              } catch ($p) {
                if ($p instanceof Exception) {
                  var e_0 = $p;
                  processCompositionError$default(this$0, e_0, VOID, true);
                  invoke$clearRecompositionState($toRecompose, $toInsert, $toApply, $toLateApply, $toComplete);
                  return Unit_getInstance();
                } else {
                  throw $p;
                }
              }
            }
          }
          // Inline function 'kotlin.collections.isNotEmpty' call
          if (!$toApply.isEmpty_y1axqb_k$()) {
            var tmp0_this = this$0;
            tmp0_this.changeCount_1 = tmp0_this.changeCount_1.inc_28ke_k$();
            try {
              // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
              var this_4 = $toApply;
              // Inline function 'kotlin.contracts.contract' call
              var inductionVariable_2 = 0;
              var last_2 = this_4.get_size_woubt6_k$() - 1 | 0;
              if (inductionVariable_2 <= last_2)
                do {
                  var index_2 = inductionVariable_2;
                  inductionVariable_2 = inductionVariable_2 + 1 | 0;
                  var item_2 = this_4.get_c1px32_k$(index_2);
                  // Inline function 'androidx.compose.runtime.Recomposer.runRecomposeAndApplyChanges.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
                  $toComplete.add_utx5q5_k$(item_2);
                }
                 while (inductionVariable_2 <= last_2);
              // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
              var this_5 = $toApply;
              // Inline function 'kotlin.contracts.contract' call
              var inductionVariable_3 = 0;
              var last_3 = this_5.get_size_woubt6_k$() - 1 | 0;
              if (inductionVariable_3 <= last_3)
                do {
                  var index_3 = inductionVariable_3;
                  inductionVariable_3 = inductionVariable_3 + 1 | 0;
                  var item_3 = this_5.get_c1px32_k$(index_3);
                  // Inline function 'androidx.compose.runtime.Recomposer.runRecomposeAndApplyChanges.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
                  item_3.applyChanges_ynn7tn_k$();
                }
                 while (inductionVariable_3 <= last_3);
            } catch ($p) {
              if ($p instanceof Exception) {
                var e_1 = $p;
                processCompositionError$default(this$0, e_1);
                invoke$clearRecompositionState($toRecompose, $toInsert, $toApply, $toLateApply, $toComplete);
                return Unit_getInstance();
              } else {
                throw $p;
              }
            }
            finally {
              $toApply.clear_j9egeb_k$();
            }
          }
          // Inline function 'kotlin.collections.isNotEmpty' call
          if (!$toLateApply.isEmpty_y1axqb_k$()) {
            try {
              // Inline function 'kotlin.collections.plusAssign' call
              var this_6 = $toComplete;
              var elements_0 = $toLateApply;
              addAll(this_6, elements_0);
              // Inline function 'kotlin.collections.forEach' call
              var tmp0_iterator = $toLateApply.iterator_jk1svi_k$();
              while (tmp0_iterator.hasNext_bitz1p_k$()) {
                var element = tmp0_iterator.next_20eer_k$();
                // Inline function 'androidx.compose.runtime.Recomposer.runRecomposeAndApplyChanges.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
                element.applyLateChanges_bkcue9_k$();
              }
            } catch ($p) {
              if ($p instanceof Exception) {
                var e_2 = $p;
                processCompositionError$default(this$0, e_2);
                invoke$clearRecompositionState($toRecompose, $toInsert, $toApply, $toLateApply, $toComplete);
                return Unit_getInstance();
              } else {
                throw $p;
              }
            }
            finally {
              $toLateApply.clear_j9egeb_k$();
            }
          }
          // Inline function 'kotlin.collections.isNotEmpty' call
          if (!$toComplete.isEmpty_y1axqb_k$()) {
            try {
              // Inline function 'kotlin.collections.forEach' call
              var tmp0_iterator_0 = $toComplete.iterator_jk1svi_k$();
              while (tmp0_iterator_0.hasNext_bitz1p_k$()) {
                var element_0 = tmp0_iterator_0.next_20eer_k$();
                // Inline function 'androidx.compose.runtime.Recomposer.runRecomposeAndApplyChanges.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
                element_0.changesApplied_368txy_k$();
              }
            } catch ($p) {
              if ($p instanceof Exception) {
                var e_3 = $p;
                processCompositionError$default(this$0, e_3);
                invoke$clearRecompositionState($toRecompose, $toInsert, $toApply, $toLateApply, $toComplete);
                return Unit_getInstance();
              } else {
                throw $p;
              }
            }
            finally {
              $toComplete.clear_j9egeb_k$();
            }
          }
          // Inline function 'androidx.compose.runtime.synchronized' call
          // Inline function 'kotlinx.atomicfu.locks.synchronized' call
          this$0.stateLock_1;
          // Inline function 'androidx.compose.runtime.Recomposer.runRecomposeAndApplyChanges.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
          deriveStateLocked(this$0);
          Companion_getInstance_12().notifyObjectsInitialized_vzzywp_k$();
          this$0.compositionsRemoved_1 = null;
          break $l$block_0;
        }finally {
          Trace_getInstance().endSection_5rdvi3_k$(token_0);
        }
      }
      return Unit_getInstance();
    };
  }
  function Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda$slambda(this$0, $parentFrameClock, $frameSignal, resultContinuation) {
    this.this$0__1 = this$0;
    this.$parentFrameClock_1 = $parentFrameClock;
    this.$frameSignal_1 = $frameSignal;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda$slambda).invoke_d9fzmj_k$ = function ($this$launch, $completion) {
    var tmp = this.create_rcuf4x_k$($this$launch, $completion);
    tmp.set_result_xj64lm_k$(Unit_getInstance());
    tmp.set_exception_px07aa_k$(null);
    return tmp.doResume_5yljmg_k$();
  };
  protoOf(Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda$slambda).invoke_qns8j1_k$ = function (p1, $completion) {
    return this.invoke_d9fzmj_k$((!(p1 == null) ? isInterface(p1, CoroutineScope_0) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda$slambda).doResume_5yljmg_k$ = function () {
    var suspendResult = this.get_result_iyg5d2_k$();
    $sm: do
      try {
        var tmp = this.get_state_iypx7s_k$();
        switch (tmp) {
          case 0:
            this.set_exceptionState_fex74n_k$(2);
            this.set_state_rjd8d0_k$(1);
            suspendResult = runFrameLoop(this.this$0__1, this.$parentFrameClock_1, this.$frameSignal_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return Unit_getInstance();
          case 2:
            throw this.get_exception_x0n6w6_k$();
        }
      } catch ($p) {
        var e = $p;
        if (this.get_exceptionState_wflpxn_k$() === 2) {
          throw e;
        } else {
          this.set_state_rjd8d0_k$(this.get_exceptionState_wflpxn_k$());
          this.set_exception_px07aa_k$(e);
        }
      }
     while (true);
  };
  protoOf(Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda$slambda).create_rcuf4x_k$ = function ($this$launch, completion) {
    var i = new Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda$slambda(this.this$0__1, this.$parentFrameClock_1, this.$frameSignal_1, completion);
    i.$this$launch_1 = $this$launch;
    return i;
  };
  protoOf(Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda$slambda).create_wyq9v6_k$ = function (value, completion) {
    return this.create_rcuf4x_k$((!(value == null) ? isInterface(value, CoroutineScope_0) : false) ? value : THROW_CCE(), completion);
  };
  function Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda$slambda_0(this$0, $parentFrameClock, $frameSignal, resultContinuation) {
    var i = new Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda$slambda(this$0, $parentFrameClock, $frameSignal, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.invoke_d9fzmj_k$($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda$slambda_1(this$0, $composition, resultContinuation) {
    this.this$0__1 = this$0;
    this.$composition_1 = $composition;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda$slambda_1).invoke_d9fzmj_k$ = function ($this$launch, $completion) {
    var tmp = this.create_rcuf4x_k$($this$launch, $completion);
    tmp.set_result_xj64lm_k$(Unit_getInstance());
    tmp.set_exception_px07aa_k$(null);
    return tmp.doResume_5yljmg_k$();
  };
  protoOf(Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda$slambda_1).invoke_qns8j1_k$ = function (p1, $completion) {
    return this.invoke_d9fzmj_k$((!(p1 == null) ? isInterface(p1, CoroutineScope_0) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda$slambda_1).doResume_5yljmg_k$ = function () {
    var suspendResult = this.get_result_iyg5d2_k$();
    $sm: do
      try {
        var tmp = this.get_state_iypx7s_k$();
        if (tmp === 0) {
          this.set_exceptionState_fex74n_k$(1);
          var changedComposition = performRecompose(this.this$0__1, this.$composition_1, null);
          this.this$0__1.stateLock_1;
          if (changedComposition == null)
            null;
          else {
            this.this$0__1.compositionsAwaitingApply_1.add_utx5q5_k$(changedComposition);
          }
          var tmp1_this = this.this$0__1;
          tmp1_this.concurrentCompositionsOutstanding_1 = tmp1_this.concurrentCompositionsOutstanding_1 - 1 | 0;
          var tmp0_safe_receiver = deriveStateLocked(this.this$0__1);
          if (tmp0_safe_receiver == null)
            null;
          else {
            Companion_getInstance();
            tmp0_safe_receiver.resumeWith_dtxwbr_k$(_Result___init__impl__xyqfz8(Unit_getInstance()));
          }
          return Unit_getInstance();
        } else if (tmp === 1) {
          throw this.get_exception_x0n6w6_k$();
        }
      } catch ($p) {
        var e = $p;
        throw e;
      }
     while (true);
  };
  protoOf(Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda$slambda_1).create_rcuf4x_k$ = function ($this$launch, completion) {
    var i = new Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda$slambda_1(this.this$0__1, this.$composition_1, completion);
    i.$this$launch_1 = $this$launch;
    return i;
  };
  protoOf(Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda$slambda_1).create_wyq9v6_k$ = function (value, completion) {
    return this.create_rcuf4x_k$((!(value == null) ? isInterface(value, CoroutineScope_0) : false) ? value : THROW_CCE(), completion);
  };
  function Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda$slambda_2(this$0, $composition, resultContinuation) {
    var i = new Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda$slambda_1(this$0, $composition, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.invoke_d9fzmj_k$($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function Recomposer$recompositionRunner$slambda$lambda(this$0) {
    return function (changed, _anonymous_parameter_1__qggqgd) {
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      this$0.stateLock_1;
      // Inline function 'androidx.compose.runtime.Recomposer.recompositionRunner.<anonymous>.<anonymous>.<anonymous>' call
      var tmp;
      if (this$0._state_1.get_value_j01efc_k$().compareTo_30rs7w_k$(State_Idle_getInstance()) >= 0) {
        this$0.snapshotInvalidations_1.addAll_xcz12o_k$(changed);
        tmp = deriveStateLocked(this$0);
      } else {
        tmp = null;
      }
      var tmp0_safe_receiver = tmp;
      if (tmp0_safe_receiver == null)
        null;
      else {
        // Inline function 'kotlin.coroutines.resume' call
        // Inline function 'kotlin.Companion.success' call
        Companion_getInstance();
        var tmp$ret$3 = _Result___init__impl__xyqfz8(Unit_getInstance());
        tmp0_safe_receiver.resumeWith_dtxwbr_k$(tmp$ret$3);
      }
      return Unit_getInstance();
    };
  }
  function Recomposer$recompositionRunner$slambda$slambda($block, $parentFrameClock, resultContinuation) {
    this.$block_1 = $block;
    this.$parentFrameClock_1 = $parentFrameClock;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(Recomposer$recompositionRunner$slambda$slambda).invoke_d9fzmj_k$ = function ($this$coroutineScope, $completion) {
    var tmp = this.create_rcuf4x_k$($this$coroutineScope, $completion);
    tmp.set_result_xj64lm_k$(Unit_getInstance());
    tmp.set_exception_px07aa_k$(null);
    return tmp.doResume_5yljmg_k$();
  };
  protoOf(Recomposer$recompositionRunner$slambda$slambda).invoke_qns8j1_k$ = function (p1, $completion) {
    return this.invoke_d9fzmj_k$((!(p1 == null) ? isInterface(p1, CoroutineScope_0) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(Recomposer$recompositionRunner$slambda$slambda).doResume_5yljmg_k$ = function () {
    var suspendResult = this.get_result_iyg5d2_k$();
    $sm: do
      try {
        var tmp = this.get_state_iypx7s_k$();
        switch (tmp) {
          case 0:
            this.set_exceptionState_fex74n_k$(2);
            this.set_state_rjd8d0_k$(1);
            suspendResult = this.$block_1(this.$this$coroutineScope_1, this.$parentFrameClock_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return Unit_getInstance();
          case 2:
            throw this.get_exception_x0n6w6_k$();
        }
      } catch ($p) {
        var e = $p;
        if (this.get_exceptionState_wflpxn_k$() === 2) {
          throw e;
        } else {
          this.set_state_rjd8d0_k$(this.get_exceptionState_wflpxn_k$());
          this.set_exception_px07aa_k$(e);
        }
      }
     while (true);
  };
  protoOf(Recomposer$recompositionRunner$slambda$slambda).create_rcuf4x_k$ = function ($this$coroutineScope, completion) {
    var i = new Recomposer$recompositionRunner$slambda$slambda(this.$block_1, this.$parentFrameClock_1, completion);
    i.$this$coroutineScope_1 = $this$coroutineScope;
    return i;
  };
  protoOf(Recomposer$recompositionRunner$slambda$slambda).create_wyq9v6_k$ = function (value, completion) {
    return this.create_rcuf4x_k$((!(value == null) ? isInterface(value, CoroutineScope_0) : false) ? value : THROW_CCE(), completion);
  };
  function Recomposer$recompositionRunner$slambda$slambda_0($block, $parentFrameClock, resultContinuation) {
    var i = new Recomposer$recompositionRunner$slambda$slambda($block, $parentFrameClock, resultContinuation);
    var l = function ($this$coroutineScope, $completion) {
      return i.invoke_d9fzmj_k$($this$coroutineScope, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function _set_changeCount__c3wb4q($this, _set____db54di) {
    $this.changeCount_1 = _set____db54di;
  }
  function _get_broadcastFrameClock__dlobdb($this) {
    return $this.broadcastFrameClock_1;
  }
  function State(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function _get_stateLock__pona8b($this) {
    return $this.stateLock_1;
  }
  function _set_runnerJob__7iype0($this, _set____db54di) {
    $this.runnerJob_1 = _set____db54di;
  }
  function _get_runnerJob__lrvr0k($this) {
    return $this.runnerJob_1;
  }
  function _set_closeCause__l4xaje($this, _set____db54di) {
    $this.closeCause_1 = _set____db54di;
  }
  function _get_closeCause__yty6ai($this) {
    return $this.closeCause_1;
  }
  function _get_knownCompositions__y8veaj($this) {
    return $this.knownCompositions_1;
  }
  function _set_snapshotInvalidations__1ljnrg($this, _set____db54di) {
    $this.snapshotInvalidations_1 = _set____db54di;
  }
  function _get_snapshotInvalidations__7r6074($this) {
    return $this.snapshotInvalidations_1;
  }
  function _get_compositionInvalidations__z3xyjk($this) {
    return $this.compositionInvalidations_1;
  }
  function _get_compositionsAwaitingApply__r4kydk($this) {
    return $this.compositionsAwaitingApply_1;
  }
  function _get_compositionValuesAwaitingInsert__8wkzk0($this) {
    return $this.compositionValuesAwaitingInsert_1;
  }
  function _get_compositionValuesRemoved__fb40ll($this) {
    return $this.compositionValuesRemoved_1;
  }
  function _get_compositionValueStatesAvailable__353wgh($this) {
    return $this.compositionValueStatesAvailable_1;
  }
  function _set_failedCompositions__jrpyfj($this, _set____db54di) {
    $this.failedCompositions_1 = _set____db54di;
  }
  function _get_failedCompositions__hbisf9($this) {
    return $this.failedCompositions_1;
  }
  function _set_compositionsRemoved__uzzydq($this, _set____db54di) {
    $this.compositionsRemoved_1 = _set____db54di;
  }
  function _get_compositionsRemoved__qqdup2($this) {
    return $this.compositionsRemoved_1;
  }
  function _set_workContinuation__gjhslt($this, _set____db54di) {
    $this.workContinuation_1 = _set____db54di;
  }
  function _get_workContinuation__cjmggz($this) {
    return $this.workContinuation_1;
  }
  function _set_concurrentCompositionsOutstanding__uh8vf9($this, _set____db54di) {
    $this.concurrentCompositionsOutstanding_1 = _set____db54di;
  }
  function _get_concurrentCompositionsOutstanding__mriwn($this) {
    return $this.concurrentCompositionsOutstanding_1;
  }
  function _set_isClosed__sz8o0v($this, _set____db54di) {
    $this.isClosed_1 = _set____db54di;
  }
  function _get_isClosed__t8z2hh($this) {
    return $this.isClosed_1;
  }
  function _set_errorState__zcdtiq($this, _set____db54di) {
    $this.errorState_1 = _set____db54di;
  }
  function _get_errorState__kmhnb6($this) {
    return $this.errorState_1;
  }
  function _set_frameClockPaused__4o1oxk($this, _set____db54di) {
    $this.frameClockPaused_1 = _set____db54di;
  }
  function _get_frameClockPaused__of2k58($this) {
    return $this.frameClockPaused_1;
  }
  function _get__state__37adl3($this) {
    return $this._state_1;
  }
  function _get_effectJob__6qrj39($this) {
    return $this.effectJob_1;
  }
  function _get_hasBroadcastFrameClockAwaitersLocked__7l4pm1($this) {
    return !$this.frameClockPaused_1 ? $this.broadcastFrameClock_1.get_hasAwaiters_yh902p_k$() : false;
  }
  function _get_hasBroadcastFrameClockAwaiters__y6inql($this) {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    $this.stateLock_1;
    // Inline function 'androidx.compose.runtime.Recomposer.<get-hasBroadcastFrameClockAwaiters>.<anonymous>' call
    return _get_hasBroadcastFrameClockAwaitersLocked__7l4pm1($this);
  }
  function deriveStateLocked($this) {
    if ($this._state_1.get_value_j01efc_k$().compareTo_30rs7w_k$(State_ShuttingDown_getInstance()) <= 0) {
      $this.knownCompositions_1.clear_j9egeb_k$();
      $this.snapshotInvalidations_1 = new IdentityArraySet();
      $this.compositionInvalidations_1.clear_j9egeb_k$();
      $this.compositionsAwaitingApply_1.clear_j9egeb_k$();
      $this.compositionValuesAwaitingInsert_1.clear_j9egeb_k$();
      $this.failedCompositions_1 = null;
      var tmp0_safe_receiver = $this.workContinuation_1;
      if (tmp0_safe_receiver == null)
        null;
      else
        tmp0_safe_receiver.cancel$default_vwdpyq_k$();
      $this.workContinuation_1 = null;
      $this.errorState_1 = null;
      return null;
    }
    var tmp;
    if (!($this.errorState_1 == null)) {
      tmp = State_Inactive_getInstance();
    } else {
      if ($this.runnerJob_1 == null) {
        $this.snapshotInvalidations_1 = new IdentityArraySet();
        $this.compositionInvalidations_1.clear_j9egeb_k$();
        tmp = _get_hasBroadcastFrameClockAwaitersLocked__7l4pm1($this) ? State_InactivePendingWork_getInstance() : State_Inactive_getInstance();
      } else {
        var tmp_0;
        var tmp_1;
        var tmp_2;
        var tmp_3;
        var tmp_4;
        // Inline function 'kotlin.collections.isNotEmpty' call
        if (!$this.compositionInvalidations_1.isEmpty_y1axqb_k$()) {
          tmp_4 = true;
        } else {
          tmp_4 = $this.snapshotInvalidations_1.isNotEmpty_cjxbwk_k$();
        }
        if (tmp_4) {
          tmp_3 = true;
        } else {
          // Inline function 'kotlin.collections.isNotEmpty' call
          tmp_3 = !$this.compositionsAwaitingApply_1.isEmpty_y1axqb_k$();
        }
        if (tmp_3) {
          tmp_2 = true;
        } else {
          // Inline function 'kotlin.collections.isNotEmpty' call
          tmp_2 = !$this.compositionValuesAwaitingInsert_1.isEmpty_y1axqb_k$();
        }
        if (tmp_2) {
          tmp_1 = true;
        } else {
          tmp_1 = $this.concurrentCompositionsOutstanding_1 > 0;
        }
        if (tmp_1) {
          tmp_0 = true;
        } else {
          tmp_0 = _get_hasBroadcastFrameClockAwaitersLocked__7l4pm1($this);
        }
        if (tmp_0) {
          tmp = State_PendingWork_getInstance();
        } else {
          tmp = State_Idle_getInstance();
        }
      }
    }
    var newState = tmp;
    $this._state_1.set_value_v1vabv_k$(newState);
    var tmp_5;
    if (newState.equals(State_PendingWork_getInstance())) {
      // Inline function 'kotlin.also' call
      var this_0 = $this.workContinuation_1;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.Recomposer.deriveStateLocked.<anonymous>' call
      $this.workContinuation_1 = null;
      tmp_5 = this_0;
    } else {
      tmp_5 = null;
    }
    return tmp_5;
  }
  function _get_shouldKeepRecomposing__5j79sd($this) {
    var tmp;
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    $this.stateLock_1;
    // Inline function 'androidx.compose.runtime.Recomposer.<get-shouldKeepRecomposing>.<anonymous>' call
    if (!$this.isClosed_1) {
      tmp = true;
    } else {
      var tmp$ret$4;
      $l$block: {
        // Inline function 'kotlin.sequences.any' call
        var tmp0_iterator = $this.effectJob_1.get_children_4cwbp4_k$().iterator_jk1svi_k$();
        while (tmp0_iterator.hasNext_bitz1p_k$()) {
          var element = tmp0_iterator.next_20eer_k$();
          // Inline function 'androidx.compose.runtime.Recomposer.<get-shouldKeepRecomposing>.<anonymous>' call
          if (element.get_isActive_quafmh_k$()) {
            tmp$ret$4 = true;
            break $l$block;
          }
        }
        tmp$ret$4 = false;
      }
      tmp = tmp$ret$4;
    }
    return tmp;
  }
  function RecomposerInfoImpl($outer) {
    this.$this_1 = $outer;
  }
  protoOf(RecomposerInfoImpl).get_state_iypx7s_k$ = function () {
    return this.$this_1.get_currentState_snihnl_k$();
  };
  protoOf(RecomposerInfoImpl).get_hasPendingWork_kxkazt_k$ = function () {
    return this.$this_1.get_hasPendingWork_kxkazt_k$();
  };
  protoOf(RecomposerInfoImpl).get_changeCount_dwazvu_k$ = function () {
    return this.$this_1.changeCount_1;
  };
  protoOf(RecomposerInfoImpl).get_currentError_sfsfvc_k$ = function () {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.$this_1.stateLock_1;
    // Inline function 'androidx.compose.runtime.RecomposerInfoImpl.<get-currentError>.<anonymous>' call
    return this.$this_1.errorState_1;
  };
  protoOf(RecomposerInfoImpl).invalidateGroupsWithKey_235shq_k$ = function (key) {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.$this_1.stateLock_1;
    // Inline function 'androidx.compose.runtime.RecomposerInfoImpl.invalidateGroupsWithKey.<anonymous>' call
    var compositions = toMutableList(this.$this_1.knownCompositions_1);
    // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
    // Inline function 'androidx.compose.runtime.snapshots.fastMapNotNull' call
    // Inline function 'kotlin.contracts.contract' call
    var target = ArrayList_init_$Create$_0(compositions.get_size_woubt6_k$());
    // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    var last = compositions.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var item = compositions.get_c1px32_k$(index);
        // Inline function 'androidx.compose.runtime.snapshots.fastMapNotNull.<anonymous>' call
        // Inline function 'androidx.compose.runtime.RecomposerInfoImpl.invalidateGroupsWithKey.<anonymous>' call
        var tmp0_safe_receiver = item instanceof CompositionImpl ? item : null;
        if (tmp0_safe_receiver == null)
          null;
        else {
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          target.add_utx5q5_k$(tmp0_safe_receiver);
        }
      }
       while (inductionVariable <= last);
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable_0 = 0;
    var last_0 = target.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable_0 <= last_0)
      do {
        var index_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var item_0 = target.get_c1px32_k$(index_0);
        // Inline function 'androidx.compose.runtime.RecomposerInfoImpl.invalidateGroupsWithKey.<anonymous>' call
        item_0.invalidateGroupsWithKey_235shq_k$(key);
      }
       while (inductionVariable_0 <= last_0);
  };
  protoOf(RecomposerInfoImpl).saveStateAndDisposeForHotReload_aovpqx_k$ = function () {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.$this_1.stateLock_1;
    // Inline function 'androidx.compose.runtime.RecomposerInfoImpl.saveStateAndDisposeForHotReload.<anonymous>' call
    var compositions = toMutableList(this.$this_1.knownCompositions_1);
    // Inline function 'androidx.compose.runtime.snapshots.fastMap' call
    // Inline function 'androidx.compose.runtime.snapshots.fastMapNotNull' call
    // Inline function 'kotlin.contracts.contract' call
    var target = ArrayList_init_$Create$_0(compositions.get_size_woubt6_k$());
    // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    var last = compositions.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var item = compositions.get_c1px32_k$(index);
        // Inline function 'androidx.compose.runtime.snapshots.fastMapNotNull.<anonymous>' call
        // Inline function 'androidx.compose.runtime.RecomposerInfoImpl.saveStateAndDisposeForHotReload.<anonymous>' call
        var tmp0_safe_receiver = item instanceof CompositionImpl ? item : null;
        if (tmp0_safe_receiver == null)
          null;
        else {
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          target.add_utx5q5_k$(tmp0_safe_receiver);
        }
      }
       while (inductionVariable <= last);
    // Inline function 'kotlin.contracts.contract' call
    var target_0 = ArrayList_init_$Create$_0(target.get_size_woubt6_k$());
    // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable_0 = 0;
    var last_0 = target.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable_0 <= last_0)
      do {
        var index_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var item_0 = target.get_c1px32_k$(index_0);
        // Inline function 'androidx.compose.runtime.snapshots.fastMap.<anonymous>' call
        // Inline function 'kotlin.collections.plusAssign' call
        // Inline function 'androidx.compose.runtime.RecomposerInfoImpl.saveStateAndDisposeForHotReload.<anonymous>' call
        // Inline function 'kotlin.apply' call
        var this_0 = new HotReloadable(item_0);
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.RecomposerInfoImpl.saveStateAndDisposeForHotReload.<anonymous>.<anonymous>' call
        this_0.clearContent_f67q1o_k$();
        target_0.add_utx5q5_k$(this_0);
      }
       while (inductionVariable_0 <= last_0);
    return target_0;
  };
  protoOf(RecomposerInfoImpl).resetErrorState_rc7d2g_k$ = function () {
    return resetErrorState(this.$this_1);
  };
  protoOf(RecomposerInfoImpl).retryFailedCompositions_8ov74u_k$ = function () {
    return retryFailedCompositions(this.$this_1);
  };
  function HotReloadable(composition) {
    this.composition_1 = composition;
    this.composable_1 = this.composition_1.get_composable_rhz8fe_k$();
  }
  protoOf(HotReloadable).clearContent_f67q1o_k$ = function () {
    if (this.composition_1.get_isRoot_ew5h6d_k$()) {
      this.composition_1.setContent$composable_hmey4i_k$(ComposableSingletons$RecomposerKt_getInstance().lambda_1_r8sbbp_1);
    }
  };
  protoOf(HotReloadable).resetContent_7o0zhi_k$ = function () {
    this.composition_1.$set_composable$$composable_lbzvrn_k$(this.composable_1);
  };
  protoOf(HotReloadable).recompose_6h4q1d_k$ = function () {
    if (this.composition_1.get_isRoot_ew5h6d_k$()) {
      this.composition_1.setContent$composable_hmey4i_k$(this.composable_1);
    }
  };
  function RecomposerErrorState(recoverable, cause) {
    this.recoverable_1 = recoverable;
    this.cause_1 = cause;
  }
  protoOf(RecomposerErrorState).get_recoverable_o47905_k$ = function () {
    return this.recoverable_1;
  };
  protoOf(RecomposerErrorState).get_cause_iplhs0_k$ = function () {
    return this.cause_1;
  };
  function _get_recomposerInfo__pnp8ju($this) {
    return $this.recomposerInfo_1;
  }
  function recordComposerModifications($this) {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    $this.stateLock_1;
    // Inline function 'androidx.compose.runtime.Recomposer.recordComposerModifications.<anonymous>' call
    if ($this.snapshotInvalidations_1.isEmpty_y1axqb_k$())
      return _get_hasFrameWorkLocked__1gtyf7($this);
    // Inline function 'kotlin.also' call
    var this_0 = $this.snapshotInvalidations_1;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.Recomposer.recordComposerModifications.<anonymous>.<anonymous>' call
    $this.snapshotInvalidations_1 = new IdentityArraySet();
    var changes = this_0;
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    $this.stateLock_1;
    // Inline function 'androidx.compose.runtime.Recomposer.recordComposerModifications.<anonymous>' call
    var compositions = toMutableList($this.knownCompositions_1);
    var complete = false;
    try {
      // Inline function 'kotlin.run' call
      // Inline function 'kotlin.contracts.contract' call
      $l$block: {
        // Inline function 'androidx.compose.runtime.Recomposer.recordComposerModifications.<anonymous>' call
        // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
        // Inline function 'kotlin.contracts.contract' call
        var inductionVariable = 0;
        var last = compositions.get_size_woubt6_k$() - 1 | 0;
        if (inductionVariable <= last)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var item = compositions.get_c1px32_k$(index);
            // Inline function 'androidx.compose.runtime.Recomposer.recordComposerModifications.<anonymous>.<anonymous>' call
            item.recordModificationsOf_wnqd8_k$(changes);
            if ($this._state_1.get_value_j01efc_k$().compareTo_30rs7w_k$(State_ShuttingDown_getInstance()) <= 0) {
              break $l$block;
            }
          }
           while (inductionVariable <= last);
      }
      $this.snapshotInvalidations_1 = new IdentityArraySet();
      complete = true;
    }finally {
      if (!complete) {
        // Inline function 'androidx.compose.runtime.synchronized' call
        // Inline function 'kotlinx.atomicfu.locks.synchronized' call
        $this.stateLock_1;
        $this.snapshotInvalidations_1.addAll_xcz12o_k$(changes);
      }
    }
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    $this.stateLock_1;
    // Inline function 'androidx.compose.runtime.Recomposer.recordComposerModifications.<anonymous>' call
    if (!(deriveStateLocked($this) == null)) {
      // Inline function 'kotlin.error' call
      var message = 'called outside of runRecomposeAndApplyChanges';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    return _get_hasFrameWorkLocked__1gtyf7($this);
  }
  function recordComposerModifications_0($this, onEachInvalidComposition) {
    var changes = $this.snapshotInvalidations_1;
    if (changes.isNotEmpty_cjxbwk_k$()) {
      // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
      var this_0 = $this.knownCompositions_1;
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable = 0;
      var last = this_0.get_size_woubt6_k$() - 1 | 0;
      if (inductionVariable <= last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var item = this_0.get_c1px32_k$(index);
          // Inline function 'androidx.compose.runtime.Recomposer.recordComposerModifications.<anonymous>' call
          item.recordModificationsOf_wnqd8_k$(changes);
        }
         while (inductionVariable <= last);
      $this.snapshotInvalidations_1 = new IdentityArraySet();
    }
    // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
    var this_1 = $this.compositionInvalidations_1;
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable_0 = 0;
    var last_0 = this_1.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable_0 <= last_0)
      do {
        var index_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var item_0 = this_1.get_c1px32_k$(index_0);
        onEachInvalidComposition(item_0);
      }
       while (inductionVariable_0 <= last_0);
    $this.compositionInvalidations_1.clear_j9egeb_k$();
    if (!(deriveStateLocked($this) == null)) {
      // Inline function 'kotlin.error' call
      var message = 'called outside of runRecomposeAndApplyChanges';
      throw IllegalStateException_init_$Create$(toString(message));
    }
  }
  function registerRunnerJob($this, callingJob) {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    $this.stateLock_1;
    // Inline function 'androidx.compose.runtime.Recomposer.registerRunnerJob.<anonymous>' call
    var tmp0_safe_receiver = $this.closeCause_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      throw tmp0_safe_receiver;
    }
    if ($this._state_1.get_value_j01efc_k$().compareTo_30rs7w_k$(State_ShuttingDown_getInstance()) <= 0) {
      // Inline function 'kotlin.error' call
      var message = 'Recomposer shut down';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    if (!($this.runnerJob_1 == null)) {
      // Inline function 'kotlin.error' call
      var message_0 = 'Recomposer already running';
      throw IllegalStateException_init_$Create$(toString(message_0));
    }
    $this.runnerJob_1 = callingJob;
    deriveStateLocked($this);
  }
  function processCompositionError($this, e, failedInitialComposition, recoverable) {
    var tmp;
    if (Companion_getInstance_5()._hotReloadEnabled_1.get_26vq_k$()) {
      tmp = !(e instanceof ComposeRuntimeError);
    } else {
      tmp = false;
    }
    if (tmp) {
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      $this.stateLock_1;
      // Inline function 'androidx.compose.runtime.Recomposer.processCompositionError.<anonymous>' call
      logError('Error was captured in composition while live edit was enabled.', e);
      $this.compositionsAwaitingApply_1.clear_j9egeb_k$();
      $this.compositionInvalidations_1.clear_j9egeb_k$();
      $this.snapshotInvalidations_1 = new IdentityArraySet();
      $this.compositionValuesAwaitingInsert_1.clear_j9egeb_k$();
      $this.compositionValuesRemoved_1.clear_j9egeb_k$();
      $this.compositionValueStatesAvailable_1.clear_j9egeb_k$();
      $this.errorState_1 = new RecomposerErrorState(recoverable, e);
      if (!(failedInitialComposition == null)) {
        var tmp0_elvis_lhs = $this.failedCompositions_1;
        var tmp_0;
        if (tmp0_elvis_lhs == null) {
          // Inline function 'kotlin.also' call
          // Inline function 'kotlin.collections.mutableListOf' call
          var this_0 = ArrayList_init_$Create$();
          // Inline function 'kotlin.contracts.contract' call
          // Inline function 'androidx.compose.runtime.Recomposer.processCompositionError.<anonymous>.<anonymous>' call
          $this.failedCompositions_1 = this_0;
          tmp_0 = this_0;
        } else {
          tmp_0 = tmp0_elvis_lhs;
        }
        var failedCompositions = tmp_0;
        if (!failedCompositions.contains_aljjnj_k$(failedInitialComposition)) {
          // Inline function 'kotlin.collections.plusAssign' call
          failedCompositions.add_utx5q5_k$(failedInitialComposition);
        }
        // Inline function 'kotlin.collections.minusAssign' call
        $this.knownCompositions_1.remove_cedx0m_k$(failedInitialComposition);
      }
      deriveStateLocked($this);
    } else {
      throw e;
    }
  }
  function processCompositionError$default($this, e, failedInitialComposition, recoverable, $super) {
    failedInitialComposition = failedInitialComposition === VOID ? null : failedInitialComposition;
    recoverable = recoverable === VOID ? false : recoverable;
    return processCompositionError($this, e, failedInitialComposition, recoverable);
  }
  function resetErrorState($this) {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    $this.stateLock_1;
    // Inline function 'androidx.compose.runtime.Recomposer.resetErrorState.<anonymous>' call
    var error = $this.errorState_1;
    if (!(error == null)) {
      $this.errorState_1 = null;
      deriveStateLocked($this);
    }
    var errorState = error;
    return errorState;
  }
  function retryFailedCompositions($this) {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    $this.stateLock_1;
    // Inline function 'androidx.compose.runtime.Recomposer.retryFailedCompositions.<anonymous>' call
    // Inline function 'kotlin.also' call
    var this_0 = $this.failedCompositions_1;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.Recomposer.retryFailedCompositions.<anonymous>.<anonymous>' call
    $this.failedCompositions_1 = null;
    var tmp;
    if (this_0 == null) {
      return Unit_getInstance();
    } else {
      tmp = this_0;
    }
    var compositionsToRetry = tmp;
    try {
      $l$loop_1: while (true) {
        // Inline function 'kotlin.collections.isNotEmpty' call
        if (!!compositionsToRetry.isEmpty_y1axqb_k$()) {
          break $l$loop_1;
        }
        var composition = removeLast(compositionsToRetry);
        if (!(composition instanceof CompositionImpl))
          continue $l$loop_1;
        composition.invalidateAll_yol1g6_k$();
        composition.setContent$composable_hmey4i_k$(composition.get_composable_rhz8fe_k$());
        if (!($this.errorState_1 == null))
          break $l$loop_1;
      }
    }finally {
      // Inline function 'kotlin.collections.isNotEmpty' call
      if (!compositionsToRetry.isEmpty_y1axqb_k$()) {
        // Inline function 'androidx.compose.runtime.synchronized' call
        // Inline function 'kotlinx.atomicfu.locks.synchronized' call
        $this.stateLock_1;
        var tmp_0 = $this;
        var tmp0_safe_receiver = $this.failedCompositions_1;
        var tmp_1;
        if (tmp0_safe_receiver == null) {
          tmp_1 = null;
        } else {
          // Inline function 'kotlin.also' call
          // Inline function 'kotlin.contracts.contract' call
          // Inline function 'androidx.compose.runtime.Recomposer.retryFailedCompositions.<anonymous>.<anonymous>' call
          tmp0_safe_receiver.addAll_4lagoh_k$(compositionsToRetry);
          tmp_1 = tmp0_safe_receiver;
        }
        var tmp1_elvis_lhs = tmp_1;
        tmp_0.failedCompositions_1 = tmp1_elvis_lhs == null ? compositionsToRetry : tmp1_elvis_lhs;
      }
    }
  }
  function runFrameLoop($this, parentFrameClock, frameSignal, $completion) {
    var tmp = new $runFrameLoopCOROUTINE$1($this, parentFrameClock, frameSignal, $completion);
    tmp.set_result_xj64lm_k$(Unit_getInstance());
    tmp.set_exception_px07aa_k$(null);
    return tmp.doResume_5yljmg_k$();
  }
  function _get_hasSchedulingWork__b617oy($this) {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    $this.stateLock_1;
    // Inline function 'androidx.compose.runtime.Recomposer.<get-hasSchedulingWork>.<anonymous>' call
    var tmp;
    var tmp_0;
    if ($this.snapshotInvalidations_1.isNotEmpty_cjxbwk_k$()) {
      tmp_0 = true;
    } else {
      // Inline function 'kotlin.collections.isNotEmpty' call
      tmp_0 = !$this.compositionInvalidations_1.isEmpty_y1axqb_k$();
    }
    if (tmp_0) {
      tmp = true;
    } else {
      tmp = _get_hasBroadcastFrameClockAwaitersLocked__7l4pm1($this);
    }
    return tmp;
  }
  function awaitWorkAvailable($this, $completion) {
    var tmp = new $awaitWorkAvailableCOROUTINE$2($this, $completion);
    tmp.set_result_xj64lm_k$(Unit_getInstance());
    tmp.set_exception_px07aa_k$(null);
    return tmp.doResume_5yljmg_k$();
  }
  function recompositionRunner($this, block, $completion) {
    // Inline function 'kotlin.js.getCoroutineContext' call
    var tmp$ret$0 = $completion.get_context_h02k06_k$();
    var parentFrameClock = get_monotonicFrameClock(tmp$ret$0);
    return withContext($this.broadcastFrameClock_1, Recomposer$recompositionRunner$slambda_0($this, block, parentFrameClock, null), $completion);
  }
  function performInitialMovableContentInserts($this, composition) {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    $this.stateLock_1;
    var tmp;
    var tmp$ret$1;
    $l$block: {
      // Inline function 'androidx.compose.runtime.snapshots.fastAny' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
      var this_0 = $this.compositionValuesAwaitingInsert_1;
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable = 0;
      var last = this_0.get_size_woubt6_k$() - 1 | 0;
      if (inductionVariable <= last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var item = this_0.get_c1px32_k$(index);
          // Inline function 'androidx.compose.runtime.snapshots.fastAny.<anonymous>' call
          // Inline function 'androidx.compose.runtime.Recomposer.performInitialMovableContentInserts.<anonymous>.<anonymous>' call
          if (equals(item.get_composition_q729_k$(), composition)) {
            tmp$ret$1 = true;
            break $l$block;
          }
        }
         while (inductionVariable <= last);
      tmp$ret$1 = false;
    }
    if (!tmp$ret$1) {
      return Unit_getInstance();
    }
    // Inline function 'kotlin.collections.mutableListOf' call
    var toInsert = ArrayList_init_$Create$();
    performInitialMovableContentInserts$fillToInsert(toInsert, $this, composition);
    $l$loop: while (true) {
      // Inline function 'kotlin.collections.isNotEmpty' call
      if (!!toInsert.isEmpty_y1axqb_k$()) {
        break $l$loop;
      }
      performInsertValues($this, toInsert, null);
      performInitialMovableContentInserts$fillToInsert(toInsert, $this, composition);
    }
  }
  function performRecompose($this, composition, modifiedValues) {
    var tmp;
    if (composition.get_isComposing_a8f9zw_k$() ? true : composition.get_isDisposed_skr1u0_k$()) {
      tmp = true;
    } else {
      var tmp0_safe_receiver = $this.compositionsRemoved_1;
      tmp = (tmp0_safe_receiver == null ? null : tmp0_safe_receiver.contains_aljjnj_k$(composition)) === true;
    }
    if (tmp)
      return null;
    var tmp_0;
    $l$block_0: {
      // Inline function 'androidx.compose.runtime.Recomposer.composing' call
      var snapshot = Companion_getInstance_12().takeMutableSnapshot_ksyot9_k$(readObserverOf($this, composition), writeObserverOf($this, composition, modifiedValues));
      try {
        var tmp$ret$1;
        $l$block: {
          // Inline function 'androidx.compose.runtime.snapshots.Snapshot.enter' call
          var previous = snapshot.makeCurrent_v2db9x_k$();
          try {
            // Inline function 'androidx.compose.runtime.Recomposer.performRecompose.<anonymous>' call
            if ((modifiedValues == null ? null : modifiedValues.isNotEmpty_cjxbwk_k$()) === true) {
              composition.prepareCompose_lcmlpp_k$(Recomposer$performRecompose$lambda(modifiedValues, composition));
            }
            tmp$ret$1 = composition.recompose_gd07pb_k$();
            break $l$block;
          }finally {
            snapshot.restoreCurrent_k22xtq_k$(previous);
          }
        }
        break $l$block_0;
      }finally {
        applyAndCheck($this, snapshot);
      }
    }
    if (tmp$ret$1) {
      tmp_0 = composition;
    } else {
      tmp_0 = null;
    }
    return tmp_0;
  }
  function performInsertValues($this, references, modifiedValues) {
    // Inline function 'androidx.compose.runtime.snapshots.fastGroupBy' call
    // Inline function 'kotlin.contracts.contract' call
    var destination = HashMap_init_$Create$_0(references.get_size_woubt6_k$());
    // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    var last = references.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var item = references.get_c1px32_k$(index);
        // Inline function 'androidx.compose.runtime.snapshots.fastGroupBy.<anonymous>' call
        // Inline function 'androidx.compose.runtime.Recomposer.performInsertValues.<anonymous>' call
        var key = item.get_composition_q729_k$();
        // Inline function 'kotlin.collections.getOrPut' call
        var value = destination.get_wei43m_k$(key);
        var tmp;
        if (value == null) {
          // Inline function 'androidx.compose.runtime.snapshots.fastGroupBy.<anonymous>.<anonymous>' call
          var answer = ArrayList_init_$Create$();
          destination.put_4fpzoq_k$(key, answer);
          tmp = answer;
        } else {
          tmp = value;
        }
        var list = tmp;
        list.add_utx5q5_k$(item);
      }
       while (inductionVariable <= last);
    var tasks = destination;
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = tasks.get_entries_p20ztl_k$().iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var tmp1_loop_parameter = tmp0_iterator.next_20eer_k$();
      // Inline function 'kotlin.collections.component1' call
      var composition = tmp1_loop_parameter.get_key_18j28a_k$();
      // Inline function 'kotlin.collections.component2' call
      var refs = tmp1_loop_parameter.get_value_j01efc_k$();
      runtimeCheck_0(!composition.get_isComposing_a8f9zw_k$());
      $l$block_0: {
        // Inline function 'androidx.compose.runtime.Recomposer.composing' call
        var snapshot = Companion_getInstance_12().takeMutableSnapshot_ksyot9_k$(readObserverOf($this, composition), writeObserverOf($this, composition, modifiedValues));
        try {
          $l$block: {
            // Inline function 'androidx.compose.runtime.snapshots.Snapshot.enter' call
            var previous = snapshot.makeCurrent_v2db9x_k$();
            try {
              // Inline function 'androidx.compose.runtime.synchronized' call
              // Inline function 'kotlinx.atomicfu.locks.synchronized' call
              $this.stateLock_1;
              // Inline function 'androidx.compose.runtime.Recomposer.performInsertValues.<anonymous>.<anonymous>' call
              // Inline function 'androidx.compose.runtime.snapshots.fastMap' call
              // Inline function 'kotlin.contracts.contract' call
              var target = ArrayList_init_$Create$_0(refs.get_size_woubt6_k$());
              // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
              // Inline function 'kotlin.contracts.contract' call
              var inductionVariable_0 = 0;
              var last_0 = refs.get_size_woubt6_k$() - 1 | 0;
              if (inductionVariable_0 <= last_0)
                do {
                  var index_0 = inductionVariable_0;
                  inductionVariable_0 = inductionVariable_0 + 1 | 0;
                  var item_0 = refs.get_c1px32_k$(index_0);
                  // Inline function 'androidx.compose.runtime.snapshots.fastMap.<anonymous>' call
                  // Inline function 'kotlin.collections.plusAssign' call
                  // Inline function 'androidx.compose.runtime.Recomposer.performInsertValues.<anonymous>.<anonymous>.<anonymous>' call
                  var element = to(item_0, removeLastMultiValue($this.compositionValuesRemoved_1, item_0.get_content_h02jrk_k$()));
                  target.add_utx5q5_k$(element);
                }
                 while (inductionVariable_0 <= last_0);
              var pairs = target;
              composition.insertMovableContent_a71or3_k$(pairs);
              break $l$block;
            }finally {
              snapshot.restoreCurrent_k22xtq_k$(previous);
            }
          }
          break $l$block_0;
        }finally {
          applyAndCheck($this, snapshot);
        }
      }
    }
    return toList(tasks.get_keys_wop4xp_k$());
  }
  function discardUnusedValues($this) {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    $this.stateLock_1;
    // Inline function 'androidx.compose.runtime.Recomposer.discardUnusedValues.<anonymous>' call
    var tmp;
    // Inline function 'kotlin.collections.isNotEmpty' call
    if (!$this.compositionValuesRemoved_1.isEmpty_y1axqb_k$()) {
      var references = flatten($this.compositionValuesRemoved_1.get_values_ksazhn_k$());
      $this.compositionValuesRemoved_1.clear_j9egeb_k$();
      // Inline function 'androidx.compose.runtime.snapshots.fastMap' call
      // Inline function 'kotlin.contracts.contract' call
      var target = ArrayList_init_$Create$_0(references.get_size_woubt6_k$());
      // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable = 0;
      var last = references.get_size_woubt6_k$() - 1 | 0;
      if (inductionVariable <= last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var item = references.get_c1px32_k$(index);
          // Inline function 'androidx.compose.runtime.snapshots.fastMap.<anonymous>' call
          // Inline function 'kotlin.collections.plusAssign' call
          // Inline function 'androidx.compose.runtime.Recomposer.discardUnusedValues.<anonymous>.<anonymous>' call
          var element = to(item, $this.compositionValueStatesAvailable_1.get_wei43m_k$(item));
          target.add_utx5q5_k$(element);
        }
         while (inductionVariable <= last);
      var unusedValues = target;
      $this.compositionValueStatesAvailable_1.clear_j9egeb_k$();
      tmp = unusedValues;
    } else {
      tmp = emptyList();
    }
    var unusedValues_0 = tmp;
    // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable_0 = 0;
    var last_0 = unusedValues_0.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable_0 <= last_0)
      do {
        var index_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var item_0 = unusedValues_0.get_c1px32_k$(index_0);
        // Inline function 'androidx.compose.runtime.Recomposer.discardUnusedValues.<anonymous>' call
        var reference = item_0.component1_7eebsc_k$();
        var state = item_0.component2_7eebsb_k$();
        if (!(state == null)) {
          reference.get_composition_q729_k$().disposeUnusedMovableContent_bobx08_k$(state);
        }
      }
       while (inductionVariable_0 <= last_0);
  }
  function readObserverOf($this, composition) {
    return Recomposer$readObserverOf$lambda(composition);
  }
  function writeObserverOf($this, composition, modifiedValues) {
    return Recomposer$writeObserverOf$lambda(composition, modifiedValues);
  }
  function composing($this, composition, modifiedValues, block) {
    var snapshot = Companion_getInstance_12().takeMutableSnapshot_ksyot9_k$(readObserverOf($this, composition), writeObserverOf($this, composition, modifiedValues));
    try {
      var tmp$ret$0;
      $l$block: {
        // Inline function 'androidx.compose.runtime.snapshots.Snapshot.enter' call
        var previous = snapshot.makeCurrent_v2db9x_k$();
        try {
          tmp$ret$0 = block();
          break $l$block;
        }finally {
          snapshot.restoreCurrent_k22xtq_k$(previous);
        }
      }
      return tmp$ret$0;
    }finally {
      applyAndCheck($this, snapshot);
    }
  }
  function applyAndCheck($this, snapshot) {
    try {
      var applyResult = snapshot.apply_1jdxta_k$();
      if (applyResult instanceof Failure) {
        // Inline function 'kotlin.error' call
        var message = 'Unsupported concurrent change during composition. A state object was modified by composition as well as being modified outside composition.';
        throw IllegalStateException_init_$Create$(toString(message));
      }
    }finally {
      snapshot.dispose_3nnxhr_k$();
    }
  }
  function _get_hasFrameWorkLocked__1gtyf7($this) {
    var tmp;
    // Inline function 'kotlin.collections.isNotEmpty' call
    if (!$this.compositionInvalidations_1.isEmpty_y1axqb_k$()) {
      tmp = true;
    } else {
      tmp = _get_hasBroadcastFrameClockAwaitersLocked__7l4pm1($this);
    }
    return tmp;
  }
  function _get_hasConcurrentFrameWorkLocked__xjkmzw($this) {
    var tmp;
    // Inline function 'kotlin.collections.isNotEmpty' call
    if (!$this.compositionsAwaitingApply_1.isEmpty_y1axqb_k$()) {
      tmp = true;
    } else {
      tmp = _get_hasBroadcastFrameClockAwaitersLocked__7l4pm1($this);
    }
    return tmp;
  }
  function Companion_3() {
    Companion_instance_3 = this;
    this._runningRecomposers_1 = MutableStateFlow(persistentSetOf());
    this._hotReloadEnabled_1 = new AtomicReference(false);
  }
  protoOf(Companion_3).get_runningRecomposers_jna2mi_k$ = function () {
    return this._runningRecomposers_1;
  };
  protoOf(Companion_3).setHotReloadEnabled_ey0ap4_k$ = function (value) {
    this._hotReloadEnabled_1.set_inogor_k$(value);
  };
  protoOf(Companion_3).saveStateAndDisposeForHotReload_aovpqx_k$ = function () {
    this._hotReloadEnabled_1.set_inogor_k$(true);
    // Inline function 'kotlin.collections.flatMap' call
    // Inline function 'kotlin.collections.flatMapTo' call
    var this_0 = this._runningRecomposers_1.get_value_j01efc_k$();
    var destination = ArrayList_init_$Create$();
    var tmp0_iterator = this_0.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var element = tmp0_iterator.next_20eer_k$();
      // Inline function 'androidx.compose.runtime.Companion.saveStateAndDisposeForHotReload.<anonymous>' call
      var list = element.saveStateAndDisposeForHotReload_aovpqx_k$();
      addAll(destination, list);
    }
    return destination;
  };
  protoOf(Companion_3).loadStateAndComposeForHotReload_sgguk5_k$ = function (token) {
    this._hotReloadEnabled_1.set_inogor_k$(true);
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator = this._runningRecomposers_1.get_value_j01efc_k$().iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var element = tmp0_iterator.next_20eer_k$();
      // Inline function 'androidx.compose.runtime.Companion.loadStateAndComposeForHotReload.<anonymous>' call
      element.resetErrorState_rc7d2g_k$();
    }
    var holders = isInterface(token, List) ? token : THROW_CCE();
    // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    var last = holders.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var item = holders.get_c1px32_k$(index);
        // Inline function 'androidx.compose.runtime.Companion.loadStateAndComposeForHotReload.<anonymous>' call
        item.resetContent_7o0zhi_k$();
      }
       while (inductionVariable <= last);
    // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable_0 = 0;
    var last_0 = holders.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable_0 <= last_0)
      do {
        var index_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var item_0 = holders.get_c1px32_k$(index_0);
        // Inline function 'androidx.compose.runtime.Companion.loadStateAndComposeForHotReload.<anonymous>' call
        item_0.recompose_6h4q1d_k$();
      }
       while (inductionVariable_0 <= last_0);
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator_0 = this._runningRecomposers_1.get_value_j01efc_k$().iterator_jk1svi_k$();
    while (tmp0_iterator_0.hasNext_bitz1p_k$()) {
      var element_0 = tmp0_iterator_0.next_20eer_k$();
      // Inline function 'androidx.compose.runtime.Companion.loadStateAndComposeForHotReload.<anonymous>' call
      element_0.retryFailedCompositions_8ov74u_k$();
    }
  };
  protoOf(Companion_3).invalidateGroupsWithKey_235shq_k$ = function (key) {
    this._hotReloadEnabled_1.set_inogor_k$(true);
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator = this._runningRecomposers_1.get_value_j01efc_k$().iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var element = tmp0_iterator.next_20eer_k$();
      $l$block: {
        // Inline function 'androidx.compose.runtime.Companion.invalidateGroupsWithKey.<anonymous>' call
        var tmp0_safe_receiver = element.get_currentError_sfsfvc_k$();
        if ((tmp0_safe_receiver == null ? null : tmp0_safe_receiver.get_recoverable_o47905_k$()) === false) {
          break $l$block;
        }
        element.resetErrorState_rc7d2g_k$();
        element.invalidateGroupsWithKey_235shq_k$(key);
        element.retryFailedCompositions_8ov74u_k$();
      }
    }
  };
  protoOf(Companion_3).getCurrentErrors_bydkem_k$ = function () {
    // Inline function 'kotlin.collections.mapNotNull' call
    // Inline function 'kotlin.collections.mapNotNullTo' call
    var this_0 = this._runningRecomposers_1.get_value_j01efc_k$();
    var destination = ArrayList_init_$Create$();
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator = this_0.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var element = tmp0_iterator.next_20eer_k$();
      // Inline function 'kotlin.collections.mapNotNullTo.<anonymous>' call
      // Inline function 'androidx.compose.runtime.Companion.getCurrentErrors.<anonymous>' call
      var tmp0_safe_receiver = element.get_currentError_sfsfvc_k$();
      if (tmp0_safe_receiver == null)
        null;
      else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        destination.add_utx5q5_k$(tmp0_safe_receiver);
      }
    }
    return destination;
  };
  protoOf(Companion_3).clearErrors_ct0xu0_k$ = function () {
    // Inline function 'kotlin.collections.mapNotNull' call
    // Inline function 'kotlin.collections.mapNotNullTo' call
    var this_0 = this._runningRecomposers_1.get_value_j01efc_k$();
    var destination = ArrayList_init_$Create$();
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator = this_0.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var element = tmp0_iterator.next_20eer_k$();
      // Inline function 'kotlin.collections.mapNotNullTo.<anonymous>' call
      // Inline function 'androidx.compose.runtime.Companion.clearErrors.<anonymous>' call
      var tmp0_safe_receiver = element.resetErrorState_rc7d2g_k$();
      if (tmp0_safe_receiver == null)
        null;
      else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        destination.add_utx5q5_k$(tmp0_safe_receiver);
      }
    }
  };
  var Companion_instance_3;
  function Companion_getInstance_5() {
    if (Companion_instance_3 == null)
      new Companion_3();
    return Companion_instance_3;
  }
  function get_$stableprop_9() {
    return 8;
  }
  function performInitialMovableContentInserts$fillToInsert(toInsert, this$0, $composition) {
    toInsert.clear_j9egeb_k$();
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this$0.stateLock_1;
    var iterator = this$0.compositionValuesAwaitingInsert_1.iterator_jk1svi_k$();
    while (iterator.hasNext_bitz1p_k$()) {
      var value = iterator.next_20eer_k$();
      if (equals(value.get_composition_q729_k$(), $composition)) {
        toInsert.add_utx5q5_k$(value);
        iterator.remove_ldkf9o_k$();
      }
    }
  }
  function Recomposer$broadcastFrameClock$lambda(this$0) {
    return function () {
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      this$0.stateLock_1;
      // Inline function 'androidx.compose.runtime.Recomposer.broadcastFrameClock.<anonymous>.<anonymous>' call
      // Inline function 'kotlin.also' call
      var this_0 = deriveStateLocked(this$0);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.Recomposer.broadcastFrameClock.<anonymous>.<anonymous>.<anonymous>' call
      if (this$0._state_1.get_value_j01efc_k$().compareTo_30rs7w_k$(State_ShuttingDown_getInstance()) <= 0)
        throw CancellationException_init_$Create$_0('Recomposer shutdown; frame clock awaiter will never resume', this$0.closeCause_1);
      if (this_0 == null)
        null;
      else {
        // Inline function 'kotlin.coroutines.resume' call
        // Inline function 'kotlin.Companion.success' call
        Companion_getInstance();
        var tmp$ret$4 = _Result___init__impl__xyqfz8(Unit_getInstance());
        this_0.resumeWith_dtxwbr_k$(tmp$ret$4);
      }
      return Unit_getInstance();
    };
  }
  function Recomposer$effectJob$lambda$lambda(this$0, $throwable) {
    return function (runnerJobCause) {
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      this$0.stateLock_1;
      var tmp = this$0;
      var tmp0_safe_receiver = $throwable;
      var tmp_0;
      if (tmp0_safe_receiver == null) {
        tmp_0 = null;
      } else {
        // Inline function 'kotlin.apply' call
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.Recomposer.effectJob.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
        var tmp_1;
        if (runnerJobCause == null) {
          tmp_1 = null;
        } else {
          // Inline function 'kotlin.takeIf' call
          // Inline function 'kotlin.contracts.contract' call
          var tmp_2;
          // Inline function 'androidx.compose.runtime.Recomposer.effectJob.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
          if (!(runnerJobCause instanceof CancellationException)) {
            tmp_2 = runnerJobCause;
          } else {
            tmp_2 = null;
          }
          tmp_1 = tmp_2;
        }
        var tmp1_safe_receiver = tmp_1;
        if (tmp1_safe_receiver == null)
          null;
        else {
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          addSuppressed(tmp0_safe_receiver, tmp1_safe_receiver);
        }
        tmp_0 = tmp0_safe_receiver;
      }
      tmp.closeCause_1 = tmp_0;
      this$0._state_1.set_value_v1vabv_k$(State_ShutDown_getInstance());
      return Unit_getInstance();
    };
  }
  function Recomposer$effectJob$lambda(this$0) {
    return function (throwable) {
      var cancellation = CancellationException_init_$Create$_0('Recomposer effect job completed', throwable);
      var continuationToResume = null;
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      this$0.stateLock_1;
      // Inline function 'androidx.compose.runtime.Recomposer.effectJob.<anonymous>.<anonymous>.<anonymous>' call
      var runnerJob = this$0.runnerJob_1;
      var tmp;
      if (!(runnerJob == null)) {
        this$0._state_1.set_value_v1vabv_k$(State_ShuttingDown_getInstance());
        if (!this$0.isClosed_1) {
          runnerJob.cancel_hkmm2i_k$(cancellation);
        } else if (!(this$0.workContinuation_1 == null)) {
          continuationToResume = this$0.workContinuation_1;
        }
        this$0.workContinuation_1 = null;
        tmp = runnerJob.invokeOnCompletion_n6cffu_k$(Recomposer$effectJob$lambda$lambda(this$0, throwable));
      } else {
        this$0.closeCause_1 = cancellation;
        this$0._state_1.set_value_v1vabv_k$(State_ShutDown_getInstance());
        tmp = Unit_getInstance();
      }
      var tmp0_safe_receiver = continuationToResume;
      if (tmp0_safe_receiver == null)
        null;
      else {
        // Inline function 'kotlin.coroutines.resume' call
        // Inline function 'kotlin.Companion.success' call
        Companion_getInstance();
        var tmp$ret$3 = _Result___init__impl__xyqfz8(Unit_getInstance());
        tmp0_safe_receiver.resumeWith_dtxwbr_k$(tmp$ret$3);
      }
      return Unit_getInstance();
    };
  }
  function Recomposer$runRecomposeAndApplyChanges$slambda(this$0, resultContinuation) {
    this.this$0__1 = this$0;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(Recomposer$runRecomposeAndApplyChanges$slambda).invoke_go74sa_k$ = function ($this$recompositionRunner, parentFrameClock, $completion) {
    var tmp = this.create_d9uhz2_k$($this$recompositionRunner, parentFrameClock, $completion);
    tmp.set_result_xj64lm_k$(Unit_getInstance());
    tmp.set_exception_px07aa_k$(null);
    return tmp.doResume_5yljmg_k$();
  };
  protoOf(Recomposer$runRecomposeAndApplyChanges$slambda).invoke_4tzzq6_k$ = function (p1, p2, $completion) {
    var tmp = (!(p1 == null) ? isInterface(p1, CoroutineScope_0) : false) ? p1 : THROW_CCE();
    return this.invoke_go74sa_k$(tmp, (!(p2 == null) ? isInterface(p2, MonotonicFrameClock) : false) ? p2 : THROW_CCE(), $completion);
  };
  protoOf(Recomposer$runRecomposeAndApplyChanges$slambda).doResume_5yljmg_k$ = function () {
    var suspendResult = this.get_result_iyg5d2_k$();
    $sm: do
      try {
        var tmp = this.get_state_iypx7s_k$();
        switch (tmp) {
          case 0:
            this.set_exceptionState_fex74n_k$(6);
            var tmp_0 = this;
            tmp_0.toRecompose0__1 = ArrayList_init_$Create$();
            var tmp_1 = this;
            tmp_1.toInsert1__1 = ArrayList_init_$Create$();
            var tmp_2 = this;
            tmp_2.toApply2__1 = ArrayList_init_$Create$();
            var tmp_3 = this;
            tmp_3.toLateApply3__1 = LinkedHashSet_init_$Create$();
            var tmp_4 = this;
            tmp_4.toComplete4__1 = LinkedHashSet_init_$Create$();
            this.set_state_rjd8d0_k$(1);
            continue $sm;
          case 1:
            if (!_get_shouldKeepRecomposing__5j79sd(this.this$0__1)) {
              this.set_state_rjd8d0_k$(5);
              continue $sm;
            }

            this.set_state_rjd8d0_k$(2);
            suspendResult = awaitWorkAvailable(this.this$0__1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            if (!recordComposerModifications(this.this$0__1)) {
              this.set_state_rjd8d0_k$(1);
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(3);
              continue $sm;
            }

          case 3:
            this.set_state_rjd8d0_k$(4);
            suspendResult = this.parentFrameClock_1.withFrameNanos_8v58om_k$(Recomposer$runRecomposeAndApplyChanges$slambda$lambda(this.this$0__1, this.toRecompose0__1, this.toInsert1__1, this.toApply2__1, this.toLateApply3__1, this.toComplete4__1), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 4:
            discardUnusedValues(this.this$0__1);
            this.set_state_rjd8d0_k$(1);
            continue $sm;
          case 5:
            return Unit_getInstance();
          case 6:
            throw this.get_exception_x0n6w6_k$();
        }
      } catch ($p) {
        var e = $p;
        if (this.get_exceptionState_wflpxn_k$() === 6) {
          throw e;
        } else {
          this.set_state_rjd8d0_k$(this.get_exceptionState_wflpxn_k$());
          this.set_exception_px07aa_k$(e);
        }
      }
     while (true);
  };
  protoOf(Recomposer$runRecomposeAndApplyChanges$slambda).create_d9uhz2_k$ = function ($this$recompositionRunner, parentFrameClock, completion) {
    var i = new Recomposer$runRecomposeAndApplyChanges$slambda(this.this$0__1, completion);
    i.$this$recompositionRunner_1 = $this$recompositionRunner;
    i.parentFrameClock_1 = parentFrameClock;
    return i;
  };
  function Recomposer$runRecomposeAndApplyChanges$slambda_0(this$0, resultContinuation) {
    var i = new Recomposer$runRecomposeAndApplyChanges$slambda(this$0, resultContinuation);
    var l = function ($this$recompositionRunner, parentFrameClock, $completion) {
      return i.invoke_go74sa_k$($this$recompositionRunner, parentFrameClock, $completion);
    };
    l.$arity = 2;
    return l;
  }
  function Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda($recomposeCoroutineContext, this$0, resultContinuation) {
    this.$recomposeCoroutineContext_1 = $recomposeCoroutineContext;
    this.this$0__1 = this$0;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda).invoke_go74sa_k$ = function ($this$recompositionRunner, parentFrameClock, $completion) {
    var tmp = this.create_d9uhz2_k$($this$recompositionRunner, parentFrameClock, $completion);
    tmp.set_result_xj64lm_k$(Unit_getInstance());
    tmp.set_exception_px07aa_k$(null);
    return tmp.doResume_5yljmg_k$();
  };
  protoOf(Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda).invoke_4tzzq6_k$ = function (p1, p2, $completion) {
    var tmp = (!(p1 == null) ? isInterface(p1, CoroutineScope_0) : false) ? p1 : THROW_CCE();
    return this.invoke_go74sa_k$(tmp, (!(p2 == null) ? isInterface(p2, MonotonicFrameClock) : false) ? p2 : THROW_CCE(), $completion);
  };
  protoOf(Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda).doResume_5yljmg_k$ = function () {
    var suspendResult = this.get_result_iyg5d2_k$();
    $sm: do
      try {
        var tmp = this.get_state_iypx7s_k$();
        switch (tmp) {
          case 0:
            this.set_exceptionState_fex74n_k$(6);
            if (!(this.$recomposeCoroutineContext_1.get_y2st91_k$(Key_getInstance()) == null)) {
              var message = 'recomposeCoroutineContext may not contain a Job; found ' + this.$recomposeCoroutineContext_1.get_y2st91_k$(Key_getInstance());
              throw IllegalArgumentException_init_$Create$(toString(message));
            }

            this.recomposeCoroutineScope0__1 = CoroutineScope(this.$this$recompositionRunner_1.get_coroutineContext_115oqo_k$().plus_s13ygv_k$(this.$recomposeCoroutineContext_1).plus_s13ygv_k$(Job(get_job(this.$this$recompositionRunner_1.get_coroutineContext_115oqo_k$()))));
            this.frameSignal1__1 = new ProduceFrameSignal();
            var tmp_0 = this;
            tmp_0.frameLoop2__1 = launch(this.$this$recompositionRunner_1, VOID, VOID, Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda$slambda_0(this.this$0__1, this.parentFrameClock_1, this.frameSignal1__1, null));
            this.set_state_rjd8d0_k$(1);
            continue $sm;
          case 1:
            if (!_get_shouldKeepRecomposing__5j79sd(this.this$0__1)) {
              this.set_state_rjd8d0_k$(3);
              continue $sm;
            }

            this.set_state_rjd8d0_k$(2);
            suspendResult = awaitWorkAvailable(this.this$0__1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            var this_0 = this.this$0__1;
            var changes = this_0.snapshotInvalidations_1;
            if (changes.isNotEmpty_cjxbwk_k$()) {
              var this_1 = this_0.knownCompositions_1;
              var inductionVariable = 0;
              var last = this_1.get_size_woubt6_k$() - 1 | 0;
              if (inductionVariable <= last)
                do {
                  var index = inductionVariable;
                  inductionVariable = inductionVariable + 1 | 0;
                  var item = this_1.get_c1px32_k$(index);
                  item.recordModificationsOf_wnqd8_k$(changes);
                }
                 while (inductionVariable <= last);
              this_0.snapshotInvalidations_1 = new IdentityArraySet();
            }

            var this_2 = this_0.compositionInvalidations_1;
            var inductionVariable_0 = 0;
            var last_0 = this_2.get_size_woubt6_k$() - 1 | 0;
            if (inductionVariable_0 <= last_0)
              do {
                var index_0 = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                var item_0 = this_2.get_c1px32_k$(index_0);
                this.this$0__1.stateLock_1;
                var tmp0_this = this.this$0__1;
                tmp0_this.concurrentCompositionsOutstanding_1 = tmp0_this.concurrentCompositionsOutstanding_1 + 1 | 0;
                var tmp_1 = get_recomposeCoroutineContext(item_0);
                launch(this.recomposeCoroutineScope0__1, tmp_1, VOID, Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda$slambda_2(this.this$0__1, item_0, null));
              }
               while (inductionVariable_0 <= last_0);
            this_0.compositionInvalidations_1.clear_j9egeb_k$();
            if (!(deriveStateLocked(this_0) == null)) {
              var message_0 = 'called outside of runRecomposeAndApplyChanges';
              throw IllegalStateException_init_$Create$(toString(message_0));
            }

            this.this$0__1.stateLock_1;
            var tmp0_safe_receiver = _get_hasConcurrentFrameWorkLocked__xjkmzw(this.this$0__1) ? this.frameSignal1__1.requestFrameLocked_35iax4_k$() : null;
            if (tmp0_safe_receiver == null)
              null;
            else {
              Companion_getInstance();
              tmp0_safe_receiver.resumeWith_dtxwbr_k$(_Result___init__impl__xyqfz8(Unit_getInstance()));
            }

            this.set_state_rjd8d0_k$(1);
            continue $sm;
          case 3:
            this.set_state_rjd8d0_k$(4);
            suspendResult = cancelAndJoin(get_job(this.recomposeCoroutineScope0__1.get_coroutineContext_115oqo_k$()), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 4:
            this.set_state_rjd8d0_k$(5);
            suspendResult = cancelAndJoin(this.frameLoop2__1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 5:
            return Unit_getInstance();
          case 6:
            throw this.get_exception_x0n6w6_k$();
        }
      } catch ($p) {
        var e = $p;
        if (this.get_exceptionState_wflpxn_k$() === 6) {
          throw e;
        } else {
          this.set_state_rjd8d0_k$(this.get_exceptionState_wflpxn_k$());
          this.set_exception_px07aa_k$(e);
        }
      }
     while (true);
  };
  protoOf(Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda).create_d9uhz2_k$ = function ($this$recompositionRunner, parentFrameClock, completion) {
    var i = new Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda(this.$recomposeCoroutineContext_1, this.this$0__1, completion);
    i.$this$recompositionRunner_1 = $this$recompositionRunner;
    i.parentFrameClock_1 = parentFrameClock;
    return i;
  };
  function Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda_0($recomposeCoroutineContext, this$0, resultContinuation) {
    var i = new Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda($recomposeCoroutineContext, this$0, resultContinuation);
    var l = function ($this$recompositionRunner, parentFrameClock, $completion) {
      return i.invoke_go74sa_k$($this$recompositionRunner, parentFrameClock, $completion);
    };
    l.$arity = 2;
    return l;
  }
  function Recomposer$runFrameLoop$lambda(this$0, $toApply, $toRecompose, $frameSignal) {
    return function (frameTime) {
      var tmp;
      if (_get_hasBroadcastFrameClockAwaiters__y6inql(this$0)) {
        $l$block: {
          // Inline function 'androidx.compose.runtime.trace' call
          var sectionName = 'Recomposer:animation';
          var token = Trace_getInstance().beginSection_2k8ef6_k$(sectionName);
          try {
            this$0.broadcastFrameClock_1.sendFrame_f05udj_k$(frameTime);
            Companion_getInstance_12().sendApplyNotifications_z1qgb2_k$();
            break $l$block;
          }finally {
            Trace_getInstance().endSection_5rdvi3_k$(token);
          }
        }
        tmp = Unit_getInstance();
      }
      var tmp$ret$9;
      $l$block_0: {
        // Inline function 'androidx.compose.runtime.trace' call
        var sectionName_0 = 'Recomposer:recompose';
        var token_0 = Trace_getInstance().beginSection_2k8ef6_k$(sectionName_0);
        try {
          // Inline function 'androidx.compose.runtime.Recomposer.runFrameLoop.<anonymous>.<anonymous>' call
          recordComposerModifications(this$0);
          // Inline function 'androidx.compose.runtime.synchronized' call
          // Inline function 'kotlinx.atomicfu.locks.synchronized' call
          this$0.stateLock_1;
          // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
          var this_0 = this$0.compositionsAwaitingApply_1;
          // Inline function 'kotlin.contracts.contract' call
          var inductionVariable = 0;
          var last = this_0.get_size_woubt6_k$() - 1 | 0;
          if (inductionVariable <= last)
            do {
              var index = inductionVariable;
              inductionVariable = inductionVariable + 1 | 0;
              var item = this_0.get_c1px32_k$(index);
              // Inline function 'androidx.compose.runtime.Recomposer.runFrameLoop.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
              // Inline function 'kotlin.collections.plusAssign' call
              $toApply.add_utx5q5_k$(item);
            }
             while (inductionVariable <= last);
          this$0.compositionsAwaitingApply_1.clear_j9egeb_k$();
          // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
          var this_1 = this$0.compositionInvalidations_1;
          // Inline function 'kotlin.contracts.contract' call
          var inductionVariable_0 = 0;
          var last_0 = this_1.get_size_woubt6_k$() - 1 | 0;
          if (inductionVariable_0 <= last_0)
            do {
              var index_0 = inductionVariable_0;
              inductionVariable_0 = inductionVariable_0 + 1 | 0;
              var item_0 = this_1.get_c1px32_k$(index_0);
              // Inline function 'androidx.compose.runtime.Recomposer.runFrameLoop.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
              // Inline function 'kotlin.collections.plusAssign' call
              $toRecompose.add_utx5q5_k$(item_0);
            }
             while (inductionVariable_0 <= last_0);
          this$0.compositionInvalidations_1.clear_j9egeb_k$();
          $frameSignal.takeFrameRequestLocked_dp8qhv_k$();
          var modifiedValues = new IdentityArraySet();
          try {
            // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
            var this_2 = $toRecompose;
            // Inline function 'kotlin.contracts.contract' call
            var inductionVariable_1 = 0;
            var last_1 = this_2.get_size_woubt6_k$() - 1 | 0;
            if (inductionVariable_1 <= last_1)
              do {
                var index_1 = inductionVariable_1;
                inductionVariable_1 = inductionVariable_1 + 1 | 0;
                var item_1 = this_2.get_c1px32_k$(index_1);
                // Inline function 'androidx.compose.runtime.Recomposer.runFrameLoop.<anonymous>.<anonymous>.<anonymous>' call
                var tmp0_safe_receiver = performRecompose(this$0, item_1, modifiedValues);
                if (tmp0_safe_receiver == null)
                  null;
                else {
                  // Inline function 'kotlin.let' call
                  // Inline function 'kotlin.contracts.contract' call
                  $toApply.add_utx5q5_k$(tmp0_safe_receiver);
                }
              }
               while (inductionVariable_1 <= last_1);
          }finally {
            $toRecompose.clear_j9egeb_k$();
          }
          // Inline function 'kotlin.collections.isNotEmpty' call
          if (!$toApply.isEmpty_y1axqb_k$()) {
            var tmp0_this = this$0;
            tmp0_this.changeCount_1 = tmp0_this.changeCount_1.inc_28ke_k$();
          }
          try {
            // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
            var this_3 = $toApply;
            // Inline function 'kotlin.contracts.contract' call
            var inductionVariable_2 = 0;
            var last_2 = this_3.get_size_woubt6_k$() - 1 | 0;
            if (inductionVariable_2 <= last_2)
              do {
                var index_2 = inductionVariable_2;
                inductionVariable_2 = inductionVariable_2 + 1 | 0;
                var item_2 = this_3.get_c1px32_k$(index_2);
                // Inline function 'androidx.compose.runtime.Recomposer.runFrameLoop.<anonymous>.<anonymous>.<anonymous>' call
                item_2.applyChanges_ynn7tn_k$();
              }
               while (inductionVariable_2 <= last_2);
          }finally {
            $toApply.clear_j9egeb_k$();
          }
          // Inline function 'androidx.compose.runtime.synchronized' call
          // Inline function 'kotlinx.atomicfu.locks.synchronized' call
          this$0.stateLock_1;
          // Inline function 'androidx.compose.runtime.Recomposer.runFrameLoop.<anonymous>.<anonymous>.<anonymous>' call
          tmp$ret$9 = deriveStateLocked(this$0);
          break $l$block_0;
        }finally {
          Trace_getInstance().endSection_5rdvi3_k$(token_0);
        }
      }
      return tmp$ret$9;
    };
  }
  function Recomposer$recompositionRunner$slambda(this$0, $block, $parentFrameClock, resultContinuation) {
    this.this$0__1 = this$0;
    this.$block_1 = $block;
    this.$parentFrameClock_1 = $parentFrameClock;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(Recomposer$recompositionRunner$slambda).invoke_d9fzmj_k$ = function ($this$withContext, $completion) {
    var tmp = this.create_rcuf4x_k$($this$withContext, $completion);
    tmp.set_result_xj64lm_k$(Unit_getInstance());
    tmp.set_exception_px07aa_k$(null);
    return tmp.doResume_5yljmg_k$();
  };
  protoOf(Recomposer$recompositionRunner$slambda).invoke_qns8j1_k$ = function (p1, $completion) {
    return this.invoke_d9fzmj_k$((!(p1 == null) ? isInterface(p1, CoroutineScope_0) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(Recomposer$recompositionRunner$slambda).doResume_5yljmg_k$ = function () {
    var suspendResult = this.get_result_iyg5d2_k$();
    $sm: do
      try {
        var tmp = this.get_state_iypx7s_k$();
        switch (tmp) {
          case 0:
            this.set_exceptionState_fex74n_k$(5);
            this.callingJob0__1 = get_job(this.$this$withContext_1.get_coroutineContext_115oqo_k$());
            registerRunnerJob(this.this$0__1, this.callingJob0__1);
            var tmp_0 = this;
            var tmp_1 = Companion_getInstance_12();
            tmp_0.unregisterApplyObserver1__1 = tmp_1.registerApplyObserver_jtfzrk_k$(Recomposer$recompositionRunner$slambda$lambda(this.this$0__1));
            addRunning(Companion_getInstance_5(), this.this$0__1.recomposerInfo_1);
            this.set_state_rjd8d0_k$(1);
            continue $sm;
          case 1:
            this.set_exceptionState_fex74n_k$(4);
            this.this$0__1.stateLock_1;
            var this_0 = toMutableList(this.this$0__1.knownCompositions_1);
            var inductionVariable = 0;
            var last = this_0.get_size_woubt6_k$() - 1 | 0;
            if (inductionVariable <= last)
              do {
                var index = inductionVariable;
                inductionVariable = inductionVariable + 1 | 0;
                var item = this_0.get_c1px32_k$(index);
                item.invalidateAll_yol1g6_k$();
              }
               while (inductionVariable <= last);
            this.set_state_rjd8d0_k$(2);
            suspendResult = coroutineScope(Recomposer$recompositionRunner$slambda$slambda_0(this.$block_1, this.$parentFrameClock_1, null), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.tmp$ret$02__1 = suspendResult;
            this.set_exceptionState_fex74n_k$(5);
            this.set_state_rjd8d0_k$(3);
            continue $sm;
          case 3:
            this.set_exceptionState_fex74n_k$(5);
            this.unregisterApplyObserver1__1.dispose_3nnxhr_k$();
            this.this$0__1.stateLock_1;
            if (this.this$0__1.runnerJob_1 === this.callingJob0__1) {
              this.this$0__1.runnerJob_1 = null;
            }

            deriveStateLocked(this.this$0__1);
            removeRunning(Companion_getInstance_5(), this.this$0__1.recomposerInfo_1);
            return Unit_getInstance();
          case 4:
            this.set_exceptionState_fex74n_k$(5);
            var t = this.get_exception_x0n6w6_k$();
            this.unregisterApplyObserver1__1.dispose_3nnxhr_k$();
            this.this$0__1.stateLock_1;
            if (this.this$0__1.runnerJob_1 === this.callingJob0__1) {
              this.this$0__1.runnerJob_1 = null;
            }

            deriveStateLocked(this.this$0__1);
            removeRunning(Companion_getInstance_5(), this.this$0__1.recomposerInfo_1);
            throw t;
          case 5:
            throw this.get_exception_x0n6w6_k$();
        }
      } catch ($p) {
        var e = $p;
        if (this.get_exceptionState_wflpxn_k$() === 5) {
          throw e;
        } else {
          this.set_state_rjd8d0_k$(this.get_exceptionState_wflpxn_k$());
          this.set_exception_px07aa_k$(e);
        }
      }
     while (true);
  };
  protoOf(Recomposer$recompositionRunner$slambda).create_rcuf4x_k$ = function ($this$withContext, completion) {
    var i = new Recomposer$recompositionRunner$slambda(this.this$0__1, this.$block_1, this.$parentFrameClock_1, completion);
    i.$this$withContext_1 = $this$withContext;
    return i;
  };
  protoOf(Recomposer$recompositionRunner$slambda).create_wyq9v6_k$ = function (value, completion) {
    return this.create_rcuf4x_k$((!(value == null) ? isInterface(value, CoroutineScope_0) : false) ? value : THROW_CCE(), completion);
  };
  function Recomposer$recompositionRunner$slambda_0(this$0, $block, $parentFrameClock, resultContinuation) {
    var i = new Recomposer$recompositionRunner$slambda(this$0, $block, $parentFrameClock, resultContinuation);
    var l = function ($this$withContext, $completion) {
      return i.invoke_d9fzmj_k$($this$withContext, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function Recomposer$join$slambda(resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(Recomposer$join$slambda).invoke_kjzilm_k$ = function (it, $completion) {
    var tmp = this.create_fjy9ab_k$(it, $completion);
    tmp.set_result_xj64lm_k$(Unit_getInstance());
    tmp.set_exception_px07aa_k$(null);
    return tmp.doResume_5yljmg_k$();
  };
  protoOf(Recomposer$join$slambda).invoke_qns8j1_k$ = function (p1, $completion) {
    return this.invoke_kjzilm_k$(p1 instanceof State ? p1 : THROW_CCE(), $completion);
  };
  protoOf(Recomposer$join$slambda).doResume_5yljmg_k$ = function () {
    var suspendResult = this.get_result_iyg5d2_k$();
    $sm: do
      try {
        var tmp = this.get_state_iypx7s_k$();
        if (tmp === 0) {
          this.set_exceptionState_fex74n_k$(1);
          return this.it_1.equals(State_ShutDown_getInstance());
        } else if (tmp === 1) {
          throw this.get_exception_x0n6w6_k$();
        }
      } catch ($p) {
        var e = $p;
        throw e;
      }
     while (true);
  };
  protoOf(Recomposer$join$slambda).create_fjy9ab_k$ = function (it, completion) {
    var i = new Recomposer$join$slambda(completion);
    i.it_1 = it;
    return i;
  };
  protoOf(Recomposer$join$slambda).create_wyq9v6_k$ = function (value, completion) {
    return this.create_fjy9ab_k$(value instanceof State ? value : THROW_CCE(), completion);
  };
  function Recomposer$join$slambda_0(resultContinuation) {
    var i = new Recomposer$join$slambda(resultContinuation);
    var l = function (it, $completion) {
      return i.invoke_kjzilm_k$(it, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function Recomposer$performRecompose$lambda($modifiedValues, $composition) {
    return function () {
      var this_0 = $modifiedValues;
      // Inline function 'kotlin.contracts.contract' call
      var values = this_0.get_values_ksazhn_k$();
      var inductionVariable = 0;
      var last = this_0.get_size_woubt6_k$();
      var tmp;
      if (inductionVariable < last) {
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          // Inline function 'androidx.compose.runtime.Recomposer.performRecompose.<anonymous>.<anonymous>.<anonymous>' call
          var tmp_0 = values[i];
          var it = !(tmp_0 == null) ? tmp_0 : THROW_CCE();
          $composition.recordWriteOf_gexenr_k$(it);
        }
         while (inductionVariable < last);
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function Recomposer$readObserverOf$lambda($composition) {
    return function (value) {
      $composition.recordReadOf_1u1d8w_k$(value);
      return Unit_getInstance();
    };
  }
  function Recomposer$writeObserverOf$lambda($composition, $modifiedValues) {
    return function (value) {
      $composition.recordWriteOf_gexenr_k$(value);
      var tmp0_safe_receiver = $modifiedValues;
      if (tmp0_safe_receiver == null)
        null;
      else
        tmp0_safe_receiver.add_jkjo25_k$(value);
      return Unit_getInstance();
    };
  }
  function Recomposer$awaitIdle$slambda(resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(Recomposer$awaitIdle$slambda).invoke_kjzilm_k$ = function (it, $completion) {
    var tmp = this.create_fjy9ab_k$(it, $completion);
    tmp.set_result_xj64lm_k$(Unit_getInstance());
    tmp.set_exception_px07aa_k$(null);
    return tmp.doResume_5yljmg_k$();
  };
  protoOf(Recomposer$awaitIdle$slambda).invoke_qns8j1_k$ = function (p1, $completion) {
    return this.invoke_kjzilm_k$(p1 instanceof State ? p1 : THROW_CCE(), $completion);
  };
  protoOf(Recomposer$awaitIdle$slambda).doResume_5yljmg_k$ = function () {
    var suspendResult = this.get_result_iyg5d2_k$();
    $sm: do
      try {
        var tmp = this.get_state_iypx7s_k$();
        if (tmp === 0) {
          this.set_exceptionState_fex74n_k$(1);
          return this.it_1.compareTo_30rs7w_k$(State_Idle_getInstance()) > 0;
        } else if (tmp === 1) {
          throw this.get_exception_x0n6w6_k$();
        }
      } catch ($p) {
        var e = $p;
        throw e;
      }
     while (true);
  };
  protoOf(Recomposer$awaitIdle$slambda).create_fjy9ab_k$ = function (it, completion) {
    var i = new Recomposer$awaitIdle$slambda(completion);
    i.it_1 = it;
    return i;
  };
  protoOf(Recomposer$awaitIdle$slambda).create_wyq9v6_k$ = function (value, completion) {
    return this.create_fjy9ab_k$(value instanceof State ? value : THROW_CCE(), completion);
  };
  function Recomposer$awaitIdle$slambda_0(resultContinuation) {
    var i = new Recomposer$awaitIdle$slambda(resultContinuation);
    var l = function (it, $completion) {
      return i.invoke_kjzilm_k$(it, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function State_ShutDown_getInstance() {
    State_initEntries();
    return State_ShutDown_instance;
  }
  function State_ShuttingDown_getInstance() {
    State_initEntries();
    return State_ShuttingDown_instance;
  }
  function State_Inactive_getInstance() {
    State_initEntries();
    return State_Inactive_instance;
  }
  function State_InactivePendingWork_getInstance() {
    State_initEntries();
    return State_InactivePendingWork_instance;
  }
  function State_Idle_getInstance() {
    State_initEntries();
    return State_Idle_instance;
  }
  function State_PendingWork_getInstance() {
    State_initEntries();
    return State_PendingWork_instance;
  }
  function $runFrameLoopCOROUTINE$1(_this__u8e3s4, parentFrameClock, frameSignal, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this._this__u8e3s4__1 = _this__u8e3s4;
    this.parentFrameClock_1 = parentFrameClock;
    this.frameSignal_1 = frameSignal;
  }
  protoOf($runFrameLoopCOROUTINE$1).doResume_5yljmg_k$ = function () {
    var suspendResult = this.get_result_iyg5d2_k$();
    $sm: do
      try {
        var tmp = this.get_state_iypx7s_k$();
        switch (tmp) {
          case 0:
            this.set_exceptionState_fex74n_k$(4);
            var tmp_0 = this;
            tmp_0.toRecompose0__1 = ArrayList_init_$Create$();
            var tmp_1 = this;
            tmp_1.toApply1__1 = ArrayList_init_$Create$();
            this.set_state_rjd8d0_k$(1);
            continue $sm;
          case 1:
            if (!true) {
              this.set_state_rjd8d0_k$(5);
              continue $sm;
            }

            this.set_state_rjd8d0_k$(2);
            suspendResult = this.frameSignal_1.awaitFrameRequest_1e39tm_k$(this._this__u8e3s4__1.stateLock_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.set_state_rjd8d0_k$(3);
            suspendResult = this.parentFrameClock_1.withFrameNanos_8v58om_k$(Recomposer$runFrameLoop$lambda(this._this__u8e3s4__1, this.toApply1__1, this.toRecompose0__1, this.frameSignal_1), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 3:
            this.set_state_rjd8d0_k$(1);
            continue $sm;
          case 4:
            throw this.get_exception_x0n6w6_k$();
          case 5:
            return Unit_getInstance();
        }
      } catch ($p) {
        var e = $p;
        if (this.get_exceptionState_wflpxn_k$() === 4) {
          throw e;
        } else {
          this.set_state_rjd8d0_k$(this.get_exceptionState_wflpxn_k$());
          this.set_exception_px07aa_k$(e);
        }
      }
     while (true);
  };
  function $awaitWorkAvailableCOROUTINE$2(_this__u8e3s4, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this._this__u8e3s4__1 = _this__u8e3s4;
  }
  protoOf($awaitWorkAvailableCOROUTINE$2).doResume_5yljmg_k$ = function () {
    var suspendResult = this.get_result_iyg5d2_k$();
    $sm: do
      try {
        var tmp = this.get_state_iypx7s_k$();
        switch (tmp) {
          case 0:
            this.set_exceptionState_fex74n_k$(3);
            if (!_get_hasSchedulingWork__b617oy(this._this__u8e3s4__1)) {
              this.set_state_rjd8d0_k$(1);
              var cancellable = new CancellableContinuationImpl(intercepted(this), get_MODE_CANCELLABLE());
              cancellable.initCancellability_shqc60_k$();
              this._this__u8e3s4__1.stateLock_1;
              var tmp_0;
              if (_get_hasSchedulingWork__b617oy(this._this__u8e3s4__1)) {
                tmp_0 = cancellable;
              } else {
                this._this__u8e3s4__1.workContinuation_1 = cancellable;
                tmp_0 = null;
              }
              var tmp0_safe_receiver = tmp_0;
              if (tmp0_safe_receiver == null)
                null;
              else {
                Companion_getInstance();
                tmp0_safe_receiver.resumeWith_dtxwbr_k$(_Result___init__impl__xyqfz8(Unit_getInstance()));
              }
              suspendResult = returnIfSuspended(cancellable.getResult_clfhg3_k$(), this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(2);
              continue $sm;
            }

          case 1:
            this.set_state_rjd8d0_k$(2);
            continue $sm;
          case 2:
            return Unit_getInstance();
          case 3:
            throw this.get_exception_x0n6w6_k$();
        }
      } catch ($p) {
        var e = $p;
        if (this.get_exceptionState_wflpxn_k$() === 3) {
          throw e;
        } else {
          this.set_state_rjd8d0_k$(this.get_exceptionState_wflpxn_k$());
          this.set_exception_px07aa_k$(e);
        }
      }
     while (true);
  };
  function $joinCOROUTINE$3(_this__u8e3s4, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this._this__u8e3s4__1 = _this__u8e3s4;
  }
  protoOf($joinCOROUTINE$3).doResume_5yljmg_k$ = function () {
    var suspendResult = this.get_result_iyg5d2_k$();
    $sm: do
      try {
        var tmp = this.get_state_iypx7s_k$();
        switch (tmp) {
          case 0:
            this.set_exceptionState_fex74n_k$(2);
            this.set_state_rjd8d0_k$(1);
            var tmp_0 = this._this__u8e3s4__1.get_currentState_snihnl_k$();
            suspendResult = first(tmp_0, Recomposer$join$slambda_0(null), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return Unit_getInstance();
          case 2:
            throw this.get_exception_x0n6w6_k$();
        }
      } catch ($p) {
        var e = $p;
        if (this.get_exceptionState_wflpxn_k$() === 2) {
          throw e;
        } else {
          this.set_state_rjd8d0_k$(this.get_exceptionState_wflpxn_k$());
          this.set_exception_px07aa_k$(e);
        }
      }
     while (true);
  };
  function Recomposer(effectCoroutineContext) {
    Companion_getInstance_5();
    CompositionContext.call(this);
    this.changeCount_1 = new Long(0, 0);
    var tmp = this;
    tmp.broadcastFrameClock_1 = new BroadcastFrameClock(Recomposer$broadcastFrameClock$lambda(this));
    this.stateLock_1 = createSynchronizedObject();
    this.runnerJob_1 = null;
    this.closeCause_1 = null;
    var tmp_0 = this;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp_0.knownCompositions_1 = ArrayList_init_$Create$();
    this.snapshotInvalidations_1 = new IdentityArraySet();
    var tmp_1 = this;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp_1.compositionInvalidations_1 = ArrayList_init_$Create$();
    var tmp_2 = this;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp_2.compositionsAwaitingApply_1 = ArrayList_init_$Create$();
    var tmp_3 = this;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp_3.compositionValuesAwaitingInsert_1 = ArrayList_init_$Create$();
    var tmp_4 = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp_4.compositionValuesRemoved_1 = LinkedHashMap_init_$Create$();
    var tmp_5 = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp_5.compositionValueStatesAvailable_1 = LinkedHashMap_init_$Create$();
    this.failedCompositions_1 = null;
    this.compositionsRemoved_1 = null;
    this.workContinuation_1 = null;
    this.concurrentCompositionsOutstanding_1 = 0;
    this.isClosed_1 = false;
    this.errorState_1 = null;
    this.frameClockPaused_1 = false;
    this._state_1 = MutableStateFlow(State_Inactive_getInstance());
    var tmp_6 = this;
    // Inline function 'kotlin.apply' call
    var this_0 = Job(effectCoroutineContext.get_y2st91_k$(Key_getInstance()));
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.Recomposer.effectJob.<anonymous>' call
    this_0.invokeOnCompletion_n6cffu_k$(Recomposer$effectJob$lambda(this));
    tmp_6.effectJob_1 = this_0;
    this.effectCoroutineContext_1 = effectCoroutineContext.plus_s13ygv_k$(this.broadcastFrameClock_1).plus_s13ygv_k$(this.effectJob_1);
    this.recomposerInfo_1 = new RecomposerInfoImpl(this);
    this.$stable_2 = 8;
  }
  protoOf(Recomposer).get_changeCount_dwazvu_k$ = function () {
    return this.changeCount_1;
  };
  protoOf(Recomposer).get_effectCoroutineContext_dfl5kh_k$ = function () {
    return this.effectCoroutineContext_1;
  };
  protoOf(Recomposer).get_recomposeCoroutineContext_5qac6l_k$ = function () {
    return EmptyCoroutineContext_getInstance();
  };
  protoOf(Recomposer).get_state_iypx7s_k$ = function () {
    return this.get_currentState_snihnl_k$();
  };
  protoOf(Recomposer).get_currentState_snihnl_k$ = function () {
    return this._state_1;
  };
  protoOf(Recomposer).asRecomposerInfo_ea10tv_k$ = function () {
    return this.recomposerInfo_1;
  };
  protoOf(Recomposer).runRecomposeAndApplyChanges_pn3q81_k$ = function ($completion) {
    return recompositionRunner(this, Recomposer$runRecomposeAndApplyChanges$slambda_0(this, null), $completion);
  };
  protoOf(Recomposer).runRecomposeConcurrentlyAndApplyChanges_nscztw_k$ = function (recomposeCoroutineContext, $completion) {
    return recompositionRunner(this, Recomposer$runRecomposeConcurrentlyAndApplyChanges$slambda_0(recomposeCoroutineContext, this, null), $completion);
  };
  protoOf(Recomposer).cancel_2l89ey_k$ = function () {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.stateLock_1;
    var tmp;
    if (this._state_1.get_value_j01efc_k$().compareTo_30rs7w_k$(State_Idle_getInstance()) >= 0) {
      this._state_1.set_value_v1vabv_k$(State_ShuttingDown_getInstance());
      tmp = Unit_getInstance();
    }
    this.effectJob_1.cancel$default_8haxne_k$();
  };
  protoOf(Recomposer).close_yn9xrc_k$ = function () {
    if (this.effectJob_1.complete_9ww6vb_k$()) {
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      this.stateLock_1;
      this.isClosed_1 = true;
    }
  };
  protoOf(Recomposer).join_o20dar_k$ = function ($completion) {
    var tmp = new $joinCOROUTINE$3(this, $completion);
    tmp.set_result_xj64lm_k$(Unit_getInstance());
    tmp.set_exception_px07aa_k$(null);
    return tmp.doResume_5yljmg_k$();
  };
  protoOf(Recomposer).composeInitial_k0zvwz_k$ = function (composition, content) {
    illegalDecoyCallException('composeInitial');
  };
  protoOf(Recomposer).get_hasPendingWork_kxkazt_k$ = function () {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.stateLock_1;
    // Inline function 'androidx.compose.runtime.Recomposer.<get-hasPendingWork>.<anonymous>' call
    var tmp;
    var tmp_0;
    var tmp_1;
    var tmp_2;
    if (this.snapshotInvalidations_1.isNotEmpty_cjxbwk_k$()) {
      tmp_2 = true;
    } else {
      // Inline function 'kotlin.collections.isNotEmpty' call
      tmp_2 = !this.compositionInvalidations_1.isEmpty_y1axqb_k$();
    }
    if (tmp_2) {
      tmp_1 = true;
    } else {
      tmp_1 = this.concurrentCompositionsOutstanding_1 > 0;
    }
    if (tmp_1) {
      tmp_0 = true;
    } else {
      // Inline function 'kotlin.collections.isNotEmpty' call
      tmp_0 = !this.compositionsAwaitingApply_1.isEmpty_y1axqb_k$();
    }
    if (tmp_0) {
      tmp = true;
    } else {
      tmp = _get_hasBroadcastFrameClockAwaitersLocked__7l4pm1(this);
    }
    return tmp;
  };
  protoOf(Recomposer).awaitIdle_n71ea5_k$ = function ($completion) {
    var tmp = this.get_currentState_snihnl_k$();
    return collect(takeWhile(tmp, Recomposer$awaitIdle$slambda_0(null)), $completion);
  };
  protoOf(Recomposer).pauseCompositionFrameClock_h3hliz_k$ = function () {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.stateLock_1;
    this.frameClockPaused_1 = true;
  };
  protoOf(Recomposer).resumeCompositionFrameClock_kp242a_k$ = function () {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.stateLock_1;
    // Inline function 'androidx.compose.runtime.Recomposer.resumeCompositionFrameClock.<anonymous>' call
    var tmp;
    if (this.frameClockPaused_1) {
      this.frameClockPaused_1 = false;
      tmp = deriveStateLocked(this);
    } else {
      tmp = null;
    }
    var tmp0_safe_receiver = tmp;
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.coroutines.resume' call
      // Inline function 'kotlin.Companion.success' call
      Companion_getInstance();
      var tmp$ret$3 = _Result___init__impl__xyqfz8(Unit_getInstance());
      tmp0_safe_receiver.resumeWith_dtxwbr_k$(tmp$ret$3);
    }
  };
  protoOf(Recomposer).get_compoundHashKey_elmli5_k$ = function () {
    return 1000;
  };
  protoOf(Recomposer).get_collectingParameterInformation_qgy3do_k$ = function () {
    return false;
  };
  protoOf(Recomposer).recordInspectionTable_v0ydx3_k$ = function (table) {
  };
  protoOf(Recomposer).registerComposition_zfb9ze_k$ = function (composition) {
  };
  protoOf(Recomposer).unregisterComposition_ok1mjz_k$ = function (composition) {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.stateLock_1;
    // Inline function 'kotlin.collections.minusAssign' call
    this.knownCompositions_1.remove_cedx0m_k$(composition);
    // Inline function 'kotlin.collections.minusAssign' call
    this.compositionInvalidations_1.remove_cedx0m_k$(composition);
    this.compositionsAwaitingApply_1.remove_cedx0m_k$(composition);
  };
  protoOf(Recomposer).invalidate_sa779a_k$ = function (composition) {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.stateLock_1;
    // Inline function 'androidx.compose.runtime.Recomposer.invalidate.<anonymous>' call
    var tmp;
    if (!this.compositionInvalidations_1.contains_aljjnj_k$(composition)) {
      // Inline function 'kotlin.collections.plusAssign' call
      this.compositionInvalidations_1.add_utx5q5_k$(composition);
      tmp = deriveStateLocked(this);
    } else {
      tmp = null;
    }
    var tmp0_safe_receiver = tmp;
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.coroutines.resume' call
      // Inline function 'kotlin.Companion.success' call
      Companion_getInstance();
      var tmp$ret$3 = _Result___init__impl__xyqfz8(Unit_getInstance());
      tmp0_safe_receiver.resumeWith_dtxwbr_k$(tmp$ret$3);
    }
  };
  protoOf(Recomposer).invalidateScope_ngs86p_k$ = function (scope) {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.stateLock_1;
    // Inline function 'androidx.compose.runtime.Recomposer.invalidateScope.<anonymous>' call
    this.snapshotInvalidations_1.add_jkjo25_k$(scope);
    var tmp0_safe_receiver = deriveStateLocked(this);
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.coroutines.resume' call
      // Inline function 'kotlin.Companion.success' call
      Companion_getInstance();
      var tmp$ret$3 = _Result___init__impl__xyqfz8(Unit_getInstance());
      tmp0_safe_receiver.resumeWith_dtxwbr_k$(tmp$ret$3);
    }
  };
  protoOf(Recomposer).insertMovableContent_46m3cf_k$ = function (reference) {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.stateLock_1;
    // Inline function 'androidx.compose.runtime.Recomposer.insertMovableContent.<anonymous>' call
    // Inline function 'kotlin.collections.plusAssign' call
    this.compositionValuesAwaitingInsert_1.add_utx5q5_k$(reference);
    var tmp0_safe_receiver = deriveStateLocked(this);
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.coroutines.resume' call
      // Inline function 'kotlin.Companion.success' call
      Companion_getInstance();
      var tmp$ret$3 = _Result___init__impl__xyqfz8(Unit_getInstance());
      tmp0_safe_receiver.resumeWith_dtxwbr_k$(tmp$ret$3);
    }
  };
  protoOf(Recomposer).deletedMovableContent_25esy7_k$ = function (reference) {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.stateLock_1;
    // Inline function 'androidx.compose.runtime.Recomposer.deletedMovableContent.<anonymous>' call
    addMultiValue(this.compositionValuesRemoved_1, reference.get_content_h02jrk_k$(), reference);
  };
  protoOf(Recomposer).movableContentStateReleased_wudwew_k$ = function (reference, data) {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.stateLock_1;
    this.compositionValueStatesAvailable_1.put_4fpzoq_k$(reference, data);
  };
  protoOf(Recomposer).reportRemovedComposition_6q2ts1_k$ = function (composition) {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.stateLock_1;
    // Inline function 'androidx.compose.runtime.Recomposer.reportRemovedComposition.<anonymous>' call
    var tmp0_elvis_lhs = this.compositionsRemoved_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      // Inline function 'kotlin.also' call
      // Inline function 'kotlin.collections.mutableSetOf' call
      var this_0 = LinkedHashSet_init_$Create$();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.Recomposer.reportRemovedComposition.<anonymous>.<anonymous>' call
      this.compositionsRemoved_1 = this_0;
      tmp = this_0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var compositionsRemoved = tmp;
    compositionsRemoved.add_utx5q5_k$(composition);
  };
  protoOf(Recomposer).movableContentStateResolve_htz57n_k$ = function (reference) {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.stateLock_1;
    // Inline function 'androidx.compose.runtime.Recomposer.movableContentStateResolve.<anonymous>' call
    return this.compositionValueStatesAvailable_1.remove_gppy8k_k$(reference);
  };
  protoOf(Recomposer).composeInitial$composable_bp8pey_k$ = function (composition, content) {
    var composerWasComposing = composition.get_isComposing_a8f9zw_k$();
    try {
      $l$block_0: {
        // Inline function 'androidx.compose.runtime.Recomposer.composing' call
        var snapshot = Companion_getInstance_12().takeMutableSnapshot_ksyot9_k$(readObserverOf(this, composition), writeObserverOf(this, composition, null));
        try {
          $l$block: {
            // Inline function 'androidx.compose.runtime.snapshots.Snapshot.enter' call
            var previous = snapshot.makeCurrent_v2db9x_k$();
            try {
              composition.composeContent$composable_pp6goe_k$(content);
              break $l$block;
            }finally {
              snapshot.restoreCurrent_k22xtq_k$(previous);
            }
          }
          break $l$block_0;
        }finally {
          applyAndCheck(this, snapshot);
        }
      }
    } catch ($p) {
      if ($p instanceof Exception) {
        var e = $p;
        processCompositionError(this, e, composition, true);
        return Unit_getInstance();
      } else {
        throw $p;
      }
    }
    if (!composerWasComposing) {
      Companion_getInstance_12().notifyObjectsInitialized_vzzywp_k$();
    }
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.stateLock_1;
    var tmp;
    if (this._state_1.get_value_j01efc_k$().compareTo_30rs7w_k$(State_ShuttingDown_getInstance()) > 0) {
      var tmp_0;
      if (!this.knownCompositions_1.contains_aljjnj_k$(composition)) {
        this.knownCompositions_1.add_utx5q5_k$(composition);
        tmp_0 = Unit_getInstance();
      }
      tmp = tmp_0;
    }
    try {
      performInitialMovableContentInserts(this, composition);
    } catch ($p) {
      if ($p instanceof Exception) {
        var e_0 = $p;
        processCompositionError(this, e_0, composition, true);
        return Unit_getInstance();
      } else {
        throw $p;
      }
    }
    try {
      composition.applyChanges_ynn7tn_k$();
      composition.applyLateChanges_bkcue9_k$();
    } catch ($p) {
      if ($p instanceof Exception) {
        var e_1 = $p;
        processCompositionError$default(this, e_1);
        return Unit_getInstance();
      } else {
        throw $p;
      }
    }
    if (!composerWasComposing) {
      Companion_getInstance_12().notifyObjectsInitialized_vzzywp_k$();
    }
  };
  function RecomposerInfo() {
  }
  function RecomposerErrorInfo() {
  }
  function ComposableLambda$invoke$ref_2($boundThis) {
    return function (p0, p1) {
      return $boundThis.invoke_z8di7s_k$(p0, p1);
    };
  }
  function ComposableSingletons$RecomposerKt$lambda_1$lambda_jprwmf($composer, $changed) {
    var $composer_0 = $composer;
    sourceInformation($composer_0, 'C:Recomposer.kt#9igjgp');
    if (!(($changed & 11) === 2) ? true : !$composer_0.get_skipping_3owdve_k$()) {
      if (isTraceInProgress()) {
        traceEventStart(-1091980426, $changed, -1, 'androidx.compose.runtime.ComposableSingletons$RecomposerKt.lambda-1.<anonymous> (Recomposer.kt:391)');
      }
      if (isTraceInProgress()) {
        traceEventEnd();
      }
    } else {
      $composer_0.skipToGroupEnd_lh3zi2_k$();
    }
    return Unit_getInstance();
  }
  function ComposableSingletons$RecomposerKt() {
    ComposableSingletons$RecomposerKt_instance = this;
    var tmp = this;
    tmp.lambda_1_r8sbbp_1 = ComposableLambda$invoke$ref_2(composableLambdaInstance(-1091980426, false, ComposableSingletons$RecomposerKt$lambda_1$lambda_jprwmf));
  }
  protoOf(ComposableSingletons$RecomposerKt).get_lambda_1_bzdzzo_k$ = function () {
    return this.lambda_1_r8sbbp_1;
  };
  var ComposableSingletons$RecomposerKt_instance;
  function ComposableSingletons$RecomposerKt_getInstance() {
    if (ComposableSingletons$RecomposerKt_instance == null)
      new ComposableSingletons$RecomposerKt();
    return ComposableSingletons$RecomposerKt_instance;
  }
  function _set_pendingFrameContinuation__rn5x56($this, _set____db54di) {
    $this.pendingFrameContinuation_1 = _set____db54di;
  }
  function _get_pendingFrameContinuation__w5j4se($this) {
    return $this.pendingFrameContinuation_1;
  }
  function $awaitFrameRequestCOROUTINE$4(_this__u8e3s4, lock, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this._this__u8e3s4__1 = _this__u8e3s4;
    this.lock_1 = lock;
  }
  protoOf($awaitFrameRequestCOROUTINE$4).doResume_5yljmg_k$ = function () {
    var suspendResult = this.get_result_iyg5d2_k$();
    $sm: do
      try {
        var tmp = this.get_state_iypx7s_k$();
        switch (tmp) {
          case 0:
            this.set_exceptionState_fex74n_k$(2);
            this.lock_1;
            if (this._this__u8e3s4__1.pendingFrameContinuation_1 === get_ProduceAnotherFrame()) {
              this._this__u8e3s4__1.pendingFrameContinuation_1 = get_FramePending();
              return Unit_getInstance();
            }

            this.set_state_rjd8d0_k$(1);
            var cancellable = new CancellableContinuationImpl(intercepted(this), get_MODE_CANCELLABLE());
            cancellable.initCancellability_shqc60_k$();
            this.lock_1;
            var tmp_0;
            if (this._this__u8e3s4__1.pendingFrameContinuation_1 === get_ProduceAnotherFrame()) {
              this._this__u8e3s4__1.pendingFrameContinuation_1 = get_FramePending();
              tmp_0 = cancellable;
            } else {
              this._this__u8e3s4__1.pendingFrameContinuation_1 = cancellable;
              tmp_0 = null;
            }

            var tmp0_safe_receiver = tmp_0;
            if (tmp0_safe_receiver == null)
              null;
            else {
              Companion_getInstance();
              tmp0_safe_receiver.resumeWith_dtxwbr_k$(_Result___init__impl__xyqfz8(Unit_getInstance()));
            }

            suspendResult = returnIfSuspended(cancellable.getResult_clfhg3_k$(), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return Unit_getInstance();
          case 2:
            throw this.get_exception_x0n6w6_k$();
        }
      } catch ($p) {
        var e = $p;
        if (this.get_exceptionState_wflpxn_k$() === 2) {
          throw e;
        } else {
          this.set_state_rjd8d0_k$(this.get_exceptionState_wflpxn_k$());
          this.set_exception_px07aa_k$(e);
        }
      }
     while (true);
  };
  function ProduceFrameSignal() {
    this.pendingFrameContinuation_1 = null;
  }
  protoOf(ProduceFrameSignal).awaitFrameRequest_1e39tm_k$ = function (lock, $completion) {
    var tmp = new $awaitFrameRequestCOROUTINE$4(this, lock, $completion);
    tmp.set_result_xj64lm_k$(Unit_getInstance());
    tmp.set_exception_px07aa_k$(null);
    return tmp.doResume_5yljmg_k$();
  };
  protoOf(ProduceFrameSignal).takeFrameRequestLocked_dp8qhv_k$ = function () {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(this.pendingFrameContinuation_1 === get_FramePending())) {
      // Inline function 'androidx.compose.runtime.ProduceFrameSignal.takeFrameRequestLocked.<anonymous>' call
      var message = 'frame not pending';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    this.pendingFrameContinuation_1 = null;
  };
  protoOf(ProduceFrameSignal).requestFrameLocked_35iax4_k$ = function () {
    var co = this.pendingFrameContinuation_1;
    var tmp;
    if (!(co == null) ? isInterface(co, Continuation) : false) {
      this.pendingFrameContinuation_1 = get_FramePending();
      tmp = (!(co == null) ? isInterface(co, Continuation) : false) ? co : THROW_CCE();
    } else {
      if (equals(co, get_ProduceAnotherFrame()) ? true : equals(co, get_FramePending())) {
        tmp = null;
      } else {
        if (co == null) {
          this.pendingFrameContinuation_1 = get_ProduceAnotherFrame();
          tmp = null;
        } else {
          var message = 'invalid pendingFrameContinuation ' + toString_0(co);
          throw IllegalStateException_init_$Create$(toString(message));
        }
      }
    }
    return tmp;
  };
  function removeLastMultiValue(_this__u8e3s4, key) {
    _init_properties_Recomposer_kt__nj7w3x();
    var tmp0_safe_receiver = _this__u8e3s4.get_wei43m_k$(key);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.removeLastMultiValue.<anonymous>' call
      // Inline function 'kotlin.also' call
      var this_0 = removeFirst(tmp0_safe_receiver);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.removeLastMultiValue.<anonymous>.<anonymous>' call
      if (tmp0_safe_receiver.isEmpty_y1axqb_k$()) {
        _this__u8e3s4.remove_gppy8k_k$(key);
      }
      tmp = this_0;
    }
    return tmp;
  }
  function get_RecomposerCompoundHashKey() {
    return RecomposerCompoundHashKey;
  }
  var RecomposerCompoundHashKey;
  function addMultiValue(_this__u8e3s4, key, value) {
    _init_properties_Recomposer_kt__nj7w3x();
    // Inline function 'kotlin.collections.getOrPut' call
    var value_0 = _this__u8e3s4.get_wei43m_k$(key);
    var tmp;
    if (value_0 == null) {
      // Inline function 'androidx.compose.runtime.addMultiValue.<anonymous>' call
      // Inline function 'kotlin.collections.mutableListOf' call
      var answer = ArrayList_init_$Create$();
      _this__u8e3s4.put_4fpzoq_k$(key, answer);
      tmp = answer;
    } else {
      tmp = value_0;
    }
    return tmp.add_utx5q5_k$(value);
  }
  var properties_initialized_Recomposer_kt_k8q2ph;
  function _init_properties_Recomposer_kt__nj7w3x() {
    if (!properties_initialized_Recomposer_kt_k8q2ph) {
      properties_initialized_Recomposer_kt_k8q2ph = true;
      ProduceAnotherFrame = new Object();
      FramePending = new Object();
    }
  }
  function RememberObserver() {
  }
  function moveGroup($this, fromWriter, fromIndex, toWriter, updateFromCursor, updateToCursor, removeSourceGroup) {
    var groupsToMove = fromWriter.groupSize_ehpyh4_k$(fromIndex);
    var sourceGroupsEnd = fromIndex + groupsToMove | 0;
    var sourceSlotsStart = dataIndex(fromWriter, fromIndex);
    var sourceSlotsEnd = dataIndex(fromWriter, sourceGroupsEnd);
    var slotsToMove = sourceSlotsEnd - sourceSlotsStart | 0;
    var hasMarks = containsAnyGroupMarks(fromWriter, fromIndex);
    insertGroups(toWriter, groupsToMove);
    insertSlots(toWriter, slotsToMove, toWriter.currentGroup_1);
    if (fromWriter.groupGapStart_1 < sourceGroupsEnd) {
      moveGroupGapTo(fromWriter, sourceGroupsEnd);
    }
    if (fromWriter.slotsGapStart_1 < sourceSlotsEnd) {
      moveSlotGapTo(fromWriter, sourceSlotsEnd, sourceGroupsEnd);
    }
    var groups = toWriter.groups_1;
    var currentGroup = toWriter.currentGroup_1;
    // Inline function 'kotlin.collections.copyInto' call
    var this_0 = fromWriter.groups_1;
    var destinationOffset = imul(currentGroup, 5);
    var startIndex = imul(fromIndex, 5);
    var endIndex = imul(sourceGroupsEnd, 5);
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp = this_0;
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    arrayCopy(tmp, groups, destinationOffset, startIndex, endIndex);
    var slots = toWriter.slots_1;
    var currentSlot = toWriter.currentSlot_1;
    // Inline function 'kotlin.collections.copyInto' call
    var this_1 = fromWriter.slots_1;
    arrayCopy(this_1, slots, currentSlot, sourceSlotsStart, sourceSlotsEnd);
    var parent = toWriter.parent_1;
    updateParentAnchor(groups, currentGroup, parent);
    var parentDelta = currentGroup - fromIndex | 0;
    var moveEnd = currentGroup + groupsToMove | 0;
    // Inline function 'kotlin.with' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.Companion.moveGroup.<anonymous>' call
    var dataIndexDelta = currentSlot - dataIndex_0(groups, toWriter, currentGroup) | 0;
    var slotsGapOwner = toWriter.slotsGapOwner_1;
    var slotsGapLen = toWriter.slotsGapLen_1;
    var slotsCapacity = slots.length;
    var inductionVariable = currentGroup;
    if (inductionVariable < moveEnd)
      do {
        var groupAddress = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!(groupAddress === currentGroup)) {
          var previousParent = parentAnchor(groups, groupAddress);
          updateParentAnchor(groups, groupAddress, previousParent + parentDelta | 0);
        }
        // Inline function 'kotlin.with' call
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.Companion.moveGroup.<anonymous>' call
        var newDataIndex = dataIndex_0(groups, toWriter, groupAddress) + dataIndexDelta | 0;
        // Inline function 'kotlin.with' call
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.Companion.moveGroup.<anonymous>' call
        var newDataAnchor = dataIndexToDataAnchor(toWriter, newDataIndex, slotsGapOwner < groupAddress ? 0 : toWriter.slotsGapStart_1, slotsGapLen, slotsCapacity);
        updateDataAnchor(groups, groupAddress, newDataAnchor);
        if (groupAddress === slotsGapOwner) {
          slotsGapOwner = slotsGapOwner + 1 | 0;
        }
      }
       while (inductionVariable < moveEnd);
    toWriter.slotsGapOwner_1 = slotsGapOwner;
    var startAnchors = locationOf(fromWriter.anchors_1, fromIndex, fromWriter.get_size_woubt6_k$());
    var endAnchors = locationOf(fromWriter.anchors_1, sourceGroupsEnd, fromWriter.get_size_woubt6_k$());
    var tmp_0;
    if (startAnchors < endAnchors) {
      var sourceAnchors = fromWriter.anchors_1;
      var anchors = ArrayList_init_$Create$_0(endAnchors - startAnchors | 0);
      var anchorDelta = currentGroup - fromIndex | 0;
      var inductionVariable_0 = startAnchors;
      if (inductionVariable_0 < endAnchors)
        do {
          var anchorIndex = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + 1 | 0;
          var sourceAnchor = sourceAnchors.get_c1px32_k$(anchorIndex);
          sourceAnchor.location_1 = sourceAnchor.location_1 + anchorDelta | 0;
          anchors.add_utx5q5_k$(sourceAnchor);
        }
         while (inductionVariable_0 < endAnchors);
      var insertLocation = locationOf(toWriter.anchors_1, toWriter.currentGroup_1, toWriter.get_size_woubt6_k$());
      toWriter.anchors_1.addAll_lxodh3_k$(insertLocation, anchors);
      sourceAnchors.subList_xle3r2_k$(startAnchors, endAnchors).clear_j9egeb_k$();
      tmp_0 = anchors;
    } else {
      tmp_0 = emptyList();
    }
    var anchors_0 = tmp_0;
    var parentGroup = fromWriter.parent_omvrla_k$(fromIndex);
    var tmp_1;
    if (!removeSourceGroup) {
      tmp_1 = false;
    } else if (updateFromCursor) {
      var needsStartGroups = parentGroup >= 0;
      if (needsStartGroups) {
        fromWriter.startGroup_hppv2r_k$();
        fromWriter.advanceBy_3na3gx_k$(parentGroup - fromWriter.currentGroup_1 | 0);
        fromWriter.startGroup_hppv2r_k$();
      }
      fromWriter.advanceBy_3na3gx_k$(fromIndex - fromWriter.currentGroup_1 | 0);
      var anchorsRemoved = fromWriter.removeGroup_5800px_k$();
      if (needsStartGroups) {
        fromWriter.skipToGroupEnd_lh3zi2_k$();
        fromWriter.endGroup_s64cis_k$();
        fromWriter.skipToGroupEnd_lh3zi2_k$();
        fromWriter.endGroup_s64cis_k$();
      }
      tmp_1 = anchorsRemoved;
    } else {
      var anchorsRemoved_0 = removeGroups(fromWriter, fromIndex, groupsToMove);
      removeSlots(fromWriter, sourceSlotsStart, slotsToMove, fromIndex - 1 | 0);
      tmp_1 = anchorsRemoved_0;
    }
    var anchorsRemoved_1 = tmp_1;
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!!anchorsRemoved_1) {
      // Inline function 'androidx.compose.runtime.Companion.moveGroup.<anonymous>' call
      var message = 'Unexpectedly removed anchors';
      composeRuntimeError(toString(message));
    }
    toWriter.nodeCount_1 = toWriter.nodeCount_1 + (isNode(groups, currentGroup) ? 1 : nodeCount(groups, currentGroup)) | 0;
    if (updateToCursor) {
      toWriter.currentGroup_1 = currentGroup + groupsToMove | 0;
      toWriter.currentSlot_1 = currentSlot + slotsToMove | 0;
    }
    if (hasMarks) {
      updateContainsMark(toWriter, parent);
    }
    return anchors_0;
  }
  function moveGroup$default($this, fromWriter, fromIndex, toWriter, updateFromCursor, updateToCursor, removeSourceGroup, $super) {
    removeSourceGroup = removeSourceGroup === VOID ? true : removeSourceGroup;
    return moveGroup($this, fromWriter, fromIndex, toWriter, updateFromCursor, updateToCursor, removeSourceGroup);
  }
  function _set_groups__tuion1($this, _set____db54di) {
    $this.groups_1 = _set____db54di;
  }
  function _get_groups__sds409($this) {
    return $this.groups_1;
  }
  function _set_slots__knzp9s($this, _set____db54di) {
    $this.slots_1 = _set____db54di;
  }
  function _get_slots__bd4r7o($this) {
    return $this.slots_1;
  }
  function _set_anchors__qbbqc9($this, _set____db54di) {
    $this.anchors_1 = _set____db54di;
  }
  function _get_anchors__j3k19v($this) {
    return $this.anchors_1;
  }
  function _set_groupGapStart__7vbt46($this, _set____db54di) {
    $this.groupGapStart_1 = _set____db54di;
  }
  function _get_groupGapStart__n33bmi($this) {
    return $this.groupGapStart_1;
  }
  function _set_groupGapLen__bwtvy1($this, _set____db54di) {
    $this.groupGapLen_1 = _set____db54di;
  }
  function _get_groupGapLen__idkadv($this) {
    return $this.groupGapLen_1;
  }
  function _set_currentGroupEnd__mj1dbk($this, _set____db54di) {
    $this.currentGroupEnd_1 = _set____db54di;
  }
  function _get_currentGroupEnd__wmrku4($this) {
    return $this.currentGroupEnd_1;
  }
  function _set_currentSlot__l69xhq($this, _set____db54di) {
    $this.currentSlot_1 = _set____db54di;
  }
  function _get_currentSlot__jkfy5i($this) {
    return $this.currentSlot_1;
  }
  function _set_currentSlotEnd__l1hp65($this, _set____db54di) {
    $this.currentSlotEnd_1 = _set____db54di;
  }
  function _get_currentSlotEnd__4hlqvb($this) {
    return $this.currentSlotEnd_1;
  }
  function _set_slotsGapStart__bwslwk($this, _set____db54di) {
    $this.slotsGapStart_1 = _set____db54di;
  }
  function _get_slotsGapStart__3aywls($this) {
    return $this.slotsGapStart_1;
  }
  function _set_slotsGapLen__o931qp($this, _set____db54di) {
    $this.slotsGapLen_1 = _set____db54di;
  }
  function _get_slotsGapLen__ghmtwj($this) {
    return $this.slotsGapLen_1;
  }
  function _set_slotsGapOwner__a2hj8z($this, _set____db54di) {
    $this.slotsGapOwner_1 = _set____db54di;
  }
  function _get_slotsGapOwner__559z9d($this) {
    return $this.slotsGapOwner_1;
  }
  function _set_insertCount__1w08vj($this, _set____db54di) {
    $this.insertCount_1 = _set____db54di;
  }
  function _get_insertCount__w6ef7f($this) {
    return $this.insertCount_1;
  }
  function _set_nodeCount__whx4qg($this, _set____db54di) {
    $this.nodeCount_1 = _set____db54di;
  }
  function _get_nodeCount__98cgu4($this) {
    return $this.nodeCount_1;
  }
  function _get_startStack__8yowsl($this) {
    return $this.startStack_1;
  }
  function _get_endStack__jx3c3m($this) {
    return $this.endStack_1;
  }
  function _get_nodeCountStack__qt251s($this) {
    return $this.nodeCountStack_1;
  }
  function _set_currentGroup__bjapap($this, _set____db54di) {
    $this.currentGroup_1 = _set____db54di;
  }
  function _set_parent__n7jd7x($this, _set____db54di) {
    $this.parent_1 = _set____db54di;
  }
  function _set_closed__kdb0et($this, _set____db54di) {
    $this.closed_1 = _set____db54di;
  }
  function startGroup_1($this, key, objectKey, isNode, aux) {
    var inserting = $this.insertCount_1 > 0;
    $this.nodeCountStack_1.push_w5xqdu_k$($this.nodeCount_1);
    var tmp = $this;
    var tmp_0;
    if (inserting) {
      insertGroups($this, 1);
      var current = $this.currentGroup_1;
      var currentAddress = groupIndexToAddress($this, current);
      var hasObjectKey = !(objectKey === Companion_getInstance_1().get_Empty_i9b85g_k$());
      var hasAux = !isNode ? !(aux === Companion_getInstance_1().get_Empty_i9b85g_k$()) : false;
      initGroup($this.groups_1, currentAddress, key, isNode, hasObjectKey, hasAux, $this.parent_1, $this.currentSlot_1);
      $this.currentSlotEnd_1 = $this.currentSlot_1;
      var dataSlotsNeeded = ((isNode ? 1 : 0) + (hasObjectKey ? 1 : 0) | 0) + (hasAux ? 1 : 0) | 0;
      if (dataSlotsNeeded > 0) {
        insertSlots($this, dataSlotsNeeded, current);
        var slots = $this.slots_1;
        var currentSlot = $this.currentSlot_1;
        if (isNode) {
          var tmp0 = currentSlot;
          currentSlot = tmp0 + 1 | 0;
          slots[tmp0] = aux;
        }
        if (hasObjectKey) {
          var tmp1 = currentSlot;
          currentSlot = tmp1 + 1 | 0;
          slots[tmp1] = objectKey;
        }
        if (hasAux) {
          var tmp2 = currentSlot;
          currentSlot = tmp2 + 1 | 0;
          slots[tmp2] = aux;
        }
        $this.currentSlot_1 = currentSlot;
      }
      $this.nodeCount_1 = 0;
      var newCurrent = current + 1 | 0;
      $this.parent_1 = current;
      $this.currentGroup_1 = newCurrent;
      tmp_0 = newCurrent;
    } else {
      var previousParent = $this.parent_1;
      $this.startStack_1.push_w5xqdu_k$(previousParent);
      saveCurrentGroupEnd($this);
      var currentGroup = $this.currentGroup_1;
      var currentGroupAddress = groupIndexToAddress($this, currentGroup);
      if (!equals(aux, Companion_getInstance_1().get_Empty_i9b85g_k$())) {
        if (isNode) {
          $this.updateNode_la5mvw_k$(aux);
        } else {
          $this.updateAux_k8b4ks_k$(aux);
        }
      }
      $this.currentSlot_1 = slotIndex($this.groups_1, $this, currentGroupAddress);
      $this.currentSlotEnd_1 = dataIndex_0($this.groups_1, $this, groupIndexToAddress($this, $this.currentGroup_1 + 1 | 0));
      $this.nodeCount_1 = nodeCount($this.groups_1, currentGroupAddress);
      $this.parent_1 = currentGroup;
      $this.currentGroup_1 = currentGroup + 1 | 0;
      tmp_0 = currentGroup + groupSize($this.groups_1, currentGroupAddress) | 0;
    }
    tmp.currentGroupEnd_1 = tmp_0;
  }
  function Companion_4() {
    Companion_instance_4 = this;
  }
  var Companion_instance_4;
  function Companion_getInstance_6() {
    if (Companion_instance_4 == null)
      new Companion_4();
    return Companion_instance_4;
  }
  function containsGroupMark($this, group) {
    return group >= 0 ? containsMark($this.groups_1, groupIndexToAddress($this, group)) : false;
  }
  function containsAnyGroupMarks($this, group) {
    return group >= 0 ? containsAnyMark($this.groups_1, groupIndexToAddress($this, group)) : false;
  }
  function _set_pendingRecalculateMarks__f5idet($this, _set____db54di) {
    $this.pendingRecalculateMarks_1 = _set____db54di;
  }
  function _get_pendingRecalculateMarks__zegaav($this) {
    return $this.pendingRecalculateMarks_1;
  }
  function recalculateMarks($this) {
    var tmp0_safe_receiver = $this.pendingRecalculateMarks_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      while (tmp0_safe_receiver.isNotEmpty_cjxbwk_k$()) {
        updateContainsMarkNow($this, tmp0_safe_receiver.takeMax_pjqylf_k$(), tmp0_safe_receiver);
      }
    }
  }
  function updateContainsMark($this, group) {
    if (group >= 0) {
      var tmp0_elvis_lhs = $this.pendingRecalculateMarks_1;
      var tmp;
      if (tmp0_elvis_lhs == null) {
        // Inline function 'kotlin.also' call
        var this_0 = new PrioritySet();
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.SlotWriter.updateContainsMark.<anonymous>' call
        $this.pendingRecalculateMarks_1 = this_0;
        tmp = this_0;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      tmp.add_c9dakn_k$(group);
    }
  }
  function updateContainsMarkNow($this, group, set) {
    var groupAddress = groupIndexToAddress($this, group);
    var containsAnyMarks = childContainsAnyMarks($this, group);
    var markChanges = !(containsMark($this.groups_1, groupAddress) === containsAnyMarks);
    if (markChanges) {
      updateContainsMark_0($this.groups_1, groupAddress, containsAnyMarks);
      var parent = $this.parent_omvrla_k$(group);
      if (parent >= 0) {
        set.add_c9dakn_k$(parent);
      }
    }
  }
  function childContainsAnyMarks($this, group) {
    var child = group + 1 | 0;
    var end = group + $this.groupSize_ehpyh4_k$(group) | 0;
    while (child < end) {
      if (containsAnyMark($this.groups_1, groupIndexToAddress($this, child)))
        return true;
      child = child + $this.groupSize_ehpyh4_k$(child) | 0;
    }
    return false;
  }
  function saveCurrentGroupEnd($this) {
    $this.endStack_1.push_w5xqdu_k$((_get_capacity__a9k9f3($this) - $this.groupGapLen_1 | 0) - $this.currentGroupEnd_1 | 0);
  }
  function restoreCurrentGroupEnd($this) {
    var newGroupEnd = (_get_capacity__a9k9f3($this) - $this.groupGapLen_1 | 0) - $this.endStack_1.pop_2dsh_k$() | 0;
    $this.currentGroupEnd_1 = newGroupEnd;
    return newGroupEnd;
  }
  function fixParentAnchorsFor($this, parent, endGroup, firstChild) {
    var parentAnchor = parentIndexToAnchor($this, parent, $this.groupGapStart_1);
    var child = firstChild;
    while (child < endGroup) {
      updateParentAnchor($this.groups_1, groupIndexToAddress($this, child), parentAnchor);
      var childEnd = child + groupSize($this.groups_1, groupIndexToAddress($this, child)) | 0;
      fixParentAnchorsFor($this, child, childEnd, child + 1 | 0);
      child = childEnd;
    }
  }
  function moveGroupGapTo($this, index) {
    var gapLen = $this.groupGapLen_1;
    var gapStart = $this.groupGapStart_1;
    if (!(gapStart === index)) {
      // Inline function 'kotlin.collections.isNotEmpty' call
      if (!$this.anchors_1.isEmpty_y1axqb_k$()) {
        updateAnchors($this, gapStart, index);
      }
      if (gapLen > 0) {
        var groups = $this.groups_1;
        var groupPhysicalAddress = imul(index, 5);
        var groupPhysicalGapLen = imul(gapLen, 5);
        var groupPhysicalGapStart = imul(gapStart, 5);
        if (index < gapStart) {
          // Inline function 'kotlin.collections.copyInto' call
          var destinationOffset = groupPhysicalAddress + groupPhysicalGapLen | 0;
          // Inline function 'kotlin.js.unsafeCast' call
          // Inline function 'kotlin.js.asDynamic' call
          var tmp = groups;
          // Inline function 'kotlin.js.unsafeCast' call
          // Inline function 'kotlin.js.asDynamic' call
          arrayCopy(tmp, groups, destinationOffset, groupPhysicalAddress, groupPhysicalGapStart);
        } else {
          // Inline function 'kotlin.collections.copyInto' call
          var startIndex = groupPhysicalGapStart + groupPhysicalGapLen | 0;
          var endIndex = groupPhysicalAddress + groupPhysicalGapLen | 0;
          // Inline function 'kotlin.js.unsafeCast' call
          // Inline function 'kotlin.js.asDynamic' call
          var tmp_0 = groups;
          // Inline function 'kotlin.js.unsafeCast' call
          // Inline function 'kotlin.js.asDynamic' call
          arrayCopy(tmp_0, groups, groupPhysicalGapStart, startIndex, endIndex);
        }
      }
      var groupAddress = index < gapStart ? index + gapLen | 0 : gapStart;
      var capacity = _get_capacity__a9k9f3($this);
      runtimeCheck_0(groupAddress < capacity);
      while (groupAddress < capacity) {
        var oldAnchor = parentAnchor($this.groups_1, groupAddress);
        var oldIndex = parentAnchorToIndex($this, oldAnchor);
        var newAnchor = parentIndexToAnchor($this, oldIndex, index);
        if (!(newAnchor === oldAnchor)) {
          updateParentAnchor($this.groups_1, groupAddress, newAnchor);
        }
        groupAddress = groupAddress + 1 | 0;
        if (groupAddress === index)
          groupAddress = groupAddress + gapLen | 0;
      }
    }
    $this.groupGapStart_1 = index;
  }
  function moveSlotGapTo($this, index, group) {
    var gapLen = $this.slotsGapLen_1;
    var gapStart = $this.slotsGapStart_1;
    var slotsGapOwner = $this.slotsGapOwner_1;
    if (!(gapStart === index)) {
      var slots = $this.slots_1;
      if (index < gapStart) {
        // Inline function 'kotlin.collections.copyInto' call
        var destinationOffset = index + gapLen | 0;
        arrayCopy(slots, slots, destinationOffset, index, gapStart);
      } else {
        // Inline function 'kotlin.collections.copyInto' call
        var startIndex = gapStart + gapLen | 0;
        var endIndex = index + gapLen | 0;
        arrayCopy(slots, slots, gapStart, startIndex, endIndex);
      }
    }
    // Inline function 'kotlin.math.min' call
    var a = group + 1 | 0;
    var b = $this.get_size_woubt6_k$();
    var newSlotsGapOwner = Math.min(a, b);
    if (!(slotsGapOwner === newSlotsGapOwner)) {
      var slotsSize = $this.slots_1.length - gapLen | 0;
      if (newSlotsGapOwner < slotsGapOwner) {
        var updateAddress = groupIndexToAddress($this, newSlotsGapOwner);
        var stopUpdateAddress = groupIndexToAddress($this, slotsGapOwner);
        var groupGapStart = $this.groupGapStart_1;
        while (updateAddress < stopUpdateAddress) {
          var anchor = dataAnchor($this.groups_1, updateAddress);
          // Inline function 'androidx.compose.runtime.runtimeCheck' call
          if (!(anchor >= 0)) {
            // Inline function 'androidx.compose.runtime.SlotWriter.moveSlotGapTo.<anonymous>' call
            var message = 'Unexpected anchor value, expected a positive anchor';
            composeRuntimeError(toString(message));
          }
          updateDataAnchor($this.groups_1, updateAddress, -((slotsSize - anchor | 0) + 1 | 0) | 0);
          updateAddress = updateAddress + 1 | 0;
          if (updateAddress === groupGapStart)
            updateAddress = updateAddress + $this.groupGapLen_1 | 0;
        }
      } else {
        var updateAddress_0 = groupIndexToAddress($this, slotsGapOwner);
        var stopUpdateAddress_0 = groupIndexToAddress($this, newSlotsGapOwner);
        while (updateAddress_0 < stopUpdateAddress_0) {
          var anchor_0 = dataAnchor($this.groups_1, updateAddress_0);
          // Inline function 'androidx.compose.runtime.runtimeCheck' call
          if (!(anchor_0 < 0)) {
            // Inline function 'androidx.compose.runtime.SlotWriter.moveSlotGapTo.<anonymous>' call
            var message_0 = 'Unexpected anchor value, expected a negative anchor';
            composeRuntimeError(toString(message_0));
          }
          updateDataAnchor($this.groups_1, updateAddress_0, (slotsSize + anchor_0 | 0) + 1 | 0);
          updateAddress_0 = updateAddress_0 + 1 | 0;
          if (updateAddress_0 === $this.groupGapStart_1)
            updateAddress_0 = updateAddress_0 + $this.groupGapLen_1 | 0;
        }
      }
      $this.slotsGapOwner_1 = newSlotsGapOwner;
    }
    $this.slotsGapStart_1 = index;
  }
  function clearSlotGap($this) {
    var slotsGapStart = $this.slotsGapStart_1;
    var slotsGapEnd = slotsGapStart + $this.slotsGapLen_1 | 0;
    fill_0($this.slots_1, null, slotsGapStart, slotsGapEnd);
  }
  function insertGroups($this, size) {
    if (size > 0) {
      var currentGroup = $this.currentGroup_1;
      moveGroupGapTo($this, currentGroup);
      var gapStart = $this.groupGapStart_1;
      var gapLen = $this.groupGapLen_1;
      var oldCapacity = $this.groups_1.length / 5 | 0;
      var oldSize = oldCapacity - gapLen | 0;
      if (gapLen < size) {
        var groups = $this.groups_1;
        // Inline function 'kotlin.math.max' call
        // Inline function 'kotlin.math.max' call
        var a = imul(oldCapacity, 2);
        var b = oldSize + size | 0;
        var a_0 = Math.max(a, b);
        var newCapacity = Math.max(a_0, 32);
        var newGroups = new Int32Array(imul(newCapacity, 5));
        var newGapLen = newCapacity - oldSize | 0;
        var oldGapEndAddress = gapStart + gapLen | 0;
        var newGapEndAddress = gapStart + newGapLen | 0;
        // Inline function 'kotlin.collections.copyInto' call
        var endIndex = imul(gapStart, 5);
        // Inline function 'kotlin.js.unsafeCast' call
        // Inline function 'kotlin.js.asDynamic' call
        var tmp = groups;
        // Inline function 'kotlin.js.unsafeCast' call
        // Inline function 'kotlin.js.asDynamic' call
        arrayCopy(tmp, newGroups, 0, 0, endIndex);
        // Inline function 'kotlin.collections.copyInto' call
        var destinationOffset = imul(newGapEndAddress, 5);
        var startIndex = imul(oldGapEndAddress, 5);
        var endIndex_0 = imul(oldCapacity, 5);
        // Inline function 'kotlin.js.unsafeCast' call
        // Inline function 'kotlin.js.asDynamic' call
        var tmp_0 = groups;
        // Inline function 'kotlin.js.unsafeCast' call
        // Inline function 'kotlin.js.asDynamic' call
        arrayCopy(tmp_0, newGroups, destinationOffset, startIndex, endIndex_0);
        $this.groups_1 = newGroups;
        gapLen = newGapLen;
      }
      var currentEnd = $this.currentGroupEnd_1;
      if (currentEnd >= gapStart)
        $this.currentGroupEnd_1 = currentEnd + size | 0;
      $this.groupGapStart_1 = gapStart + size | 0;
      $this.groupGapLen_1 = gapLen - size | 0;
      var index = oldSize > 0 ? dataIndex($this, currentGroup + size | 0) : 0;
      var anchor = dataIndexToDataAnchor($this, index, $this.slotsGapOwner_1 < gapStart ? 0 : $this.slotsGapStart_1, $this.slotsGapLen_1, $this.slots_1.length);
      var inductionVariable = gapStart;
      var last = gapStart + size | 0;
      if (inductionVariable < last)
        do {
          var groupAddress = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          updateDataAnchor($this.groups_1, groupAddress, anchor);
        }
         while (inductionVariable < last);
      var slotsGapOwner = $this.slotsGapOwner_1;
      if (slotsGapOwner >= gapStart) {
        $this.slotsGapOwner_1 = slotsGapOwner + size | 0;
      }
    }
  }
  function insertSlots($this, size, group) {
    if (size > 0) {
      moveSlotGapTo($this, $this.currentSlot_1, group);
      var gapStart = $this.slotsGapStart_1;
      var gapLen = $this.slotsGapLen_1;
      if (gapLen < size) {
        var slots = $this.slots_1;
        var oldCapacity = slots.length;
        var oldSize = oldCapacity - gapLen | 0;
        // Inline function 'kotlin.math.max' call
        // Inline function 'kotlin.math.max' call
        var a = imul(oldCapacity, 2);
        var b = oldSize + size | 0;
        var a_0 = Math.max(a, b);
        var newCapacity = Math.max(a_0, 32);
        var tmp = 0;
        // Inline function 'kotlin.arrayOfNulls' call
        var tmp_0 = fillArrayVal(Array(newCapacity), null);
        while (tmp < newCapacity) {
          tmp_0[tmp] = null;
          tmp = tmp + 1 | 0;
        }
        var newData = tmp_0;
        var newGapLen = newCapacity - oldSize | 0;
        var oldGapEndAddress = gapStart + gapLen | 0;
        var newGapEndAddress = gapStart + newGapLen | 0;
        // Inline function 'kotlin.collections.copyInto' call
        arrayCopy(slots, newData, 0, 0, gapStart);
        // Inline function 'kotlin.collections.copyInto' call
        arrayCopy(slots, newData, newGapEndAddress, oldGapEndAddress, oldCapacity);
        $this.slots_1 = newData;
        gapLen = newGapLen;
      }
      var currentDataEnd = $this.currentSlotEnd_1;
      if (currentDataEnd >= gapStart)
        $this.currentSlotEnd_1 = currentDataEnd + size | 0;
      $this.slotsGapStart_1 = gapStart + size | 0;
      $this.slotsGapLen_1 = gapLen - size | 0;
    }
  }
  function removeGroups($this, start, len) {
    var tmp;
    if (len > 0) {
      var anchorsRemoved = false;
      var anchors = $this.anchors_1;
      moveGroupGapTo($this, start);
      // Inline function 'kotlin.collections.isNotEmpty' call
      if (!anchors.isEmpty_y1axqb_k$())
        anchorsRemoved = removeAnchors($this, start, len);
      $this.groupGapStart_1 = start;
      var previousGapLen = $this.groupGapLen_1;
      var newGapLen = previousGapLen + len | 0;
      $this.groupGapLen_1 = newGapLen;
      var slotsGapOwner = $this.slotsGapOwner_1;
      if (slotsGapOwner > start) {
        var tmp_0 = $this;
        // Inline function 'kotlin.math.max' call
        var b = slotsGapOwner - len | 0;
        tmp_0.slotsGapOwner_1 = Math.max(start, b);
      }
      if ($this.currentGroupEnd_1 >= $this.groupGapStart_1) {
        $this.currentGroupEnd_1 = $this.currentGroupEnd_1 - len | 0;
      }
      if (containsGroupMark($this, $this.parent_1)) {
        updateContainsMark($this, $this.parent_1);
      }
      tmp = anchorsRemoved;
    } else {
      tmp = false;
    }
    return tmp;
  }
  function removeSlots($this, start, len, group) {
    if (len > 0) {
      var gapLen = $this.slotsGapLen_1;
      var removeEnd = start + len | 0;
      moveSlotGapTo($this, removeEnd, group);
      $this.slotsGapStart_1 = start;
      $this.slotsGapLen_1 = gapLen + len | 0;
      fill_0($this.slots_1, null, start, start + len | 0);
      var currentDataEnd = $this.currentSlotEnd_1;
      if (currentDataEnd >= start)
        $this.currentSlotEnd_1 = currentDataEnd - len | 0;
    }
  }
  function updateNodeOfGroup($this, index, value) {
    var address = groupIndexToAddress($this, index);
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!(address < $this.groups_1.length ? isNode($this.groups_1, address) : false)) {
      // Inline function 'androidx.compose.runtime.SlotWriter.updateNodeOfGroup.<anonymous>' call
      var message = 'Updating the node of a group at ' + index + ' that was not created with as a node group';
      composeRuntimeError(toString(message));
    }
    $this.slots_1[dataIndexToDataAddress($this, nodeIndex($this.groups_1, $this, address))] = value;
  }
  function updateAnchors($this, previousGapStart, newGapStart) {
    var gapLen = $this.groupGapLen_1;
    var size = _get_capacity__a9k9f3($this) - gapLen | 0;
    if (previousGapStart < newGapStart) {
      var index = locationOf($this.anchors_1, previousGapStart, size);
      $l$loop_0: while (index < $this.anchors_1.get_size_woubt6_k$()) {
        var anchor = $this.anchors_1.get_c1px32_k$(index);
        var location = anchor.location_1;
        if (location < 0) {
          var newLocation = size + location | 0;
          if (newLocation < newGapStart) {
            anchor.location_1 = size + location | 0;
            index = index + 1 | 0;
          } else
            break $l$loop_0;
        } else
          break $l$loop_0;
      }
    } else {
      var index_0 = locationOf($this.anchors_1, newGapStart, size);
      $l$loop_1: while (index_0 < $this.anchors_1.get_size_woubt6_k$()) {
        var anchor_0 = $this.anchors_1.get_c1px32_k$(index_0);
        var location_0 = anchor_0.location_1;
        if (location_0 >= 0) {
          anchor_0.location_1 = -(size - location_0 | 0) | 0;
          index_0 = index_0 + 1 | 0;
        } else
          break $l$loop_1;
      }
    }
  }
  function removeAnchors($this, gapStart, size) {
    var gapLen = $this.groupGapLen_1;
    var removeEnd = gapStart + size | 0;
    var groupsSize = _get_capacity__a9k9f3($this) - gapLen | 0;
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.SlotWriter.removeAnchors.<anonymous>' call
    var it = locationOf($this.anchors_1, gapStart + size | 0, groupsSize);
    var index = it >= $this.anchors_1.get_size_woubt6_k$() ? it - 1 | 0 : it;
    var removeAnchorEnd = 0;
    var removeAnchorStart = index + 1 | 0;
    $l$loop: while (index >= 0) {
      var anchor = $this.anchors_1.get_c1px32_k$(index);
      var location = $this.anchorIndex_79wady_k$(anchor);
      if (location >= gapStart) {
        if (location < removeEnd) {
          anchor.location_1 = IntCompanionObject_getInstance().get_MIN_VALUE_7nmmor_k$();
          removeAnchorStart = index;
          if (removeAnchorEnd === 0)
            removeAnchorEnd = index + 1 | 0;
        }
        index = index - 1 | 0;
      } else
        break $l$loop;
    }
    // Inline function 'kotlin.also' call
    var this_0 = removeAnchorStart < removeAnchorEnd;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.SlotWriter.removeAnchors.<anonymous>' call
    if (this_0) {
      $this.anchors_1.subList_xle3r2_k$(removeAnchorStart, removeAnchorEnd).clear_j9egeb_k$();
    }
    return this_0;
  }
  function moveAnchors($this, originalLocation, newLocation, size) {
    var end = originalLocation + size | 0;
    var groupsSize = $this.get_size_woubt6_k$();
    var index = locationOf($this.anchors_1, originalLocation, groupsSize);
    // Inline function 'kotlin.collections.mutableListOf' call
    var removedAnchors = ArrayList_init_$Create$();
    if (index >= 0) {
      $l$loop: while (index < $this.anchors_1.get_size_woubt6_k$()) {
        var anchor = $this.anchors_1.get_c1px32_k$(index);
        var location = $this.anchorIndex_79wady_k$(anchor);
        if (location >= originalLocation ? location < end : false) {
          removedAnchors.add_utx5q5_k$(anchor);
          $this.anchors_1.removeAt_6niowx_k$(index);
        } else
          break $l$loop;
      }
    }
    var moveDelta = newLocation - originalLocation | 0;
    // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    var last = removedAnchors.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index_0 = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var item = removedAnchors.get_c1px32_k$(index_0);
        // Inline function 'androidx.compose.runtime.SlotWriter.moveAnchors.<anonymous>' call
        var anchorIndex = $this.anchorIndex_79wady_k$(item);
        var newAnchorIndex = anchorIndex + moveDelta | 0;
        if (newAnchorIndex >= $this.groupGapStart_1) {
          item.location_1 = -(groupsSize - newAnchorIndex | 0) | 0;
        } else {
          item.location_1 = newAnchorIndex;
        }
        var insertIndex = locationOf($this.anchors_1, newAnchorIndex, groupsSize);
        $this.anchors_1.add_dl6gt3_k$(insertIndex, item);
      }
       while (inductionVariable <= last);
  }
  function groupAsString(_this__u8e3s4, $this, index) {
    var address = groupIndexToAddress($this, index);
    _this__u8e3s4.append_22ad7x_k$('Group(');
    if (index < 10) {
      _this__u8e3s4.append_am5a4z_k$(_Char___init__impl__6a9atx(32));
    }
    if (index < 100) {
      _this__u8e3s4.append_am5a4z_k$(_Char___init__impl__6a9atx(32));
    }
    if (index < 1000) {
      _this__u8e3s4.append_am5a4z_k$(_Char___init__impl__6a9atx(32));
    }
    _this__u8e3s4.append_t8pm91_k$(index);
    if (!(address === index)) {
      _this__u8e3s4.append_22ad7x_k$('(');
      _this__u8e3s4.append_t8pm91_k$(address);
      _this__u8e3s4.append_22ad7x_k$(')');
    }
    _this__u8e3s4.append_am5a4z_k$(_Char___init__impl__6a9atx(35));
    _this__u8e3s4.append_t8pm91_k$(groupSize($this.groups_1, address));
    var openGroup = groupAsString$isStarted($this, index);
    if (openGroup) {
      _this__u8e3s4.append_am5a4z_k$(_Char___init__impl__6a9atx(63));
    }
    _this__u8e3s4.append_am5a4z_k$(_Char___init__impl__6a9atx(94));
    _this__u8e3s4.append_t8pm91_k$(parentAnchorToIndex($this, parentAnchor($this.groups_1, address)));
    _this__u8e3s4.append_22ad7x_k$(': key=');
    _this__u8e3s4.append_t8pm91_k$(key($this.groups_1, address));
    _this__u8e3s4.append_22ad7x_k$(', nodes=');
    _this__u8e3s4.append_t8pm91_k$(nodeCount($this.groups_1, address));
    if (openGroup) {
      _this__u8e3s4.append_am5a4z_k$(_Char___init__impl__6a9atx(63));
    }
    _this__u8e3s4.append_22ad7x_k$(', dataAnchor=');
    _this__u8e3s4.append_t8pm91_k$(dataAnchor($this.groups_1, address));
    _this__u8e3s4.append_22ad7x_k$(', parentAnchor=');
    _this__u8e3s4.append_t8pm91_k$(parentAnchor($this.groups_1, address));
    if (isNode($this.groups_1, address)) {
      _this__u8e3s4.append_22ad7x_k$(', node=' + toString_0($this.slots_1[dataIndexToDataAddress($this, nodeIndex($this.groups_1, $this, address))]));
    }
    var startData = slotIndex($this.groups_1, $this, address);
    var endData = dataIndex_0($this.groups_1, $this, address + 1 | 0);
    if (endData > startData) {
      _this__u8e3s4.append_22ad7x_k$(', [');
      var inductionVariable = startData;
      if (inductionVariable < endData)
        do {
          var dataIndex = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (!(dataIndex === startData)) {
            _this__u8e3s4.append_22ad7x_k$(', ');
          }
          var dataAddress = dataIndexToDataAddress($this, dataIndex);
          _this__u8e3s4.append_22ad7x_k$(toString_0($this.slots_1[dataAddress]));
        }
         while (inductionVariable < endData);
      _this__u8e3s4.append_am5a4z_k$(_Char___init__impl__6a9atx(93));
    }
    _this__u8e3s4.append_22ad7x_k$(')');
  }
  function _get_capacity__a9k9f3($this) {
    return $this.groups_1.length / 5 | 0;
  }
  function groupIndexToAddress($this, index) {
    return index < $this.groupGapStart_1 ? index : index + $this.groupGapLen_1 | 0;
  }
  function dataIndexToDataAddress($this, dataIndex) {
    return dataIndex < $this.slotsGapStart_1 ? dataIndex : dataIndex + $this.slotsGapLen_1 | 0;
  }
  function parent(_this__u8e3s4, $this, index) {
    return parentAnchorToIndex($this, parentAnchor(_this__u8e3s4, groupIndexToAddress($this, index)));
  }
  function dataIndex($this, index) {
    return dataIndex_0($this.groups_1, $this, groupIndexToAddress($this, index));
  }
  function dataIndex_0(_this__u8e3s4, $this, address) {
    return address >= _get_capacity__a9k9f3($this) ? $this.slots_1.length - $this.slotsGapLen_1 | 0 : dataAnchorToDataIndex($this, dataAnchor(_this__u8e3s4, address), $this.slotsGapLen_1, $this.slots_1.length);
  }
  function slotIndex(_this__u8e3s4, $this, address) {
    return address >= _get_capacity__a9k9f3($this) ? $this.slots_1.length - $this.slotsGapLen_1 | 0 : dataAnchorToDataIndex($this, slotAnchor(_this__u8e3s4, address), $this.slotsGapLen_1, $this.slots_1.length);
  }
  function updateDataIndex(_this__u8e3s4, $this, address, dataIndex) {
    updateDataAnchor(_this__u8e3s4, address, dataIndexToDataAnchor($this, dataIndex, $this.slotsGapStart_1, $this.slotsGapLen_1, $this.slots_1.length));
  }
  function nodeIndex(_this__u8e3s4, $this, address) {
    return dataIndex_0(_this__u8e3s4, $this, address);
  }
  function auxIndex(_this__u8e3s4, $this, address) {
    return dataIndex_0(_this__u8e3s4, $this, address) + countOneBits_0(groupInfo(_this__u8e3s4, address) >> 29) | 0;
  }
  function dataIndexes(_this__u8e3s4, $this) {
    // Inline function 'androidx.compose.runtime.snapshots.fastMap' call
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.SlotWriter.dataIndexes.<anonymous>' call
    var it = dataAnchors($this.groups_1);
    var this_0 = plus_2(slice(it, until(0, $this.groupGapStart_1)), slice(it, until($this.groupGapStart_1 + $this.groupGapLen_1 | 0, _this__u8e3s4.length / 5 | 0)));
    // Inline function 'kotlin.contracts.contract' call
    var target = ArrayList_init_$Create$_0(this_0.get_size_woubt6_k$());
    // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    var last = this_0.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var item = this_0.get_c1px32_k$(index);
        // Inline function 'androidx.compose.runtime.snapshots.fastMap.<anonymous>' call
        // Inline function 'kotlin.collections.plusAssign' call
        // Inline function 'androidx.compose.runtime.SlotWriter.dataIndexes.<anonymous>' call
        var element = dataAnchorToDataIndex($this, item, $this.slotsGapLen_1, $this.slots_1.length);
        target.add_utx5q5_k$(element);
      }
       while (inductionVariable <= last);
    return target;
  }
  function keys($this) {
    // Inline function 'androidx.compose.runtime.snapshots.fastFilterIndexed' call
    var this_0 = keys_1($this.groups_1);
    // Inline function 'kotlin.contracts.contract' call
    var target = ArrayList_init_$Create$_0(this_0.get_size_woubt6_k$());
    // Inline function 'androidx.compose.runtime.snapshots.fastForEachIndexed' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    var last = this_0.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var item = this_0.get_c1px32_k$(index);
        // Inline function 'androidx.compose.runtime.snapshots.fastFilterIndexed.<anonymous>' call
        // Inline function 'androidx.compose.runtime.SlotWriter.keys.<anonymous>' call
        if (index < $this.groupGapStart_1 ? true : index >= ($this.groupGapStart_1 + $this.groupGapLen_1 | 0)) {
          // Inline function 'kotlin.collections.plusAssign' call
          target.add_utx5q5_k$(item);
        }
      }
       while (inductionVariable <= last);
    return target;
  }
  function dataIndexToDataAnchor($this, index, gapStart, gapLen, capacity) {
    return index > gapStart ? -(((capacity - gapLen | 0) - index | 0) + 1 | 0) | 0 : index;
  }
  function dataAnchorToDataIndex($this, anchor, gapLen, capacity) {
    return anchor < 0 ? ((capacity - gapLen | 0) + anchor | 0) + 1 | 0 : anchor;
  }
  function parentIndexToAnchor($this, index, gapStart) {
    return index < gapStart ? index : -(($this.get_size_woubt6_k$() - index | 0) - -2 | 0) | 0;
  }
  function parentAnchorToIndex($this, index) {
    return index > -2 ? index : ($this.get_size_woubt6_k$() + index | 0) - -2 | 0;
  }
  function groupAsString$isStarted(this$0, index) {
    return index < this$0.currentGroup_1 ? (index === this$0.parent_1 ? true : this$0.startStack_1.indexOf_h7efip_k$(index) >= 0) ? true : groupAsString$isStarted(this$0, this$0.parent_omvrla_k$(index)) : false;
  }
  function SlotWriter$groupSlots$1($start, $end, this$0) {
    this.$end_1 = $end;
    this.this$0__1 = this$0;
    this.current_1 = $start;
  }
  protoOf(SlotWriter$groupSlots$1).set_current_hihfh0_k$ = function (_set____db54di) {
    this.current_1 = _set____db54di;
  };
  protoOf(SlotWriter$groupSlots$1).get_current_jwi6j4_k$ = function () {
    return this.current_1;
  };
  protoOf(SlotWriter$groupSlots$1).hasNext_bitz1p_k$ = function () {
    return this.current_1 < this.$end_1;
  };
  protoOf(SlotWriter$groupSlots$1).next_20eer_k$ = function () {
    var tmp;
    if (this.hasNext_bitz1p_k$()) {
      var tmp_0 = this.this$0__1.slots_1;
      var tmp1 = this.current_1;
      this.current_1 = tmp1 + 1 | 0;
      tmp = tmp_0[dataIndexToDataAddress(this.this$0__1, tmp1)];
    } else {
      tmp = null;
    }
    return tmp;
  };
  function SlotWriter(table) {
    Companion_getInstance_6();
    this.table_1 = table;
    this.groups_1 = this.table_1.groups_1;
    this.slots_1 = this.table_1.slots_1;
    this.anchors_1 = this.table_1.anchors_1;
    this.groupGapStart_1 = this.table_1.groupsSize_1;
    this.groupGapLen_1 = (this.groups_1.length / 5 | 0) - this.table_1.groupsSize_1 | 0;
    this.currentGroupEnd_1 = this.table_1.groupsSize_1;
    this.currentSlot_1 = 0;
    this.currentSlotEnd_1 = 0;
    this.slotsGapStart_1 = this.table_1.slotsSize_1;
    this.slotsGapLen_1 = this.slots_1.length - this.table_1.slotsSize_1 | 0;
    this.slotsGapOwner_1 = this.table_1.groupsSize_1;
    this.insertCount_1 = 0;
    this.nodeCount_1 = 0;
    this.startStack_1 = new IntStack();
    this.endStack_1 = new IntStack();
    this.nodeCountStack_1 = new IntStack();
    this.currentGroup_1 = 0;
    this.parent_1 = -1;
    this.closed_1 = false;
    this.pendingRecalculateMarks_1 = null;
  }
  protoOf(SlotWriter).get_table_iyxllx_k$ = function () {
    return this.table_1;
  };
  protoOf(SlotWriter).get_currentGroup_sgvyz3_k$ = function () {
    return this.currentGroup_1;
  };
  protoOf(SlotWriter).get_isGroupEnd_ox3235_k$ = function () {
    return this.currentGroup_1 === this.currentGroupEnd_1;
  };
  protoOf(SlotWriter).get_isNode_ew2wyd_k$ = function () {
    return this.currentGroup_1 < this.currentGroupEnd_1 ? isNode(this.groups_1, groupIndexToAddress(this, this.currentGroup_1)) : false;
  };
  protoOf(SlotWriter).isNode_keuxl8_k$ = function (index) {
    return isNode(this.groups_1, groupIndexToAddress(this, index));
  };
  protoOf(SlotWriter).nodeCount_48mp3f_k$ = function (index) {
    return nodeCount(this.groups_1, groupIndexToAddress(this, index));
  };
  protoOf(SlotWriter).groupKey_pe96ns_k$ = function (index) {
    return key(this.groups_1, groupIndexToAddress(this, index));
  };
  protoOf(SlotWriter).groupObjectKey_7ge4pj_k$ = function (index) {
    var address = groupIndexToAddress(this, index);
    return hasObjectKey(this.groups_1, address) ? this.slots_1[objectKeyIndex(this.groups_1, address)] : null;
  };
  protoOf(SlotWriter).groupSize_ehpyh4_k$ = function (index) {
    return groupSize(this.groups_1, groupIndexToAddress(this, index));
  };
  protoOf(SlotWriter).groupAux_dyi8kz_k$ = function (index) {
    var address = groupIndexToAddress(this, index);
    return hasAux(this.groups_1, address) ? this.slots_1[auxIndex(this.groups_1, this, address)] : Companion_getInstance_1().get_Empty_i9b85g_k$();
  };
  protoOf(SlotWriter).indexInParent_c47dp3_k$ = function (index) {
    return (index > this.parent_1 ? index < this.currentGroupEnd_1 : false) ? true : this.parent_1 === 0 ? index === 0 : false;
  };
  protoOf(SlotWriter).indexInCurrentGroup_ya2kmz_k$ = function (index) {
    return this.indexInGroup_dlgg14_k$(index, this.currentGroup_1);
  };
  protoOf(SlotWriter).indexInGroup_dlgg14_k$ = function (index, group) {
    var tmp;
    if (group === this.parent_1) {
      tmp = this.currentGroupEnd_1;
    } else if (group > this.startStack_1.peekOr_nt91iy_k$(0)) {
      tmp = group + this.groupSize_ehpyh4_k$(group) | 0;
    } else {
      var openIndex = this.startStack_1.indexOf_h7efip_k$(group);
      tmp = openIndex < 0 ? group + this.groupSize_ehpyh4_k$(group) | 0 : (_get_capacity__a9k9f3(this) - this.groupGapLen_1 | 0) - this.endStack_1.peek_6g603_k$(openIndex) | 0;
    }
    var end = tmp;
    return index > group ? index < end : false;
  };
  protoOf(SlotWriter).node_dyvdau_k$ = function (index) {
    var address = groupIndexToAddress(this, index);
    return isNode(this.groups_1, address) ? this.slots_1[dataIndexToDataAddress(this, nodeIndex(this.groups_1, this, address))] : null;
  };
  protoOf(SlotWriter).node_e1wn0x_k$ = function (anchor) {
    return this.node_dyvdau_k$(anchor.toIndexFor_fnrv23_k$(this));
  };
  protoOf(SlotWriter).get_parent_hy4reb_k$ = function () {
    return this.parent_1;
  };
  protoOf(SlotWriter).parent_omvrla_k$ = function (index) {
    return parent(this.groups_1, this, index);
  };
  protoOf(SlotWriter).parent_3vv6l3_k$ = function (anchor) {
    return anchor.get_valid_j01e4z_k$() ? parent(this.groups_1, this, this.anchorIndex_79wady_k$(anchor)) : -1;
  };
  protoOf(SlotWriter).get_closed_byjrzp_k$ = function () {
    return this.closed_1;
  };
  protoOf(SlotWriter).close_yn9xrc_k$ = function () {
    this.closed_1 = true;
    if (this.startStack_1.isEmpty_y1axqb_k$()) {
      moveGroupGapTo(this, this.get_size_woubt6_k$());
      moveSlotGapTo(this, this.slots_1.length - this.slotsGapLen_1 | 0, this.groupGapStart_1);
      clearSlotGap(this);
      recalculateMarks(this);
    }
    this.table_1.close_2mbfqs_k$(this, this.groups_1, this.groupGapStart_1, this.slots_1, this.slotsGapStart_1, this.anchors_1);
  };
  protoOf(SlotWriter).reset_5u6xz3_k$ = function () {
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!(this.insertCount_1 === 0)) {
      // Inline function 'androidx.compose.runtime.SlotWriter.reset.<anonymous>' call
      var message = 'Cannot reset when inserting';
      composeRuntimeError(toString(message));
    }
    recalculateMarks(this);
    this.currentGroup_1 = 0;
    this.currentGroupEnd_1 = _get_capacity__a9k9f3(this) - this.groupGapLen_1 | 0;
    this.currentSlot_1 = 0;
    this.currentSlotEnd_1 = 0;
    this.nodeCount_1 = 0;
  };
  protoOf(SlotWriter).update_dpycsq_k$ = function (value) {
    var result = this.skip_23pfj_k$();
    this.set_hmgbql_k$(value);
    return result;
  };
  protoOf(SlotWriter).updateAux_k8b4ks_k$ = function (value) {
    var address = groupIndexToAddress(this, this.currentGroup_1);
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!hasAux(this.groups_1, address)) {
      // Inline function 'androidx.compose.runtime.SlotWriter.updateAux.<anonymous>' call
      var message = 'Updating the data of a group that was not created with a data slot';
      composeRuntimeError(toString(message));
    }
    this.slots_1[dataIndexToDataAddress(this, auxIndex(this.groups_1, this, address))] = value;
  };
  protoOf(SlotWriter).insertAux_urnksc_k$ = function (value) {
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!(this.insertCount_1 >= 0)) {
      // Inline function 'androidx.compose.runtime.SlotWriter.insertAux.<anonymous>' call
      var message = 'Cannot insert auxiliary data when not inserting';
      composeRuntimeError(toString(message));
    }
    var parent = this.parent_1;
    var parentGroupAddress = groupIndexToAddress(this, parent);
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!!hasAux(this.groups_1, parentGroupAddress)) {
      // Inline function 'androidx.compose.runtime.SlotWriter.insertAux.<anonymous>' call
      var message_0 = 'Group already has auxiliary data';
      composeRuntimeError(toString(message_0));
    }
    insertSlots(this, 1, parent);
    var auxIndex_0 = auxIndex(this.groups_1, this, parentGroupAddress);
    var auxAddress = dataIndexToDataAddress(this, auxIndex_0);
    if (this.currentSlot_1 > auxIndex_0) {
      var slotsToMove = this.currentSlot_1 - auxIndex_0 | 0;
      // Inline function 'kotlin.check' call
      // Inline function 'kotlin.contracts.contract' call
      if (!(slotsToMove < 3)) {
        // Inline function 'androidx.compose.runtime.SlotWriter.insertAux.<anonymous>' call
        var message_1 = 'Moving more than two slot not supported';
        throw IllegalStateException_init_$Create$(toString(message_1));
      }
      if (slotsToMove > 1) {
        this.slots_1[auxAddress + 2 | 0] = this.slots_1[auxAddress + 1 | 0];
      }
      this.slots_1[auxAddress + 1 | 0] = this.slots_1[auxAddress];
    }
    addAux(this.groups_1, parentGroupAddress);
    this.slots_1[auxAddress] = value;
    this.currentSlot_1 = this.currentSlot_1 + 1 | 0;
  };
  protoOf(SlotWriter).updateNode_la5mvw_k$ = function (value) {
    return updateNodeOfGroup(this, this.currentGroup_1, value);
  };
  protoOf(SlotWriter).updateNode_nqgdaf_k$ = function (anchor, value) {
    return updateNodeOfGroup(this, anchor.toIndexFor_fnrv23_k$(this), value);
  };
  protoOf(SlotWriter).updateParentNode_mw7iue_k$ = function (value) {
    return updateNodeOfGroup(this, this.parent_1, value);
  };
  protoOf(SlotWriter).set_hmgbql_k$ = function (value) {
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!(this.currentSlot_1 <= this.currentSlotEnd_1)) {
      // Inline function 'androidx.compose.runtime.SlotWriter.set.<anonymous>' call
      var message = 'Writing to an invalid slot';
      composeRuntimeError(toString(message));
    }
    this.slots_1[dataIndexToDataAddress(this, this.currentSlot_1 - 1 | 0)] = value;
  };
  protoOf(SlotWriter).set_sg4drr_k$ = function (index, value) {
    var address = groupIndexToAddress(this, this.currentGroup_1);
    var slotsStart = slotIndex(this.groups_1, this, address);
    var slotsEnd = dataIndex_0(this.groups_1, this, groupIndexToAddress(this, this.currentGroup_1 + 1 | 0));
    var slotsIndex = slotsStart + index | 0;
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!(slotsIndex >= slotsStart ? slotsIndex < slotsEnd : false)) {
      // Inline function 'androidx.compose.runtime.SlotWriter.set.<anonymous>' call
      var message = 'Write to an invalid slot index ' + index + ' for group ' + this.currentGroup_1;
      composeRuntimeError(toString(message));
    }
    var slotAddress = dataIndexToDataAddress(this, slotsIndex);
    var result = this.slots_1[slotAddress];
    this.slots_1[slotAddress] = value;
    return result;
  };
  protoOf(SlotWriter).skip_23pfj_k$ = function () {
    if (this.insertCount_1 > 0) {
      insertSlots(this, 1, this.parent_1);
    }
    var tmp = this.slots_1;
    var tmp1 = this.currentSlot_1;
    this.currentSlot_1 = tmp1 + 1 | 0;
    return tmp[dataIndexToDataAddress(this, tmp1)];
  };
  protoOf(SlotWriter).slot_es8k2r_k$ = function (anchor, index) {
    return this.slot_xuatfm_k$(this.anchorIndex_79wady_k$(anchor), index);
  };
  protoOf(SlotWriter).slot_xuatfm_k$ = function (groupIndex, index) {
    var address = groupIndexToAddress(this, groupIndex);
    var slotsStart = slotIndex(this.groups_1, this, address);
    var slotsEnd = dataIndex_0(this.groups_1, this, groupIndexToAddress(this, groupIndex + 1 | 0));
    var slotsIndex = slotsStart + index | 0;
    if (!(slotsStart <= slotsIndex ? slotsIndex < slotsEnd : false)) {
      return Companion_getInstance_1().get_Empty_i9b85g_k$();
    }
    var slotAddress = dataIndexToDataAddress(this, slotsIndex);
    return this.slots_1[slotAddress];
  };
  protoOf(SlotWriter).advanceBy_3na3gx_k$ = function (amount) {
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!(amount >= 0)) {
      // Inline function 'androidx.compose.runtime.SlotWriter.advanceBy.<anonymous>' call
      var message = 'Cannot seek backwards';
      composeRuntimeError(toString(message));
    }
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(this.insertCount_1 <= 0)) {
      // Inline function 'androidx.compose.runtime.SlotWriter.advanceBy.<anonymous>' call
      var message_0 = 'Cannot call seek() while inserting';
      throw IllegalStateException_init_$Create$(toString(message_0));
    }
    if (amount === 0)
      return Unit_getInstance();
    var index = this.currentGroup_1 + amount | 0;
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!(index >= this.parent_1 ? index <= this.currentGroupEnd_1 : false)) {
      // Inline function 'androidx.compose.runtime.SlotWriter.advanceBy.<anonymous>' call
      var message_1 = 'Cannot seek outside the current group (' + this.parent_1 + '-' + this.currentGroupEnd_1 + ')';
      composeRuntimeError(toString(message_1));
    }
    this.currentGroup_1 = index;
    var newSlot = dataIndex_0(this.groups_1, this, groupIndexToAddress(this, index));
    this.currentSlot_1 = newSlot;
    this.currentSlotEnd_1 = newSlot;
  };
  protoOf(SlotWriter).seek_iq96d1_k$ = function (anchor) {
    return this.advanceBy_3na3gx_k$(anchor.toIndexFor_fnrv23_k$(this) - this.currentGroup_1 | 0);
  };
  protoOf(SlotWriter).skipToGroupEnd_lh3zi2_k$ = function () {
    var newGroup = this.currentGroupEnd_1;
    this.currentGroup_1 = newGroup;
    this.currentSlot_1 = dataIndex_0(this.groups_1, this, groupIndexToAddress(this, newGroup));
  };
  protoOf(SlotWriter).beginInsert_i2ehou_k$ = function () {
    var tmp1 = this.insertCount_1;
    this.insertCount_1 = tmp1 + 1 | 0;
    if (tmp1 === 0) {
      saveCurrentGroupEnd(this);
    }
  };
  protoOf(SlotWriter).endInsert_4o34x0_k$ = function () {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(this.insertCount_1 > 0)) {
      // Inline function 'androidx.compose.runtime.SlotWriter.endInsert.<anonymous>' call
      var message = 'Unbalanced begin/end insert';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    this.insertCount_1 = this.insertCount_1 - 1 | 0;
    if (this.insertCount_1 === 0) {
      // Inline function 'androidx.compose.runtime.runtimeCheck' call
      if (!(this.nodeCountStack_1.get_size_woubt6_k$() === this.startStack_1.get_size_woubt6_k$())) {
        // Inline function 'androidx.compose.runtime.SlotWriter.endInsert.<anonymous>' call
        var message_0 = 'startGroup/endGroup mismatch while inserting';
        composeRuntimeError(toString(message_0));
      }
      restoreCurrentGroupEnd(this);
    }
  };
  protoOf(SlotWriter).startGroup_hppv2r_k$ = function () {
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!(this.insertCount_1 === 0)) {
      // Inline function 'androidx.compose.runtime.SlotWriter.startGroup.<anonymous>' call
      var message = 'Key must be supplied when inserting';
      composeRuntimeError(toString(message));
    }
    startGroup_1(this, 0, Companion_getInstance_1().get_Empty_i9b85g_k$(), false, Companion_getInstance_1().get_Empty_i9b85g_k$());
  };
  protoOf(SlotWriter).startGroup_6cvnth_k$ = function (key) {
    return startGroup_1(this, key, Companion_getInstance_1().get_Empty_i9b85g_k$(), false, Companion_getInstance_1().get_Empty_i9b85g_k$());
  };
  protoOf(SlotWriter).startGroup_ezbmj8_k$ = function (key, dataKey) {
    return startGroup_1(this, key, dataKey, false, Companion_getInstance_1().get_Empty_i9b85g_k$());
  };
  protoOf(SlotWriter).startNode_ggkkg5_k$ = function (key, objectKey) {
    return startGroup_1(this, key, objectKey, true, Companion_getInstance_1().get_Empty_i9b85g_k$());
  };
  protoOf(SlotWriter).startNode_taegp2_k$ = function (key, objectKey, node) {
    return startGroup_1(this, key, objectKey, true, node);
  };
  protoOf(SlotWriter).startData_eo706a_k$ = function (key, objectKey, aux) {
    return startGroup_1(this, key, objectKey, false, aux);
  };
  protoOf(SlotWriter).startData_xus3bx_k$ = function (key, aux) {
    return startGroup_1(this, key, Companion_getInstance_1().get_Empty_i9b85g_k$(), false, aux);
  };
  protoOf(SlotWriter).endGroup_s64cis_k$ = function () {
    var inserting = this.insertCount_1 > 0;
    var currentGroup = this.currentGroup_1;
    var currentGroupEnd = this.currentGroupEnd_1;
    var groupIndex = this.parent_1;
    var groupAddress = groupIndexToAddress(this, groupIndex);
    var newNodes = this.nodeCount_1;
    var newGroupSize = currentGroup - groupIndex | 0;
    var isNode_0 = isNode(this.groups_1, groupAddress);
    if (inserting) {
      updateGroupSize(this.groups_1, groupAddress, newGroupSize);
      updateNodeCount_0(this.groups_1, groupAddress, newNodes);
      this.nodeCount_1 = this.nodeCountStack_1.pop_2dsh_k$() + (isNode_0 ? 1 : newNodes) | 0;
      this.parent_1 = parent(this.groups_1, this, groupIndex);
    } else {
      // Inline function 'androidx.compose.runtime.runtimeCheck' call
      if (!(currentGroup === currentGroupEnd)) {
        // Inline function 'androidx.compose.runtime.SlotWriter.endGroup.<anonymous>' call
        var message = 'Expected to be at the end of a group';
        composeRuntimeError(toString(message));
      }
      var oldGroupSize = groupSize(this.groups_1, groupAddress);
      var oldNodes = nodeCount(this.groups_1, groupAddress);
      updateGroupSize(this.groups_1, groupAddress, newGroupSize);
      updateNodeCount_0(this.groups_1, groupAddress, newNodes);
      var newParent = this.startStack_1.pop_2dsh_k$();
      restoreCurrentGroupEnd(this);
      this.parent_1 = newParent;
      var groupParent = parent(this.groups_1, this, groupIndex);
      this.nodeCount_1 = this.nodeCountStack_1.pop_2dsh_k$();
      if (groupParent === newParent) {
        this.nodeCount_1 = this.nodeCount_1 + (isNode_0 ? 0 : newNodes - oldNodes | 0) | 0;
      } else {
        var groupSizeDelta = newGroupSize - oldGroupSize | 0;
        var nodesDelta = isNode_0 ? 0 : newNodes - oldNodes | 0;
        if (!(groupSizeDelta === 0) ? true : !(nodesDelta === 0)) {
          var current = groupParent;
          while ((!(current === 0) ? !(current === newParent) : false) ? !(nodesDelta === 0) ? true : !(groupSizeDelta === 0) : false) {
            var currentAddress = groupIndexToAddress(this, current);
            if (!(groupSizeDelta === 0)) {
              var newSize = groupSize(this.groups_1, currentAddress) + groupSizeDelta | 0;
              updateGroupSize(this.groups_1, currentAddress, newSize);
            }
            if (!(nodesDelta === 0)) {
              updateNodeCount_0(this.groups_1, currentAddress, nodeCount(this.groups_1, currentAddress) + nodesDelta | 0);
            }
            if (isNode(this.groups_1, currentAddress))
              nodesDelta = 0;
            current = parent(this.groups_1, this, current);
          }
        }
        this.nodeCount_1 = this.nodeCount_1 + nodesDelta | 0;
      }
    }
    return newNodes;
  };
  protoOf(SlotWriter).bashGroup_rqa85h_k$ = function () {
    this.startGroup_hppv2r_k$();
    while (!this.get_isGroupEnd_ox3235_k$()) {
      this.insertParentGroup_nrq26k_k$(-3);
      this.skipGroup_y9vakg_k$();
    }
    this.endGroup_s64cis_k$();
  };
  protoOf(SlotWriter).ensureStarted_2xsx51_k$ = function (index) {
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!(this.insertCount_1 <= 0)) {
      // Inline function 'androidx.compose.runtime.SlotWriter.ensureStarted.<anonymous>' call
      var message = 'Cannot call ensureStarted() while inserting';
      composeRuntimeError(toString(message));
    }
    var parent = this.parent_1;
    if (!(parent === index)) {
      // Inline function 'androidx.compose.runtime.runtimeCheck' call
      if (!(index >= parent ? index < this.currentGroupEnd_1 : false)) {
        // Inline function 'androidx.compose.runtime.SlotWriter.ensureStarted.<anonymous>' call
        var message_0 = 'Started group at ' + index + ' must be a subgroup of the group at ' + parent;
        composeRuntimeError(toString(message_0));
      }
      var oldCurrent = this.currentGroup_1;
      var oldCurrentSlot = this.currentSlot_1;
      var oldCurrentSlotEnd = this.currentSlotEnd_1;
      this.currentGroup_1 = index;
      this.startGroup_hppv2r_k$();
      this.currentGroup_1 = oldCurrent;
      this.currentSlot_1 = oldCurrentSlot;
      this.currentSlotEnd_1 = oldCurrentSlotEnd;
    }
  };
  protoOf(SlotWriter).ensureStarted_4qdm0w_k$ = function (anchor) {
    return this.ensureStarted_2xsx51_k$(anchor.toIndexFor_fnrv23_k$(this));
  };
  protoOf(SlotWriter).skipGroup_y9vakg_k$ = function () {
    var groupAddress = groupIndexToAddress(this, this.currentGroup_1);
    var newGroup = this.currentGroup_1 + groupSize(this.groups_1, groupAddress) | 0;
    this.currentGroup_1 = newGroup;
    this.currentSlot_1 = dataIndex_0(this.groups_1, this, groupIndexToAddress(this, newGroup));
    return isNode(this.groups_1, groupAddress) ? 1 : nodeCount(this.groups_1, groupAddress);
  };
  protoOf(SlotWriter).removeGroup_5800px_k$ = function () {
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!(this.insertCount_1 === 0)) {
      // Inline function 'androidx.compose.runtime.SlotWriter.removeGroup.<anonymous>' call
      var message = 'Cannot remove group while inserting';
      composeRuntimeError(toString(message));
    }
    var oldGroup = this.currentGroup_1;
    var oldSlot = this.currentSlot_1;
    var count = this.skipGroup_y9vakg_k$();
    var tmp0_safe_receiver = this.pendingRecalculateMarks_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      while (tmp0_safe_receiver.isNotEmpty_cjxbwk_k$() ? tmp0_safe_receiver.peek_21nx7_k$() >= oldGroup : false) {
        tmp0_safe_receiver.takeMax_pjqylf_k$();
      }
    }
    var anchorsRemoved = removeGroups(this, oldGroup, this.currentGroup_1 - oldGroup | 0);
    removeSlots(this, oldSlot, this.currentSlot_1 - oldSlot | 0, oldGroup - 1 | 0);
    this.currentGroup_1 = oldGroup;
    this.currentSlot_1 = oldSlot;
    this.nodeCount_1 = this.nodeCount_1 - count | 0;
    return anchorsRemoved;
  };
  protoOf(SlotWriter).groupSlots_l0trzq_k$ = function () {
    var start = dataIndex_0(this.groups_1, this, groupIndexToAddress(this, this.currentGroup_1));
    var end = dataIndex_0(this.groups_1, this, groupIndexToAddress(this, this.currentGroup_1 + this.groupSize_ehpyh4_k$(this.currentGroup_1) | 0));
    return new SlotWriter$groupSlots$1(start, end, this);
  };
  protoOf(SlotWriter).moveGroup_ikfgiu_k$ = function (offset) {
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!(this.insertCount_1 === 0)) {
      // Inline function 'androidx.compose.runtime.SlotWriter.moveGroup.<anonymous>' call
      var message = 'Cannot move a group while inserting';
      composeRuntimeError(toString(message));
    }
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!(offset >= 0)) {
      // Inline function 'androidx.compose.runtime.SlotWriter.moveGroup.<anonymous>' call
      var message_0 = 'Parameter offset is out of bounds';
      composeRuntimeError(toString(message_0));
    }
    if (offset === 0)
      return Unit_getInstance();
    var current = this.currentGroup_1;
    var parent = this.parent_1;
    var parentEnd = this.currentGroupEnd_1;
    var count = offset;
    var groupToMove = current;
    while (count > 0) {
      groupToMove = groupToMove + groupSize(this.groups_1, groupIndexToAddress(this, groupToMove)) | 0;
      // Inline function 'androidx.compose.runtime.runtimeCheck' call
      if (!(groupToMove <= parentEnd)) {
        // Inline function 'androidx.compose.runtime.SlotWriter.moveGroup.<anonymous>' call
        var message_1 = 'Parameter offset is out of bounds';
        composeRuntimeError(toString(message_1));
      }
      count = count - 1 | 0;
    }
    var moveLen = groupSize(this.groups_1, groupIndexToAddress(this, groupToMove));
    var currentSlot = this.currentSlot_1;
    var dataStart = dataIndex_0(this.groups_1, this, groupIndexToAddress(this, groupToMove));
    var dataEnd = dataIndex_0(this.groups_1, this, groupIndexToAddress(this, groupToMove + moveLen | 0));
    var moveDataLen = dataEnd - dataStart | 0;
    // Inline function 'kotlin.math.max' call
    var a = this.currentGroup_1 - 1 | 0;
    var tmp$ret$3 = Math.max(a, 0);
    insertSlots(this, moveDataLen, tmp$ret$3);
    insertGroups(this, moveLen);
    var groups = this.groups_1;
    var moveLocationAddress = groupIndexToAddress(this, groupToMove + moveLen | 0);
    var moveLocationOffset = imul(moveLocationAddress, 5);
    var currentAddress = groupIndexToAddress(this, current);
    // Inline function 'kotlin.collections.copyInto' call
    var destinationOffset = imul(currentAddress, 5);
    var endIndex = moveLocationOffset + imul(moveLen, 5) | 0;
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp = groups;
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    arrayCopy(tmp, groups, destinationOffset, moveLocationOffset, endIndex);
    if (moveDataLen > 0) {
      var slots = this.slots_1;
      // Inline function 'kotlin.collections.copyInto' call
      var startIndex = dataIndexToDataAddress(this, dataStart + moveDataLen | 0);
      var endIndex_0 = dataIndexToDataAddress(this, dataEnd + moveDataLen | 0);
      arrayCopy(slots, slots, currentSlot, startIndex, endIndex_0);
    }
    var dataMoveDistance = (dataStart + moveDataLen | 0) - currentSlot | 0;
    var slotsGapStart = this.slotsGapStart_1;
    var slotsGapLen = this.slotsGapLen_1;
    var slotsCapacity = this.slots_1.length;
    var slotsGapOwner = this.slotsGapOwner_1;
    var inductionVariable = current;
    var last = current + moveLen | 0;
    if (inductionVariable < last)
      do {
        var group = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var groupAddress = groupIndexToAddress(this, group);
        var oldIndex = dataIndex_0(groups, this, groupAddress);
        var newIndex = oldIndex - dataMoveDistance | 0;
        var newAnchor = dataIndexToDataAnchor(this, newIndex, slotsGapOwner < groupAddress ? 0 : slotsGapStart, slotsGapLen, slotsCapacity);
        updateDataIndex(groups, this, groupAddress, newAnchor);
      }
       while (inductionVariable < last);
    moveAnchors(this, groupToMove + moveLen | 0, current, moveLen);
    var anchorsRemoved = removeGroups(this, groupToMove + moveLen | 0, moveLen);
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!!anchorsRemoved) {
      // Inline function 'androidx.compose.runtime.SlotWriter.moveGroup.<anonymous>' call
      var message_2 = 'Unexpectedly removed anchors';
      composeRuntimeError(toString(message_2));
    }
    fixParentAnchorsFor(this, parent, this.currentGroupEnd_1, current);
    if (moveDataLen > 0) {
      removeSlots(this, dataStart + moveDataLen | 0, moveDataLen, (groupToMove + moveLen | 0) - 1 | 0);
    }
  };
  protoOf(SlotWriter).moveTo_ylt62i_k$ = function (anchor, offset, writer) {
    runtimeCheck_0(writer.insertCount_1 > 0);
    runtimeCheck_0(this.insertCount_1 === 0);
    runtimeCheck_0(anchor.get_valid_j01e4z_k$());
    var location = this.anchorIndex_79wady_k$(anchor) + offset | 0;
    var currentGroup = this.currentGroup_1;
    runtimeCheck_0(currentGroup <= location ? location < this.currentGroupEnd_1 : false);
    var parent = this.parent_omvrla_k$(location);
    var size = this.groupSize_ehpyh4_k$(location);
    var nodes = this.isNode_keuxl8_k$(location) ? 1 : this.nodeCount_48mp3f_k$(location);
    var result = moveGroup$default(Companion_getInstance_6(), this, location, writer, false, false);
    updateContainsMark(this, parent);
    var current = parent;
    var updatingNodes = nodes > 0;
    while (current >= currentGroup) {
      var currentAddress = groupIndexToAddress(this, current);
      updateGroupSize(this.groups_1, currentAddress, groupSize(this.groups_1, currentAddress) - size | 0);
      if (updatingNodes) {
        if (isNode(this.groups_1, currentAddress))
          updatingNodes = false;
        else {
          updateNodeCount_0(this.groups_1, currentAddress, nodeCount(this.groups_1, currentAddress) - nodes | 0);
        }
      }
      current = this.parent_omvrla_k$(current);
    }
    if (updatingNodes) {
      runtimeCheck_0(this.nodeCount_1 >= nodes);
      this.nodeCount_1 = this.nodeCount_1 - nodes | 0;
    }
    return result;
  };
  protoOf(SlotWriter).moveFrom_n55mw2_k$ = function (table, index, removeSourceGroup) {
    runtimeCheck_0(this.insertCount_1 > 0);
    if (((index === 0 ? this.currentGroup_1 === 0 : false) ? this.table_1.groupsSize_1 === 0 : false) ? groupSize(table.groups_1, index) === table.groupsSize_1 : false) {
      var myGroups = this.groups_1;
      var mySlots = this.slots_1;
      var myAnchors = this.anchors_1;
      var groups = table.groups_1;
      var groupsSize = table.groupsSize_1;
      var slots = table.slots_1;
      var slotsSize = table.slotsSize_1;
      this.groups_1 = groups;
      this.slots_1 = slots;
      this.anchors_1 = table.anchors_1;
      this.groupGapStart_1 = groupsSize;
      this.groupGapLen_1 = (groups.length / 5 | 0) - groupsSize | 0;
      this.slotsGapStart_1 = slotsSize;
      this.slotsGapLen_1 = slots.length - slotsSize | 0;
      this.slotsGapOwner_1 = groupsSize;
      table.setTo_4wx2sy_k$(myGroups, 0, mySlots, 0, myAnchors);
      return this.anchors_1;
    }
    // Inline function 'androidx.compose.runtime.SlotTable.write' call
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.SlotTable.write.<anonymous>' call
    var writer = table.openWriter_7mgvvh_k$();
    var tmp;
    try {
      // Inline function 'androidx.compose.runtime.SlotWriter.moveFrom.<anonymous>' call
      tmp = moveGroup(Companion_getInstance_6(), writer, index, this, true, true, removeSourceGroup);
    }finally {
      writer.close_yn9xrc_k$();
    }
    return tmp;
  };
  protoOf(SlotWriter).moveFrom$default_bsomz6_k$ = function (table, index, removeSourceGroup, $super) {
    removeSourceGroup = removeSourceGroup === VOID ? true : removeSourceGroup;
    return $super === VOID ? this.moveFrom_n55mw2_k$(table, index, removeSourceGroup) : $super.moveFrom_n55mw2_k$.call(this, table, index, removeSourceGroup);
  };
  protoOf(SlotWriter).insertParentGroup_nrq26k_k$ = function (key) {
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!(this.insertCount_1 === 0)) {
      // Inline function 'androidx.compose.runtime.SlotWriter.insertParentGroup.<anonymous>' call
      var message = 'Writer cannot be inserting';
      composeRuntimeError(toString(message));
    }
    if (this.get_isGroupEnd_ox3235_k$()) {
      this.beginInsert_i2ehou_k$();
      this.startGroup_6cvnth_k$(key);
      this.endGroup_s64cis_k$();
      this.endInsert_4o34x0_k$();
    } else {
      var currentGroup = this.currentGroup_1;
      var parent_0 = parent(this.groups_1, this, currentGroup);
      var currentGroupEnd = parent_0 + this.groupSize_ehpyh4_k$(parent_0) | 0;
      var remainingSize = currentGroupEnd - currentGroup | 0;
      var nodeCount_0 = 0;
      var currentNewChild = currentGroup;
      while (currentNewChild < currentGroupEnd) {
        var newChildAddress = groupIndexToAddress(this, currentNewChild);
        nodeCount_0 = nodeCount_0 + nodeCount(this.groups_1, newChildAddress) | 0;
        currentNewChild = currentNewChild + groupSize(this.groups_1, newChildAddress) | 0;
      }
      var currentSlot = dataAnchor(this.groups_1, groupIndexToAddress(this, currentGroup));
      this.beginInsert_i2ehou_k$();
      insertGroups(this, 1);
      this.endInsert_4o34x0_k$();
      var currentAddress = groupIndexToAddress(this, currentGroup);
      initGroup(this.groups_1, currentAddress, key, false, false, false, parent_0, currentSlot);
      updateGroupSize(this.groups_1, currentAddress, remainingSize + 1 | 0);
      updateNodeCount_0(this.groups_1, currentAddress, nodeCount_0);
      var parentAddress = groupIndexToAddress(this, parent_0);
      this.addToGroupSizeAlongSpine_9wv1p6_k$(parentAddress, 1);
      fixParentAnchorsFor(this, parent_0, currentGroupEnd, currentGroup);
      this.currentGroup_1 = currentGroupEnd;
    }
  };
  protoOf(SlotWriter).addToGroupSizeAlongSpine_9wv1p6_k$ = function (address, amount) {
    var current = address;
    while (current > 0) {
      updateGroupSize(this.groups_1, current, groupSize(this.groups_1, current) + amount | 0);
      var parentAnchor_0 = parentAnchor(this.groups_1, current);
      var parentGroup = parentAnchorToIndex(this, parentAnchor_0);
      var parentAddress = groupIndexToAddress(this, parentGroup);
      current = parentAddress;
    }
  };
  protoOf(SlotWriter).moveIntoGroupFrom_437syc_k$ = function (offset, table, index) {
    runtimeCheck_0(this.insertCount_1 <= 0 ? this.groupSize_ehpyh4_k$(this.currentGroup_1 + offset | 0) === 1 : false);
    var previousCurrentGroup = this.currentGroup_1;
    var previousCurrentSlot = this.currentSlot_1;
    var previousCurrentSlotEnd = this.currentSlotEnd_1;
    this.advanceBy_3na3gx_k$(offset);
    this.startGroup_hppv2r_k$();
    this.beginInsert_i2ehou_k$();
    // Inline function 'androidx.compose.runtime.SlotTable.write' call
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.SlotTable.write.<anonymous>' call
    var writer = table.openWriter_7mgvvh_k$();
    var tmp;
    try {
      // Inline function 'androidx.compose.runtime.SlotWriter.moveIntoGroupFrom.<anonymous>' call
      tmp = moveGroup$default(Companion_getInstance_6(), writer, index, this, false, true);
    }finally {
      writer.close_yn9xrc_k$();
    }
    var anchors = tmp;
    this.endInsert_4o34x0_k$();
    this.endGroup_s64cis_k$();
    this.currentGroup_1 = previousCurrentGroup;
    this.currentSlot_1 = previousCurrentSlot;
    this.currentSlotEnd_1 = previousCurrentSlotEnd;
    return anchors;
  };
  protoOf(SlotWriter).anchor_wwz2f1_k$ = function (index) {
    // Inline function 'androidx.compose.runtime.getOrAdd' call
    var this_0 = this.anchors_1;
    var effectiveSize = this.get_size_woubt6_k$();
    var location = search$accessor$mbvawc(this_0, index, effectiveSize);
    var tmp;
    if (location < 0) {
      // Inline function 'androidx.compose.runtime.SlotWriter.anchor.<anonymous>' call
      var anchor = new Anchor(index <= this.groupGapStart_1 ? index : -(this.get_size_woubt6_k$() - index | 0) | 0);
      this_0.add_dl6gt3_k$(-(location + 1 | 0) | 0, anchor);
      tmp = anchor;
    } else {
      tmp = this_0.get_c1px32_k$(location);
    }
    return tmp;
  };
  protoOf(SlotWriter).anchor$default_d03ull_k$ = function (index, $super) {
    index = index === VOID ? this.currentGroup_1 : index;
    return $super === VOID ? this.anchor_wwz2f1_k$(index) : $super.anchor_wwz2f1_k$.call(this, index);
  };
  protoOf(SlotWriter).markGroup_1ra2y2_k$ = function (group) {
    var groupAddress = groupIndexToAddress(this, group);
    if (!hasMark(this.groups_1, groupAddress)) {
      updateMark(this.groups_1, groupAddress, true);
      if (!containsMark(this.groups_1, groupAddress)) {
        updateContainsMark(this, this.parent_omvrla_k$(group));
      }
    }
  };
  protoOf(SlotWriter).markGroup$default_b272ne_k$ = function (group, $super) {
    group = group === VOID ? this.parent_1 : group;
    var tmp;
    if ($super === VOID) {
      this.markGroup_1ra2y2_k$(group);
      tmp = Unit_getInstance();
    } else {
      tmp = $super.markGroup_1ra2y2_k$.call(this, group);
    }
    return tmp;
  };
  protoOf(SlotWriter).anchorIndex_79wady_k$ = function (anchor) {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.SlotWriter.anchorIndex.<anonymous>' call
    var it = anchor.location_1;
    return it < 0 ? this.get_size_woubt6_k$() + it | 0 : it;
  };
  protoOf(SlotWriter).toString = function () {
    return 'SlotWriter(current = ' + this.currentGroup_1 + ' end=' + this.currentGroupEnd_1 + ' size = ' + this.get_size_woubt6_k$() + ' ' + ('gap=' + this.groupGapStart_1 + '-' + (this.groupGapStart_1 + this.groupGapLen_1 | 0) + ')');
  };
  protoOf(SlotWriter).groupsAsString_ncrl0p_k$ = function () {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder_init_$Create$();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.SlotWriter.groupsAsString.<anonymous>' call
    var inductionVariable = 0;
    var last = this.get_size_woubt6_k$();
    if (inductionVariable < last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        groupAsString(this_0, this, index);
        this_0.append_am5a4z_k$(_Char___init__impl__6a9atx(10));
      }
       while (inductionVariable < last);
    return this_0.toString();
  };
  protoOf(SlotWriter).verifyDataAnchors_50e4az_k$ = function () {
    var previousDataIndex = 0;
    var owner = this.slotsGapOwner_1;
    var ownerFound = false;
    var slotsSize = this.slots_1.length - this.slotsGapLen_1 | 0;
    var inductionVariable = 0;
    var last = this.get_size_woubt6_k$();
    if (inductionVariable < last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var address = groupIndexToAddress(this, index);
        var dataAnchor_0 = dataAnchor(this.groups_1, address);
        var dataIndex = dataIndex_0(this.groups_1, this, address);
        // Inline function 'kotlin.check' call
        // Inline function 'kotlin.contracts.contract' call
        if (!(dataIndex >= previousDataIndex)) {
          // Inline function 'androidx.compose.runtime.SlotWriter.verifyDataAnchors.<anonymous>' call
          var message = 'Data index out of order at ' + index + ', previous = ' + previousDataIndex + ', current = ' + ('' + dataIndex);
          throw IllegalStateException_init_$Create$(toString(message));
        }
        // Inline function 'kotlin.check' call
        // Inline function 'kotlin.contracts.contract' call
        if (!(dataIndex <= slotsSize)) {
          // Inline function 'androidx.compose.runtime.SlotWriter.verifyDataAnchors.<anonymous>' call
          var message_0 = 'Data index, ' + dataIndex + ', out of bound at ' + index;
          throw IllegalStateException_init_$Create$(toString(message_0));
        }
        if (dataAnchor_0 < 0 ? !ownerFound : false) {
          // Inline function 'kotlin.check' call
          // Inline function 'kotlin.contracts.contract' call
          if (!(owner === index)) {
            // Inline function 'androidx.compose.runtime.SlotWriter.verifyDataAnchors.<anonymous>' call
            var message_1 = 'Expected the slot gap owner to be ' + owner + ' found gap at ' + index;
            throw IllegalStateException_init_$Create$(toString(message_1));
          }
          ownerFound = true;
        }
        previousDataIndex = dataIndex;
      }
       while (inductionVariable < last);
  };
  protoOf(SlotWriter).verifyParentAnchors_qufud1_k$ = function () {
    var gapStart = this.groupGapStart_1;
    var gapLen = this.groupGapLen_1;
    var capacity = _get_capacity__a9k9f3(this);
    var inductionVariable = 0;
    if (inductionVariable < gapStart)
      do {
        var groupAddress = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var parentAnchor_0 = parentAnchor(this.groups_1, groupAddress);
        // Inline function 'kotlin.check' call
        // Inline function 'kotlin.contracts.contract' call
        if (!(parentAnchor_0 > -2)) {
          // Inline function 'androidx.compose.runtime.SlotWriter.verifyParentAnchors.<anonymous>' call
          var message = 'Expected a start relative anchor at ' + groupAddress;
          throw IllegalStateException_init_$Create$(toString(message));
        }
      }
       while (inductionVariable < gapStart);
    var inductionVariable_0 = gapStart + gapLen | 0;
    if (inductionVariable_0 < capacity)
      do {
        var groupAddress_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var parentAnchor_1 = parentAnchor(this.groups_1, groupAddress_0);
        var parentIndex = parentAnchorToIndex(this, parentAnchor_1);
        if (parentIndex < gapStart) {
          // Inline function 'kotlin.check' call
          // Inline function 'kotlin.contracts.contract' call
          if (!(parentAnchor_1 > -2)) {
            // Inline function 'androidx.compose.runtime.SlotWriter.verifyParentAnchors.<anonymous>' call
            var message_0 = 'Expected a start relative anchor at ' + groupAddress_0;
            throw IllegalStateException_init_$Create$(toString(message_0));
          }
        } else {
          // Inline function 'kotlin.check' call
          // Inline function 'kotlin.contracts.contract' call
          if (!(parentAnchor_1 <= -2)) {
            // Inline function 'androidx.compose.runtime.SlotWriter.verifyParentAnchors.<anonymous>' call
            var message_1 = 'Expected an end relative anchor at ' + groupAddress_0;
            throw IllegalStateException_init_$Create$(toString(message_1));
          }
        }
      }
       while (inductionVariable_0 < capacity);
  };
  protoOf(SlotWriter).get_size_woubt6_k$ = function () {
    return _get_capacity__a9k9f3(this) - this.groupGapLen_1 | 0;
  };
  function Anchor(loc) {
    this.location_1 = loc;
  }
  protoOf(Anchor).set_location_yjnme_k$ = function (_set____db54di) {
    this.location_1 = _set____db54di;
  };
  protoOf(Anchor).get_location_d3s02_k$ = function () {
    return this.location_1;
  };
  protoOf(Anchor).get_valid_j01e4z_k$ = function () {
    return !(this.location_1 === IntCompanionObject_getInstance().get_MIN_VALUE_7nmmor_k$());
  };
  protoOf(Anchor).toIndexFor_xhkkx2_k$ = function (slots) {
    return slots.anchorIndex_79wady_k$(this);
  };
  protoOf(Anchor).toIndexFor_fnrv23_k$ = function (writer) {
    return writer.anchorIndex_79wady_k$(this);
  };
  function _set_groups__tuion1_0($this, _set____db54di) {
    $this.groups_1 = _set____db54di;
  }
  function _set_groupsSize__b2ej42($this, _set____db54di) {
    $this.groupsSize_1 = _set____db54di;
  }
  function _set_slots__knzp9s_0($this, _set____db54di) {
    $this.slots_1 = _set____db54di;
  }
  function _set_slotsSize__q5mje7($this, _set____db54di) {
    $this.slotsSize_1 = _set____db54di;
  }
  function _set_readers__olbb7v($this, _set____db54di) {
    $this.readers_1 = _set____db54di;
  }
  function _get_readers__ktkge9($this) {
    return $this.readers_1;
  }
  function _set_writer__86txq4_0($this, _set____db54di) {
    $this.writer_1 = _set____db54di;
  }
  function findEffectiveRecomposeScope($this, group) {
    var current = group;
    while (current > 0) {
      var tmp0_iterator = (new DataIterator($this, current)).iterator_jk1svi_k$();
      while (tmp0_iterator.hasNext_bitz1p_k$()) {
        var data = tmp0_iterator.next_20eer_k$();
        if (data instanceof RecomposeScopeImpl) {
          return data;
        }
      }
      current = parentAnchor($this.groups_1, current);
    }
    return null;
  }
  function invalidateGroup($this, group) {
    var current = group;
    while (current >= 0) {
      var tmp0_iterator = (new DataIterator($this, current)).iterator_jk1svi_k$();
      while (tmp0_iterator.hasNext_bitz1p_k$()) {
        var data = tmp0_iterator.next_20eer_k$();
        if (data instanceof RecomposeScopeImpl) {
          data.set_requiresRecompose_rcdn27_k$(true);
          return !data.invalidateForResult_qzazm4_k$(null).equals(InvalidationResult_IGNORED_getInstance());
        }
      }
      current = parentAnchor($this.groups_1, current);
    }
    return false;
  }
  function emitGroup(_this__u8e3s4, $this, index, level) {
    // Inline function 'kotlin.repeat' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    if (inductionVariable < level)
      do {
        var index_0 = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.compose.runtime.SlotTable.emitGroup.<anonymous>' call
        _this__u8e3s4.append_am5a4z_k$(_Char___init__impl__6a9atx(32));
      }
       while (inductionVariable < level);
    _this__u8e3s4.append_22ad7x_k$('Group(');
    _this__u8e3s4.append_t8pm91_k$(index);
    _this__u8e3s4.append_22ad7x_k$(') key=');
    _this__u8e3s4.append_t8pm91_k$(key($this.groups_1, index));
    var groupSize_0 = groupSize($this.groups_1, index);
    _this__u8e3s4.append_22ad7x_k$(', nodes=');
    _this__u8e3s4.append_t8pm91_k$(nodeCount($this.groups_1, index));
    _this__u8e3s4.append_22ad7x_k$(', size=');
    _this__u8e3s4.append_t8pm91_k$(groupSize_0);
    if (hasMark($this.groups_1, index)) {
      _this__u8e3s4.append_22ad7x_k$(', mark');
    }
    if (containsMark($this.groups_1, index)) {
      _this__u8e3s4.append_22ad7x_k$(', contains mark');
    }
    var dataStart = emitGroup$dataIndex($this, index);
    var dataEnd = emitGroup$dataIndex($this, index + 1 | 0);
    if ((0 <= dataStart ? dataStart <= dataEnd : false) ? dataEnd <= $this.slotsSize_1 : false) {
      if (hasObjectKey($this.groups_1, index)) {
        _this__u8e3s4.append_22ad7x_k$(' objectKey=' + toString_0($this.slots_1[objectKeyIndex($this.groups_1, index)]));
      }
      if (isNode($this.groups_1, index)) {
        _this__u8e3s4.append_22ad7x_k$(' node=' + toString_0($this.slots_1[nodeIndex_0($this.groups_1, index)]));
      }
      if (hasAux($this.groups_1, index)) {
        _this__u8e3s4.append_22ad7x_k$(' aux=' + toString_0($this.slots_1[auxIndex_0($this.groups_1, index)]));
      }
      var slotStart = slotAnchor($this.groups_1, index);
      if (slotStart < dataEnd) {
        _this__u8e3s4.append_22ad7x_k$(', slots=[');
        _this__u8e3s4.append_t8pm91_k$(slotStart);
        _this__u8e3s4.append_22ad7x_k$(': ');
        var inductionVariable_0 = slotStart;
        if (inductionVariable_0 < dataEnd)
          do {
            var dataIndex = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            if (!(dataIndex === slotStart)) {
              _this__u8e3s4.append_22ad7x_k$(', ');
            }
            _this__u8e3s4.append_22ad7x_k$(toString_0($this.slots_1[dataIndex]));
          }
           while (inductionVariable_0 < dataEnd);
        _this__u8e3s4.append_22ad7x_k$(']');
      }
    } else {
      _this__u8e3s4.append_22ad7x_k$(', *invalid data offsets ' + dataStart + '-' + dataEnd + '*');
    }
    _this__u8e3s4.append_am5a4z_k$(_Char___init__impl__6a9atx(10));
    var current = index + 1 | 0;
    var end = index + groupSize_0 | 0;
    while (current < end) {
      current = current + emitGroup(_this__u8e3s4, $this, current, level + 1 | 0) | 0;
    }
    return groupSize_0;
  }
  function keys_0($this) {
    return keys_1($this.groups_1, imul($this.groupsSize_1, 5));
  }
  function nodes($this) {
    return nodeCounts($this.groups_1, imul($this.groupsSize_1, 5));
  }
  function parentIndexes($this) {
    return parentAnchors($this.groups_1, imul($this.groupsSize_1, 5));
  }
  function dataIndexes_0($this) {
    return dataAnchors($this.groups_1, imul($this.groupsSize_1, 5));
  }
  function groupSizes($this) {
    return groupSizes_0($this.groups_1, imul($this.groupsSize_1, 5));
  }
  function invalidateGroupsWithKey$_anonymous_$scanGroup_f7o8zz($reader, $target, anchors, allScopesFound, this$0, scopes) {
    var key = $reader.get_groupKey_nfh2hj_k$();
    if (key === $target) {
      anchors.add_utx5q5_k$($reader.anchor$default_tnmosn_k$());
      if (allScopesFound._v) {
        var nearestScope = findEffectiveRecomposeScope(this$0, $reader.currentGroup_1);
        if (!(nearestScope == null)) {
          scopes.add_utx5q5_k$(nearestScope);
        } else {
          allScopesFound._v = false;
          scopes.clear_j9egeb_k$();
        }
      }
      $reader.skipGroup_y9vakg_k$();
      return Unit_getInstance();
    }
    $reader.startGroup_hppv2r_k$();
    while (!$reader.get_isGroupEnd_ox3235_k$()) {
      invalidateGroupsWithKey$_anonymous_$scanGroup_f7o8zz($reader, $target, anchors, allScopesFound, this$0, scopes);
    }
    $reader.endGroup_rw7puc_k$();
  }
  function verifyWellFormed$validateGroup(current, this$0, parent, parentEnd) {
    var tmp0 = current._v;
    current._v = tmp0 + 1 | 0;
    var group = tmp0;
    var parentIndex = parentAnchor(this$0.groups_1, group);
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(parentIndex === parent)) {
      // Inline function 'androidx.compose.runtime.SlotTable.verifyWellFormed.validateGroup.<anonymous>' call
      var message = 'Invalid parent index detected at ' + group + ', expected parent index to be ' + parent + ' ' + ('found ' + parentIndex);
      throw IllegalStateException_init_$Create$(toString(message));
    }
    var end = group + groupSize(this$0.groups_1, group) | 0;
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(end <= this$0.groupsSize_1)) {
      // Inline function 'androidx.compose.runtime.SlotTable.verifyWellFormed.validateGroup.<anonymous>' call
      var message_0 = 'A group extends past the end of the table at ' + group;
      throw IllegalStateException_init_$Create$(toString(message_0));
    }
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(end <= parentEnd)) {
      // Inline function 'androidx.compose.runtime.SlotTable.verifyWellFormed.validateGroup.<anonymous>' call
      var message_1 = 'A group extends past its parent group at ' + group;
      throw IllegalStateException_init_$Create$(toString(message_1));
    }
    var dataStart = dataAnchor(this$0.groups_1, group);
    var dataEnd = group >= (this$0.groupsSize_1 - 1 | 0) ? this$0.slotsSize_1 : dataAnchor(this$0.groups_1, group + 1 | 0);
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(dataEnd <= this$0.slots_1.length)) {
      // Inline function 'androidx.compose.runtime.SlotTable.verifyWellFormed.validateGroup.<anonymous>' call
      var message_2 = 'Slots for ' + group + ' extend past the end of the slot table';
      throw IllegalStateException_init_$Create$(toString(message_2));
    }
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(dataStart <= dataEnd)) {
      // Inline function 'androidx.compose.runtime.SlotTable.verifyWellFormed.validateGroup.<anonymous>' call
      var message_3 = 'Invalid data anchor at ' + group;
      throw IllegalStateException_init_$Create$(toString(message_3));
    }
    var slotStart = slotAnchor(this$0.groups_1, group);
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(slotStart <= dataEnd)) {
      // Inline function 'androidx.compose.runtime.SlotTable.verifyWellFormed.validateGroup.<anonymous>' call
      var message_4 = 'Slots start out of range at ' + group;
      throw IllegalStateException_init_$Create$(toString(message_4));
    }
    var minSlotsNeeded = ((isNode(this$0.groups_1, group) ? 1 : 0) + (hasObjectKey(this$0.groups_1, group) ? 1 : 0) | 0) + (hasAux(this$0.groups_1, group) ? 1 : 0) | 0;
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!((dataEnd - dataStart | 0) >= minSlotsNeeded)) {
      // Inline function 'androidx.compose.runtime.SlotTable.verifyWellFormed.validateGroup.<anonymous>' call
      var message_5 = 'Not enough slots added for group ' + group;
      throw IllegalStateException_init_$Create$(toString(message_5));
    }
    var isNode_0 = isNode(this$0.groups_1, group);
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(!isNode_0 ? true : !(this$0.slots_1[nodeIndex_0(this$0.groups_1, group)] == null))) {
      // Inline function 'androidx.compose.runtime.SlotTable.verifyWellFormed.validateGroup.<anonymous>' call
      var message_6 = 'No node recorded for a node group at ' + group;
      throw IllegalStateException_init_$Create$(toString(message_6));
    }
    var nodeCount_0 = 0;
    while (current._v < end) {
      nodeCount_0 = nodeCount_0 + verifyWellFormed$validateGroup(current, this$0, group, end) | 0;
    }
    var expectedNodeCount = nodeCount(this$0.groups_1, group);
    var expectedSlotCount = groupSize(this$0.groups_1, group);
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(expectedNodeCount === nodeCount_0)) {
      // Inline function 'androidx.compose.runtime.SlotTable.verifyWellFormed.validateGroup.<anonymous>' call
      var message_7 = 'Incorrect node count detected at ' + group + ', ' + ('expected ' + expectedNodeCount + ', received ' + nodeCount_0);
      throw IllegalStateException_init_$Create$(toString(message_7));
    }
    var actualSlotCount = current._v - group | 0;
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(expectedSlotCount === actualSlotCount)) {
      // Inline function 'androidx.compose.runtime.SlotTable.verifyWellFormed.validateGroup.<anonymous>' call
      var message_8 = 'Incorrect slot count detected at ' + group + ', expected ' + expectedSlotCount + ', received ' + ('' + actualSlotCount);
      throw IllegalStateException_init_$Create$(toString(message_8));
    }
    if (containsAnyMark(this$0.groups_1, group)) {
      // Inline function 'kotlin.check' call
      // Inline function 'kotlin.contracts.contract' call
      if (!(group <= 0 ? true : containsMark(this$0.groups_1, parent))) {
        // Inline function 'androidx.compose.runtime.SlotTable.verifyWellFormed.validateGroup.<anonymous>' call
        var message_9 = 'Expected group ' + parent + ' to record it contains a mark because ' + group + ' does';
        throw IllegalStateException_init_$Create$(toString(message_9));
      }
    }
    return isNode_0 ? 1 : nodeCount_0;
  }
  function emitGroup$dataIndex(this$0, index) {
    return index >= this$0.groupsSize_1 ? this$0.slotsSize_1 : dataAnchor(this$0.groups_1, index);
  }
  function SlotTable() {
    this.groups_1 = new Int32Array(0);
    this.groupsSize_1 = 0;
    var tmp = this;
    var tmp_0 = 0;
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp_1 = fillArrayVal(Array(0), null);
    while (tmp_0 < 0) {
      tmp_1[tmp_0] = null;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp.slots_1 = tmp_1;
    this.slotsSize_1 = 0;
    this.readers_1 = 0;
    this.writer_1 = false;
    this.version_1 = 0;
    var tmp_2 = this;
    // Inline function 'kotlin.collections.arrayListOf' call
    tmp_2.anchors_1 = ArrayList_init_$Create$();
  }
  protoOf(SlotTable).get_groups_dy12vx_k$ = function () {
    return this.groups_1;
  };
  protoOf(SlotTable).get_groupsSize_1bq1dq_k$ = function () {
    return this.groupsSize_1;
  };
  protoOf(SlotTable).get_slots_iyl3po_k$ = function () {
    return this.slots_1;
  };
  protoOf(SlotTable).get_slotsSize_k5zoz1_k$ = function () {
    return this.slotsSize_1;
  };
  protoOf(SlotTable).get_writer_lin69o_k$ = function () {
    return this.writer_1;
  };
  protoOf(SlotTable).set_version_79kic3_k$ = function (_set____db54di) {
    this.version_1 = _set____db54di;
  };
  protoOf(SlotTable).get_version_72w4j3_k$ = function () {
    return this.version_1;
  };
  protoOf(SlotTable).set_anchors_gskhiz_k$ = function (_set____db54di) {
    this.anchors_1 = _set____db54di;
  };
  protoOf(SlotTable).get_anchors_d00txn_k$ = function () {
    return this.anchors_1;
  };
  protoOf(SlotTable).get_isEmpty_zauvru_k$ = function () {
    return this.groupsSize_1 === 0;
  };
  protoOf(SlotTable).read_5383xs_k$ = function (block) {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.SlotTable.read.<anonymous>' call
    var reader = this.openReader_51y0fh_k$();
    var tmp;
    try {
      tmp = block(reader);
    }finally {
      reader.close_yn9xrc_k$();
    }
    return tmp;
  };
  protoOf(SlotTable).write_9b2quh_k$ = function (block) {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.SlotTable.write.<anonymous>' call
    var writer = this.openWriter_7mgvvh_k$();
    var tmp;
    try {
      tmp = block(writer);
    }finally {
      writer.close_yn9xrc_k$();
    }
    return tmp;
  };
  protoOf(SlotTable).openReader_51y0fh_k$ = function () {
    if (this.writer_1) {
      // Inline function 'kotlin.error' call
      var message = 'Cannot read while a writer is pending';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    this.readers_1 = this.readers_1 + 1 | 0;
    return new SlotReader(this);
  };
  protoOf(SlotTable).openWriter_7mgvvh_k$ = function () {
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!!this.writer_1) {
      // Inline function 'androidx.compose.runtime.SlotTable.openWriter.<anonymous>' call
      var message = 'Cannot start a writer when another writer is pending';
      composeRuntimeError(toString(message));
    }
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!(this.readers_1 <= 0)) {
      // Inline function 'androidx.compose.runtime.SlotTable.openWriter.<anonymous>' call
      var message_0 = 'Cannot start a writer when a reader is pending';
      composeRuntimeError(toString(message_0));
    }
    this.writer_1 = true;
    this.version_1 = this.version_1 + 1 | 0;
    return new SlotWriter(this);
  };
  protoOf(SlotTable).anchor_wwz2f1_k$ = function (index) {
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!!this.writer_1) {
      // Inline function 'androidx.compose.runtime.SlotTable.anchor.<anonymous>' call
      var message = 'use active SlotWriter to create an anchor location instead ';
      composeRuntimeError(toString(message));
    }
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(0 <= index ? index < this.groupsSize_1 : false)) {
      // Inline function 'androidx.compose.runtime.SlotTable.anchor.<anonymous>' call
      var message_0 = 'Parameter index is out of range';
      throw IllegalArgumentException_init_$Create$(toString(message_0));
    }
    // Inline function 'androidx.compose.runtime.getOrAdd' call
    var this_0 = this.anchors_1;
    var effectiveSize = this.groupsSize_1;
    var location = search$accessor$mbvawc(this_0, index, effectiveSize);
    var tmp;
    if (location < 0) {
      // Inline function 'androidx.compose.runtime.SlotTable.anchor.<anonymous>' call
      var anchor = new Anchor(index);
      this_0.add_dl6gt3_k$(-(location + 1 | 0) | 0, anchor);
      tmp = anchor;
    } else {
      tmp = this_0.get_c1px32_k$(location);
    }
    return tmp;
  };
  protoOf(SlotTable).anchorIndex_79wady_k$ = function (anchor) {
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!!this.writer_1) {
      // Inline function 'androidx.compose.runtime.SlotTable.anchorIndex.<anonymous>' call
      var message = 'Use active SlotWriter to determine anchor location instead';
      composeRuntimeError(toString(message));
    }
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!anchor.get_valid_j01e4z_k$()) {
      // Inline function 'androidx.compose.runtime.SlotTable.anchorIndex.<anonymous>' call
      var message_0 = 'Anchor refers to a group that was removed';
      throw IllegalArgumentException_init_$Create$(toString(message_0));
    }
    return anchor.location_1;
  };
  protoOf(SlotTable).ownsAnchor_x2d87l_k$ = function (anchor) {
    var tmp;
    if (anchor.get_valid_j01e4z_k$()) {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.SlotTable.ownsAnchor.<anonymous>' call
      var it = search$accessor$mbvawc(this.anchors_1, anchor.location_1, this.groupsSize_1);
      tmp = it >= 0 ? equals(this.anchors_1.get_c1px32_k$(it), anchor) : false;
    } else {
      tmp = false;
    }
    return tmp;
  };
  protoOf(SlotTable).groupContainsAnchor_wx4eku_k$ = function (groupIndex, anchor) {
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!!this.writer_1) {
      // Inline function 'androidx.compose.runtime.SlotTable.groupContainsAnchor.<anonymous>' call
      var message = 'Writer is active';
      composeRuntimeError(toString(message));
    }
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!(0 <= groupIndex ? groupIndex < this.groupsSize_1 : false)) {
      // Inline function 'androidx.compose.runtime.SlotTable.groupContainsAnchor.<anonymous>' call
      var message_0 = 'Invalid group index';
      composeRuntimeError(toString(message_0));
    }
    var tmp;
    if (this.ownsAnchor_x2d87l_k$(anchor)) {
      var containsUpper = groupIndex + groupSize(this.groups_1, groupIndex) | 0;
      var containsArg = anchor.location_1;
      tmp = groupIndex <= containsArg ? containsArg < containsUpper : false;
    } else {
      tmp = false;
    }
    return tmp;
  };
  protoOf(SlotTable).close_ielrvj_k$ = function (reader) {
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!(reader.table_1 === this ? this.readers_1 > 0 : false)) {
      // Inline function 'androidx.compose.runtime.SlotTable.close.<anonymous>' call
      var message = 'Unexpected reader close()';
      composeRuntimeError(toString(message));
    }
    this.readers_1 = this.readers_1 - 1 | 0;
  };
  protoOf(SlotTable).close_2mbfqs_k$ = function (writer, groups, groupsSize, slots, slotsSize, anchors) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(writer.table_1 === this ? this.writer_1 : false)) {
      // Inline function 'androidx.compose.runtime.SlotTable.close.<anonymous>' call
      var message = 'Unexpected writer close()';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    this.writer_1 = false;
    this.setTo_4wx2sy_k$(groups, groupsSize, slots, slotsSize, anchors);
  };
  protoOf(SlotTable).setTo_4wx2sy_k$ = function (groups, groupsSize, slots, slotsSize, anchors) {
    this.groups_1 = groups;
    this.groupsSize_1 = groupsSize;
    this.slots_1 = slots;
    this.slotsSize_1 = slotsSize;
    this.anchors_1 = anchors;
  };
  protoOf(SlotTable).invalidateGroupsWithKey_ja0e5u_k$ = function (target) {
    // Inline function 'kotlin.collections.mutableListOf' call
    var anchors = ArrayList_init_$Create$();
    // Inline function 'kotlin.collections.mutableListOf' call
    var scopes = ArrayList_init_$Create$();
    var allScopesFound = {_v: true};
    // Inline function 'androidx.compose.runtime.SlotTable.read' call
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.SlotTable.read.<anonymous>' call
    var reader = this.openReader_51y0fh_k$();
    var tmp;
    try {
      invalidateGroupsWithKey$_anonymous_$scanGroup_f7o8zz(reader, target, anchors, allScopesFound, this, scopes);
      tmp = Unit_getInstance();
    }finally {
      reader.close_yn9xrc_k$();
    }
    // Inline function 'androidx.compose.runtime.SlotTable.write' call
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.SlotTable.write.<anonymous>' call
    var writer = this.openWriter_7mgvvh_k$();
    var tmp_0;
    try {
      // Inline function 'androidx.compose.runtime.SlotTable.invalidateGroupsWithKey.<anonymous>' call
      writer.startGroup_hppv2r_k$();
      // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable = 0;
      var last = anchors.get_size_woubt6_k$() - 1 | 0;
      if (inductionVariable <= last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var item = anchors.get_c1px32_k$(index);
          // Inline function 'androidx.compose.runtime.SlotTable.invalidateGroupsWithKey.<anonymous>.<anonymous>' call
          if (item.toIndexFor_fnrv23_k$(writer) >= writer.currentGroup_1) {
            writer.seek_iq96d1_k$(item);
            writer.bashGroup_rqa85h_k$();
          }
        }
         while (inductionVariable <= last);
      writer.skipToGroupEnd_lh3zi2_k$();
      tmp_0 = writer.endGroup_s64cis_k$();
    }finally {
      writer.close_yn9xrc_k$();
    }
    return allScopesFound._v ? scopes : null;
  };
  protoOf(SlotTable).containsMark_zez3hw_k$ = function () {
    return this.groupsSize_1 > 0 ? containsMark(this.groups_1, 0) : false;
  };
  protoOf(SlotTable).verifyWellFormed_n3o9cq_k$ = function () {
    var current = {_v: 0};
    if (this.groupsSize_1 > 0) {
      while (current._v < this.groupsSize_1) {
        verifyWellFormed$validateGroup(current, this, -1, current._v + groupSize(this.groups_1, current._v) | 0);
      }
      // Inline function 'kotlin.check' call
      // Inline function 'kotlin.contracts.contract' call
      if (!(current._v === this.groupsSize_1)) {
        // Inline function 'androidx.compose.runtime.SlotTable.verifyWellFormed.<anonymous>' call
        var message = 'Incomplete group at root ' + current._v + ' expected to be ' + this.groupsSize_1;
        throw IllegalStateException_init_$Create$(toString(message));
      }
    }
    var inductionVariable = this.slotsSize_1;
    var last = this.slots_1.length;
    if (inductionVariable < last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.check' call
        // Inline function 'kotlin.contracts.contract' call
        if (!(this.slots_1[index] == null)) {
          // Inline function 'androidx.compose.runtime.SlotTable.verifyWellFormed.<anonymous>' call
          var message_0 = 'Non null value in the slot gap at index ' + index;
          throw IllegalStateException_init_$Create$(toString(message_0));
        }
      }
       while (inductionVariable < last);
    var lastLocation = -1;
    // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
    var this_0 = this.anchors_1;
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable_0 = 0;
    var last_0 = this_0.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable_0 <= last_0)
      do {
        var index_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var item = this_0.get_c1px32_k$(index_0);
        // Inline function 'androidx.compose.runtime.SlotTable.verifyWellFormed.<anonymous>' call
        var location = item.toIndexFor_xhkkx2_k$(this);
        // Inline function 'kotlin.require' call
        // Inline function 'kotlin.contracts.contract' call
        if (!(0 <= location ? location <= this.groupsSize_1 : false)) {
          // Inline function 'androidx.compose.runtime.SlotTable.verifyWellFormed.<anonymous>.<anonymous>' call
          var message_1 = 'Invalid anchor, location out of bound';
          throw IllegalArgumentException_init_$Create$(toString(message_1));
        }
        // Inline function 'kotlin.require' call
        // Inline function 'kotlin.contracts.contract' call
        if (!(lastLocation < location)) {
          // Inline function 'androidx.compose.runtime.SlotTable.verifyWellFormed.<anonymous>.<anonymous>' call
          var message_2 = 'Anchor is out of order';
          throw IllegalArgumentException_init_$Create$(toString(message_2));
        }
        lastLocation = location;
      }
       while (inductionVariable_0 <= last_0);
  };
  protoOf(SlotTable).asString_l3f38d_k$ = function () {
    var tmp;
    if (this.writer_1) {
      tmp = anyToString(this);
    } else {
      // Inline function 'kotlin.text.buildString' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlin.apply' call
      var this_0 = StringBuilder_init_$Create$();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.SlotTable.asString.<anonymous>' call
      this_0.append_22ad7x_k$(anyToString(this));
      this_0.append_am5a4z_k$(_Char___init__impl__6a9atx(10));
      var groupsSize = this.groupsSize_1;
      if (groupsSize > 0) {
        var current = 0;
        while (current < groupsSize) {
          current = current + emitGroup(this_0, this, current, 0) | 0;
        }
      } else {
        this_0.append_22ad7x_k$('<EMPTY>');
      }
      tmp = this_0.toString();
    }
    return tmp;
  };
  protoOf(SlotTable).slotsOf_u1tyj8_k$ = function (group) {
    var start = dataAnchor(this.groups_1, group);
    var end = (group + 1 | 0) < this.groupsSize_1 ? dataAnchor(this.groups_1, group + 1 | 0) : this.slots_1.length;
    return toList_0(this.slots_1).subList_xle3r2_k$(start, end);
  };
  protoOf(SlotTable).slot_xuatfm_k$ = function (group, slotIndex) {
    var start = slotAnchor(this.groups_1, group);
    var end = (group + 1 | 0) < this.groupsSize_1 ? dataAnchor(this.groups_1, group + 1 | 0) : this.slots_1.length;
    var len = end - start | 0;
    var tmp;
    if (0 <= slotIndex ? slotIndex < len : false) {
      return this.slots_1[start + slotIndex | 0];
    } else {
      tmp = Companion_getInstance_1().get_Empty_i9b85g_k$();
    }
    return tmp;
  };
  protoOf(SlotTable).get_compositionGroups_rhqnp1_k$ = function () {
    return this;
  };
  protoOf(SlotTable).iterator_jk1svi_k$ = function () {
    return new GroupIterator(this, 0, this.groupsSize_1);
  };
  protoOf(SlotTable).find_lz4g9n_k$ = function (identityToFind) {
    return (new SlotTableGroup(this, 0)).find_lz4g9n_k$(identityToFind);
  };
  function get_Group_Fields_Size() {
    return Group_Fields_Size;
  }
  var Group_Fields_Size;
  function isNode(_this__u8e3s4, address) {
    return !((_this__u8e3s4[imul(address, 5) + 1 | 0] & 1073741824) === 0);
  }
  function nodeCount(_this__u8e3s4, address) {
    return _this__u8e3s4[imul(address, 5) + 1 | 0] & 67108863;
  }
  function key(_this__u8e3s4, address) {
    return _this__u8e3s4[imul(address, 5)];
  }
  function hasObjectKey(_this__u8e3s4, address) {
    return !((_this__u8e3s4[imul(address, 5) + 1 | 0] & 536870912) === 0);
  }
  function objectKeyIndex(_this__u8e3s4, address) {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.objectKeyIndex.<anonymous>' call
    var slot = imul(address, 5);
    return _this__u8e3s4[slot + 4 | 0] + countOneBits_0(_this__u8e3s4[slot + 1 | 0] >> 30) | 0;
  }
  function groupSize(_this__u8e3s4, address) {
    return _this__u8e3s4[imul(address, 5) + 3 | 0];
  }
  function hasAux(_this__u8e3s4, address) {
    return !((_this__u8e3s4[imul(address, 5) + 1 | 0] & 268435456) === 0);
  }
  function addAux(_this__u8e3s4, address) {
    var arrayIndex = imul(address, 5) + 1 | 0;
    _this__u8e3s4[arrayIndex] = _this__u8e3s4[arrayIndex] | 268435456;
  }
  function initGroup(_this__u8e3s4, address, key, isNode, hasDataKey, hasData, parentAnchor, dataAnchor) {
    var nodeBit = isNode ? 1073741824 : 0;
    var dataKeyBit = hasDataKey ? 536870912 : 0;
    var dataBit = hasData ? 268435456 : 0;
    var arrayIndex = imul(address, 5);
    _this__u8e3s4[arrayIndex + 0 | 0] = key;
    _this__u8e3s4[arrayIndex + 1 | 0] = nodeBit | dataKeyBit | dataBit;
    _this__u8e3s4[arrayIndex + 2 | 0] = parentAnchor;
    _this__u8e3s4[arrayIndex + 3 | 0] = 0;
    _this__u8e3s4[arrayIndex + 4 | 0] = dataAnchor;
  }
  function updateGroupSize(_this__u8e3s4, address, value) {
    runtimeCheck_0(value >= 0);
    _this__u8e3s4[imul(address, 5) + 3 | 0] = value;
  }
  function updateNodeCount_0(_this__u8e3s4, address, value) {
    runtimeCheck_0(value >= 0 ? value < 67108863 : false);
    _this__u8e3s4[imul(address, 5) + 1 | 0] = _this__u8e3s4[imul(address, 5) + 1 | 0] & -67108864 | value;
  }
  function _get_list__d9tsa5($this) {
    return $this.list_1;
  }
  function PrioritySet(list) {
    var tmp;
    if (list === VOID) {
      // Inline function 'kotlin.collections.mutableListOf' call
      tmp = ArrayList_init_$Create$();
    } else {
      tmp = list;
    }
    list = tmp;
    this.list_1 = list;
  }
  protoOf(PrioritySet).add_c9dakn_k$ = function (value) {
    var tmp;
    // Inline function 'kotlin.collections.isNotEmpty' call
    if (!this.list_1.isEmpty_y1axqb_k$()) {
      tmp = this.list_1.get_c1px32_k$(0) === value ? true : this.list_1.get_c1px32_k$(this.list_1.get_size_woubt6_k$() - 1 | 0) === value;
    } else {
      tmp = false;
    }
    if (tmp)
      return Unit_getInstance();
    var index = this.list_1.get_size_woubt6_k$();
    this.list_1.add_utx5q5_k$(value);
    $l$loop: while (index > 0) {
      var parent = ((index + 1 | 0) >>> 1 | 0) - 1 | 0;
      var parentValue = this.list_1.get_c1px32_k$(parent);
      if (value > parentValue) {
        this.list_1.set_82063s_k$(index, parentValue);
      } else
        break $l$loop;
      index = parent;
    }
    this.list_1.set_82063s_k$(index, value);
  };
  protoOf(PrioritySet).isEmpty_y1axqb_k$ = function () {
    return this.list_1.isEmpty_y1axqb_k$();
  };
  protoOf(PrioritySet).isNotEmpty_cjxbwk_k$ = function () {
    // Inline function 'kotlin.collections.isNotEmpty' call
    return !this.list_1.isEmpty_y1axqb_k$();
  };
  protoOf(PrioritySet).peek_21nx7_k$ = function () {
    return first_0(this.list_1);
  };
  protoOf(PrioritySet).takeMax_pjqylf_k$ = function () {
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!(this.list_1.get_size_woubt6_k$() > 0)) {
      // Inline function 'androidx.compose.runtime.PrioritySet.takeMax.<anonymous>' call
      var message = 'Set is empty';
      composeRuntimeError(toString(message));
    }
    var value = this.list_1.get_c1px32_k$(0);
    $l$loop: while (true) {
      var tmp;
      // Inline function 'kotlin.collections.isNotEmpty' call
      if (!this.list_1.isEmpty_y1axqb_k$()) {
        tmp = this.list_1.get_c1px32_k$(0) === value;
      } else {
        tmp = false;
      }
      if (!tmp) {
        break $l$loop;
      }
      this.list_1.set_82063s_k$(0, last(this.list_1));
      this.list_1.removeAt_6niowx_k$(this.list_1.get_size_woubt6_k$() - 1 | 0);
      var index = 0;
      var size = this.list_1.get_size_woubt6_k$();
      var max = this.list_1.get_size_woubt6_k$() >>> 1 | 0;
      $l$loop_2: while (index < max) {
        var indexValue = this.list_1.get_c1px32_k$(index);
        var left = imul(index + 1 | 0, 2) - 1 | 0;
        var leftValue = this.list_1.get_c1px32_k$(left);
        var right = imul(index + 1 | 0, 2);
        if (right < size) {
          var rightValue = this.list_1.get_c1px32_k$(right);
          if (rightValue > leftValue) {
            if (rightValue > indexValue) {
              this.list_1.set_82063s_k$(index, rightValue);
              this.list_1.set_82063s_k$(right, indexValue);
              index = right;
              continue $l$loop_2;
            } else
              break $l$loop_2;
          }
        }
        if (leftValue > indexValue) {
          this.list_1.set_82063s_k$(index, leftValue);
          this.list_1.set_82063s_k$(left, indexValue);
          index = left;
        } else
          break $l$loop_2;
      }
    }
    return value;
  };
  protoOf(PrioritySet).validateHeap_ar2m5q_k$ = function () {
    var size = this.list_1.get_size_woubt6_k$();
    var inductionVariable = 0;
    var last = size / 2 | 0;
    if (inductionVariable < last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var left = imul(index + 1 | 0, 2) - 1 | 0;
        var right = imul(index + 1 | 0, 2);
        // Inline function 'kotlin.check' call
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'kotlin.check' call
        // Inline function 'kotlin.contracts.contract' call
        if (!(this.list_1.get_c1px32_k$(index) >= this.list_1.get_c1px32_k$(left))) {
          // Inline function 'kotlin.check.<anonymous>' call
          var message = 'Check failed.';
          throw IllegalStateException_init_$Create$(toString(message));
        }
        // Inline function 'kotlin.check' call
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'kotlin.check' call
        // Inline function 'kotlin.contracts.contract' call
        if (!(right >= size ? true : this.list_1.get_c1px32_k$(index) >= this.list_1.get_c1px32_k$(right))) {
          // Inline function 'kotlin.check.<anonymous>' call
          var message_0 = 'Check failed.';
          throw IllegalStateException_init_$Create$(toString(message_0));
        }
      }
       while (inductionVariable < last);
  };
  function updateParentAnchor(_this__u8e3s4, address, value) {
    _this__u8e3s4[imul(address, 5) + 2 | 0] = value;
  }
  function parentAnchor(_this__u8e3s4, address) {
    return _this__u8e3s4[imul(address, 5) + 2 | 0];
  }
  function updateDataAnchor(_this__u8e3s4, address, anchor) {
    _this__u8e3s4[imul(address, 5) + 4 | 0] = anchor;
  }
  function locationOf(_this__u8e3s4, index, effectiveSize) {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.locationOf.<anonymous>' call
    var it = search$accessor$mbvawc(_this__u8e3s4, index, effectiveSize);
    return it >= 0 ? it : -(it + 1 | 0) | 0;
  }
  function dataAnchor(_this__u8e3s4, address) {
    return _this__u8e3s4[imul(address, 5) + 4 | 0];
  }
  function getOrAdd(_this__u8e3s4, index, effectiveSize, block) {
    var location = search$accessor$mbvawc(_this__u8e3s4, index, effectiveSize);
    var tmp;
    if (location < 0) {
      var anchor = block();
      _this__u8e3s4.add_dl6gt3_k$(-(location + 1 | 0) | 0, anchor);
      tmp = anchor;
    } else {
      tmp = _this__u8e3s4.get_c1px32_k$(location);
    }
    return tmp;
  }
  function hasMark(_this__u8e3s4, address) {
    return !((_this__u8e3s4[imul(address, 5) + 1 | 0] & 134217728) === 0);
  }
  function updateMark(_this__u8e3s4, address, value) {
    var arrayIndex = imul(address, 5) + 1 | 0;
    if (value) {
      _this__u8e3s4[arrayIndex] = _this__u8e3s4[arrayIndex] | 134217728;
    } else {
      _this__u8e3s4[arrayIndex] = _this__u8e3s4[arrayIndex] & -134217729;
    }
  }
  function containsMark(_this__u8e3s4, address) {
    return !((_this__u8e3s4[imul(address, 5) + 1 | 0] & 67108864) === 0);
  }
  function containsAnyMark(_this__u8e3s4, address) {
    return !((_this__u8e3s4[imul(address, 5) + 1 | 0] & 201326592) === 0);
  }
  function updateContainsMark_0(_this__u8e3s4, address, value) {
    var arrayIndex = imul(address, 5) + 1 | 0;
    if (value) {
      _this__u8e3s4[arrayIndex] = _this__u8e3s4[arrayIndex] | 67108864;
    } else {
      _this__u8e3s4[arrayIndex] = _this__u8e3s4[arrayIndex] & -67108865;
    }
  }
  function get_MinGroupGrowthSize() {
    return MinGroupGrowthSize;
  }
  var MinGroupGrowthSize;
  function get_MinSlotsGrowthSize() {
    return MinSlotsGrowthSize;
  }
  var MinSlotsGrowthSize;
  function get_parentAnchorPivot() {
    return parentAnchorPivot;
  }
  var parentAnchorPivot;
  function slotAnchor(_this__u8e3s4, address) {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.slotAnchor.<anonymous>' call
    var slot = imul(address, 5);
    return _this__u8e3s4[slot + 4 | 0] + countOneBits_0(_this__u8e3s4[slot + 1 | 0] >> 28) | 0;
  }
  function countOneBits_0(value) {
    switch (value) {
      case 0:
        return 0;
      case 1:
        return 1;
      case 2:
        return 1;
      case 3:
        return 2;
      case 4:
        return 1;
      case 5:
        return 2;
      case 6:
        return 2;
      default:
        return 3;
    }
  }
  function get_Aux_Shift() {
    return Aux_Shift;
  }
  var Aux_Shift;
  function groupInfo(_this__u8e3s4, address) {
    return _this__u8e3s4[imul(address, 5) + 1 | 0];
  }
  function dataAnchors(_this__u8e3s4, len) {
    len = len === VOID ? _this__u8e3s4.length : len;
    return slice_0(_this__u8e3s4, step(until(4, len), 5));
  }
  function keys_1(_this__u8e3s4, len) {
    len = len === VOID ? _this__u8e3s4.length : len;
    return slice_0(_this__u8e3s4, step(until(0, len), 5));
  }
  function _get_groups__sds409_0($this) {
    return $this.groups_1;
  }
  function _get_groupsSize__3zu216($this) {
    return $this.groupsSize_1;
  }
  function _get_slots__bd4r7o_0($this) {
    return $this.slots_1;
  }
  function _get_slotsSize__fkn26d($this) {
    return $this.slotsSize_1;
  }
  function _set_closed__kdb0et_0($this, _set____db54di) {
    $this.closed_1 = _set____db54di;
  }
  function _set_currentGroup__bjapap_0($this, _set____db54di) {
    $this.currentGroup_1 = _set____db54di;
  }
  function _set_currentEnd__674c0b($this, _set____db54di) {
    $this.currentEnd_1 = _set____db54di;
  }
  function _set_parent__n7jd7x_0($this, _set____db54di) {
    $this.parent_1 = _set____db54di;
  }
  function _set_emptyCount__47u2nf($this, _set____db54di) {
    $this.emptyCount_1 = _set____db54di;
  }
  function _get_emptyCount__ja2nsn($this) {
    return $this.emptyCount_1;
  }
  function _set_currentSlot__l69xhq_0($this, _set____db54di) {
    $this.currentSlot_1 = _set____db54di;
  }
  function _get_currentSlot__jkfy5i_0($this) {
    return $this.currentSlot_1;
  }
  function _set_currentSlotEnd__l1hp65_0($this, _set____db54di) {
    $this.currentSlotEnd_1 = _set____db54di;
  }
  function _get_currentSlotEnd__4hlqvb_0($this) {
    return $this.currentSlotEnd_1;
  }
  function node(_this__u8e3s4, $this, index) {
    var tmp;
    if (isNode(_this__u8e3s4, index)) {
      tmp = $this.slots_1[nodeIndex_0(_this__u8e3s4, index)];
    } else {
      tmp = Companion_getInstance_1().get_Empty_i9b85g_k$();
    }
    return tmp;
  }
  function aux(_this__u8e3s4, $this, index) {
    var tmp;
    if (hasAux(_this__u8e3s4, index)) {
      tmp = $this.slots_1[auxIndex_0(_this__u8e3s4, index)];
    } else {
      tmp = Companion_getInstance_1().get_Empty_i9b85g_k$();
    }
    return tmp;
  }
  function objectKey(_this__u8e3s4, $this, index) {
    var tmp;
    if (hasObjectKey(_this__u8e3s4, index)) {
      tmp = $this.slots_1[objectKeyIndex(_this__u8e3s4, index)];
    } else {
      tmp = null;
    }
    return tmp;
  }
  function SlotReader(table) {
    this.table_1 = table;
    this.groups_1 = this.table_1.groups_1;
    this.groupsSize_1 = this.table_1.groupsSize_1;
    this.slots_1 = this.table_1.slots_1;
    this.slotsSize_1 = this.table_1.slotsSize_1;
    this.closed_1 = false;
    this.currentGroup_1 = 0;
    this.currentEnd_1 = this.groupsSize_1;
    this.parent_1 = -1;
    this.emptyCount_1 = 0;
    this.currentSlot_1 = 0;
    this.currentSlotEnd_1 = 0;
  }
  protoOf(SlotReader).get_table_iyxllx_k$ = function () {
    return this.table_1;
  };
  protoOf(SlotReader).get_closed_byjrzp_k$ = function () {
    return this.closed_1;
  };
  protoOf(SlotReader).get_currentGroup_sgvyz3_k$ = function () {
    return this.currentGroup_1;
  };
  protoOf(SlotReader).get_currentEnd_wuhyy3_k$ = function () {
    return this.currentEnd_1;
  };
  protoOf(SlotReader).get_parent_hy4reb_k$ = function () {
    return this.parent_1;
  };
  protoOf(SlotReader).get_size_woubt6_k$ = function () {
    return this.groupsSize_1;
  };
  protoOf(SlotReader).get_slot_wouds7_k$ = function () {
    return this.currentSlot_1 - slotAnchor(this.groups_1, this.parent_1) | 0;
  };
  protoOf(SlotReader).parent_omvrla_k$ = function (index) {
    return parentAnchor(this.groups_1, index);
  };
  protoOf(SlotReader).get_isNode_ew2wyd_k$ = function () {
    return isNode(this.groups_1, this.currentGroup_1);
  };
  protoOf(SlotReader).isNode_keuxl8_k$ = function (index) {
    return isNode(this.groups_1, index);
  };
  protoOf(SlotReader).get_nodeCount_fsdpj8_k$ = function () {
    return nodeCount(this.groups_1, this.currentGroup_1);
  };
  protoOf(SlotReader).nodeCount_48mp3f_k$ = function (index) {
    return nodeCount(this.groups_1, index);
  };
  protoOf(SlotReader).node_dyvdau_k$ = function (index) {
    return isNode(this.groups_1, index) ? node(this.groups_1, this, index) : null;
  };
  protoOf(SlotReader).get_isGroupEnd_ox3235_k$ = function () {
    return this.get_inEmpty_wxmrsv_k$() ? true : this.currentGroup_1 === this.currentEnd_1;
  };
  protoOf(SlotReader).get_inEmpty_wxmrsv_k$ = function () {
    return this.emptyCount_1 > 0;
  };
  protoOf(SlotReader).get_groupSize_g0fedl_k$ = function () {
    return groupSize(this.groups_1, this.currentGroup_1);
  };
  protoOf(SlotReader).groupSize_ehpyh4_k$ = function (index) {
    return groupSize(this.groups_1, index);
  };
  protoOf(SlotReader).get_groupEnd_nfh6qj_k$ = function () {
    return this.currentEnd_1;
  };
  protoOf(SlotReader).groupEnd_jmei9o_k$ = function (index) {
    return index + groupSize(this.groups_1, index) | 0;
  };
  protoOf(SlotReader).get_groupKey_nfh2hj_k$ = function () {
    var tmp;
    if (this.currentGroup_1 < this.currentEnd_1) {
      tmp = key(this.groups_1, this.currentGroup_1);
    } else {
      tmp = 0;
    }
    return tmp;
  };
  protoOf(SlotReader).groupKey_pe96ns_k$ = function (index) {
    return key(this.groups_1, index);
  };
  protoOf(SlotReader).get_groupSlotIndex_v9fbni_k$ = function () {
    return this.currentSlot_1 - slotAnchor(this.groups_1, this.parent_1) | 0;
  };
  protoOf(SlotReader).hasObjectKey_2ypxn2_k$ = function (index) {
    return hasObjectKey(this.groups_1, index);
  };
  protoOf(SlotReader).get_groupObjectKey_4eay3a_k$ = function () {
    return this.currentGroup_1 < this.currentEnd_1 ? objectKey(this.groups_1, this, this.currentGroup_1) : null;
  };
  protoOf(SlotReader).groupObjectKey_7ge4pj_k$ = function (index) {
    return objectKey(this.groups_1, this, index);
  };
  protoOf(SlotReader).get_groupAux_nfh9iq_k$ = function () {
    return this.currentGroup_1 < this.currentEnd_1 ? aux(this.groups_1, this, this.currentGroup_1) : 0;
  };
  protoOf(SlotReader).groupAux_dyi8kz_k$ = function (index) {
    return aux(this.groups_1, this, index);
  };
  protoOf(SlotReader).get_groupNode_g0ihe0_k$ = function () {
    return this.currentGroup_1 < this.currentEnd_1 ? node(this.groups_1, this, this.currentGroup_1) : null;
  };
  protoOf(SlotReader).groupKey_98twnh_k$ = function (anchor) {
    return anchor.get_valid_j01e4z_k$() ? key(this.groups_1, this.table_1.anchorIndex_79wady_k$(anchor)) : 0;
  };
  protoOf(SlotReader).hasMark_ahdlb_k$ = function (index) {
    return hasMark(this.groups_1, index);
  };
  protoOf(SlotReader).containsMark_201c98_k$ = function (index) {
    return containsMark(this.groups_1, index);
  };
  protoOf(SlotReader).get_parentNodes_uf6wfy_k$ = function () {
    return this.parent_1 >= 0 ? nodeCount(this.groups_1, this.parent_1) : 0;
  };
  protoOf(SlotReader).parentOf_dnk0n_k$ = function (index) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(index >= 0 ? index < this.groupsSize_1 : false)) {
      // Inline function 'androidx.compose.runtime.SlotReader.parentOf.<anonymous>' call
      var message = 'Invalid group index ' + index;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    return parentAnchor(this.groups_1, index);
  };
  protoOf(SlotReader).get_groupSlotCount_v65jwb_k$ = function () {
    var current = this.currentGroup_1;
    var start = slotAnchor(this.groups_1, current);
    var next = current + 1 | 0;
    var end = next < this.groupsSize_1 ? dataAnchor(this.groups_1, next) : this.slotsSize_1;
    return end - start | 0;
  };
  protoOf(SlotReader).get_c1px32_k$ = function (index) {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.SlotReader.get.<anonymous>' call
    var slotIndex = this.currentSlot_1 + index | 0;
    return slotIndex < this.currentSlotEnd_1 ? this.slots_1[slotIndex] : Companion_getInstance_1().get_Empty_i9b85g_k$();
  };
  protoOf(SlotReader).groupGet_9d91k1_k$ = function (index) {
    return this.groupGet_pxa5uf_k$(this.currentGroup_1, index);
  };
  protoOf(SlotReader).groupGet_pxa5uf_k$ = function (group, index) {
    var start = slotAnchor(this.groups_1, group);
    var next = group + 1 | 0;
    var end = next < this.groupsSize_1 ? dataAnchor(this.groups_1, next) : this.slotsSize_1;
    var address = start + index | 0;
    return address < end ? this.slots_1[address] : Companion_getInstance_1().get_Empty_i9b85g_k$();
  };
  protoOf(SlotReader).next_20eer_k$ = function () {
    if (this.emptyCount_1 > 0 ? true : this.currentSlot_1 >= this.currentSlotEnd_1)
      return Companion_getInstance_1().get_Empty_i9b85g_k$();
    var tmp1 = this.currentSlot_1;
    this.currentSlot_1 = tmp1 + 1 | 0;
    return this.slots_1[tmp1];
  };
  protoOf(SlotReader).beginEmpty_jmuic4_k$ = function () {
    this.emptyCount_1 = this.emptyCount_1 + 1 | 0;
  };
  protoOf(SlotReader).endEmpty_pghzmm_k$ = function () {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(this.emptyCount_1 > 0)) {
      // Inline function 'androidx.compose.runtime.SlotReader.endEmpty.<anonymous>' call
      var message = 'Unbalanced begin/end empty';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    this.emptyCount_1 = this.emptyCount_1 - 1 | 0;
  };
  protoOf(SlotReader).close_yn9xrc_k$ = function () {
    this.closed_1 = true;
    this.table_1.close_ielrvj_k$(this);
  };
  protoOf(SlotReader).startGroup_hppv2r_k$ = function () {
    if (this.emptyCount_1 <= 0) {
      // Inline function 'kotlin.require' call
      // Inline function 'kotlin.contracts.contract' call
      if (!(parentAnchor(this.groups_1, this.currentGroup_1) === this.parent_1)) {
        // Inline function 'androidx.compose.runtime.SlotReader.startGroup.<anonymous>' call
        var message = 'Invalid slot table detected';
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
      this.parent_1 = this.currentGroup_1;
      this.currentEnd_1 = this.currentGroup_1 + groupSize(this.groups_1, this.currentGroup_1) | 0;
      var tmp1 = this.currentGroup_1;
      this.currentGroup_1 = tmp1 + 1 | 0;
      var current = tmp1;
      this.currentSlot_1 = slotAnchor(this.groups_1, current);
      this.currentSlotEnd_1 = current >= (this.groupsSize_1 - 1 | 0) ? this.slotsSize_1 : dataAnchor(this.groups_1, current + 1 | 0);
    }
  };
  protoOf(SlotReader).startNode_htvs8k_k$ = function () {
    if (this.emptyCount_1 <= 0) {
      // Inline function 'kotlin.require' call
      // Inline function 'kotlin.contracts.contract' call
      if (!isNode(this.groups_1, this.currentGroup_1)) {
        // Inline function 'androidx.compose.runtime.SlotReader.startNode.<anonymous>' call
        var message = 'Expected a node group';
        throw IllegalArgumentException_init_$Create$(toString(message));
      }
      this.startGroup_hppv2r_k$();
    }
  };
  protoOf(SlotReader).skipGroup_y9vakg_k$ = function () {
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!(this.emptyCount_1 === 0)) {
      // Inline function 'androidx.compose.runtime.SlotReader.skipGroup.<anonymous>' call
      var message = 'Cannot skip while in an empty region';
      composeRuntimeError(toString(message));
    }
    var count = isNode(this.groups_1, this.currentGroup_1) ? 1 : nodeCount(this.groups_1, this.currentGroup_1);
    this.currentGroup_1 = this.currentGroup_1 + groupSize(this.groups_1, this.currentGroup_1) | 0;
    return count;
  };
  protoOf(SlotReader).skipToGroupEnd_lh3zi2_k$ = function () {
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!(this.emptyCount_1 === 0)) {
      // Inline function 'androidx.compose.runtime.SlotReader.skipToGroupEnd.<anonymous>' call
      var message = 'Cannot skip the enclosing group while in an empty region';
      composeRuntimeError(toString(message));
    }
    this.currentGroup_1 = this.currentEnd_1;
  };
  protoOf(SlotReader).reposition_26fquk_k$ = function (index) {
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!(this.emptyCount_1 === 0)) {
      // Inline function 'androidx.compose.runtime.SlotReader.reposition.<anonymous>' call
      var message = 'Cannot reposition while in an empty region';
      composeRuntimeError(toString(message));
    }
    this.currentGroup_1 = index;
    var parent = index < this.groupsSize_1 ? parentAnchor(this.groups_1, index) : -1;
    this.parent_1 = parent;
    if (parent < 0)
      this.currentEnd_1 = this.groupsSize_1;
    else
      this.currentEnd_1 = parent + groupSize(this.groups_1, parent) | 0;
    this.currentSlot_1 = 0;
    this.currentSlotEnd_1 = 0;
  };
  protoOf(SlotReader).restoreParent_4v0mds_k$ = function (index) {
    var newCurrentEnd = index + groupSize(this.groups_1, index) | 0;
    var current = this.currentGroup_1;
    // Inline function 'androidx.compose.runtime.runtimeCheck' call
    if (!(current >= index ? current <= newCurrentEnd : false)) {
      // Inline function 'androidx.compose.runtime.SlotReader.restoreParent.<anonymous>' call
      var message = 'Index ' + index + ' is not a parent of ' + current;
      composeRuntimeError(toString(message));
    }
    this.parent_1 = index;
    this.currentEnd_1 = newCurrentEnd;
    this.currentSlot_1 = 0;
    this.currentSlotEnd_1 = 0;
  };
  protoOf(SlotReader).endGroup_rw7puc_k$ = function () {
    if (this.emptyCount_1 === 0) {
      // Inline function 'androidx.compose.runtime.runtimeCheck' call
      if (!(this.currentGroup_1 === this.currentEnd_1)) {
        // Inline function 'androidx.compose.runtime.SlotReader.endGroup.<anonymous>' call
        var message = 'endGroup() not called at the end of a group';
        composeRuntimeError(toString(message));
      }
      var parent = parentAnchor(this.groups_1, this.parent_1);
      this.parent_1 = parent;
      this.currentEnd_1 = parent < 0 ? this.groupsSize_1 : parent + groupSize(this.groups_1, parent) | 0;
    }
  };
  protoOf(SlotReader).extractKeys_u546c5_k$ = function () {
    // Inline function 'kotlin.collections.mutableListOf' call
    var result = ArrayList_init_$Create$();
    if (this.emptyCount_1 > 0)
      return result;
    var index = 0;
    var childIndex = this.currentGroup_1;
    while (childIndex < this.currentEnd_1) {
      var tmp = key(this.groups_1, childIndex);
      var tmp_0 = objectKey(this.groups_1, this, childIndex);
      var tmp_1 = childIndex;
      var tmp_2 = isNode(this.groups_1, childIndex) ? 1 : nodeCount(this.groups_1, childIndex);
      var tmp0 = index;
      index = tmp0 + 1 | 0;
      result.add_utx5q5_k$(new KeyInfo(tmp, tmp_0, tmp_1, tmp_2, tmp0));
      childIndex = childIndex + groupSize(this.groups_1, childIndex) | 0;
    }
    return result;
  };
  protoOf(SlotReader).forEachData_37qzd6_k$ = function (group, block) {
    var start = slotAnchor(this.groups_1, group);
    var end = (group + 1 | 0) < this.table_1.groupsSize_1 ? dataAnchor(this.table_1.groups_1, group + 1 | 0) : this.table_1.slotsSize_1;
    var inductionVariable = start;
    if (inductionVariable < end)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        block(index - start | 0, this.slots_1[index]);
      }
       while (inductionVariable < end);
  };
  protoOf(SlotReader).toString = function () {
    return 'SlotReader(current=' + this.currentGroup_1 + ', key=' + this.get_groupKey_nfh2hj_k$() + ', ' + ('parent=' + this.parent_1 + ', end=' + this.currentEnd_1 + ')');
  };
  protoOf(SlotReader).anchor_wwz2f1_k$ = function (index) {
    // Inline function 'androidx.compose.runtime.getOrAdd' call
    var this_0 = this.table_1.anchors_1;
    var effectiveSize = this.groupsSize_1;
    var location = search$accessor$mbvawc(this_0, index, effectiveSize);
    var tmp;
    if (location < 0) {
      // Inline function 'androidx.compose.runtime.SlotReader.anchor.<anonymous>' call
      var anchor = new Anchor(index);
      this_0.add_dl6gt3_k$(-(location + 1 | 0) | 0, anchor);
      tmp = anchor;
    } else {
      tmp = this_0.get_c1px32_k$(location);
    }
    return tmp;
  };
  protoOf(SlotReader).anchor$default_tnmosn_k$ = function (index, $super) {
    index = index === VOID ? this.currentGroup_1 : index;
    return $super === VOID ? this.anchor_wwz2f1_k$(index) : $super.anchor_wwz2f1_k$.call(this, index);
  };
  function search(_this__u8e3s4, location, effectiveSize) {
    var low = 0;
    var high = _this__u8e3s4.get_size_woubt6_k$() - 1 | 0;
    while (low <= high) {
      var mid = (low + high | 0) >>> 1 | 0;
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.search.<anonymous>' call
      var it = _this__u8e3s4.get_c1px32_k$(mid).location_1;
      var midVal = it < 0 ? effectiveSize + it | 0 : it;
      var cmp = compareTo(midVal, location);
      if (cmp < 0)
        low = mid + 1 | 0;
      else if (cmp > 0)
        high = mid - 1 | 0;
      else
        return mid;
    }
    return -(low + 1 | 0) | 0;
  }
  function DataIterator(table, group) {
    this.table_1 = table;
    this.group_1 = group;
    this.start_1 = dataAnchor(this.table_1.groups_1, this.group_1);
    this.end_1 = (this.group_1 + 1 | 0) < this.table_1.groupsSize_1 ? dataAnchor(this.table_1.groups_1, this.group_1 + 1 | 0) : this.table_1.slotsSize_1;
    this.index_1 = this.start_1;
  }
  protoOf(DataIterator).get_table_iyxllx_k$ = function () {
    return this.table_1;
  };
  protoOf(DataIterator).get_group_is3eja_k$ = function () {
    return this.group_1;
  };
  protoOf(DataIterator).get_start_iypx6h_k$ = function () {
    return this.start_1;
  };
  protoOf(DataIterator).get_end_18j6ha_k$ = function () {
    return this.end_1;
  };
  protoOf(DataIterator).set_index_69f5xp_k$ = function (_set____db54di) {
    this.index_1 = _set____db54di;
  };
  protoOf(DataIterator).get_index_it478p_k$ = function () {
    return this.index_1;
  };
  protoOf(DataIterator).iterator_jk1svi_k$ = function () {
    return this;
  };
  protoOf(DataIterator).hasNext_bitz1p_k$ = function () {
    return this.index_1 < this.end_1;
  };
  protoOf(DataIterator).next_20eer_k$ = function () {
    // Inline function 'kotlin.also' call
    var this_0 = (this.index_1 >= 0 ? this.index_1 < this.table_1.slots_1.length : false) ? this.table_1.slots_1[this.index_1] : null;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.DataIterator.next.<anonymous>' call
    this.index_1 = this.index_1 + 1 | 0;
    return this_0;
  };
  function nodeIndex_0(_this__u8e3s4, address) {
    return _this__u8e3s4[imul(address, 5) + 4 | 0];
  }
  function auxIndex_0(_this__u8e3s4, address) {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.auxIndex.<anonymous>' call
    var slot = imul(address, 5);
    return slot >= _this__u8e3s4.length ? _this__u8e3s4.length : _this__u8e3s4[slot + 4 | 0] + countOneBits_0(_this__u8e3s4[slot + 1 | 0] >> 29) | 0;
  }
  function nodeCounts(_this__u8e3s4, len) {
    len = len === VOID ? _this__u8e3s4.length : len;
    // Inline function 'androidx.compose.runtime.snapshots.fastMap' call
    var this_0 = slice_0(_this__u8e3s4, step(until(1, len), 5));
    // Inline function 'kotlin.contracts.contract' call
    var target = ArrayList_init_$Create$_0(this_0.get_size_woubt6_k$());
    // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    var last = this_0.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var item = this_0.get_c1px32_k$(index);
        // Inline function 'androidx.compose.runtime.snapshots.fastMap.<anonymous>' call
        // Inline function 'kotlin.collections.plusAssign' call
        // Inline function 'androidx.compose.runtime.nodeCounts.<anonymous>' call
        var element = item & 67108863;
        target.add_utx5q5_k$(element);
      }
       while (inductionVariable <= last);
    return target;
  }
  function parentAnchors(_this__u8e3s4, len) {
    len = len === VOID ? _this__u8e3s4.length : len;
    return slice_0(_this__u8e3s4, step(until(2, len), 5));
  }
  function groupSizes_0(_this__u8e3s4, len) {
    len = len === VOID ? _this__u8e3s4.length : len;
    return slice_0(_this__u8e3s4, step(until(3, len), 5));
  }
  function _set_index__fyfqnn($this, _set____db54di) {
    $this.index_1 = _set____db54di;
  }
  function _get_index__g2optt($this) {
    return $this.index_1;
  }
  function _get_version__2bx7w9($this) {
    return $this.version_1;
  }
  function validateRead($this) {
    if (!($this.table_1.version_1 === $this.version_1)) {
      throw ConcurrentModificationException_init_$Create$();
    }
  }
  function GroupIterator(table, start, end) {
    this.table_1 = table;
    this.end_1 = end;
    this.index_1 = start;
    this.version_1 = this.table_1.version_1;
    if (this.table_1.writer_1)
      throw ConcurrentModificationException_init_$Create$();
  }
  protoOf(GroupIterator).get_table_iyxllx_k$ = function () {
    return this.table_1;
  };
  protoOf(GroupIterator).get_end_18j6ha_k$ = function () {
    return this.end_1;
  };
  protoOf(GroupIterator).hasNext_bitz1p_k$ = function () {
    return this.index_1 < this.end_1;
  };
  protoOf(GroupIterator).next_20eer_k$ = function () {
    validateRead(this);
    var group = this.index_1;
    this.index_1 = this.index_1 + groupSize(this.table_1.groups_1, group) | 0;
    return new SlotTableGroup(this.table_1, group, this.version_1);
  };
  function validateRead_0($this) {
    if (!($this.table_1.version_1 === $this.version_1)) {
      throw ConcurrentModificationException_init_$Create$();
    }
  }
  function SlotTableGroup(table, group, version) {
    version = version === VOID ? table.version_1 : version;
    this.table_1 = table;
    this.group_1 = group;
    this.version_1 = version;
  }
  protoOf(SlotTableGroup).get_table_iyxllx_k$ = function () {
    return this.table_1;
  };
  protoOf(SlotTableGroup).get_group_is3eja_k$ = function () {
    return this.group_1;
  };
  protoOf(SlotTableGroup).get_version_72w4j3_k$ = function () {
    return this.version_1;
  };
  protoOf(SlotTableGroup).get_isEmpty_zauvru_k$ = function () {
    return groupSize(this.table_1.groups_1, this.group_1) === 0;
  };
  protoOf(SlotTableGroup).get_key_18j28a_k$ = function () {
    return hasObjectKey(this.table_1.groups_1, this.group_1) ? ensureNotNull(this.table_1.slots_1[objectKeyIndex(this.table_1.groups_1, this.group_1)]) : key(this.table_1.groups_1, this.group_1);
  };
  protoOf(SlotTableGroup).get_sourceInfo_wgxvxu_k$ = function () {
    var tmp;
    if (hasAux(this.table_1.groups_1, this.group_1)) {
      var tmp_0 = this.table_1.slots_1[auxIndex_0(this.table_1.groups_1, this.group_1)];
      tmp = (!(tmp_0 == null) ? typeof tmp_0 === 'string' : false) ? tmp_0 : null;
    } else {
      tmp = null;
    }
    return tmp;
  };
  protoOf(SlotTableGroup).get_node_wor8sr_k$ = function () {
    return isNode(this.table_1.groups_1, this.group_1) ? this.table_1.slots_1[nodeIndex_0(this.table_1.groups_1, this.group_1)] : null;
  };
  protoOf(SlotTableGroup).get_data_wokkxf_k$ = function () {
    return new DataIterator(this.table_1, this.group_1);
  };
  protoOf(SlotTableGroup).get_identity_y1rl2x_k$ = function () {
    validateRead_0(this);
    // Inline function 'androidx.compose.runtime.SlotTable.read' call
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.SlotTable.read.<anonymous>' call
    var reader = this.table_1.openReader_51y0fh_k$();
    var tmp;
    try {
      // Inline function 'androidx.compose.runtime.SlotTableGroup.<get-identity>.<anonymous>' call
      tmp = reader.anchor_wwz2f1_k$(this.group_1);
    }finally {
      reader.close_yn9xrc_k$();
    }
    return tmp;
  };
  protoOf(SlotTableGroup).get_compositionGroups_rhqnp1_k$ = function () {
    return this;
  };
  protoOf(SlotTableGroup).iterator_jk1svi_k$ = function () {
    validateRead_0(this);
    return new GroupIterator(this.table_1, this.group_1 + 1 | 0, this.group_1 + groupSize(this.table_1.groups_1, this.group_1) | 0);
  };
  protoOf(SlotTableGroup).get_groupSize_g0fedl_k$ = function () {
    return groupSize(this.table_1.groups_1, this.group_1);
  };
  protoOf(SlotTableGroup).get_slotsSize_k5zoz1_k$ = function () {
    var nextGroup = this.group_1 + this.get_groupSize_g0fedl_k$() | 0;
    var nextSlot = nextGroup < this.table_1.groupsSize_1 ? dataAnchor(this.table_1.groups_1, nextGroup) : this.table_1.slotsSize_1;
    return nextSlot - dataAnchor(this.table_1.groups_1, this.group_1) | 0;
  };
  protoOf(SlotTableGroup).find_lz4g9n_k$ = function (identityToFind) {
    var tmp0_safe_receiver = identityToFind instanceof Anchor ? identityToFind : null;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.SlotTableGroup.find.<anonymous>' call
      var tmp_0;
      if (this.table_1.ownsAnchor_x2d87l_k$(tmp0_safe_receiver)) {
        var anchorGroup = this.table_1.anchorIndex_79wady_k$(tmp0_safe_receiver);
        tmp_0 = (anchorGroup >= this.group_1 ? (anchorGroup - this.group_1 | 0) < groupSize(this.table_1.groups_1, this.group_1) : false) ? new SlotTableGroup(this.table_1, anchorGroup, this.version_1) : null;
      } else {
        tmp_0 = null;
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  function get_NodeBit_Mask() {
    return NodeBit_Mask;
  }
  var NodeBit_Mask;
  function get_GroupInfo_Offset() {
    return GroupInfo_Offset;
  }
  var GroupInfo_Offset;
  function get_NodeCount_Mask() {
    return NodeCount_Mask;
  }
  var NodeCount_Mask;
  function get_ObjectKey_Mask() {
    return ObjectKey_Mask;
  }
  var ObjectKey_Mask;
  function get_ObjectKey_Shift() {
    return ObjectKey_Shift;
  }
  var ObjectKey_Shift;
  function get_DataAnchor_Offset() {
    return DataAnchor_Offset;
  }
  var DataAnchor_Offset;
  function get_Size_Offset() {
    return Size_Offset;
  }
  var Size_Offset;
  function get_Aux_Mask() {
    return Aux_Mask;
  }
  var Aux_Mask;
  function get_Key_Offset() {
    return Key_Offset;
  }
  var Key_Offset;
  function get_ParentAnchor_Offset() {
    return ParentAnchor_Offset;
  }
  var ParentAnchor_Offset;
  function get_Mark_Mask() {
    return Mark_Mask;
  }
  var Mark_Mask;
  function get_ContainsMark_Mask() {
    return ContainsMark_Mask;
  }
  var ContainsMark_Mask;
  function get_Slots_Shift() {
    return Slots_Shift;
  }
  var Slots_Shift;
  function slice_0(_this__u8e3s4, indices) {
    // Inline function 'kotlin.collections.mutableListOf' call
    var list = ArrayList_init_$Create$();
    var tmp0_iterator = indices.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var index = tmp0_iterator.next_20eer_k$();
      list.add_utx5q5_k$(_this__u8e3s4[index]);
    }
    return list;
  }
  function KeyInfo(key, objectKey, location, nodes, index) {
    this.key_1 = key;
    this.objectKey_1 = objectKey;
    this.location_1 = location;
    this.nodes_1 = nodes;
    this.index_1 = index;
  }
  protoOf(KeyInfo).get_key_18j28a_k$ = function () {
    return this.key_1;
  };
  protoOf(KeyInfo).get_objectKey_g4ct8p_k$ = function () {
    return this.objectKey_1;
  };
  protoOf(KeyInfo).get_location_d3s02_k$ = function () {
    return this.location_1;
  };
  protoOf(KeyInfo).get_nodes_ivvt6w_k$ = function () {
    return this.nodes_1;
  };
  protoOf(KeyInfo).get_index_it478p_k$ = function () {
    return this.index_1;
  };
  function search$accessor$mbvawc(_this__u8e3s4, location, effectiveSize) {
    return search(_this__u8e3s4, location, effectiveSize);
  }
  function SnapshotMutationPolicy() {
  }
  function structuralEqualityPolicy() {
    var tmp = StructuralEqualityPolicy_getInstance();
    return isInterface(tmp, SnapshotMutationPolicy) ? tmp : THROW_CCE();
  }
  function StructuralEqualityPolicy() {
    StructuralEqualityPolicy_instance = this;
  }
  protoOf(StructuralEqualityPolicy).equivalent_ika8t0_k$ = function (a, b) {
    return equals(a, b);
  };
  protoOf(StructuralEqualityPolicy).equivalent_gz6us_k$ = function (a, b) {
    var tmp = (a == null ? true : !(a == null)) ? a : THROW_CCE();
    return this.equivalent_ika8t0_k$(tmp, (b == null ? true : !(b == null)) ? b : THROW_CCE());
  };
  protoOf(StructuralEqualityPolicy).toString = function () {
    return 'StructuralEqualityPolicy';
  };
  var StructuralEqualityPolicy_instance;
  function StructuralEqualityPolicy_getInstance() {
    if (StructuralEqualityPolicy_instance == null)
      new StructuralEqualityPolicy();
    return StructuralEqualityPolicy_instance;
  }
  function State_0() {
  }
  function MutableState() {
  }
  function getValue(_this__u8e3s4, thisObj, property) {
    return _this__u8e3s4.get_value_j01efc_k$();
  }
  function setValue(_this__u8e3s4, thisObj, property, value) {
    _this__u8e3s4.set_value_v1vabv_k$(value);
  }
  function mutableStateOf(value, policy) {
    policy = policy === VOID ? structuralEqualityPolicy() : policy;
    return createSnapshotMutableState(value, policy);
  }
  function _set_next__9r2xms($this, _set____db54di) {
    $this.next_1 = _set____db54di;
  }
  function _get_next__daux88($this) {
    return $this.next_1;
  }
  function StateStateRecord(myValue) {
    StateRecord.call(this);
    this.value_1 = myValue;
  }
  protoOf(StateStateRecord).assign_k75sor_k$ = function (value) {
    var tmp = this;
    tmp.value_1 = (value instanceof StateStateRecord ? value : THROW_CCE()).value_1;
  };
  protoOf(StateStateRecord).create_md4cuc_k$ = function () {
    return new StateStateRecord(this.value_1);
  };
  protoOf(StateStateRecord).set_value_v1vabv_k$ = function (_set____db54di) {
    this.value_1 = _set____db54di;
  };
  protoOf(StateStateRecord).get_value_j01efc_k$ = function () {
    return this.value_1;
  };
  function SnapshotMutableStateImpl$component2$lambda(this$0) {
    return function (it) {
      this$0.set_value_v1vabv_k$(it);
      return Unit_getInstance();
    };
  }
  function SnapshotMutableStateImpl(value, policy) {
    this.policy_1 = policy;
    this.next_1 = new StateStateRecord(value);
  }
  protoOf(SnapshotMutableStateImpl).get_policy_i5q4hn_k$ = function () {
    return this.policy_1;
  };
  protoOf(SnapshotMutableStateImpl).set_value_v1vabv_k$ = function (value) {
    // Inline function 'androidx.compose.runtime.snapshots.withCurrent' call
    var this_0 = this.next_1;
    var it = current(this_0);
    var tmp;
    if (!this.get_policy_i5q4hn_k$().equivalent_gz6us_k$(it.value_1, value)) {
      // Inline function 'androidx.compose.runtime.snapshots.overwritable' call
      var this_1 = this.next_1;
      var snapshot = get_snapshotInitializer();
      // Inline function 'kotlin.also' call
      // Inline function 'androidx.compose.runtime.snapshots.sync' call
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      get_lock();
      // Inline function 'androidx.compose.runtime.snapshots.overwritable.<anonymous>' call
      snapshot = Companion_getInstance_12().get_current_jwi6j4_k$();
      overwritableRecord(this_1, this, snapshot, it).value_1 = value;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.snapshots.overwritable.<anonymous>' call
      notifyWrite(snapshot, this);
      tmp = Unit_getInstance();
    }
    return tmp;
  };
  protoOf(SnapshotMutableStateImpl).get_value_j01efc_k$ = function () {
    return readable_0(this.next_1, this).value_1;
  };
  protoOf(SnapshotMutableStateImpl).get_firstStateRecord_49tq6d_k$ = function () {
    return this.next_1;
  };
  protoOf(SnapshotMutableStateImpl).prependStateRecord_jvgf4_k$ = function (value) {
    var tmp = this;
    tmp.next_1 = value instanceof StateStateRecord ? value : THROW_CCE();
  };
  protoOf(SnapshotMutableStateImpl).mergeRecords_7xjkji_k$ = function (previous, current, applied) {
    var previousRecord = previous instanceof StateStateRecord ? previous : THROW_CCE();
    var currentRecord = current instanceof StateStateRecord ? current : THROW_CCE();
    var appliedRecord = applied instanceof StateStateRecord ? applied : THROW_CCE();
    var tmp;
    if (this.get_policy_i5q4hn_k$().equivalent_gz6us_k$(currentRecord.value_1, appliedRecord.value_1)) {
      tmp = current;
    } else {
      var merged = this.get_policy_i5q4hn_k$().merge_q9rxor_k$(previousRecord.value_1, currentRecord.value_1, appliedRecord.value_1);
      var tmp_0;
      if (!(merged == null)) {
        // Inline function 'kotlin.also' call
        var this_0 = appliedRecord.create_md4cuc_k$();
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.SnapshotMutableStateImpl.mergeRecords.<anonymous>' call
        (this_0 instanceof StateStateRecord ? this_0 : THROW_CCE()).value_1 = merged;
        tmp_0 = this_0;
      } else {
        tmp_0 = null;
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  protoOf(SnapshotMutableStateImpl).toString = function () {
    // Inline function 'androidx.compose.runtime.snapshots.withCurrent' call
    var this_0 = this.next_1;
    // Inline function 'androidx.compose.runtime.SnapshotMutableStateImpl.toString.<anonymous>' call
    return 'MutableState(value=' + current(this_0).value_1 + ')@' + hashCode(this);
  };
  protoOf(SnapshotMutableStateImpl).component1_7eebsc_k$ = function () {
    return this.get_value_j01efc_k$();
  };
  protoOf(SnapshotMutableStateImpl).component2_7eebsb_k$ = function () {
    return SnapshotMutableStateImpl$component2$lambda(this);
  };
  protoOf(SnapshotMutableStateImpl).get_debuggerDisplayValue_msqi3r_k$ = function () {
    // Inline function 'androidx.compose.runtime.snapshots.withCurrent' call
    var this_0 = this.next_1;
    // Inline function 'androidx.compose.runtime.SnapshotMutableStateImpl.<get-debuggerDisplayValue>.<anonymous>' call
    return current(this_0).value_1;
  };
  function mutableStateListOf() {
    return new SnapshotStateList();
  }
  function _get_map__e6co1h($this) {
    return $this.map_1;
  }
  function _get_writeMutex__anxmqd($this) {
    return $this.writeMutex_1;
  }
  function SnapshotThreadLocal() {
    this.map_1 = new AtomicReference(get_emptyThreadMap());
    this.writeMutex_1 = new SynchronizedObject();
  }
  protoOf(SnapshotThreadLocal).get_26vq_k$ = function () {
    var tmp = this.map_1.get_26vq_k$().get_ugtq3c_k$(getCurrentThreadId());
    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
  };
  protoOf(SnapshotThreadLocal).set_bjwkek_k$ = function (value) {
    var key = getCurrentThreadId();
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.writeMutex_1;
    var current = this.map_1.get_26vq_k$();
    if (current.trySet_x1sswo_k$(key, value))
      return Unit_getInstance();
    this.map_1.set_inogor_k$(current.newWith_ca7vfb_k$(key, value));
  };
  function Stable() {
  }
  protoOf(Stable).equals = function (other) {
    if (!(other instanceof Stable))
      return false;
    other instanceof Stable || THROW_CCE();
    return true;
  };
  protoOf(Stable).hashCode = function () {
    return 0;
  };
  protoOf(Stable).toString = function () {
    return '@androidx.compose.runtime.Stable()';
  };
  function StableMarker() {
  }
  protoOf(StableMarker).equals = function (other) {
    if (!(other instanceof StableMarker))
      return false;
    other instanceof StableMarker || THROW_CCE();
    return true;
  };
  protoOf(StableMarker).hashCode = function () {
    return 0;
  };
  protoOf(StableMarker).toString = function () {
    return '@androidx.compose.runtime.StableMarker()';
  };
  function _set_slots__knzp9s_1($this, _set____db54di) {
    $this.slots_1 = _set____db54di;
  }
  function _get_slots__bd4r7o_1($this) {
    return $this.slots_1;
  }
  function _set_tos__4weu99($this, _set____db54di) {
    $this.tos_1 = _set____db54di;
  }
  function _get_tos__e6hfeh($this) {
    return $this.tos_1;
  }
  function IntStack() {
    this.slots_1 = new Int32Array(10);
    this.tos_1 = 0;
  }
  protoOf(IntStack).get_size_woubt6_k$ = function () {
    return this.tos_1;
  };
  protoOf(IntStack).push_w5xqdu_k$ = function (value) {
    if (this.tos_1 >= this.slots_1.length) {
      this.slots_1 = copyOf(this.slots_1, imul(this.slots_1.length, 2));
    }
    var tmp = this.slots_1;
    var tmp1 = this.tos_1;
    this.tos_1 = tmp1 + 1 | 0;
    tmp[tmp1] = value;
  };
  protoOf(IntStack).pop_2dsh_k$ = function () {
    var tmp = this.slots_1;
    this.tos_1 = this.tos_1 - 1 | 0;
    return tmp[this.tos_1];
  };
  protoOf(IntStack).peekOr_nt91iy_k$ = function (default_0) {
    return this.tos_1 > 0 ? this.peek_21nx7_k$() : default_0;
  };
  protoOf(IntStack).peek_21nx7_k$ = function () {
    return this.slots_1[this.tos_1 - 1 | 0];
  };
  protoOf(IntStack).peek_6g603_k$ = function (index) {
    return this.slots_1[index];
  };
  protoOf(IntStack).isEmpty_y1axqb_k$ = function () {
    return this.tos_1 === 0;
  };
  protoOf(IntStack).isNotEmpty_cjxbwk_k$ = function () {
    return !(this.tos_1 === 0);
  };
  protoOf(IntStack).clear_j9egeb_k$ = function () {
    this.tos_1 = 0;
  };
  protoOf(IntStack).indexOf_h7efip_k$ = function (value) {
    var inductionVariable = 0;
    var last = this.tos_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (this.slots_1[i] === value)
          return i;
      }
       while (inductionVariable < last);
    return -1;
  };
  function _get_backing__s7m0a($this) {
    return $this.backing_1;
  }
  function Stack() {
    this.backing_1 = ArrayList_init_$Create$();
  }
  protoOf(Stack).get_size_woubt6_k$ = function () {
    return this.backing_1.get_size_woubt6_k$();
  };
  protoOf(Stack).push_wwyl8r_k$ = function (value) {
    return this.backing_1.add_utx5q5_k$(value);
  };
  protoOf(Stack).pop_2dsh_k$ = function () {
    return this.backing_1.removeAt_6niowx_k$(this.get_size_woubt6_k$() - 1 | 0);
  };
  protoOf(Stack).peek_21nx7_k$ = function () {
    return this.backing_1.get_c1px32_k$(this.get_size_woubt6_k$() - 1 | 0);
  };
  protoOf(Stack).peek_6g603_k$ = function (index) {
    return this.backing_1.get_c1px32_k$(index);
  };
  protoOf(Stack).isEmpty_y1axqb_k$ = function () {
    return this.backing_1.isEmpty_y1axqb_k$();
  };
  protoOf(Stack).isNotEmpty_cjxbwk_k$ = function () {
    return !this.isEmpty_y1axqb_k$();
  };
  protoOf(Stack).clear_j9egeb_k$ = function () {
    return this.backing_1.clear_j9egeb_k$();
  };
  protoOf(Stack).toArray_jjyjqa_k$ = function () {
    var tmp = 0;
    var tmp_0 = this.backing_1.get_size_woubt6_k$();
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp_1 = fillArrayVal(Array(tmp_0), null);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      tmp_1[tmp_2] = this.backing_1.get_c1px32_k$(tmp_2);
      tmp = tmp + 1 | 0;
    }
    var tmp_3 = tmp_1;
    return isArray(tmp_3) ? tmp_3 : THROW_CCE();
  };
  function SynchronizedObject() {
  }
  function synchronized(lock, block) {
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    return block();
  }
  function createSynchronizedObject() {
    return new SynchronizedObject();
  }
  function trace(sectionName, block) {
    var token = Trace_getInstance().beginSection_2k8ef6_k$(sectionName);
    try {
      return block();
    }finally {
      Trace_getInstance().endSection_5rdvi3_k$(token);
    }
  }
  function _get_current__qcrdxk($this) {
    // Inline function 'kotlin.getValue' call
    var this_0 = $this.current$delegate_1;
    current$factory();
    return this_0.get_value_j01efc_k$();
  }
  function LazyValueHolder(valueProducer) {
    this.current$delegate_1 = lazy(valueProducer);
  }
  protoOf(LazyValueHolder).get_value_j01efc_k$ = function () {
    return _get_current__qcrdxk(this);
  };
  function StaticValueHolder(value) {
    this.value_1 = value;
  }
  protoOf(StaticValueHolder).get_value_j01efc_k$ = function () {
    return this.value_1;
  };
  protoOf(StaticValueHolder).component1_7eebsc_k$ = function () {
    return this.value_1;
  };
  protoOf(StaticValueHolder).copy_62qimy_k$ = function (value) {
    return new StaticValueHolder(value);
  };
  protoOf(StaticValueHolder).copy$default_5ijkei_k$ = function (value, $super) {
    value = value === VOID ? this.value_1 : value;
    return $super === VOID ? this.copy_62qimy_k$(value) : $super.copy_62qimy_k$.call(this, value);
  };
  protoOf(StaticValueHolder).toString = function () {
    return 'StaticValueHolder(value=' + this.value_1 + ')';
  };
  protoOf(StaticValueHolder).hashCode = function () {
    return this.value_1 == null ? 0 : hashCode(this.value_1);
  };
  protoOf(StaticValueHolder).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof StaticValueHolder))
      return false;
    var tmp0_other_with_cast = other instanceof StaticValueHolder ? other : THROW_CCE();
    if (!equals(this.value_1, tmp0_other_with_cast.value_1))
      return false;
    return true;
  };
  function current$factory() {
    return getPropertyCallableRef('current', 1, KProperty1, function (receiver) {
      return _get_current__qcrdxk(receiver);
    }, null);
  }
  function _set_size__9twho6($this, _set____db54di) {
    $this.size_1 = _set____db54di;
  }
  function _set_keys__9pfkkj($this, _set____db54di) {
    $this.keys_1 = _set____db54di;
  }
  function _set_values__uvbruz($this, _set____db54di) {
    $this.values_1 = _set____db54di;
  }
  function find_0($this, key) {
    var low = 0;
    var high = $this.size_1 - 1 | 0;
    var valueIdentity = identityHashCode(key);
    var keys = $this.keys_1;
    while (low <= high) {
      var mid = (low + high | 0) >>> 1 | 0;
      var midVal = keys[mid];
      var midIdentity = identityHashCode(midVal);
      if (midIdentity < valueIdentity)
        low = mid + 1 | 0;
      else if (midIdentity > valueIdentity)
        high = mid - 1 | 0;
      else if (midVal === key)
        return mid;
      else
        return findExactIndex($this, mid, key, valueIdentity);
    }
    return -(low + 1 | 0) | 0;
  }
  function findExactIndex($this, midIndex, value, valueHash) {
    var keys = $this.keys_1;
    var size = $this.size_1;
    var inductionVariable = midIndex - 1 | 0;
    if (0 <= inductionVariable)
      $l$loop: do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var v = keys[i];
        if (v === value) {
          return i;
        }
        if (!(identityHashCode(v) === valueHash)) {
          break $l$loop;
        }
      }
       while (0 <= inductionVariable);
    var inductionVariable_0 = midIndex + 1 | 0;
    if (inductionVariable_0 < size)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var v_0 = keys[i_0];
        if (v_0 === value) {
          return i_0;
        }
        if (!(identityHashCode(v_0) === valueHash)) {
          return -(i_0 + 1 | 0) | 0;
        }
      }
       while (inductionVariable_0 < size);
    return -(size + 1 | 0) | 0;
  }
  function IdentityArrayIntMap() {
    this.size_1 = 0;
    var tmp = this;
    // Inline function 'kotlin.arrayOfNulls' call
    tmp.keys_1 = fillArrayVal(Array(4), null);
    this.values_1 = new Int32Array(4);
  }
  protoOf(IdentityArrayIntMap).get_size_woubt6_k$ = function () {
    return this.size_1;
  };
  protoOf(IdentityArrayIntMap).get_keys_wop4xp_k$ = function () {
    return this.keys_1;
  };
  protoOf(IdentityArrayIntMap).get_values_ksazhn_k$ = function () {
    return this.values_1;
  };
  protoOf(IdentityArrayIntMap).get_fkr7qg_k$ = function (key) {
    var index = find_0(this, key);
    var tmp;
    if (index >= 0) {
      tmp = this.values_1[index];
    } else {
      var message = 'Key not found';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    return tmp;
  };
  protoOf(IdentityArrayIntMap).add_lujshn_k$ = function (key, value) {
    var values = this.values_1;
    var index;
    if (this.size_1 > 0) {
      index = find_0(this, key);
      if (index >= 0) {
        var previousValue = values[index];
        values[index] = value;
        return previousValue;
      }
    } else {
      index = -1;
    }
    var insertIndex = -(index + 1 | 0) | 0;
    var keys = this.keys_1;
    var size = this.size_1;
    if (size === keys.length) {
      // Inline function 'kotlin.arrayOfNulls' call
      var size_0 = imul(keys.length, 2);
      var newKeys = fillArrayVal(Array(size_0), null);
      var newValues = new Int32Array(imul(keys.length, 2));
      // Inline function 'kotlin.collections.copyInto' call
      var destinationOffset = insertIndex + 1 | 0;
      arrayCopy(keys, newKeys, destinationOffset, insertIndex, size);
      // Inline function 'kotlin.collections.copyInto' call
      var destinationOffset_0 = insertIndex + 1 | 0;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp = values;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      arrayCopy(tmp, newValues, destinationOffset_0, insertIndex, size);
      // Inline function 'kotlin.collections.copyInto' call
      arrayCopy(keys, newKeys, 0, 0, insertIndex);
      // Inline function 'kotlin.collections.copyInto' call
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp_0 = values;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      arrayCopy(tmp_0, newValues, 0, 0, insertIndex);
      this.keys_1 = newKeys;
      this.values_1 = newValues;
    } else {
      // Inline function 'kotlin.collections.copyInto' call
      var destinationOffset_1 = insertIndex + 1 | 0;
      arrayCopy(keys, keys, destinationOffset_1, insertIndex, size);
      // Inline function 'kotlin.collections.copyInto' call
      var destinationOffset_2 = insertIndex + 1 | 0;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp_1 = values;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      arrayCopy(tmp_1, values, destinationOffset_2, insertIndex, size);
    }
    this.keys_1[insertIndex] = key;
    this.values_1[insertIndex] = value;
    this.size_1 = this.size_1 + 1 | 0;
    return -1;
  };
  protoOf(IdentityArrayIntMap).remove_bdrfuu_k$ = function (key) {
    var index = find_0(this, key);
    var keys = this.keys_1;
    var values = this.values_1;
    var size = this.size_1;
    if (index >= 0) {
      if (index < (size - 1 | 0)) {
        // Inline function 'kotlin.collections.copyInto' call
        var startIndex = index + 1 | 0;
        arrayCopy(keys, keys, index, startIndex, size);
        // Inline function 'kotlin.collections.copyInto' call
        var startIndex_0 = index + 1 | 0;
        // Inline function 'kotlin.js.unsafeCast' call
        // Inline function 'kotlin.js.asDynamic' call
        var tmp = values;
        // Inline function 'kotlin.js.unsafeCast' call
        // Inline function 'kotlin.js.asDynamic' call
        arrayCopy(tmp, values, index, startIndex_0, size);
      }
      var newSize = size - 1 | 0;
      keys[newSize] = null;
      this.size_1 = newSize;
      return true;
    }
    return false;
  };
  protoOf(IdentityArrayIntMap).removeValueIf_f0sj3o_k$ = function (predicate) {
    var keys = this.keys_1;
    var values = this.values_1;
    var size = this.size_1;
    var destinationIndex = 0;
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp = keys[i];
        var key = !(tmp == null) ? tmp : THROW_CCE();
        var value = values[i];
        if (!predicate(key, value)) {
          if (!(destinationIndex === i)) {
            keys[destinationIndex] = key;
            values[destinationIndex] = value;
          }
          destinationIndex = destinationIndex + 1 | 0;
        }
      }
       while (inductionVariable < size);
    var inductionVariable_0 = destinationIndex;
    if (inductionVariable_0 < size)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        keys[i_0] = null;
      }
       while (inductionVariable_0 < size);
    this.size_1 = destinationIndex;
  };
  protoOf(IdentityArrayIntMap).any_skd39e_k$ = function (predicate) {
    var keys = this.keys_1;
    var values = this.values_1;
    var size = this.size_1;
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp = keys[i];
        if (predicate(!(tmp == null) ? tmp : THROW_CCE(), values[i]))
          return true;
      }
       while (inductionVariable < size);
    return false;
  };
  protoOf(IdentityArrayIntMap).forEach_fhf4yb_k$ = function (block) {
    var keys = this.keys_1;
    var values = this.values_1;
    var size = this.size_1;
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp = keys[i];
        block(!(tmp == null) ? tmp : THROW_CCE(), values[i]);
      }
       while (inductionVariable < size);
  };
  function _set_keys__9pfkkj_0($this, _set____db54di) {
    $this.keys_1 = _set____db54di;
  }
  function _set_values__uvbruz_0($this, _set____db54di) {
    $this.values_1 = _set____db54di;
  }
  function _set_size__9twho6_0($this, _set____db54di) {
    $this.size_1 = _set____db54di;
  }
  function find_1($this, key) {
    var keyIdentity = identityHashCode(key);
    var low = 0;
    var high = $this.size_1 - 1 | 0;
    var keys = $this.keys_1;
    while (low <= high) {
      var mid = (low + high | 0) >>> 1 | 0;
      var midKey = keys[mid];
      var midKeyHash = identityHashCode(midKey);
      if (midKeyHash < keyIdentity)
        low = mid + 1 | 0;
      else if (midKeyHash > keyIdentity)
        high = mid - 1 | 0;
      else if (key === midKey)
        return mid;
      else
        return findExactIndex_0($this, mid, key, keyIdentity);
    }
    return -(low + 1 | 0) | 0;
  }
  function findExactIndex_0($this, midIndex, key, keyHash) {
    var keys = $this.keys_1;
    var size = $this.size_1;
    var inductionVariable = midIndex - 1 | 0;
    if (0 <= inductionVariable)
      $l$loop: do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var k = keys[i];
        if (k === key) {
          return i;
        }
        if (!(identityHashCode(k) === keyHash)) {
          break $l$loop;
        }
      }
       while (0 <= inductionVariable);
    var inductionVariable_0 = midIndex + 1 | 0;
    if (inductionVariable_0 < size)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var k_0 = keys[i_0];
        if (k_0 === key) {
          return i_0;
        }
        if (!(identityHashCode(k_0) === keyHash)) {
          return -(i_0 + 1 | 0) | 0;
        }
      }
       while (inductionVariable_0 < size);
    return -(size + 1 | 0) | 0;
  }
  function IdentityArrayMap(capacity) {
    capacity = capacity === VOID ? 16 : capacity;
    var tmp = this;
    // Inline function 'kotlin.arrayOfNulls' call
    tmp.keys_1 = fillArrayVal(Array(capacity), null);
    var tmp_0 = this;
    // Inline function 'kotlin.arrayOfNulls' call
    tmp_0.values_1 = fillArrayVal(Array(capacity), null);
    this.size_1 = 0;
  }
  protoOf(IdentityArrayMap).get_keys_wop4xp_k$ = function () {
    return this.keys_1;
  };
  protoOf(IdentityArrayMap).get_values_ksazhn_k$ = function () {
    return this.values_1;
  };
  protoOf(IdentityArrayMap).get_size_woubt6_k$ = function () {
    return this.size_1;
  };
  protoOf(IdentityArrayMap).isEmpty_y1axqb_k$ = function () {
    return this.size_1 === 0;
  };
  protoOf(IdentityArrayMap).isNotEmpty_cjxbwk_k$ = function () {
    return this.size_1 > 0;
  };
  protoOf(IdentityArrayMap).contains_qayb5o_k$ = function (key) {
    return find_1(this, key) >= 0;
  };
  protoOf(IdentityArrayMap).get_csq61f_k$ = function (key) {
    var index = find_1(this, key);
    var tmp;
    if (index >= 0) {
      var tmp_0 = this.values_1[index];
      tmp = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
    } else {
      tmp = null;
    }
    return tmp;
  };
  protoOf(IdentityArrayMap).set_d3rebl_k$ = function (key, value) {
    var keys = this.keys_1;
    var values = this.values_1;
    var size = this.size_1;
    var index = find_1(this, key);
    if (index >= 0) {
      values[index] = value;
    } else {
      var insertIndex = -(index + 1 | 0) | 0;
      var resize = size === keys.length;
      var tmp;
      if (resize) {
        // Inline function 'kotlin.arrayOfNulls' call
        var size_0 = imul(size, 2);
        tmp = fillArrayVal(Array(size_0), null);
      } else {
        tmp = keys;
      }
      var destKeys = tmp;
      // Inline function 'kotlin.collections.copyInto' call
      var destinationOffset = insertIndex + 1 | 0;
      arrayCopy(keys, destKeys, destinationOffset, insertIndex, size);
      if (resize) {
        // Inline function 'kotlin.collections.copyInto' call
        arrayCopy(keys, destKeys, 0, 0, insertIndex);
      }
      destKeys[insertIndex] = key;
      this.keys_1 = destKeys;
      var tmp_0;
      if (resize) {
        // Inline function 'kotlin.arrayOfNulls' call
        var size_1 = imul(size, 2);
        tmp_0 = fillArrayVal(Array(size_1), null);
      } else {
        tmp_0 = values;
      }
      var destValues = tmp_0;
      // Inline function 'kotlin.collections.copyInto' call
      var destinationOffset_0 = insertIndex + 1 | 0;
      arrayCopy(values, destValues, destinationOffset_0, insertIndex, size);
      if (resize) {
        // Inline function 'kotlin.collections.copyInto' call
        arrayCopy(values, destValues, 0, 0, insertIndex);
      }
      destValues[insertIndex] = value;
      this.values_1 = destValues;
      this.size_1 = this.size_1 + 1 | 0;
    }
  };
  protoOf(IdentityArrayMap).remove_no9i4h_k$ = function (key) {
    var index = find_1(this, key);
    if (index >= 0) {
      var value = this.values_1[index];
      var size = this.size_1;
      var keys = this.keys_1;
      var values = this.values_1;
      // Inline function 'kotlin.collections.copyInto' call
      var startIndex = index + 1 | 0;
      arrayCopy(keys, keys, index, startIndex, size);
      // Inline function 'kotlin.collections.copyInto' call
      var startIndex_0 = index + 1 | 0;
      arrayCopy(values, values, index, startIndex_0, size);
      var newSize = size - 1 | 0;
      keys[newSize] = null;
      values[newSize] = null;
      this.size_1 = newSize;
      return (value == null ? true : !(value == null)) ? value : THROW_CCE();
    }
    return null;
  };
  protoOf(IdentityArrayMap).clear_j9egeb_k$ = function () {
    this.size_1 = 0;
    fill_0(this.keys_1, null);
    fill_0(this.values_1, null);
  };
  protoOf(IdentityArrayMap).removeIf_mtyw3y_k$ = function (block) {
    var current = 0;
    var inductionVariable = 0;
    var last = this.size_1;
    if (inductionVariable < last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp = this.keys_1[index];
        var key = !(tmp == null) ? tmp : THROW_CCE();
        var tmp_0 = this.values_1[index];
        var value = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
        if (!block(key, value)) {
          if (!(current === index)) {
            this.keys_1[current] = key;
            this.values_1[current] = this.values_1[index];
          }
          current = current + 1 | 0;
        }
      }
       while (inductionVariable < last);
    if (this.size_1 > current) {
      var inductionVariable_0 = current;
      var last_0 = this.size_1;
      if (inductionVariable_0 < last_0)
        do {
          var index_0 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + 1 | 0;
          this.keys_1[index_0] = null;
          this.values_1[index_0] = null;
        }
         while (inductionVariable_0 < last_0);
      this.size_1 = current;
    }
  };
  protoOf(IdentityArrayMap).removeValueIf_lcwq5n_k$ = function (block) {
    // Inline function 'androidx.compose.runtime.collection.IdentityArrayMap.removeIf' call
    var current = 0;
    var inductionVariable = 0;
    var last = this.size_1;
    if (inductionVariable < last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp = this.keys_1[index];
        var key = !(tmp == null) ? tmp : THROW_CCE();
        var tmp_0 = this.values_1[index];
        var value = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
        // Inline function 'androidx.compose.runtime.collection.IdentityArrayMap.removeValueIf.<anonymous>' call
        if (!block(value)) {
          if (!(current === index)) {
            this.keys_1[current] = key;
            this.values_1[current] = this.values_1[index];
          }
          current = current + 1 | 0;
        }
      }
       while (inductionVariable < last);
    if (this.size_1 > current) {
      var inductionVariable_0 = current;
      var last_0 = this.size_1;
      if (inductionVariable_0 < last_0)
        do {
          var index_0 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + 1 | 0;
          this.keys_1[index_0] = null;
          this.values_1[index_0] = null;
        }
         while (inductionVariable_0 < last_0);
      this.size_1 = current;
    }
  };
  protoOf(IdentityArrayMap).forEach_n0if2w_k$ = function (block) {
    var inductionVariable = 0;
    var last = this.size_1;
    if (inductionVariable < last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp = this.keys_1[index];
        var tmp_0 = !(tmp == null) ? tmp : THROW_CCE();
        var tmp_1 = this.values_1[index];
        block(tmp_0, (tmp_1 == null ? true : !(tmp_1 == null)) ? tmp_1 : THROW_CCE());
      }
       while (inductionVariable < last);
  };
  function _set_size__9twho6_1($this, _set____db54di) {
    $this.size_1 = _set____db54di;
  }
  function _set_values__uvbruz_1($this, _set____db54di) {
    $this.values_1 = _set____db54di;
  }
  function find_2($this, value) {
    var low = 0;
    var high = $this.size_1 - 1 | 0;
    var valueIdentity = identityHashCode(value);
    var values = $this.values_1;
    while (low <= high) {
      var mid = (low + high | 0) >>> 1 | 0;
      var midVal = values[mid];
      var midIdentity = identityHashCode(midVal);
      if (midIdentity < valueIdentity)
        low = mid + 1 | 0;
      else if (midIdentity > valueIdentity)
        high = mid - 1 | 0;
      else if (midVal === value)
        return mid;
      else
        return findExactIndex_1($this, mid, value, valueIdentity);
    }
    return -(low + 1 | 0) | 0;
  }
  function findExactIndex_1($this, midIndex, value, valueHash) {
    var values = $this.values_1;
    var size = $this.size_1;
    var inductionVariable = midIndex - 1 | 0;
    if (0 <= inductionVariable)
      $l$loop: do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var v = values[i];
        if (v === value) {
          return i;
        }
        if (!(identityHashCode(v) === valueHash)) {
          break $l$loop;
        }
      }
       while (0 <= inductionVariable);
    var inductionVariable_0 = midIndex + 1 | 0;
    if (inductionVariable_0 < size)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var v_0 = values[i_0];
        if (v_0 === value) {
          return i_0;
        }
        if (!(identityHashCode(v_0) === valueHash)) {
          return -(i_0 + 1 | 0) | 0;
        }
      }
       while (inductionVariable_0 < size);
    return -(size + 1 | 0) | 0;
  }
  function checkIndexBounds($this, index) {
    if (!(0 <= index ? index < $this.size_1 : false)) {
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ', size ' + $this.size_1);
    }
  }
  function IdentityArraySet$iterator$1(this$0) {
    this.this$0__1 = this$0;
    this.index_1 = 0;
  }
  protoOf(IdentityArraySet$iterator$1).set_index_69f5xp_k$ = function (_set____db54di) {
    this.index_1 = _set____db54di;
  };
  protoOf(IdentityArraySet$iterator$1).get_index_it478p_k$ = function () {
    return this.index_1;
  };
  protoOf(IdentityArraySet$iterator$1).hasNext_bitz1p_k$ = function () {
    return this.index_1 < this.this$0__1.size_1;
  };
  protoOf(IdentityArraySet$iterator$1).next_20eer_k$ = function () {
    var tmp = this.this$0__1.values_1;
    var tmp1 = this.index_1;
    this.index_1 = tmp1 + 1 | 0;
    var tmp_0 = tmp[tmp1];
    return !(tmp_0 == null) ? tmp_0 : THROW_CCE();
  };
  function IdentityArraySet$toString$lambda(it) {
    return toString(it);
  }
  function IdentityArraySet() {
    this.size_1 = 0;
    var tmp = this;
    // Inline function 'kotlin.arrayOfNulls' call
    tmp.values_1 = fillArrayVal(Array(16), null);
  }
  protoOf(IdentityArraySet).get_size_woubt6_k$ = function () {
    return this.size_1;
  };
  protoOf(IdentityArraySet).get_values_ksazhn_k$ = function () {
    return this.values_1;
  };
  protoOf(IdentityArraySet).contains_r3i6dr_k$ = function (element) {
    return find_2(this, element) >= 0;
  };
  protoOf(IdentityArraySet).contains_aljjnj_k$ = function (element) {
    if (!!(element == null))
      return false;
    return this.contains_r3i6dr_k$(!(element == null) ? element : THROW_CCE());
  };
  protoOf(IdentityArraySet).get_c1px32_k$ = function (index) {
    checkIndexBounds(this, index);
    var tmp = this.values_1[index];
    return !(tmp == null) ? tmp : THROW_CCE();
  };
  protoOf(IdentityArraySet).add_jkjo25_k$ = function (value) {
    var index;
    var size = this.size_1;
    var values = this.values_1;
    if (size > 0) {
      index = find_2(this, value);
      if (index >= 0) {
        return false;
      }
    } else {
      index = -1;
    }
    var insertIndex = -(index + 1 | 0) | 0;
    if (size === values.length) {
      // Inline function 'kotlin.arrayOfNulls' call
      var size_0 = imul(values.length, 2);
      var newSorted = fillArrayVal(Array(size_0), null);
      // Inline function 'kotlin.collections.copyInto' call
      var destinationOffset = insertIndex + 1 | 0;
      arrayCopy(values, newSorted, destinationOffset, insertIndex, size);
      // Inline function 'kotlin.collections.copyInto' call
      arrayCopy(values, newSorted, 0, 0, insertIndex);
      this.values_1 = newSorted;
    } else {
      // Inline function 'kotlin.collections.copyInto' call
      var destinationOffset_0 = insertIndex + 1 | 0;
      arrayCopy(values, values, destinationOffset_0, insertIndex, size);
    }
    this.values_1[insertIndex] = value;
    this.size_1 = this.size_1 + 1 | 0;
    return true;
  };
  protoOf(IdentityArraySet).clear_j9egeb_k$ = function () {
    fill_0(this.values_1, null);
    this.size_1 = 0;
  };
  protoOf(IdentityArraySet).fastForEach_2p7l2l_k$ = function (block) {
    // Inline function 'kotlin.contracts.contract' call
    var values = this.values_1;
    var inductionVariable = 0;
    var last = this.size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp = values[i];
        block(!(tmp == null) ? tmp : THROW_CCE());
      }
       while (inductionVariable < last);
  };
  protoOf(IdentityArraySet).addAll_xcz12o_k$ = function (collection) {
    if (collection.isEmpty_y1axqb_k$())
      return Unit_getInstance();
    if (!(collection instanceof IdentityArraySet)) {
      var tmp0_iterator = collection.iterator_jk1svi_k$();
      while (tmp0_iterator.hasNext_bitz1p_k$()) {
        var value = tmp0_iterator.next_20eer_k$();
        this.add_jkjo25_k$(value);
      }
    } else {
      var thisValues = this.values_1;
      var otherValues = collection.values_1;
      var thisSize = this.size_1;
      var otherSize = collection.size_1;
      var combinedSize = thisSize + otherSize | 0;
      var needsResize = this.values_1.length < combinedSize;
      var elementsInOrder = thisSize === 0 ? true : identityHashCode(thisValues[thisSize - 1 | 0]) < identityHashCode(otherValues[0]);
      if (!needsResize ? elementsInOrder : false) {
        // Inline function 'kotlin.collections.copyInto' call
        arrayCopy(otherValues, thisValues, thisSize, 0, otherSize);
        this.size_1 = this.size_1 + otherSize | 0;
      } else {
        var tmp;
        if (needsResize) {
          // Inline function 'kotlin.arrayOfNulls' call
          var size = thisSize > otherSize ? imul(thisSize, 2) : imul(otherSize, 2);
          tmp = fillArrayVal(Array(size), null);
        } else {
          tmp = thisValues;
        }
        var newArray = tmp;
        var thisIndex = thisSize - 1 | 0;
        var otherIndex = otherSize - 1 | 0;
        var nextInsertIndex = combinedSize - 1 | 0;
        $l$loop_1: while (thisIndex >= 0 ? true : otherIndex >= 0) {
          var tmp_0;
          if (thisIndex < 0) {
            var tmp2 = otherIndex;
            otherIndex = tmp2 - 1 | 0;
            tmp_0 = otherValues[tmp2];
          } else if (otherIndex < 0) {
            var tmp3 = thisIndex;
            thisIndex = tmp3 - 1 | 0;
            tmp_0 = thisValues[tmp3];
          } else {
            var thisValue = thisValues[thisIndex];
            var otherValue = otherValues[otherIndex];
            var thisHash = identityHashCode(thisValue);
            var otherHash = identityHashCode(otherValue);
            var tmp_1;
            if (thisHash > otherHash) {
              thisIndex = thisIndex - 1 | 0;
              tmp_1 = thisValue;
            } else if (thisHash < otherHash) {
              otherIndex = otherIndex - 1 | 0;
              tmp_1 = otherValue;
            } else if (thisValue === otherValue) {
              thisIndex = thisIndex - 1 | 0;
              otherIndex = otherIndex - 1 | 0;
              tmp_1 = thisValue;
            } else {
              var i = thisIndex - 1 | 0;
              var foundDuplicate = false;
              $l$loop_0: while (i >= 0) {
                var tmp8 = i;
                i = tmp8 - 1 | 0;
                var value_0 = thisValues[tmp8];
                if (!(identityHashCode(value_0) === otherHash))
                  break $l$loop_0;
                if (otherValue === value_0) {
                  foundDuplicate = true;
                  break $l$loop_0;
                }
              }
              var tmp_2;
              if (foundDuplicate) {
                otherIndex = otherIndex - 1 | 0;
                continue $l$loop_1;
              } else {
                otherIndex = otherIndex - 1 | 0;
                tmp_2 = otherValue;
              }
              tmp_1 = tmp_2;
            }
            tmp_0 = tmp_1;
          }
          var nextValue = tmp_0;
          var tmp11 = nextInsertIndex;
          nextInsertIndex = tmp11 - 1 | 0;
          newArray[tmp11] = nextValue;
        }
        if (nextInsertIndex >= 0) {
          // Inline function 'kotlin.collections.copyInto' call
          var startIndex = nextInsertIndex + 1 | 0;
          arrayCopy(newArray, newArray, 0, startIndex, combinedSize);
        }
        var newSize = combinedSize - (nextInsertIndex + 1 | 0) | 0;
        fill_0(newArray, null, newSize, combinedSize);
        this.values_1 = newArray;
        this.size_1 = newSize;
      }
    }
  };
  protoOf(IdentityArraySet).isEmpty_y1axqb_k$ = function () {
    return this.size_1 === 0;
  };
  protoOf(IdentityArraySet).isNotEmpty_cjxbwk_k$ = function () {
    return this.size_1 > 0;
  };
  protoOf(IdentityArraySet).remove_kyqzre_k$ = function (value) {
    var index = find_2(this, value);
    var values = this.values_1;
    var size = this.size_1;
    if (index >= 0) {
      if (index < (size - 1 | 0)) {
        // Inline function 'kotlin.collections.copyInto' call
        var startIndex = index + 1 | 0;
        arrayCopy(values, values, index, startIndex, size);
      }
      values[size - 1 | 0] = null;
      this.size_1 = this.size_1 - 1 | 0;
      return true;
    }
    return false;
  };
  protoOf(IdentityArraySet).removeValueIf_ix6ttk_k$ = function (predicate) {
    var values = this.values_1;
    var size = this.size_1;
    var destinationIndex = 0;
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp = values[i];
        var item = !(tmp == null) ? tmp : THROW_CCE();
        if (!predicate(item)) {
          if (!(destinationIndex === i)) {
            values[destinationIndex] = item;
          }
          destinationIndex = destinationIndex + 1 | 0;
        }
      }
       while (inductionVariable < size);
    var inductionVariable_0 = destinationIndex;
    if (inductionVariable_0 < size)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        values[i_0] = null;
      }
       while (inductionVariable_0 < size);
    this.size_1 = destinationIndex;
  };
  protoOf(IdentityArraySet).containsAll_70schq_k$ = function (elements) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.isEmpty_y1axqb_k$();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.iterator_jk1svi_k$();
      while (tmp0_iterator.hasNext_bitz1p_k$()) {
        var element = tmp0_iterator.next_20eer_k$();
        // Inline function 'androidx.compose.runtime.collection.IdentityArraySet.containsAll.<anonymous>' call
        if (!this.contains_r3i6dr_k$(element)) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  protoOf(IdentityArraySet).containsAll_xk45sd_k$ = function (elements) {
    return this.containsAll_70schq_k$(elements);
  };
  protoOf(IdentityArraySet).iterator_jk1svi_k$ = function () {
    return new IdentityArraySet$iterator$1(this);
  };
  protoOf(IdentityArraySet).toString = function () {
    return joinToString(this, VOID, '[', ']', VOID, VOID, IdentityArraySet$toString$lambda);
  };
  function fastForEach(_this__u8e3s4, block) {
    if (_this__u8e3s4 instanceof IdentityArraySet) {
      // Inline function 'androidx.compose.runtime.collection.IdentityArraySet.fastForEach' call
      // Inline function 'kotlin.contracts.contract' call
      var values = _this__u8e3s4.values_1;
      var inductionVariable = 0;
      var last = _this__u8e3s4.size_1;
      if (inductionVariable < last)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp = values[i];
          block(!(tmp == null) ? tmp : THROW_CCE());
        }
         while (inductionVariable < last);
    } else {
      // Inline function 'kotlin.collections.forEach' call
      var tmp0_iterator = _this__u8e3s4.iterator_jk1svi_k$();
      while (tmp0_iterator.hasNext_bitz1p_k$()) {
        var element = tmp0_iterator.next_20eer_k$();
        block(element);
      }
    }
  }
  function _set_valueOrder__telc62($this, _set____db54di) {
    $this.valueOrder_1 = _set____db54di;
  }
  function _set_values__uvbruz_2($this, _set____db54di) {
    $this.values_1 = _set____db54di;
  }
  function _set_scopeSets__gr023k($this, _set____db54di) {
    $this.scopeSets_1 = _set____db54di;
  }
  function scopeSetAt($this, index) {
    return ensureNotNull($this.scopeSets_1[$this.valueOrder_1[index]]);
  }
  function getOrCreateIdentitySet($this, value) {
    var size = $this.size_1;
    var valueOrder = $this.valueOrder_1;
    var values = $this.values_1;
    var scopeSets = $this.scopeSets_1;
    var index;
    if (size > 0) {
      index = find_3($this, value);
      if (index >= 0) {
        return scopeSetAt($this, index);
      }
    } else {
      index = -1;
    }
    var insertIndex = -(index + 1 | 0) | 0;
    if (size < valueOrder.length) {
      var valueIndex = valueOrder[size];
      values[valueIndex] = value;
      var tmp0_elvis_lhs = scopeSets[valueIndex];
      var tmp;
      if (tmp0_elvis_lhs == null) {
        // Inline function 'kotlin.also' call
        var this_0 = new IdentityArraySet();
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.collection.IdentityScopeMap.getOrCreateIdentitySet.<anonymous>' call
        scopeSets[valueIndex] = this_0;
        tmp = this_0;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var scopeSet = tmp;
      if (insertIndex < size) {
        // Inline function 'kotlin.collections.copyInto' call
        var destinationOffset = insertIndex + 1 | 0;
        // Inline function 'kotlin.js.unsafeCast' call
        // Inline function 'kotlin.js.asDynamic' call
        var tmp_0 = valueOrder;
        // Inline function 'kotlin.js.unsafeCast' call
        // Inline function 'kotlin.js.asDynamic' call
        arrayCopy(tmp_0, valueOrder, destinationOffset, insertIndex, size);
      }
      valueOrder[insertIndex] = valueIndex;
      $this.size_1 = $this.size_1 + 1 | 0;
      return scopeSet;
    }
    var newSize = imul(valueOrder.length, 2);
    var valueIndex_0 = size;
    var newScopeSets = copyOf_0(scopeSets, newSize);
    var scopeSet_0 = new IdentityArraySet();
    newScopeSets[valueIndex_0] = scopeSet_0;
    var newValues = copyOf_0(values, newSize);
    newValues[valueIndex_0] = value;
    var newKeyOrder = new Int32Array(newSize);
    var inductionVariable = size + 1 | 0;
    if (inductionVariable < newSize)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        newKeyOrder[i] = i;
      }
       while (inductionVariable < newSize);
    if (insertIndex < size) {
      // Inline function 'kotlin.collections.copyInto' call
      var destinationOffset_0 = insertIndex + 1 | 0;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp_1 = valueOrder;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      arrayCopy(tmp_1, newKeyOrder, destinationOffset_0, insertIndex, size);
    }
    newKeyOrder[insertIndex] = valueIndex_0;
    if (insertIndex > 0) {
      // Inline function 'kotlin.collections.copyInto' call
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp_2 = valueOrder;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      arrayCopy(tmp_2, newKeyOrder, 0, 0, insertIndex);
    }
    $this.scopeSets_1 = newScopeSets;
    $this.values_1 = newValues;
    $this.valueOrder_1 = newKeyOrder;
    $this.size_1 = $this.size_1 + 1 | 0;
    return scopeSet_0;
  }
  function removingScopes($this, removalOperation) {
    var valueOrder = $this.valueOrder_1;
    var scopeSets = $this.scopeSets_1;
    var values = $this.values_1;
    var destinationIndex = 0;
    var inductionVariable = 0;
    var last = $this.size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var valueIndex = valueOrder[i];
        var set = ensureNotNull(scopeSets[valueIndex]);
        removalOperation(set);
        if (set.get_size_woubt6_k$() > 0) {
          if (!(destinationIndex === i)) {
            var destinationKeyOrder = valueOrder[destinationIndex];
            valueOrder[destinationIndex] = valueIndex;
            valueOrder[i] = destinationKeyOrder;
          }
          destinationIndex = destinationIndex + 1 | 0;
        }
      }
       while (inductionVariable < last);
    var inductionVariable_0 = destinationIndex;
    var last_0 = $this.size_1;
    if (inductionVariable_0 < last_0)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        values[valueOrder[i_0]] = null;
      }
       while (inductionVariable_0 < last_0);
    $this.size_1 = destinationIndex;
  }
  function find_3($this, value) {
    var valueIdentity = identityHashCode(value);
    var low = 0;
    var high = $this.size_1 - 1 | 0;
    var values = $this.values_1;
    var valueOrder = $this.valueOrder_1;
    while (low <= high) {
      var mid = (low + high | 0) >>> 1 | 0;
      var midValue = values[valueOrder[mid]];
      var midValHash = identityHashCode(midValue);
      if (midValHash < valueIdentity)
        low = mid + 1 | 0;
      else if (midValHash > valueIdentity)
        high = mid - 1 | 0;
      else if (value === midValue)
        return mid;
      else
        return findExactIndex_2($this, mid, value, valueIdentity);
    }
    return -(low + 1 | 0) | 0;
  }
  function findExactIndex_2($this, midIndex, value, valueHash) {
    var values = $this.values_1;
    var valueOrder = $this.valueOrder_1;
    var inductionVariable = midIndex - 1 | 0;
    if (0 <= inductionVariable)
      $l$loop: do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var v = values[valueOrder[i]];
        if (v === value) {
          return i;
        }
        if (!(identityHashCode(v) === valueHash)) {
          break $l$loop;
        }
      }
       while (0 <= inductionVariable);
    var inductionVariable_0 = midIndex + 1 | 0;
    var last = $this.size_1;
    if (inductionVariable_0 < last)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var v_0 = values[valueOrder[i_0]];
        if (v_0 === value) {
          return i_0;
        }
        if (!(identityHashCode(v_0) === valueHash)) {
          return -(i_0 + 1 | 0) | 0;
        }
      }
       while (inductionVariable_0 < last);
    return -($this.size_1 + 1 | 0) | 0;
  }
  function IdentityScopeMap() {
    var tmp = this;
    var tmp_0 = 0;
    var tmp_1 = new Int32Array(50);
    while (tmp_0 < 50) {
      var tmp_2 = tmp_0;
      tmp_1[tmp_2] = tmp_2;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp.valueOrder_1 = tmp_1;
    var tmp_3 = this;
    // Inline function 'kotlin.arrayOfNulls' call
    tmp_3.values_1 = fillArrayVal(Array(50), null);
    var tmp_4 = this;
    // Inline function 'kotlin.arrayOfNulls' call
    tmp_4.scopeSets_1 = fillArrayVal(Array(50), null);
    this.size_1 = 0;
  }
  protoOf(IdentityScopeMap).get_valueOrder_ddggkm_k$ = function () {
    return this.valueOrder_1;
  };
  protoOf(IdentityScopeMap).get_values_ksazhn_k$ = function () {
    return this.values_1;
  };
  protoOf(IdentityScopeMap).get_scopeSets_s963ms_k$ = function () {
    return this.scopeSets_1;
  };
  protoOf(IdentityScopeMap).set_size_e2677a_k$ = function (_set____db54di) {
    this.size_1 = _set____db54di;
  };
  protoOf(IdentityScopeMap).get_size_woubt6_k$ = function () {
    return this.size_1;
  };
  protoOf(IdentityScopeMap).add_euavbj_k$ = function (value, scope) {
    var valueSet = getOrCreateIdentitySet(this, value);
    return valueSet.add_jkjo25_k$(scope);
  };
  protoOf(IdentityScopeMap).contains_1pg03j_k$ = function (element) {
    return find_3(this, element) >= 0;
  };
  protoOf(IdentityScopeMap).forEachScopeOf_g884e4_k$ = function (value, block) {
    var index = find_3(this, value);
    if (index >= 0) {
      // Inline function 'androidx.compose.runtime.collection.IdentityArraySet.fastForEach' call
      var this_0 = scopeSetAt(this, index);
      // Inline function 'kotlin.contracts.contract' call
      var values = this_0.get_values_ksazhn_k$();
      var inductionVariable = 0;
      var last = this_0.get_size_woubt6_k$();
      if (inductionVariable < last)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp = values[i];
          block(!(tmp == null) ? tmp : THROW_CCE());
        }
         while (inductionVariable < last);
    }
  };
  protoOf(IdentityScopeMap).clear_j9egeb_k$ = function () {
    var scopeSets = this.scopeSets_1;
    var valueOrder = this.valueOrder_1;
    var values = this.values_1;
    var inductionVariable = 0;
    var last = scopeSets.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp1_safe_receiver = scopeSets[i];
        if (tmp1_safe_receiver == null)
          null;
        else {
          tmp1_safe_receiver.clear_j9egeb_k$();
        }
        valueOrder[i] = i;
        values[i] = null;
      }
       while (inductionVariable <= last);
    this.size_1 = 0;
  };
  protoOf(IdentityScopeMap).remove_kuwh0s_k$ = function (value, scope) {
    var index = find_3(this, value);
    var valueOrder = this.valueOrder_1;
    var scopeSets = this.scopeSets_1;
    var values = this.values_1;
    var size = this.size_1;
    if (index >= 0) {
      var valueOrderIndex = valueOrder[index];
      var tmp0_elvis_lhs = scopeSets[valueOrderIndex];
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return false;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var set = tmp;
      var removed = set.remove_kyqzre_k$(scope);
      if (set.get_size_woubt6_k$() === 0) {
        var startIndex = index + 1 | 0;
        var endIndex = size;
        if (startIndex < endIndex) {
          // Inline function 'kotlin.collections.copyInto' call
          // Inline function 'kotlin.js.unsafeCast' call
          // Inline function 'kotlin.js.asDynamic' call
          var tmp_0 = valueOrder;
          // Inline function 'kotlin.js.unsafeCast' call
          // Inline function 'kotlin.js.asDynamic' call
          arrayCopy(tmp_0, valueOrder, index, startIndex, endIndex);
        }
        var newSize = size - 1 | 0;
        valueOrder[newSize] = valueOrderIndex;
        values[valueOrderIndex] = null;
        this.size_1 = newSize;
      }
      return removed;
    }
    return false;
  };
  protoOf(IdentityScopeMap).removeValueIf_ix6ttk_k$ = function (predicate) {
    // Inline function 'androidx.compose.runtime.collection.IdentityScopeMap.removingScopes' call
    var valueOrder = this.valueOrder_1;
    var scopeSets = this.scopeSets_1;
    var values = this.values_1;
    var destinationIndex = 0;
    var inductionVariable = 0;
    var last = this.size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var valueIndex = valueOrder[i];
        var set = ensureNotNull(scopeSets[valueIndex]);
        // Inline function 'androidx.compose.runtime.collection.IdentityScopeMap.removeValueIf.<anonymous>' call
        // Inline function 'androidx.compose.runtime.collection.IdentityArraySet.removeValueIf' call
        var values_0 = set.get_values_ksazhn_k$();
        var size = set.get_size_woubt6_k$();
        var destinationIndex_0 = 0;
        var inductionVariable_0 = 0;
        if (inductionVariable_0 < size)
          do {
            var i_0 = inductionVariable_0;
            inductionVariable_0 = inductionVariable_0 + 1 | 0;
            var tmp = values_0[i_0];
            var item = !(tmp == null) ? tmp : THROW_CCE();
            if (!predicate(item)) {
              if (!(destinationIndex_0 === i_0)) {
                values_0[destinationIndex_0] = item;
              }
              destinationIndex_0 = destinationIndex_0 + 1 | 0;
            }
          }
           while (inductionVariable_0 < size);
        var inductionVariable_1 = destinationIndex_0;
        if (inductionVariable_1 < size)
          do {
            var i_1 = inductionVariable_1;
            inductionVariable_1 = inductionVariable_1 + 1 | 0;
            values_0[i_1] = null;
          }
           while (inductionVariable_1 < size);
        _set_size__9twho6_1(set, destinationIndex_0);
        if (set.get_size_woubt6_k$() > 0) {
          if (!(destinationIndex === i)) {
            var destinationKeyOrder = valueOrder[destinationIndex];
            valueOrder[destinationIndex] = valueIndex;
            valueOrder[i] = destinationKeyOrder;
          }
          destinationIndex = destinationIndex + 1 | 0;
        }
      }
       while (inductionVariable < last);
    var inductionVariable_2 = destinationIndex;
    var last_0 = this.size_1;
    if (inductionVariable_2 < last_0)
      do {
        var i_2 = inductionVariable_2;
        inductionVariable_2 = inductionVariable_2 + 1 | 0;
        values[valueOrder[i_2]] = null;
      }
       while (inductionVariable_2 < last_0);
    this.size_1 = destinationIndex;
  };
  protoOf(IdentityScopeMap).removeScope_golunm_k$ = function (scope) {
    // Inline function 'androidx.compose.runtime.collection.IdentityScopeMap.removingScopes' call
    var valueOrder = this.valueOrder_1;
    var scopeSets = this.scopeSets_1;
    var values = this.values_1;
    var destinationIndex = 0;
    var inductionVariable = 0;
    var last = this.size_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var valueIndex = valueOrder[i];
        var set = ensureNotNull(scopeSets[valueIndex]);
        // Inline function 'androidx.compose.runtime.collection.IdentityScopeMap.removeScope.<anonymous>' call
        set.remove_kyqzre_k$(scope);
        if (set.get_size_woubt6_k$() > 0) {
          if (!(destinationIndex === i)) {
            var destinationKeyOrder = valueOrder[destinationIndex];
            valueOrder[destinationIndex] = valueIndex;
            valueOrder[i] = destinationKeyOrder;
          }
          destinationIndex = destinationIndex + 1 | 0;
        }
      }
       while (inductionVariable < last);
    var inductionVariable_0 = destinationIndex;
    var last_0 = this.size_1;
    if (inductionVariable_0 < last_0)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        values[valueOrder[i_0]] = null;
      }
       while (inductionVariable_0 < last_0);
    this.size_1 = destinationIndex;
  };
  function _get_list__d9tsa5_0($this) {
    return $this.list_1;
  }
  function _set_index__fyfqnn_0($this, _set____db54di) {
    $this.index_1 = _set____db54di;
  }
  function _get_index__g2optt_0($this) {
    return $this.index_1;
  }
  function _get_vector__rndal4($this) {
    return $this.vector_1;
  }
  function _get_list__d9tsa5_1($this) {
    return $this.list_1;
  }
  function _get_start__b8zdqp($this) {
    return $this.start_1;
  }
  function _set_end__4w58cq($this, _set____db54di) {
    $this.end_1 = _set____db54di;
  }
  function _get_end__e67thy($this) {
    return $this.end_1;
  }
  function _set_list__9q1sop($this, _set____db54di) {
    $this.list_1 = _set____db54di;
  }
  function _get_list__d9tsa5_2($this) {
    return $this.list_1;
  }
  function _set_size__9twho6_2($this, _set____db54di) {
    $this.size_1 = _set____db54di;
  }
  function VectorListIterator(list, index) {
    this.list_1 = list;
    this.index_1 = index;
  }
  protoOf(VectorListIterator).hasNext_bitz1p_k$ = function () {
    return this.index_1 < this.list_1.get_size_woubt6_k$();
  };
  protoOf(VectorListIterator).next_20eer_k$ = function () {
    var tmp1 = this.index_1;
    this.index_1 = tmp1 + 1 | 0;
    return this.list_1.get_c1px32_k$(tmp1);
  };
  protoOf(VectorListIterator).remove_ldkf9o_k$ = function () {
    this.index_1 = this.index_1 - 1 | 0;
    this.list_1.removeAt_6niowx_k$(this.index_1);
  };
  protoOf(VectorListIterator).hasPrevious_qh0629_k$ = function () {
    return this.index_1 > 0;
  };
  protoOf(VectorListIterator).nextIndex_jshxun_k$ = function () {
    return this.index_1;
  };
  protoOf(VectorListIterator).previous_l2dfd5_k$ = function () {
    this.index_1 = this.index_1 - 1 | 0;
    return this.list_1.get_c1px32_k$(this.index_1);
  };
  protoOf(VectorListIterator).previousIndex_4qtyw5_k$ = function () {
    return this.index_1 - 1 | 0;
  };
  protoOf(VectorListIterator).add_jcyd1a_k$ = function (element) {
    this.list_1.add_dl6gt3_k$(this.index_1, element);
    this.index_1 = this.index_1 + 1 | 0;
  };
  protoOf(VectorListIterator).set_tg4fwj_k$ = function (element) {
    this.list_1.set_82063s_k$(this.index_1, element);
  };
  function MutableVectorList(vector) {
    this.vector_1 = vector;
  }
  protoOf(MutableVectorList).get_size_woubt6_k$ = function () {
    return this.vector_1.size_1;
  };
  protoOf(MutableVectorList).contains_ccp5tc_k$ = function (element) {
    return this.vector_1.contains_ccp5tc_k$(element);
  };
  protoOf(MutableVectorList).contains_aljjnj_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.contains_ccp5tc_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(MutableVectorList).containsAll_70schq_k$ = function (elements) {
    return this.vector_1.containsAll_70schq_k$(elements);
  };
  protoOf(MutableVectorList).containsAll_xk45sd_k$ = function (elements) {
    return this.containsAll_70schq_k$(elements);
  };
  protoOf(MutableVectorList).get_c1px32_k$ = function (index) {
    checkIndex(this, index);
    // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
    var tmp = this.vector_1.content_1[index];
    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
  };
  protoOf(MutableVectorList).indexOf_u97212_k$ = function (element) {
    return this.vector_1.indexOf_u97212_k$(element);
  };
  protoOf(MutableVectorList).indexOf_si1fv9_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return -1;
    return this.indexOf_u97212_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(MutableVectorList).isEmpty_y1axqb_k$ = function () {
    return this.vector_1.isEmpty_y1axqb_k$();
  };
  protoOf(MutableVectorList).iterator_jk1svi_k$ = function () {
    return new VectorListIterator(this, 0);
  };
  protoOf(MutableVectorList).lastIndexOf_wtunlo_k$ = function (element) {
    return this.vector_1.lastIndexOf_wtunlo_k$(element);
  };
  protoOf(MutableVectorList).lastIndexOf_v2p1fv_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return -1;
    return this.lastIndexOf_wtunlo_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(MutableVectorList).add_wl2rvy_k$ = function (element) {
    return this.vector_1.add_wl2rvy_k$(element);
  };
  protoOf(MutableVectorList).add_utx5q5_k$ = function (element) {
    return this.add_wl2rvy_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(MutableVectorList).add_gaf1mg_k$ = function (index, element) {
    return this.vector_1.add_gaf1mg_k$(index, element);
  };
  protoOf(MutableVectorList).add_dl6gt3_k$ = function (index, element) {
    return this.add_gaf1mg_k$(index, (element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(MutableVectorList).addAll_4lnftk_k$ = function (index, elements) {
    return this.vector_1.addAll_4lnftk_k$(index, elements);
  };
  protoOf(MutableVectorList).addAll_lxodh3_k$ = function (index, elements) {
    return this.addAll_4lnftk_k$(index, elements);
  };
  protoOf(MutableVectorList).addAll_v4m9z4_k$ = function (elements) {
    return this.vector_1.addAll_v4m9z4_k$(elements);
  };
  protoOf(MutableVectorList).addAll_4lagoh_k$ = function (elements) {
    return this.addAll_v4m9z4_k$(elements);
  };
  protoOf(MutableVectorList).clear_j9egeb_k$ = function () {
    return this.vector_1.clear_j9egeb_k$();
  };
  protoOf(MutableVectorList).listIterator_xjshxw_k$ = function () {
    return new VectorListIterator(this, 0);
  };
  protoOf(MutableVectorList).listIterator_70e65o_k$ = function (index) {
    return new VectorListIterator(this, index);
  };
  protoOf(MutableVectorList).remove_an8aut_k$ = function (element) {
    return this.vector_1.remove_an8aut_k$(element);
  };
  protoOf(MutableVectorList).remove_cedx0m_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.remove_an8aut_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(MutableVectorList).removeAll_7hnfer_k$ = function (elements) {
    return this.vector_1.removeAll_7hnfer_k$(elements);
  };
  protoOf(MutableVectorList).removeAll_y0z8pe_k$ = function (elements) {
    return this.removeAll_7hnfer_k$(elements);
  };
  protoOf(MutableVectorList).removeAt_6niowx_k$ = function (index) {
    checkIndex(this, index);
    return this.vector_1.removeAt_6niowx_k$(index);
  };
  protoOf(MutableVectorList).retainAll_h3uasc_k$ = function (elements) {
    return this.vector_1.retainAll_h3uasc_k$(elements);
  };
  protoOf(MutableVectorList).retainAll_9fhiib_k$ = function (elements) {
    return this.retainAll_h3uasc_k$(elements);
  };
  protoOf(MutableVectorList).set_9t5s9l_k$ = function (index, element) {
    checkIndex(this, index);
    return this.vector_1.set_9t5s9l_k$(index, element);
  };
  protoOf(MutableVectorList).set_82063s_k$ = function (index, element) {
    return this.set_9t5s9l_k$(index, (element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(MutableVectorList).subList_xle3r2_k$ = function (fromIndex, toIndex) {
    checkSubIndex(this, fromIndex, toIndex);
    return new SubList(this, fromIndex, toIndex);
  };
  function SubList(list, start, end) {
    this.list_1 = list;
    this.start_1 = start;
    this.end_1 = end;
  }
  protoOf(SubList).get_size_woubt6_k$ = function () {
    return this.end_1 - this.start_1 | 0;
  };
  protoOf(SubList).contains_ccp5tc_k$ = function (element) {
    var inductionVariable = this.start_1;
    var last = this.end_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (equals(this.list_1.get_c1px32_k$(i), element)) {
          return true;
        }
      }
       while (inductionVariable < last);
    return false;
  };
  protoOf(SubList).contains_aljjnj_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.contains_ccp5tc_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(SubList).containsAll_70schq_k$ = function (elements) {
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator = elements.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var element = tmp0_iterator.next_20eer_k$();
      // Inline function 'androidx.compose.runtime.collection.SubList.containsAll.<anonymous>' call
      if (!this.contains_ccp5tc_k$(element)) {
        return false;
      }
    }
    return true;
  };
  protoOf(SubList).containsAll_xk45sd_k$ = function (elements) {
    return this.containsAll_70schq_k$(elements);
  };
  protoOf(SubList).get_c1px32_k$ = function (index) {
    checkIndex(this, index);
    return this.list_1.get_c1px32_k$(index + this.start_1 | 0);
  };
  protoOf(SubList).indexOf_u97212_k$ = function (element) {
    var inductionVariable = this.start_1;
    var last = this.end_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (equals(this.list_1.get_c1px32_k$(i), element)) {
          return i - this.start_1 | 0;
        }
      }
       while (inductionVariable < last);
    return -1;
  };
  protoOf(SubList).indexOf_si1fv9_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return -1;
    return this.indexOf_u97212_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(SubList).isEmpty_y1axqb_k$ = function () {
    return this.end_1 === this.start_1;
  };
  protoOf(SubList).iterator_jk1svi_k$ = function () {
    return new VectorListIterator(this, 0);
  };
  protoOf(SubList).lastIndexOf_wtunlo_k$ = function (element) {
    var inductionVariable = this.end_1 - 1 | 0;
    var last = this.start_1;
    if (last <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        if (equals(this.list_1.get_c1px32_k$(i), element)) {
          return i - this.start_1 | 0;
        }
      }
       while (!(i === last));
    return -1;
  };
  protoOf(SubList).lastIndexOf_v2p1fv_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return -1;
    return this.lastIndexOf_wtunlo_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(SubList).add_wl2rvy_k$ = function (element) {
    var tmp1 = this.end_1;
    this.end_1 = tmp1 + 1 | 0;
    this.list_1.add_dl6gt3_k$(tmp1, element);
    return true;
  };
  protoOf(SubList).add_utx5q5_k$ = function (element) {
    return this.add_wl2rvy_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(SubList).add_gaf1mg_k$ = function (index, element) {
    this.list_1.add_dl6gt3_k$(index + this.start_1 | 0, element);
    this.end_1 = this.end_1 + 1 | 0;
  };
  protoOf(SubList).add_dl6gt3_k$ = function (index, element) {
    return this.add_gaf1mg_k$(index, (element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(SubList).addAll_4lnftk_k$ = function (index, elements) {
    this.list_1.addAll_lxodh3_k$(index + this.start_1 | 0, elements);
    this.end_1 = this.end_1 + elements.get_size_woubt6_k$() | 0;
    return elements.get_size_woubt6_k$() > 0;
  };
  protoOf(SubList).addAll_lxodh3_k$ = function (index, elements) {
    return this.addAll_4lnftk_k$(index, elements);
  };
  protoOf(SubList).addAll_v4m9z4_k$ = function (elements) {
    this.list_1.addAll_lxodh3_k$(this.end_1, elements);
    this.end_1 = this.end_1 + elements.get_size_woubt6_k$() | 0;
    return elements.get_size_woubt6_k$() > 0;
  };
  protoOf(SubList).addAll_4lagoh_k$ = function (elements) {
    return this.addAll_v4m9z4_k$(elements);
  };
  protoOf(SubList).clear_j9egeb_k$ = function () {
    var inductionVariable = this.end_1 - 1 | 0;
    var last = this.start_1;
    if (last <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        this.list_1.removeAt_6niowx_k$(i);
      }
       while (!(i === last));
    this.end_1 = this.start_1;
  };
  protoOf(SubList).listIterator_xjshxw_k$ = function () {
    return new VectorListIterator(this, 0);
  };
  protoOf(SubList).listIterator_70e65o_k$ = function (index) {
    return new VectorListIterator(this, index);
  };
  protoOf(SubList).remove_an8aut_k$ = function (element) {
    var inductionVariable = this.start_1;
    var last = this.end_1;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (equals(this.list_1.get_c1px32_k$(i), element)) {
          this.list_1.removeAt_6niowx_k$(i);
          this.end_1 = this.end_1 - 1 | 0;
          return true;
        }
      }
       while (inductionVariable < last);
    return false;
  };
  protoOf(SubList).remove_cedx0m_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.remove_an8aut_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(SubList).removeAll_7hnfer_k$ = function (elements) {
    var originalEnd = this.end_1;
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator = elements.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var element = tmp0_iterator.next_20eer_k$();
      // Inline function 'androidx.compose.runtime.collection.SubList.removeAll.<anonymous>' call
      this.remove_an8aut_k$(element);
    }
    return !(originalEnd === this.end_1);
  };
  protoOf(SubList).removeAll_y0z8pe_k$ = function (elements) {
    return this.removeAll_7hnfer_k$(elements);
  };
  protoOf(SubList).removeAt_6niowx_k$ = function (index) {
    checkIndex(this, index);
    var item = this.list_1.removeAt_6niowx_k$(index + this.start_1 | 0);
    this.end_1 = this.end_1 - 1 | 0;
    return item;
  };
  protoOf(SubList).retainAll_h3uasc_k$ = function (elements) {
    var originalEnd = this.end_1;
    var inductionVariable = this.end_1 - 1 | 0;
    var last = this.start_1;
    if (last <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var item = this.list_1.get_c1px32_k$(i);
        if (!elements.contains_aljjnj_k$(item)) {
          this.list_1.removeAt_6niowx_k$(i);
          this.end_1 = this.end_1 - 1 | 0;
        }
      }
       while (!(i === last));
    return !(originalEnd === this.end_1);
  };
  protoOf(SubList).retainAll_9fhiib_k$ = function (elements) {
    return this.retainAll_h3uasc_k$(elements);
  };
  protoOf(SubList).set_9t5s9l_k$ = function (index, element) {
    checkIndex(this, index);
    return this.list_1.set_82063s_k$(index + this.start_1 | 0, element);
  };
  protoOf(SubList).set_82063s_k$ = function (index, element) {
    return this.set_9t5s9l_k$(index, (element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(SubList).subList_xle3r2_k$ = function (fromIndex, toIndex) {
    checkSubIndex(this, fromIndex, toIndex);
    return new SubList(this, fromIndex, toIndex);
  };
  function get_$stableprop_10() {
    return 8;
  }
  function MutableVector(content, size) {
    this.content_1 = content;
    this.list_1 = null;
    this.size_1 = size;
    this.$stable_1 = 8;
  }
  protoOf(MutableVector).set_content_3aqn6b_k$ = function (_set____db54di) {
    this.content_1 = _set____db54di;
  };
  protoOf(MutableVector).get_content_h02jrk_k$ = function () {
    return this.content_1;
  };
  protoOf(MutableVector).get_size_woubt6_k$ = function () {
    return this.size_1;
  };
  protoOf(MutableVector).get_lastIndex_tk4gr1_k$ = function () {
    return this.size_1 - 1 | 0;
  };
  protoOf(MutableVector).get_indices_xelk8u_k$ = function () {
    return numberRangeToNumber(0, this.size_1 - 1 | 0);
  };
  protoOf(MutableVector).add_wl2rvy_k$ = function (element) {
    this.ensureCapacity_wr7980_k$(this.size_1 + 1 | 0);
    this.content_1[this.size_1] = element;
    this.size_1 = this.size_1 + 1 | 0;
    return true;
  };
  protoOf(MutableVector).add_gaf1mg_k$ = function (index, element) {
    this.ensureCapacity_wr7980_k$(this.size_1 + 1 | 0);
    var content = this.content_1;
    if (!(index === this.size_1)) {
      // Inline function 'kotlin.collections.copyInto' call
      var destinationOffset = index + 1 | 0;
      var endIndex = this.size_1;
      arrayCopy(content, content, destinationOffset, index, endIndex);
    }
    content[index] = element;
    this.size_1 = this.size_1 + 1 | 0;
  };
  protoOf(MutableVector).addAll_j8kh1w_k$ = function (index, elements) {
    if (elements.isEmpty_y1axqb_k$())
      return false;
    this.ensureCapacity_wr7980_k$(this.size_1 + elements.get_size_woubt6_k$() | 0);
    var content = this.content_1;
    if (!(index === this.size_1)) {
      // Inline function 'kotlin.collections.copyInto' call
      var destinationOffset = index + elements.get_size_woubt6_k$() | 0;
      var endIndex = this.size_1;
      arrayCopy(content, content, destinationOffset, index, endIndex);
    }
    var inductionVariable = 0;
    var last = elements.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        content[index + i | 0] = elements.get_c1px32_k$(i);
      }
       while (inductionVariable <= last);
    this.size_1 = this.size_1 + elements.get_size_woubt6_k$() | 0;
    return true;
  };
  protoOf(MutableVector).addAll_u6cxp6_k$ = function (index, elements) {
    if (elements.isEmpty_y1axqb_k$())
      return false;
    this.ensureCapacity_wr7980_k$(this.size_1 + elements.size_1 | 0);
    var content = this.content_1;
    if (!(index === this.size_1)) {
      // Inline function 'kotlin.collections.copyInto' call
      var destinationOffset = index + elements.size_1 | 0;
      var endIndex = this.size_1;
      arrayCopy(content, content, destinationOffset, index, endIndex);
    }
    // Inline function 'kotlin.collections.copyInto' call
    var this_0 = elements.content_1;
    var endIndex_0 = elements.size_1;
    arrayCopy(this_0, content, index, 0, endIndex_0);
    this.size_1 = this.size_1 + elements.size_1 | 0;
    return true;
  };
  protoOf(MutableVector).addAll_1mbqac_k$ = function (elements) {
    return this.addAll_j8kh1w_k$(this.size_1, elements);
  };
  protoOf(MutableVector).addAll_d2xigy_k$ = function (elements) {
    return this.addAll_u6cxp6_k$(this.size_1, elements);
  };
  protoOf(MutableVector).addAll_u19jew_k$ = function (elements) {
    // Inline function 'kotlin.collections.isEmpty' call
    if (elements.length === 0) {
      return false;
    }
    this.ensureCapacity_wr7980_k$(this.size_1 + elements.length | 0);
    // Inline function 'kotlin.collections.copyInto' call
    var destination = this.content_1;
    var destinationOffset = this.size_1;
    var endIndex = elements.length;
    arrayCopy(elements, destination, destinationOffset, 0, endIndex);
    this.size_1 = this.size_1 + elements.length | 0;
    return true;
  };
  protoOf(MutableVector).addAll_4lnftk_k$ = function (index, elements) {
    if (elements.isEmpty_y1axqb_k$())
      return false;
    this.ensureCapacity_wr7980_k$(this.size_1 + elements.get_size_woubt6_k$() | 0);
    var content = this.content_1;
    if (!(index === this.size_1)) {
      // Inline function 'kotlin.collections.copyInto' call
      var destinationOffset = index + elements.get_size_woubt6_k$() | 0;
      var endIndex = this.size_1;
      arrayCopy(content, content, destinationOffset, index, endIndex);
    }
    // Inline function 'kotlin.collections.forEachIndexed' call
    var index_0 = 0;
    var tmp0_iterator = elements.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var item = tmp0_iterator.next_20eer_k$();
      // Inline function 'androidx.compose.runtime.collection.MutableVector.addAll.<anonymous>' call
      var tmp1 = index_0;
      index_0 = tmp1 + 1 | 0;
      content[index + checkIndexOverflow(tmp1) | 0] = item;
    }
    this.size_1 = this.size_1 + elements.get_size_woubt6_k$() | 0;
    return true;
  };
  protoOf(MutableVector).addAll_v4m9z4_k$ = function (elements) {
    return this.addAll_4lnftk_k$(this.size_1, elements);
  };
  protoOf(MutableVector).any_eyvjay_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    var size = this.size_1;
    if (size > 0) {
      var i = 0;
      var tmp = this.content_1;
      var content = isArray(tmp) ? tmp : THROW_CCE();
      do {
        if (predicate(content[i]))
          return true;
        i = i + 1 | 0;
      }
       while (i < size);
    }
    return false;
  };
  protoOf(MutableVector).reversedAny_8xk8ns_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    var size = this.size_1;
    if (size > 0) {
      var i = size - 1 | 0;
      var tmp = this.content_1;
      var content = isArray(tmp) ? tmp : THROW_CCE();
      do {
        if (predicate(content[i]))
          return true;
        i = i - 1 | 0;
      }
       while (i >= 0);
    }
    return false;
  };
  protoOf(MutableVector).asMutableList_ecsrla_k$ = function () {
    var tmp0_elvis_lhs = this.list_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      // Inline function 'kotlin.also' call
      var this_0 = new MutableVectorList(this);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.collection.MutableVector.asMutableList.<anonymous>' call
      this.list_1 = this_0;
      tmp = this_0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  protoOf(MutableVector).clear_j9egeb_k$ = function () {
    var content = this.content_1;
    // Inline function 'androidx.compose.runtime.collection.MutableVector.lastIndex' call
    var inductionVariable = this.size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        content[i] = null;
      }
       while (0 <= inductionVariable);
    this.size_1 = 0;
  };
  protoOf(MutableVector).contains_ccp5tc_k$ = function (element) {
    var inductionVariable = 0;
    // Inline function 'androidx.compose.runtime.collection.MutableVector.lastIndex' call
    var last = this.size_1 - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
        var index = i;
        var tmp = this.content_1[index];
        var tmp$ret$1 = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
        if (equals(tmp$ret$1, element))
          return true;
      }
       while (!(i === last));
    return false;
  };
  protoOf(MutableVector).containsAll_9oblp2_k$ = function (elements) {
    var inductionVariable = 0;
    var last = elements.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!this.contains_ccp5tc_k$(elements.get_c1px32_k$(i)))
          return false;
      }
       while (inductionVariable <= last);
    return true;
  };
  protoOf(MutableVector).containsAll_70schq_k$ = function (elements) {
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator = elements.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var element = tmp0_iterator.next_20eer_k$();
      // Inline function 'androidx.compose.runtime.collection.MutableVector.containsAll.<anonymous>' call
      if (!this.contains_ccp5tc_k$(element))
        return false;
    }
    return true;
  };
  protoOf(MutableVector).containsAll_aezj5o_k$ = function (elements) {
    // Inline function 'androidx.compose.runtime.collection.MutableVector.indices' call
    var progression = numberRangeToNumber(0, elements.size_1 - 1 | 0);
    var inductionVariable = progression.get_first_irdx8n_k$();
    var last = progression.get_last_wopotb_k$();
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
        var index = i;
        var tmp = elements.content_1[index];
        var tmp$ret$1 = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
        if (!this.contains_ccp5tc_k$(tmp$ret$1))
          return false;
      }
       while (!(i === last));
    return true;
  };
  protoOf(MutableVector).contentEquals_p8ztnq_k$ = function (other) {
    if (!(other.size_1 === this.size_1)) {
      return false;
    }
    var inductionVariable = 0;
    // Inline function 'androidx.compose.runtime.collection.MutableVector.lastIndex' call
    var last = this.size_1 - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
        var index = i;
        var tmp = other.content_1[index];
        var tmp_0 = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
        // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
        var index_0 = i;
        var tmp_1 = this.content_1[index_0];
        var tmp$ret$2 = (tmp_1 == null ? true : !(tmp_1 == null)) ? tmp_1 : THROW_CCE();
        if (!equals(tmp_0, tmp$ret$2)) {
          return false;
        }
      }
       while (!(i === last));
    return true;
  };
  protoOf(MutableVector).ensureCapacity_wr7980_k$ = function (capacity) {
    var oldContent = this.content_1;
    if (oldContent.length < capacity) {
      // Inline function 'kotlin.math.max' call
      var b = imul(oldContent.length, 2);
      var newSize = Math.max(capacity, b);
      this.content_1 = copyOf_0(oldContent, newSize);
    }
  };
  protoOf(MutableVector).first_1m0hio_k$ = function () {
    if (this.isEmpty_y1axqb_k$()) {
      throw NoSuchElementException_init_$Create$('MutableVector is empty.');
    }
    // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
    var tmp = this.content_1[0];
    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
  };
  protoOf(MutableVector).first_r5mfy6_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    var size = this.size_1;
    if (size > 0) {
      var i = 0;
      var tmp = this.content_1;
      var content = isArray(tmp) ? tmp : THROW_CCE();
      do {
        var item = content[i];
        if (predicate(item))
          return item;
        i = i + 1 | 0;
      }
       while (i < size);
    }
    this.throwNoSuchElementException_uw6br3_k$();
  };
  protoOf(MutableVector).firstOrNull_j0zfvq_k$ = function () {
    var tmp;
    if (this.isEmpty_y1axqb_k$()) {
      tmp = null;
    } else {
      // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
      var tmp_0 = this.content_1[0];
      tmp = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
    }
    return tmp;
  };
  protoOf(MutableVector).firstOrNull_q7tv6g_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    var size = this.size_1;
    if (size > 0) {
      var i = 0;
      var tmp = this.content_1;
      var content = isArray(tmp) ? tmp : THROW_CCE();
      do {
        var item = content[i];
        if (predicate(item))
          return item;
        i = i + 1 | 0;
      }
       while (i < size);
    }
    return null;
  };
  protoOf(MutableVector).fold_739w2c_k$ = function (initial, operation) {
    // Inline function 'kotlin.contracts.contract' call
    var acc = initial;
    var size = this.size_1;
    if (size > 0) {
      var i = 0;
      var tmp = this.content_1;
      var content = isArray(tmp) ? tmp : THROW_CCE();
      do {
        acc = operation(acc, content[i]);
        i = i + 1 | 0;
      }
       while (i < size);
    }
    return acc;
  };
  protoOf(MutableVector).foldIndexed_3ied6c_k$ = function (initial, operation) {
    // Inline function 'kotlin.contracts.contract' call
    var acc = initial;
    var size = this.size_1;
    if (size > 0) {
      var i = 0;
      var tmp = this.content_1;
      var content = isArray(tmp) ? tmp : THROW_CCE();
      do {
        acc = operation(i, acc, content[i]);
        i = i + 1 | 0;
      }
       while (i < size);
    }
    return acc;
  };
  protoOf(MutableVector).foldRight_yq4f7q_k$ = function (initial, operation) {
    // Inline function 'kotlin.contracts.contract' call
    var acc = initial;
    var size = this.size_1;
    if (size > 0) {
      var i = size - 1 | 0;
      var tmp = this.content_1;
      var content = isArray(tmp) ? tmp : THROW_CCE();
      do {
        acc = operation(content[i], acc);
        i = i - 1 | 0;
      }
       while (i >= 0);
    }
    return acc;
  };
  protoOf(MutableVector).foldRightIndexed_uywdly_k$ = function (initial, operation) {
    // Inline function 'kotlin.contracts.contract' call
    var acc = initial;
    var size = this.size_1;
    if (size > 0) {
      var i = size - 1 | 0;
      var tmp = this.content_1;
      var content = isArray(tmp) ? tmp : THROW_CCE();
      do {
        acc = operation(i, content[i], acc);
        i = i - 1 | 0;
      }
       while (i >= 0);
    }
    return acc;
  };
  protoOf(MutableVector).forEach_7ory09_k$ = function (block) {
    // Inline function 'kotlin.contracts.contract' call
    var size = this.size_1;
    if (size > 0) {
      var i = 0;
      var tmp = this.content_1;
      var content = isArray(tmp) ? tmp : THROW_CCE();
      do {
        block(content[i]);
        i = i + 1 | 0;
      }
       while (i < size);
    }
  };
  protoOf(MutableVector).forEachIndexed_v2ll41_k$ = function (block) {
    // Inline function 'kotlin.contracts.contract' call
    var size = this.size_1;
    if (size > 0) {
      var i = 0;
      var tmp = this.content_1;
      var content = isArray(tmp) ? tmp : THROW_CCE();
      do {
        block(i, content[i]);
        i = i + 1 | 0;
      }
       while (i < size);
    }
  };
  protoOf(MutableVector).forEachReversed_8lewaz_k$ = function (block) {
    // Inline function 'kotlin.contracts.contract' call
    var size = this.size_1;
    if (size > 0) {
      var i = size - 1 | 0;
      var tmp = this.content_1;
      var content = isArray(tmp) ? tmp : THROW_CCE();
      do {
        block(content[i]);
        i = i - 1 | 0;
      }
       while (i >= 0);
    }
  };
  protoOf(MutableVector).forEachReversedIndexed_lqln5t_k$ = function (block) {
    // Inline function 'kotlin.contracts.contract' call
    if (this.size_1 > 0) {
      var i = this.size_1 - 1 | 0;
      var tmp = this.content_1;
      var content = isArray(tmp) ? tmp : THROW_CCE();
      do {
        block(i, content[i]);
        i = i - 1 | 0;
      }
       while (i >= 0);
    }
  };
  protoOf(MutableVector).get_c1px32_k$ = function (index) {
    var tmp = this.content_1[index];
    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
  };
  protoOf(MutableVector).indexOf_u97212_k$ = function (element) {
    var size = this.size_1;
    if (size > 0) {
      var i = 0;
      var tmp = this.content_1;
      var content = isArray(tmp) ? tmp : THROW_CCE();
      do {
        if (equals(element, content[i]))
          return i;
        i = i + 1 | 0;
      }
       while (i < size);
    }
    return -1;
  };
  protoOf(MutableVector).indexOfFirst_9upid1_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    var size = this.size_1;
    if (size > 0) {
      var i = 0;
      var tmp = this.content_1;
      var content = isArray(tmp) ? tmp : THROW_CCE();
      do {
        if (predicate(content[i]))
          return i;
        i = i + 1 | 0;
      }
       while (i < size);
    }
    return -1;
  };
  protoOf(MutableVector).indexOfLast_41ryl_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    var size = this.size_1;
    if (size > 0) {
      var i = size - 1 | 0;
      var tmp = this.content_1;
      var content = isArray(tmp) ? tmp : THROW_CCE();
      do {
        if (predicate(content[i]))
          return i;
        i = i - 1 | 0;
      }
       while (i >= 0);
    }
    return -1;
  };
  protoOf(MutableVector).isEmpty_y1axqb_k$ = function () {
    return this.size_1 === 0;
  };
  protoOf(MutableVector).isNotEmpty_cjxbwk_k$ = function () {
    return !(this.size_1 === 0);
  };
  protoOf(MutableVector).last_1z1cm_k$ = function () {
    if (this.isEmpty_y1axqb_k$()) {
      throw NoSuchElementException_init_$Create$('MutableVector is empty.');
    }
    // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
    // Inline function 'androidx.compose.runtime.collection.MutableVector.lastIndex' call
    var index = this.size_1 - 1 | 0;
    var tmp = this.content_1[index];
    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
  };
  protoOf(MutableVector).last_8ht1ek_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    var size = this.size_1;
    if (size > 0) {
      var i = size - 1 | 0;
      var tmp = this.content_1;
      var content = isArray(tmp) ? tmp : THROW_CCE();
      do {
        var item = content[i];
        if (predicate(item))
          return item;
        i = i - 1 | 0;
      }
       while (i >= 0);
    }
    this.throwNoSuchElementException_uw6br3_k$();
  };
  protoOf(MutableVector).lastIndexOf_wtunlo_k$ = function (element) {
    var size = this.size_1;
    if (size > 0) {
      var i = size - 1 | 0;
      var tmp = this.content_1;
      var content = isArray(tmp) ? tmp : THROW_CCE();
      do {
        if (equals(element, content[i]))
          return i;
        i = i - 1 | 0;
      }
       while (i >= 0);
    }
    return -1;
  };
  protoOf(MutableVector).lastOrNull_u4yjpc_k$ = function () {
    var tmp;
    if (this.isEmpty_y1axqb_k$()) {
      tmp = null;
    } else {
      // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
      // Inline function 'androidx.compose.runtime.collection.MutableVector.lastIndex' call
      var index = this.size_1 - 1 | 0;
      var tmp_0 = this.content_1[index];
      tmp = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
    }
    return tmp;
  };
  protoOf(MutableVector).lastOrNull_2tlkc2_k$ = function (predicate) {
    // Inline function 'kotlin.contracts.contract' call
    var size = this.size_1;
    if (size > 0) {
      var i = size - 1 | 0;
      var tmp = this.content_1;
      var content = isArray(tmp) ? tmp : THROW_CCE();
      do {
        var item = content[i];
        if (predicate(item))
          return item;
        i = i - 1 | 0;
      }
       while (i >= 0);
    }
    return null;
  };
  protoOf(MutableVector).plusAssign_xac6iy_k$ = function (element) {
    this.add_wl2rvy_k$(element);
  };
  protoOf(MutableVector).minusAssign_x73sio_k$ = function (element) {
    this.remove_an8aut_k$(element);
  };
  protoOf(MutableVector).remove_an8aut_k$ = function (element) {
    var index = this.indexOf_u97212_k$(element);
    if (index >= 0) {
      this.removeAt_6niowx_k$(index);
      return true;
    }
    return false;
  };
  protoOf(MutableVector).removeAll_wwwzn3_k$ = function (elements) {
    var initialSize = this.size_1;
    var inductionVariable = 0;
    var last = elements.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.remove_an8aut_k$(elements.get_c1px32_k$(i));
      }
       while (inductionVariable <= last);
    return !(initialSize === this.size_1);
  };
  protoOf(MutableVector).removeAll_iiuqsh_k$ = function (elements) {
    var initialSize = this.size_1;
    var inductionVariable = 0;
    // Inline function 'androidx.compose.runtime.collection.MutableVector.lastIndex' call
    var last = elements.size_1 - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
        var index = i;
        var tmp = elements.content_1[index];
        var tmp$ret$1 = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
        this.remove_an8aut_k$(tmp$ret$1);
      }
       while (!(i === last));
    return !(initialSize === this.size_1);
  };
  protoOf(MutableVector).removeAll_7hnfer_k$ = function (elements) {
    if (elements.isEmpty_y1axqb_k$()) {
      return false;
    }
    var initialSize = this.size_1;
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator = elements.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var element = tmp0_iterator.next_20eer_k$();
      // Inline function 'androidx.compose.runtime.collection.MutableVector.removeAll.<anonymous>' call
      this.remove_an8aut_k$(element);
    }
    return !(initialSize === this.size_1);
  };
  protoOf(MutableVector).removeAt_6niowx_k$ = function (index) {
    var content = this.content_1;
    var tmp = content[index];
    var item = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
    // Inline function 'androidx.compose.runtime.collection.MutableVector.lastIndex' call
    if (!(index === (this.size_1 - 1 | 0))) {
      // Inline function 'kotlin.collections.copyInto' call
      var startIndex = index + 1 | 0;
      var endIndex = this.size_1;
      arrayCopy(content, content, index, startIndex, endIndex);
    }
    this.size_1 = this.size_1 - 1 | 0;
    content[this.size_1] = null;
    return item;
  };
  protoOf(MutableVector).removeRange_sm1kzt_k$ = function (start, end) {
    if (end > start) {
      if (end < this.size_1) {
        // Inline function 'kotlin.collections.copyInto' call
        var this_0 = this.content_1;
        var destination = this.content_1;
        var endIndex = this.size_1;
        arrayCopy(this_0, destination, start, end, endIndex);
      }
      var newSize = this.size_1 - (end - start | 0) | 0;
      var inductionVariable = newSize;
      // Inline function 'androidx.compose.runtime.collection.MutableVector.lastIndex' call
      var last = this.size_1 - 1 | 0;
      if (inductionVariable <= last)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          this.content_1[i] = null;
        }
         while (!(i === last));
      this.size_1 = newSize;
    }
  };
  protoOf(MutableVector).retainAll_h3uasc_k$ = function (elements) {
    var initialSize = this.size_1;
    // Inline function 'androidx.compose.runtime.collection.MutableVector.lastIndex' call
    var inductionVariable = this.size_1 - 1 | 0;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        // Inline function 'androidx.compose.runtime.collection.MutableVector.get' call
        var tmp = this.content_1[i];
        var item = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
        if (!elements.contains_aljjnj_k$(item)) {
          this.removeAt_6niowx_k$(i);
        }
      }
       while (0 <= inductionVariable);
    return !(initialSize === this.size_1);
  };
  protoOf(MutableVector).set_9t5s9l_k$ = function (index, element) {
    var content = this.content_1;
    var tmp = content[index];
    var old = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
    content[index] = element;
    return old;
  };
  protoOf(MutableVector).sortWith_p59kmi_k$ = function (comparator) {
    var tmp = this.content_1;
    sortWith_0(isArray(tmp) ? tmp : THROW_CCE(), comparator, 0, this.size_1);
  };
  protoOf(MutableVector).sumBy_595gpj_k$ = function (selector) {
    // Inline function 'kotlin.contracts.contract' call
    var sum = 0;
    var size = this.size_1;
    if (size > 0) {
      var tmp = this.content_1;
      var content = isArray(tmp) ? tmp : THROW_CCE();
      var i = 0;
      do {
        sum = sum + selector(content[i]) | 0;
        i = i + 1 | 0;
      }
       while (i < size);
    }
    return sum;
  };
  protoOf(MutableVector).throwNoSuchElementException_uw6br3_k$ = function () {
    throw NoSuchElementException_init_$Create$('MutableVector contains no element matching the predicate.');
  };
  function checkIndex(_this__u8e3s4, index) {
    var size = _this__u8e3s4.get_size_woubt6_k$();
    if (index < 0 ? true : index >= size) {
      throw IndexOutOfBoundsException_init_$Create$('Index ' + index + ' is out of bounds. ' + ('The list has ' + size + ' elements.'));
    }
  }
  function checkSubIndex(_this__u8e3s4, fromIndex, toIndex) {
    var size = _this__u8e3s4.get_size_woubt6_k$();
    if (fromIndex > toIndex) {
      throw IllegalArgumentException_init_$Create$('Indices are out of order. fromIndex (' + fromIndex + ') is ' + ('greater than toIndex (' + toIndex + ').'));
    }
    if (fromIndex < 0) {
      throw IndexOutOfBoundsException_init_$Create$('fromIndex (' + fromIndex + ') is less than 0.');
    }
    if (toIndex > size) {
      throw IndexOutOfBoundsException_init_$Create$('toIndex (' + toIndex + ') is more than than the list size (' + size + ')');
    }
  }
  function ImmutableCollection() {
  }
  function Builder_0() {
  }
  function PersistentCollection() {
  }
  function Builder_1() {
  }
  function PersistentList() {
  }
  function _get_source__4cuw5s($this) {
    return $this.source_1;
  }
  function _get_fromIndex__987b49($this) {
    return $this.fromIndex_1;
  }
  function _get_toIndex__xu6sa($this) {
    return $this.toIndex_1;
  }
  function _set__size__bau3qd($this, _set____db54di) {
    $this._size_1 = _set____db54di;
  }
  function _get__size__kqacr3($this) {
    return $this._size_1;
  }
  function SubList_0(source, fromIndex, toIndex) {
    AbstractList.call(this);
    this.source_1 = source;
    this.fromIndex_1 = fromIndex;
    this.toIndex_1 = toIndex;
    this._size_1 = 0;
    ListImplementation_getInstance().checkRangeIndexes_a38xj7_k$(this.fromIndex_1, this.toIndex_1, this.source_1.get_size_woubt6_k$());
    this._size_1 = this.toIndex_1 - this.fromIndex_1 | 0;
  }
  protoOf(SubList_0).get_c1px32_k$ = function (index) {
    ListImplementation_getInstance().checkElementIndex_r3t1bm_k$(index, this._size_1);
    return this.source_1.get_c1px32_k$(this.fromIndex_1 + index | 0);
  };
  protoOf(SubList_0).get_size_woubt6_k$ = function () {
    return this._size_1;
  };
  protoOf(SubList_0).subList_xle3r2_k$ = function (fromIndex, toIndex) {
    ListImplementation_getInstance().checkRangeIndexes_a38xj7_k$(fromIndex, toIndex, this._size_1);
    return new SubList_0(this.source_1, this.fromIndex_1 + fromIndex | 0, this.fromIndex_1 + toIndex | 0);
  };
  function ImmutableList() {
  }
  function Builder_2() {
  }
  function PersistentMap() {
  }
  function ImmutableMap() {
  }
  function ImmutableSet() {
  }
  function Builder_3() {
  }
  function PersistentSet() {
  }
  function mutate_0(_this__u8e3s4, mutator) {
    // Inline function 'kotlin.apply' call
    var this_0 = (isInterface(_this__u8e3s4, PersistentMap) ? _this__u8e3s4 : THROW_CCE()).builder_3thy1n_k$();
    // Inline function 'kotlin.contracts.contract' call
    mutator(this_0);
    return this_0.build_1k0s4u_k$();
  }
  function persistentSetOf() {
    return Companion_getInstance_10().emptyOf_fgwp9_k$();
  }
  function mutate_1(_this__u8e3s4, mutator) {
    // Inline function 'kotlin.apply' call
    var this_0 = _this__u8e3s4.builder_3thy1n_k$();
    // Inline function 'kotlin.contracts.contract' call
    mutator(this_0);
    return this_0.build_1k0s4u_k$();
  }
  function persistentListOf() {
    return persistentVectorOf();
  }
  function mutate_2(_this__u8e3s4, mutator) {
    // Inline function 'kotlin.apply' call
    var this_0 = _this__u8e3s4.builder_3thy1n_k$();
    // Inline function 'kotlin.contracts.contract' call
    mutator(this_0);
    return this_0.build_1k0s4u_k$();
  }
  function _get_element__z0t21h($this) {
    return $this.element_1;
  }
  function SingleElementListIterator(element, index) {
    AbstractListIterator.call(this, index, 1);
    this.element_1 = element;
  }
  protoOf(SingleElementListIterator).next_20eer_k$ = function () {
    this.checkHasNext_6ofet1_k$();
    this.index_1 = this.index_1 + 1 | 0;
    return this.element_1;
  };
  protoOf(SingleElementListIterator).previous_l2dfd5_k$ = function () {
    this.checkHasPrevious_fnwy87_k$();
    this.index_1 = this.index_1 - 1 | 0;
    return this.element_1;
  };
  function AbstractListIterator(index, size) {
    this.index_1 = index;
    this.size_1 = size;
  }
  protoOf(AbstractListIterator).set_index_69f5xp_k$ = function (_set____db54di) {
    this.index_1 = _set____db54di;
  };
  protoOf(AbstractListIterator).get_index_it478p_k$ = function () {
    return this.index_1;
  };
  protoOf(AbstractListIterator).set_size_e2677a_k$ = function (_set____db54di) {
    this.size_1 = _set____db54di;
  };
  protoOf(AbstractListIterator).get_size_woubt6_k$ = function () {
    return this.size_1;
  };
  protoOf(AbstractListIterator).hasNext_bitz1p_k$ = function () {
    return this.index_1 < this.size_1;
  };
  protoOf(AbstractListIterator).hasPrevious_qh0629_k$ = function () {
    return this.index_1 > 0;
  };
  protoOf(AbstractListIterator).nextIndex_jshxun_k$ = function () {
    return this.index_1;
  };
  protoOf(AbstractListIterator).previousIndex_4qtyw5_k$ = function () {
    return this.index_1 - 1 | 0;
  };
  protoOf(AbstractListIterator).checkHasNext_6ofet1_k$ = function () {
    if (!this.hasNext_bitz1p_k$())
      throw NoSuchElementException_init_$Create$_0();
  };
  protoOf(AbstractListIterator).checkHasPrevious_fnwy87_k$ = function () {
    if (!this.hasPrevious_qh0629_k$())
      throw NoSuchElementException_init_$Create$_0();
  };
  function AbstractPersistentList$removeAll$lambda($elements) {
    return function (it) {
      return $elements.contains_aljjnj_k$(it);
    };
  }
  function AbstractPersistentList$retainAll$lambda($elements) {
    return function (it) {
      return !$elements.contains_aljjnj_k$(it);
    };
  }
  function AbstractPersistentList() {
    AbstractList.call(this);
  }
  protoOf(AbstractPersistentList).subList_xle3r2_k$ = function (fromIndex, toIndex) {
    return subList.call(this, fromIndex, toIndex);
  };
  protoOf(AbstractPersistentList).addAll_4lagoh_k$ = function (elements) {
    // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.mutate' call
    // Inline function 'kotlin.apply' call
    var this_0 = this.builder_3thy1n_k$();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractPersistentList.addAll.<anonymous>' call
    this_0.addAll_4lagoh_k$(elements);
    return this_0.build_1k0s4u_k$();
  };
  protoOf(AbstractPersistentList).addAll_lxodh3_k$ = function (index, c) {
    // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.mutate' call
    // Inline function 'kotlin.apply' call
    var this_0 = this.builder_3thy1n_k$();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractPersistentList.addAll.<anonymous>' call
    this_0.addAll_lxodh3_k$(index, c);
    return this_0.build_1k0s4u_k$();
  };
  protoOf(AbstractPersistentList).remove_cedx0m_k$ = function (element) {
    var index = this.indexOf_si1fv9_k$(element);
    if (!(index === -1)) {
      return this.removeAt_6niowx_k$(index);
    }
    return this;
  };
  protoOf(AbstractPersistentList).removeAll_y0z8pe_k$ = function (elements) {
    return this.removeAll_b74hty_k$(AbstractPersistentList$removeAll$lambda(elements));
  };
  protoOf(AbstractPersistentList).retainAll_9fhiib_k$ = function (elements) {
    return this.removeAll_b74hty_k$(AbstractPersistentList$retainAll$lambda(elements));
  };
  protoOf(AbstractPersistentList).clear_1keqml_k$ = function () {
    return persistentVectorOf();
  };
  protoOf(AbstractPersistentList).contains_aljjnj_k$ = function (element) {
    return !(this.indexOf_si1fv9_k$(element) === -1);
  };
  protoOf(AbstractPersistentList).containsAll_xk45sd_k$ = function (elements) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.isEmpty_y1axqb_k$();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.iterator_jk1svi_k$();
      while (tmp0_iterator.hasNext_bitz1p_k$()) {
        var element = tmp0_iterator.next_20eer_k$();
        // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractPersistentList.containsAll.<anonymous>' call
        if (!this.contains_aljjnj_k$(element)) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  protoOf(AbstractPersistentList).iterator_jk1svi_k$ = function () {
    return this.listIterator_xjshxw_k$();
  };
  protoOf(AbstractPersistentList).listIterator_xjshxw_k$ = function () {
    return this.listIterator_70e65o_k$(0);
  };
  function BufferIterator(buffer, index, size) {
    AbstractListIterator.call(this, index, size);
    this.buffer_1 = buffer;
  }
  protoOf(BufferIterator).get_buffer_bmaafd_k$ = function () {
    return this.buffer_1;
  };
  protoOf(BufferIterator).next_20eer_k$ = function () {
    if (!this.hasNext_bitz1p_k$()) {
      throw NoSuchElementException_init_$Create$_0();
    }
    var tmp1 = this.get_index_it478p_k$();
    this.set_index_69f5xp_k$(tmp1 + 1 | 0);
    return this.buffer_1[tmp1];
  };
  protoOf(BufferIterator).previous_l2dfd5_k$ = function () {
    if (!this.hasPrevious_qh0629_k$()) {
      throw NoSuchElementException_init_$Create$_0();
    }
    this.set_index_69f5xp_k$(this.get_index_it478p_k$() - 1 | 0);
    return this.buffer_1[this.get_index_it478p_k$()];
  };
  function _get_root__dd8asp($this) {
    return $this.root_1;
  }
  function _get_tail__de2tiz($this) {
    return $this.tail_1;
  }
  function _get_rootShift__p8cbkh($this) {
    return $this.rootShift_1;
  }
  function rootSize($this) {
    return rootSize_1($this.size_1);
  }
  function pushFilledTail($this, root, filledTail, newTail) {
    if ($this.size_1 >> get_LOG_MAX_BUFFER_SIZE() > 1 << $this.rootShift_1) {
      var newRoot = presizedBufferWith(root);
      var newRootShift = $this.rootShift_1 + get_LOG_MAX_BUFFER_SIZE() | 0;
      newRoot = pushTail($this, newRoot, newRootShift, filledTail);
      return new PersistentVector(newRoot, newTail, $this.size_1 + 1 | 0, newRootShift);
    }
    var newRoot_0 = pushTail($this, root, $this.rootShift_1, filledTail);
    return new PersistentVector(newRoot_0, newTail, $this.size_1 + 1 | 0, $this.rootShift_1);
  }
  function pushTail($this, root, shift, tail) {
    var bufferIndex = indexSegment($this.size_1 - 1 | 0, shift);
    var tmp1_elvis_lhs = root == null ? null : copyOf_0(root, get_MAX_BUFFER_SIZE());
    var tmp;
    if (tmp1_elvis_lhs == null) {
      // Inline function 'kotlin.arrayOfNulls' call
      var size = get_MAX_BUFFER_SIZE();
      tmp = fillArrayVal(Array(size), null);
    } else {
      tmp = tmp1_elvis_lhs;
    }
    var newRootNode = tmp;
    if (shift === get_LOG_MAX_BUFFER_SIZE()) {
      newRootNode[bufferIndex] = tail;
    } else {
      var tmp_0 = newRootNode[bufferIndex];
      newRootNode[bufferIndex] = pushTail($this, (tmp_0 == null ? true : isArray(tmp_0)) ? tmp_0 : THROW_CCE(), shift - get_LOG_MAX_BUFFER_SIZE() | 0, tail);
    }
    return newRootNode;
  }
  function insertIntoTail($this, root, tailIndex, element) {
    var tailSize = $this.size_1 - rootSize($this) | 0;
    var newTail = copyOf_0($this.tail_1, get_MAX_BUFFER_SIZE());
    if (tailSize < get_MAX_BUFFER_SIZE()) {
      // Inline function 'kotlin.collections.copyInto' call
      var this_0 = $this.tail_1;
      var destinationOffset = tailIndex + 1 | 0;
      arrayCopy(this_0, newTail, destinationOffset, tailIndex, tailSize);
      newTail[tailIndex] = element;
      return new PersistentVector(root, newTail, $this.size_1 + 1 | 0, $this.rootShift_1);
    }
    var lastElement = $this.tail_1[get_MAX_BUFFER_SIZE_MINUS_ONE()];
    // Inline function 'kotlin.collections.copyInto' call
    var this_1 = $this.tail_1;
    var destinationOffset_0 = tailIndex + 1 | 0;
    var endIndex = tailSize - 1 | 0;
    arrayCopy(this_1, newTail, destinationOffset_0, tailIndex, endIndex);
    newTail[tailIndex] = element;
    return pushFilledTail($this, root, newTail, presizedBufferWith(lastElement));
  }
  function insertIntoRoot($this, root, shift, index, element, elementCarry) {
    var bufferIndex = indexSegment(index, shift);
    if (shift === 0) {
      var tmp;
      if (bufferIndex === 0) {
        // Inline function 'kotlin.arrayOfNulls' call
        var size = get_MAX_BUFFER_SIZE();
        tmp = fillArrayVal(Array(size), null);
      } else {
        tmp = copyOf_0(root, get_MAX_BUFFER_SIZE());
      }
      var newRoot = tmp;
      // Inline function 'kotlin.collections.copyInto' call
      var destinationOffset = bufferIndex + 1 | 0;
      var endIndex = get_MAX_BUFFER_SIZE_MINUS_ONE();
      arrayCopy(root, newRoot, destinationOffset, bufferIndex, endIndex);
      elementCarry.set_value_rjqr2d_k$(root[get_MAX_BUFFER_SIZE_MINUS_ONE()]);
      newRoot[bufferIndex] = element;
      return newRoot;
    }
    var newRoot_0 = copyOf_0(root, get_MAX_BUFFER_SIZE());
    var lowerLevelShift = shift - get_LOG_MAX_BUFFER_SIZE() | 0;
    var tmp_0 = root[bufferIndex];
    newRoot_0[bufferIndex] = insertIntoRoot($this, (!(tmp_0 == null) ? isArray(tmp_0) : false) ? tmp_0 : THROW_CCE(), lowerLevelShift, index, element, elementCarry);
    var inductionVariable = bufferIndex + 1 | 0;
    var last = get_MAX_BUFFER_SIZE();
    if (inductionVariable < last)
      $l$loop: do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (newRoot_0[i] == null)
          break $l$loop;
        var tmp_1 = root[i];
        newRoot_0[i] = insertIntoRoot($this, (!(tmp_1 == null) ? isArray(tmp_1) : false) ? tmp_1 : THROW_CCE(), lowerLevelShift, 0, elementCarry.get_value_j01efc_k$(), elementCarry);
      }
       while (inductionVariable < last);
    return newRoot_0;
  }
  function removeFromTailAt($this, root, rootSize, shift, index) {
    var tailSize = $this.size_1 - rootSize | 0;
    assert(index < tailSize);
    if (tailSize === 1) {
      return pullLastBufferFromRoot($this, root, rootSize, shift);
    }
    var newTail = copyOf_0($this.tail_1, get_MAX_BUFFER_SIZE());
    if (index < (tailSize - 1 | 0)) {
      // Inline function 'kotlin.collections.copyInto' call
      var this_0 = $this.tail_1;
      var startIndex = index + 1 | 0;
      arrayCopy(this_0, newTail, index, startIndex, tailSize);
    }
    newTail[tailSize - 1 | 0] = null;
    return new PersistentVector(root, newTail, (rootSize + tailSize | 0) - 1 | 0, shift);
  }
  function pullLastBufferFromRoot($this, root, rootSize, shift) {
    if (shift === 0) {
      var buffer = root.length === get_MUTABLE_BUFFER_SIZE() ? copyOf_0(root, get_MAX_BUFFER_SIZE()) : root;
      return new SmallPersistentVector(buffer);
    }
    var tailCarry = new ObjectRef(null);
    var newRoot = ensureNotNull(pullLastBuffer($this, root, shift, rootSize - 1 | 0, tailCarry));
    var tmp = tailCarry.get_value_j01efc_k$();
    var newTail = (!(tmp == null) ? isArray(tmp) : false) ? tmp : THROW_CCE();
    if (newRoot[1] == null) {
      var tmp_0 = newRoot[0];
      var lowerLevelRoot = (!(tmp_0 == null) ? isArray(tmp_0) : false) ? tmp_0 : THROW_CCE();
      return new PersistentVector(lowerLevelRoot, newTail, rootSize, shift - get_LOG_MAX_BUFFER_SIZE() | 0);
    }
    return new PersistentVector(newRoot, newTail, rootSize, shift);
  }
  function pullLastBuffer($this, root, shift, index, tailCarry) {
    var bufferIndex = indexSegment(index, shift);
    var tmp;
    if (shift === get_LOG_MAX_BUFFER_SIZE()) {
      tailCarry.set_value_rjqr2d_k$(root[bufferIndex]);
      tmp = null;
    } else {
      var tmp_0 = root[bufferIndex];
      tmp = pullLastBuffer($this, (!(tmp_0 == null) ? isArray(tmp_0) : false) ? tmp_0 : THROW_CCE(), shift - get_LOG_MAX_BUFFER_SIZE() | 0, index, tailCarry);
    }
    var newBufferAtIndex = tmp;
    if (newBufferAtIndex == null ? bufferIndex === 0 : false) {
      return null;
    }
    var newRoot = copyOf_0(root, get_MAX_BUFFER_SIZE());
    newRoot[bufferIndex] = newBufferAtIndex;
    return newRoot;
  }
  function removeFromRootAt($this, root, shift, index, tailCarry) {
    var bufferIndex = indexSegment(index, shift);
    if (shift === 0) {
      var tmp;
      if (bufferIndex === 0) {
        // Inline function 'kotlin.arrayOfNulls' call
        var size = get_MAX_BUFFER_SIZE();
        tmp = fillArrayVal(Array(size), null);
      } else {
        tmp = copyOf_0(root, get_MAX_BUFFER_SIZE());
      }
      var newRoot = tmp;
      // Inline function 'kotlin.collections.copyInto' call
      var startIndex = bufferIndex + 1 | 0;
      var endIndex = get_MAX_BUFFER_SIZE();
      arrayCopy(root, newRoot, bufferIndex, startIndex, endIndex);
      newRoot[get_MAX_BUFFER_SIZE() - 1 | 0] = tailCarry.get_value_j01efc_k$();
      tailCarry.set_value_rjqr2d_k$(root[bufferIndex]);
      return newRoot;
    }
    var bufferLastIndex = get_MAX_BUFFER_SIZE_MINUS_ONE();
    if (root[bufferLastIndex] == null) {
      bufferLastIndex = indexSegment(rootSize($this) - 1 | 0, shift);
    }
    var newRoot_0 = copyOf_0(root, get_MAX_BUFFER_SIZE());
    var lowerLevelShift = shift - get_LOG_MAX_BUFFER_SIZE() | 0;
    var inductionVariable = bufferLastIndex;
    var last = bufferIndex + 1 | 0;
    if (last <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var tmp_0 = newRoot_0[i];
        newRoot_0[i] = removeFromRootAt($this, (!(tmp_0 == null) ? isArray(tmp_0) : false) ? tmp_0 : THROW_CCE(), lowerLevelShift, 0, tailCarry);
      }
       while (!(i === last));
    var tmp_1 = newRoot_0[bufferIndex];
    newRoot_0[bufferIndex] = removeFromRootAt($this, (!(tmp_1 == null) ? isArray(tmp_1) : false) ? tmp_1 : THROW_CCE(), lowerLevelShift, index, tailCarry);
    return newRoot_0;
  }
  function bufferFor($this, index) {
    if (rootSize($this) <= index) {
      return $this.tail_1;
    }
    var buffer = $this.root_1;
    var shift = $this.rootShift_1;
    while (shift > 0) {
      var tmp = buffer[indexSegment(index, shift)];
      buffer = (!(tmp == null) ? isArray(tmp) : false) ? tmp : THROW_CCE();
      shift = shift - get_LOG_MAX_BUFFER_SIZE() | 0;
    }
    return buffer;
  }
  function setInRoot($this, root, shift, index, e) {
    var bufferIndex = indexSegment(index, shift);
    var newRoot = copyOf_0(root, get_MAX_BUFFER_SIZE());
    if (shift === 0) {
      newRoot[bufferIndex] = e;
    } else {
      var tmp = newRoot[bufferIndex];
      newRoot[bufferIndex] = setInRoot($this, (!(tmp == null) ? isArray(tmp) : false) ? tmp : THROW_CCE(), shift - get_LOG_MAX_BUFFER_SIZE() | 0, index, e);
    }
    return newRoot;
  }
  function PersistentVector(root, tail, size, rootShift) {
    AbstractPersistentList.call(this);
    this.root_1 = root;
    this.tail_1 = tail;
    this.size_1 = size;
    this.rootShift_1 = rootShift;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(this.size_1 > get_MAX_BUFFER_SIZE())) {
      // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.PersistentVector.<anonymous>' call
      var message = 'Trie-based persistent vector should have at least ' + (get_MAX_BUFFER_SIZE() + 1 | 0) + ' elements, got ' + this.size_1;
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    assert((this.size_1 - rootSize_1(this.size_1) | 0) <= coerceAtMost(this.tail_1.length, get_MAX_BUFFER_SIZE()));
  }
  protoOf(PersistentVector).get_size_woubt6_k$ = function () {
    return this.size_1;
  };
  protoOf(PersistentVector).add_utx5q5_k$ = function (element) {
    var tailSize = this.size_1 - rootSize(this) | 0;
    if (tailSize < get_MAX_BUFFER_SIZE()) {
      var newTail = copyOf_0(this.tail_1, get_MAX_BUFFER_SIZE());
      newTail[tailSize] = element;
      return new PersistentVector(this.root_1, newTail, this.size_1 + 1 | 0, this.rootShift_1);
    }
    var newTail_0 = presizedBufferWith(element);
    return pushFilledTail(this, this.root_1, this.tail_1, newTail_0);
  };
  protoOf(PersistentVector).add_k4dn3t_k$ = function (index, element) {
    ListImplementation_getInstance().checkPositionIndex_xiph8v_k$(index, this.size_1);
    if (index === this.size_1) {
      return this.add_utx5q5_k$(element);
    }
    var rootSize_0 = rootSize(this);
    if (index >= rootSize_0) {
      return insertIntoTail(this, this.root_1, index - rootSize_0 | 0, element);
    }
    var elementCarry = new ObjectRef(null);
    var newRoot = insertIntoRoot(this, this.root_1, this.rootShift_1, index, element, elementCarry);
    return insertIntoTail(this, newRoot, 0, elementCarry.get_value_j01efc_k$());
  };
  protoOf(PersistentVector).removeAt_6niowx_k$ = function (index) {
    ListImplementation_getInstance().checkElementIndex_r3t1bm_k$(index, this.size_1);
    var rootSize_0 = rootSize(this);
    if (index >= rootSize_0) {
      return removeFromTailAt(this, this.root_1, rootSize_0, this.rootShift_1, index - rootSize_0 | 0);
    }
    var newRoot = removeFromRootAt(this, this.root_1, this.rootShift_1, index, new ObjectRef(this.tail_1[0]));
    return removeFromTailAt(this, newRoot, rootSize_0, this.rootShift_1, 0);
  };
  protoOf(PersistentVector).removeAll_b74hty_k$ = function (predicate) {
    // Inline function 'kotlin.also' call
    var this_0 = this.builder_3thy1n_k$();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.PersistentVector.removeAll.<anonymous>' call
    this_0.removeAllWithPredicate_ku5o8f_k$(predicate);
    return this_0.build_1k0s4u_k$();
  };
  protoOf(PersistentVector).builder_3thy1n_k$ = function () {
    return new PersistentVectorBuilder(this, this.root_1, this.tail_1, this.rootShift_1);
  };
  protoOf(PersistentVector).listIterator_70e65o_k$ = function (index) {
    ListImplementation_getInstance().checkPositionIndex_xiph8v_k$(index, this.size_1);
    var tmp = this.tail_1;
    return new PersistentVectorIterator(this.root_1, isArray(tmp) ? tmp : THROW_CCE(), index, this.size_1, (this.rootShift_1 / get_LOG_MAX_BUFFER_SIZE() | 0) + 1 | 0);
  };
  protoOf(PersistentVector).get_c1px32_k$ = function (index) {
    ListImplementation_getInstance().checkElementIndex_r3t1bm_k$(index, this.size_1);
    var buffer = bufferFor(this, index);
    var tmp = buffer[index & get_MAX_BUFFER_SIZE_MINUS_ONE()];
    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
  };
  protoOf(PersistentVector).set_82063s_k$ = function (index, element) {
    ListImplementation_getInstance().checkElementIndex_r3t1bm_k$(index, this.size_1);
    if (rootSize(this) <= index) {
      var newTail = copyOf_0(this.tail_1, get_MAX_BUFFER_SIZE());
      newTail[index & get_MAX_BUFFER_SIZE_MINUS_ONE()] = element;
      return new PersistentVector(this.root_1, newTail, this.size_1, this.rootShift_1);
    }
    var newRoot = setInRoot(this, this.root_1, this.rootShift_1, index, element);
    return new PersistentVector(newRoot, this.tail_1, this.size_1, this.rootShift_1);
  };
  function _set_vector__t43v7w($this, _set____db54di) {
    $this.vector_1 = _set____db54di;
  }
  function _get_vector__rndal4_0($this) {
    return $this.vector_1;
  }
  function _set_vectorRoot__6pjpfy($this, _set____db54di) {
    $this.vectorRoot_1 = _set____db54di;
  }
  function _get_vectorRoot__lrsal6($this) {
    return $this.vectorRoot_1;
  }
  function _set_vectorTail__6op6po($this, _set____db54di) {
    $this.vectorTail_1 = _set____db54di;
  }
  function _get_vectorTail__lqxruw($this) {
    return $this.vectorTail_1;
  }
  function _set_ownership__tm8oja($this, _set____db54di) {
    $this.ownership_1 = _set____db54di;
  }
  function _get_ownership__c40x1a($this) {
    return $this.ownership_1;
  }
  function _set_root__9tgb79($this, _set____db54di) {
    $this.root_1 = _set____db54di;
  }
  function _set_tail__9uatxj($this, _set____db54di) {
    $this.tail_1 = _set____db54di;
  }
  function _set_size__9twho6_3($this, _set____db54di) {
    $this.size_1 = _set____db54di;
  }
  function rootSize_0($this) {
    if ($this.size_1 <= get_MAX_BUFFER_SIZE()) {
      return 0;
    }
    return rootSize_1($this.size_1);
  }
  function tailSize($this, size) {
    if (size <= get_MAX_BUFFER_SIZE()) {
      return size;
    }
    return size - rootSize_1(size) | 0;
  }
  function tailSize_0($this) {
    return tailSize($this, $this.size_1);
  }
  function isMutable($this, buffer) {
    return buffer.length === get_MUTABLE_BUFFER_SIZE() ? buffer[get_MUTABLE_BUFFER_SIZE() - 1 | 0] === $this.ownership_1 : false;
  }
  function makeMutable($this, buffer) {
    if (buffer == null) {
      return mutableBuffer($this);
    }
    if (isMutable($this, buffer)) {
      return buffer;
    }
    // Inline function 'kotlin.collections.copyInto' call
    var destination = mutableBuffer($this);
    var endIndex = coerceAtMost(buffer.length, get_MAX_BUFFER_SIZE());
    arrayCopy(buffer, destination, 0, 0, endIndex);
    return destination;
  }
  function makeMutableShiftingRight($this, buffer, distance) {
    if (isMutable($this, buffer)) {
      // Inline function 'kotlin.collections.copyInto' call
      var endIndex = get_MAX_BUFFER_SIZE() - distance | 0;
      arrayCopy(buffer, buffer, distance, 0, endIndex);
      return buffer;
    }
    // Inline function 'kotlin.collections.copyInto' call
    var destination = mutableBuffer($this);
    var endIndex_0 = get_MAX_BUFFER_SIZE() - distance | 0;
    arrayCopy(buffer, destination, distance, 0, endIndex_0);
    return destination;
  }
  function mutableBufferWith($this, element) {
    // Inline function 'kotlin.arrayOfNulls' call
    var size = get_MUTABLE_BUFFER_SIZE();
    var buffer = fillArrayVal(Array(size), null);
    buffer[0] = element;
    buffer[get_MUTABLE_BUFFER_SIZE() - 1 | 0] = $this.ownership_1;
    return buffer;
  }
  function mutableBuffer($this) {
    // Inline function 'kotlin.arrayOfNulls' call
    var size = get_MUTABLE_BUFFER_SIZE();
    var buffer = fillArrayVal(Array(size), null);
    buffer[get_MUTABLE_BUFFER_SIZE() - 1 | 0] = $this.ownership_1;
    return buffer;
  }
  function pushFilledTail_0($this, root, filledTail, newTail) {
    var tmp;
    if ($this.size_1 >> get_LOG_MAX_BUFFER_SIZE() > 1 << $this.rootShift_1) {
      $this.root_1 = pushTail_0($this, mutableBufferWith($this, root), filledTail, $this.rootShift_1 + get_LOG_MAX_BUFFER_SIZE() | 0);
      $this.tail_1 = newTail;
      $this.rootShift_1 = $this.rootShift_1 + get_LOG_MAX_BUFFER_SIZE() | 0;
      $this.size_1 = $this.size_1 + 1 | 0;
      tmp = Unit_getInstance();
    } else if (root == null) {
      $this.root_1 = filledTail;
      $this.tail_1 = newTail;
      $this.size_1 = $this.size_1 + 1 | 0;
      tmp = Unit_getInstance();
    } else {
      $this.root_1 = pushTail_0($this, root, filledTail, $this.rootShift_1);
      $this.tail_1 = newTail;
      $this.size_1 = $this.size_1 + 1 | 0;
      tmp = Unit_getInstance();
    }
    return tmp;
  }
  function pushTail_0($this, root, tail, shift) {
    var index = indexSegment($this.size_1 - 1 | 0, shift);
    var mutableRoot = makeMutable($this, root);
    if (shift === get_LOG_MAX_BUFFER_SIZE()) {
      mutableRoot[index] = tail;
    } else {
      var tmp = mutableRoot[index];
      mutableRoot[index] = pushTail_0($this, (tmp == null ? true : isArray(tmp)) ? tmp : THROW_CCE(), tail, shift - get_LOG_MAX_BUFFER_SIZE() | 0);
    }
    return mutableRoot;
  }
  function copyToBuffer($this, buffer, bufferIndex, sourceIterator) {
    var index = bufferIndex;
    while (index < get_MAX_BUFFER_SIZE() ? sourceIterator.hasNext_bitz1p_k$() : false) {
      var tmp0 = index;
      index = tmp0 + 1 | 0;
      buffer[tmp0] = sourceIterator.next_20eer_k$();
    }
    return buffer;
  }
  function pushBuffersIncreasingHeightIfNeeded($this, root, rootSize, buffers) {
    var buffersIterator = arrayIterator(buffers);
    var mutableRoot = rootSize >> get_LOG_MAX_BUFFER_SIZE() < 1 << $this.rootShift_1 ? pushBuffers($this, root, rootSize, $this.rootShift_1, buffersIterator) : makeMutable($this, root);
    while (buffersIterator.hasNext_bitz1p_k$()) {
      $this.rootShift_1 = $this.rootShift_1 + get_LOG_MAX_BUFFER_SIZE() | 0;
      mutableRoot = mutableBufferWith($this, mutableRoot);
      pushBuffers($this, mutableRoot, 1 << $this.rootShift_1, $this.rootShift_1, buffersIterator);
    }
    return mutableRoot;
  }
  function pushBuffers($this, root, rootSize, shift, buffersIterator) {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!buffersIterator.hasNext_bitz1p_k$()) {
      // Inline function 'kotlin.check.<anonymous>' call
      var message = 'Check failed.';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(shift >= 0)) {
      // Inline function 'kotlin.check.<anonymous>' call
      var message_0 = 'Check failed.';
      throw IllegalStateException_init_$Create$(toString(message_0));
    }
    if (shift === 0) {
      return buffersIterator.next_20eer_k$();
    }
    var mutableRoot = makeMutable($this, root);
    var index = indexSegment(rootSize, shift);
    var tmp = index;
    var tmp_0 = mutableRoot[index];
    mutableRoot[tmp] = pushBuffers($this, (tmp_0 == null ? true : isArray(tmp_0)) ? tmp_0 : THROW_CCE(), rootSize, shift - get_LOG_MAX_BUFFER_SIZE() | 0, buffersIterator);
    $l$loop: while (true) {
      var tmp_1;
      index = index + 1 | 0;
      if (index < get_MAX_BUFFER_SIZE()) {
        tmp_1 = buffersIterator.hasNext_bitz1p_k$();
      } else {
        tmp_1 = false;
      }
      if (!tmp_1) {
        break $l$loop;
      }
      var tmp_2 = index;
      var tmp_3 = mutableRoot[index];
      mutableRoot[tmp_2] = pushBuffers($this, (tmp_3 == null ? true : isArray(tmp_3)) ? tmp_3 : THROW_CCE(), 0, shift - get_LOG_MAX_BUFFER_SIZE() | 0, buffersIterator);
    }
    return mutableRoot;
  }
  function insertIntoTail_0($this, root, index, element) {
    var tailSize = tailSize_0($this);
    var mutableTail = makeMutable($this, $this.tail_1);
    if (tailSize < get_MAX_BUFFER_SIZE()) {
      // Inline function 'kotlin.collections.copyInto' call
      var this_0 = $this.tail_1;
      var destinationOffset = index + 1 | 0;
      arrayCopy(this_0, mutableTail, destinationOffset, index, tailSize);
      mutableTail[index] = element;
      $this.root_1 = root;
      $this.tail_1 = mutableTail;
      $this.size_1 = $this.size_1 + 1 | 0;
    } else {
      var lastElement = $this.tail_1[get_MAX_BUFFER_SIZE_MINUS_ONE()];
      // Inline function 'kotlin.collections.copyInto' call
      var this_1 = $this.tail_1;
      var destinationOffset_0 = index + 1 | 0;
      var endIndex = get_MAX_BUFFER_SIZE_MINUS_ONE();
      arrayCopy(this_1, mutableTail, destinationOffset_0, index, endIndex);
      mutableTail[index] = element;
      pushFilledTail_0($this, root, mutableTail, mutableBufferWith($this, lastElement));
    }
  }
  function insertIntoRoot_0($this, root, shift, index, element, elementCarry) {
    var bufferIndex = indexSegment(index, shift);
    if (shift === 0) {
      elementCarry.set_value_rjqr2d_k$(root[get_MAX_BUFFER_SIZE_MINUS_ONE()]);
      // Inline function 'kotlin.collections.copyInto' call
      var destination = makeMutable($this, root);
      var destinationOffset = bufferIndex + 1 | 0;
      var endIndex = get_MAX_BUFFER_SIZE_MINUS_ONE();
      arrayCopy(root, destination, destinationOffset, bufferIndex, endIndex);
      var mutableRoot = destination;
      mutableRoot[bufferIndex] = element;
      return mutableRoot;
    }
    var mutableRoot_0 = makeMutable($this, root);
    var lowerLevelShift = shift - get_LOG_MAX_BUFFER_SIZE() | 0;
    var tmp = mutableRoot_0[bufferIndex];
    mutableRoot_0[bufferIndex] = insertIntoRoot_0($this, (!(tmp == null) ? isArray(tmp) : false) ? tmp : THROW_CCE(), lowerLevelShift, index, element, elementCarry);
    var inductionVariable = bufferIndex + 1 | 0;
    var last = get_MAX_BUFFER_SIZE();
    if (inductionVariable < last)
      $l$loop: do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (mutableRoot_0[i] == null)
          break $l$loop;
        var tmp_0 = mutableRoot_0[i];
        mutableRoot_0[i] = insertIntoRoot_0($this, (!(tmp_0 == null) ? isArray(tmp_0) : false) ? tmp_0 : THROW_CCE(), lowerLevelShift, 0, elementCarry.get_value_j01efc_k$(), elementCarry);
      }
       while (inductionVariable < last);
    return mutableRoot_0;
  }
  function insertIntoRoot_1($this, elements, index, rightShift, buffers, nullBuffers, nextBuffer) {
    // Inline function 'kotlin.checkNotNull' call
    var value = $this.root_1;
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'kotlin.checkNotNull' call
      // Inline function 'kotlin.contracts.contract' call
      if (value == null) {
        // Inline function 'kotlin.checkNotNull.<anonymous>' call
        var message = 'Required value was null.';
        throw IllegalStateException_init_$Create$(toString(message));
      } else {
        break $l$block;
      }
    }
    var startLeafIndex = index >> get_LOG_MAX_BUFFER_SIZE();
    var startLeaf = shiftLeafBuffers($this, startLeafIndex, rightShift, buffers, nullBuffers, nextBuffer);
    var lastLeafIndex = (rootSize_0($this) >> get_LOG_MAX_BUFFER_SIZE()) - 1 | 0;
    var newNullBuffers = nullBuffers - (lastLeafIndex - startLeafIndex | 0) | 0;
    var newNextBuffer = newNullBuffers < nullBuffers ? ensureNotNull(buffers[newNullBuffers]) : nextBuffer;
    splitToBuffers($this, elements, index, startLeaf, get_MAX_BUFFER_SIZE(), buffers, newNullBuffers, newNextBuffer);
  }
  function shiftLeafBuffers($this, startLeafIndex, rightShift, buffers, nullBuffers, nextBuffer) {
    // Inline function 'kotlin.checkNotNull' call
    var value = $this.root_1;
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'kotlin.checkNotNull' call
      // Inline function 'kotlin.contracts.contract' call
      if (value == null) {
        // Inline function 'kotlin.checkNotNull.<anonymous>' call
        var message = 'Required value was null.';
        throw IllegalStateException_init_$Create$(toString(message));
      } else {
        break $l$block;
      }
    }
    var leafCount = rootSize_0($this) >> get_LOG_MAX_BUFFER_SIZE();
    var leafBufferIterator_0 = leafBufferIterator($this, leafCount);
    var bufferIndex = nullBuffers;
    var buffer = nextBuffer;
    while (!(leafBufferIterator_0.previousIndex_4qtyw5_k$() === startLeafIndex)) {
      var currentBuffer = leafBufferIterator_0.previous_l2dfd5_k$();
      // Inline function 'kotlin.collections.copyInto' call
      var destination = buffer;
      var startIndex = get_MAX_BUFFER_SIZE() - rightShift | 0;
      var endIndex = get_MAX_BUFFER_SIZE();
      arrayCopy(currentBuffer, destination, 0, startIndex, endIndex);
      buffer = makeMutableShiftingRight($this, currentBuffer, rightShift);
      bufferIndex = bufferIndex - 1 | 0;
      buffers[bufferIndex] = buffer;
    }
    return leafBufferIterator_0.previous_l2dfd5_k$();
  }
  function splitToBuffers($this, elements, index, startBuffer, startBufferSize, buffers, nullBuffers, nextBuffer) {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(nullBuffers >= 1)) {
      // Inline function 'kotlin.check.<anonymous>' call
      var message = 'Check failed.';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    var firstBuffer = makeMutable($this, startBuffer);
    buffers[0] = firstBuffer;
    var newNextBuffer = nextBuffer;
    var newNullBuffers = nullBuffers;
    var startBufferStartIndex = index & get_MAX_BUFFER_SIZE_MINUS_ONE();
    var endBufferEndIndex = ((index + elements.get_size_woubt6_k$() | 0) - 1 | 0) & get_MAX_BUFFER_SIZE_MINUS_ONE();
    var elementsToShift = startBufferSize - startBufferStartIndex | 0;
    if ((endBufferEndIndex + elementsToShift | 0) < get_MAX_BUFFER_SIZE()) {
      // Inline function 'kotlin.collections.copyInto' call
      var destination = newNextBuffer;
      var destinationOffset = endBufferEndIndex + 1 | 0;
      arrayCopy(firstBuffer, destination, destinationOffset, startBufferStartIndex, startBufferSize);
    } else {
      var toCopyToLast = ((endBufferEndIndex + elementsToShift | 0) - get_MAX_BUFFER_SIZE() | 0) + 1 | 0;
      if (nullBuffers === 1) {
        newNextBuffer = firstBuffer;
      } else {
        newNextBuffer = mutableBuffer($this);
        newNullBuffers = newNullBuffers - 1 | 0;
        buffers[newNullBuffers] = newNextBuffer;
      }
      // Inline function 'kotlin.collections.copyInto' call
      var startIndex = startBufferSize - toCopyToLast | 0;
      arrayCopy(firstBuffer, nextBuffer, 0, startIndex, startBufferSize);
      // Inline function 'kotlin.collections.copyInto' call
      var destination_0 = newNextBuffer;
      var destinationOffset_0 = endBufferEndIndex + 1 | 0;
      var endIndex = startBufferSize - toCopyToLast | 0;
      arrayCopy(firstBuffer, destination_0, destinationOffset_0, startBufferStartIndex, endIndex);
    }
    var elementsIterator = elements.iterator_jk1svi_k$();
    copyToBuffer($this, firstBuffer, startBufferStartIndex, elementsIterator);
    var inductionVariable = 1;
    var last = newNullBuffers;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        buffers[i] = copyToBuffer($this, mutableBuffer($this), 0, elementsIterator);
      }
       while (inductionVariable < last);
    copyToBuffer($this, newNextBuffer, 0, elementsIterator);
  }
  function bufferFor_0($this, index) {
    if (rootSize_0($this) <= index) {
      return $this.tail_1;
    }
    var buffer = ensureNotNull($this.root_1);
    var shift = $this.rootShift_1;
    while (shift > 0) {
      var tmp = buffer[indexSegment(index, shift)];
      buffer = (!(tmp == null) ? isArray(tmp) : false) ? tmp : THROW_CCE();
      shift = shift - get_LOG_MAX_BUFFER_SIZE() | 0;
    }
    return buffer;
  }
  function removeFromTailAt_0($this, root, rootSize, shift, index) {
    var tailSize = $this.size_1 - rootSize | 0;
    assert(index < tailSize);
    var removedElement;
    if (tailSize === 1) {
      removedElement = $this.tail_1[0];
      pullLastBufferFromRoot_0($this, root, rootSize, shift);
    } else {
      removedElement = $this.tail_1[index];
      // Inline function 'kotlin.collections.copyInto' call
      var this_0 = $this.tail_1;
      var destination = makeMutable($this, $this.tail_1);
      var startIndex = index + 1 | 0;
      arrayCopy(this_0, destination, index, startIndex, tailSize);
      var mutableTail = destination;
      mutableTail[tailSize - 1 | 0] = null;
      $this.root_1 = root;
      $this.tail_1 = mutableTail;
      $this.size_1 = (rootSize + tailSize | 0) - 1 | 0;
      $this.rootShift_1 = shift;
    }
    return removedElement;
  }
  function removeFromRootAt_0($this, root, shift, index, tailCarry) {
    var bufferIndex = indexSegment(index, shift);
    if (shift === 0) {
      var removedElement = root[bufferIndex];
      // Inline function 'kotlin.collections.copyInto' call
      var destination = makeMutable($this, root);
      var startIndex = bufferIndex + 1 | 0;
      var endIndex = get_MAX_BUFFER_SIZE();
      arrayCopy(root, destination, bufferIndex, startIndex, endIndex);
      var mutableRoot = destination;
      mutableRoot[get_MAX_BUFFER_SIZE() - 1 | 0] = tailCarry.get_value_j01efc_k$();
      tailCarry.set_value_rjqr2d_k$(removedElement);
      return mutableRoot;
    }
    var bufferLastIndex = get_MAX_BUFFER_SIZE_MINUS_ONE();
    if (root[bufferLastIndex] == null) {
      bufferLastIndex = indexSegment(rootSize_0($this) - 1 | 0, shift);
    }
    var mutableRoot_0 = makeMutable($this, root);
    var lowerLevelShift = shift - get_LOG_MAX_BUFFER_SIZE() | 0;
    var inductionVariable = bufferLastIndex;
    var last = bufferIndex + 1 | 0;
    if (last <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var tmp = mutableRoot_0[i];
        mutableRoot_0[i] = removeFromRootAt_0($this, (!(tmp == null) ? isArray(tmp) : false) ? tmp : THROW_CCE(), lowerLevelShift, 0, tailCarry);
      }
       while (!(i === last));
    var tmp_0 = mutableRoot_0[bufferIndex];
    mutableRoot_0[bufferIndex] = removeFromRootAt_0($this, (!(tmp_0 == null) ? isArray(tmp_0) : false) ? tmp_0 : THROW_CCE(), lowerLevelShift, index, tailCarry);
    return mutableRoot_0;
  }
  function pullLastBufferFromRoot_0($this, root, rootSize, shift) {
    if (shift === 0) {
      $this.root_1 = null;
      var tmp = $this;
      var tmp_0;
      if (root == null) {
        // Inline function 'kotlin.emptyArray' call
        tmp_0 = [];
      } else {
        tmp_0 = root;
      }
      tmp.tail_1 = tmp_0;
      $this.size_1 = rootSize;
      $this.rootShift_1 = shift;
      return Unit_getInstance();
    }
    var tailCarry = new ObjectRef(null);
    var newRoot = ensureNotNull(pullLastBuffer_0($this, ensureNotNull(root), shift, rootSize, tailCarry));
    var tmp_1 = $this;
    var tmp_2 = tailCarry.get_value_j01efc_k$();
    tmp_1.tail_1 = (!(tmp_2 == null) ? isArray(tmp_2) : false) ? tmp_2 : THROW_CCE();
    $this.size_1 = rootSize;
    if (newRoot[1] == null) {
      var tmp_3 = $this;
      var tmp_4 = newRoot[0];
      tmp_3.root_1 = (tmp_4 == null ? true : isArray(tmp_4)) ? tmp_4 : THROW_CCE();
      $this.rootShift_1 = shift - get_LOG_MAX_BUFFER_SIZE() | 0;
    } else {
      $this.root_1 = newRoot;
      $this.rootShift_1 = shift;
    }
  }
  function pullLastBuffer_0($this, root, shift, rootSize, tailCarry) {
    var bufferIndex = indexSegment(rootSize - 1 | 0, shift);
    var tmp;
    if (shift === get_LOG_MAX_BUFFER_SIZE()) {
      tailCarry.set_value_rjqr2d_k$(root[bufferIndex]);
      tmp = null;
    } else {
      var tmp_0 = root[bufferIndex];
      tmp = pullLastBuffer_0($this, (!(tmp_0 == null) ? isArray(tmp_0) : false) ? tmp_0 : THROW_CCE(), shift - get_LOG_MAX_BUFFER_SIZE() | 0, rootSize, tailCarry);
    }
    var newBufferAtIndex = tmp;
    if (newBufferAtIndex == null ? bufferIndex === 0 : false) {
      return null;
    }
    var mutableRoot = makeMutable($this, root);
    mutableRoot[bufferIndex] = newBufferAtIndex;
    return mutableRoot;
  }
  function removeAll_0($this, predicate) {
    var tailSize = tailSize_0($this);
    var bufferRef = new ObjectRef(null);
    if ($this.root_1 == null) {
      return !(removeAllFromTail($this, predicate, tailSize, bufferRef) === tailSize);
    }
    var leafIterator = leafBufferIterator($this, 0);
    var bufferSize = get_MAX_BUFFER_SIZE();
    while (bufferSize === get_MAX_BUFFER_SIZE() ? leafIterator.hasNext_bitz1p_k$() : false) {
      bufferSize = removeAll_1($this, predicate, leafIterator.next_20eer_k$(), get_MAX_BUFFER_SIZE(), bufferRef);
    }
    if (bufferSize === get_MAX_BUFFER_SIZE()) {
      assert(!leafIterator.hasNext_bitz1p_k$());
      var newTailSize = removeAllFromTail($this, predicate, tailSize, bufferRef);
      if (newTailSize === 0) {
        pullLastBufferFromRoot_0($this, $this.root_1, $this.size_1, $this.rootShift_1);
      }
      return !(newTailSize === tailSize);
    }
    var unaffectedElementsCount = leafIterator.previousIndex_4qtyw5_k$() << get_LOG_MAX_BUFFER_SIZE();
    // Inline function 'kotlin.collections.mutableListOf' call
    var buffers = ArrayList_init_$Create$();
    // Inline function 'kotlin.collections.mutableListOf' call
    var recyclableBuffers = ArrayList_init_$Create$();
    while (leafIterator.hasNext_bitz1p_k$()) {
      var leaf = leafIterator.next_20eer_k$();
      bufferSize = recyclableRemoveAll($this, predicate, leaf, get_MAX_BUFFER_SIZE(), bufferSize, bufferRef, recyclableBuffers, buffers);
    }
    var newTailSize_0 = recyclableRemoveAll($this, predicate, $this.tail_1, tailSize, bufferSize, bufferRef, recyclableBuffers, buffers);
    var tmp = bufferRef.get_value_j01efc_k$();
    var newTail = (!(tmp == null) ? isArray(tmp) : false) ? tmp : THROW_CCE();
    fill_0(newTail, null, newTailSize_0, get_MAX_BUFFER_SIZE());
    var newRoot = buffers.isEmpty_y1axqb_k$() ? ensureNotNull($this.root_1) : pushBuffers($this, $this.root_1, unaffectedElementsCount, $this.rootShift_1, buffers.iterator_jk1svi_k$());
    var newRootSize = unaffectedElementsCount + (buffers.get_size_woubt6_k$() << get_LOG_MAX_BUFFER_SIZE()) | 0;
    $this.root_1 = retainFirst($this, newRoot, newRootSize);
    $this.tail_1 = newTail;
    $this.size_1 = newRootSize + newTailSize_0 | 0;
    return true;
  }
  function retainFirst($this, root, size) {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!((size & get_MAX_BUFFER_SIZE_MINUS_ONE()) === 0)) {
      // Inline function 'kotlin.check.<anonymous>' call
      var message = 'Check failed.';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    if (size === 0) {
      $this.rootShift_1 = 0;
      return null;
    }
    var lastIndex = size - 1 | 0;
    var newRoot = root;
    while (lastIndex >> $this.rootShift_1 === 0) {
      $this.rootShift_1 = $this.rootShift_1 - get_LOG_MAX_BUFFER_SIZE() | 0;
      var tmp = newRoot[0];
      newRoot = (!(tmp == null) ? isArray(tmp) : false) ? tmp : THROW_CCE();
    }
    return nullifyAfter($this, newRoot, lastIndex, $this.rootShift_1);
  }
  function nullifyAfter($this, root, index, shift) {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(shift >= 0)) {
      // Inline function 'kotlin.check.<anonymous>' call
      var message = 'Check failed.';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    if (shift === 0) {
      return root;
    }
    var lastIndex = indexSegment(index, shift);
    var tmp = root[lastIndex];
    var newChild = nullifyAfter($this, (!(tmp == null) ? isArray(tmp) : false) ? tmp : THROW_CCE(), index, shift - get_LOG_MAX_BUFFER_SIZE() | 0);
    var newRoot = root;
    if (lastIndex < get_MAX_BUFFER_SIZE_MINUS_ONE() ? !(newRoot[lastIndex + 1 | 0] == null) : false) {
      if (isMutable($this, newRoot)) {
        fill_0(newRoot, null, lastIndex + 1 | 0, get_MAX_BUFFER_SIZE());
      }
      // Inline function 'kotlin.collections.copyInto' call
      var this_0 = newRoot;
      var destination = mutableBuffer($this);
      var endIndex = lastIndex + 1 | 0;
      arrayCopy(this_0, destination, 0, 0, endIndex);
      newRoot = destination;
    }
    if (!(newChild === newRoot[lastIndex])) {
      newRoot = makeMutable($this, newRoot);
      newRoot[lastIndex] = newChild;
    }
    return newRoot;
  }
  function removeAllFromTail($this, predicate, tailSize, bufferRef) {
    var newTailSize = removeAll_1($this, predicate, $this.tail_1, tailSize, bufferRef);
    if (newTailSize === tailSize) {
      assert(bufferRef.get_value_j01efc_k$() === $this.tail_1);
      return tailSize;
    }
    var tmp = bufferRef.get_value_j01efc_k$();
    var newTail = (!(tmp == null) ? isArray(tmp) : false) ? tmp : THROW_CCE();
    fill_0(newTail, null, newTailSize, tailSize);
    $this.tail_1 = newTail;
    $this.size_1 = $this.size_1 - (tailSize - newTailSize | 0) | 0;
    return newTailSize;
  }
  function removeAll_1($this, predicate, buffer, bufferSize, bufferRef) {
    var newBuffer = buffer;
    var newBufferSize = bufferSize;
    var anyRemoved = false;
    var inductionVariable = 0;
    if (inductionVariable < bufferSize)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp = buffer[index];
        var element = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
        if (predicate(element)) {
          if (!anyRemoved) {
            newBuffer = makeMutable($this, buffer);
            newBufferSize = index;
            anyRemoved = true;
          }
        } else if (anyRemoved) {
          var tmp_0 = newBuffer;
          var tmp1 = newBufferSize;
          newBufferSize = tmp1 + 1 | 0;
          tmp_0[tmp1] = element;
        }
      }
       while (inductionVariable < bufferSize);
    bufferRef.set_value_rjqr2d_k$(newBuffer);
    return newBufferSize;
  }
  function recyclableRemoveAll($this, predicate, buffer, bufferSize, toBufferSize, bufferRef, recyclableBuffers, buffers) {
    if (isMutable($this, buffer)) {
      recyclableBuffers.add_utx5q5_k$(buffer);
    }
    var tmp = bufferRef.get_value_j01efc_k$();
    var toBuffer = (!(tmp == null) ? isArray(tmp) : false) ? tmp : THROW_CCE();
    var newToBuffer = toBuffer;
    var newToBufferSize = toBufferSize;
    var inductionVariable = 0;
    if (inductionVariable < bufferSize)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp_0 = buffer[index];
        var element = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
        if (!predicate(element)) {
          if (newToBufferSize === get_MAX_BUFFER_SIZE()) {
            var tmp_1;
            // Inline function 'kotlin.collections.isNotEmpty' call
            if (!recyclableBuffers.isEmpty_y1axqb_k$()) {
              tmp_1 = recyclableBuffers.removeAt_6niowx_k$(recyclableBuffers.get_size_woubt6_k$() - 1 | 0);
            } else {
              tmp_1 = mutableBuffer($this);
            }
            newToBuffer = tmp_1;
            newToBufferSize = 0;
          }
          var tmp_2 = newToBuffer;
          var tmp1 = newToBufferSize;
          newToBufferSize = tmp1 + 1 | 0;
          tmp_2[tmp1] = element;
        }
      }
       while (inductionVariable < bufferSize);
    bufferRef.set_value_rjqr2d_k$(newToBuffer);
    if (!(toBuffer === bufferRef.get_value_j01efc_k$())) {
      buffers.add_utx5q5_k$(toBuffer);
    }
    return newToBufferSize;
  }
  function setInRoot_0($this, root, shift, index, e, oldElementCarry) {
    var bufferIndex = indexSegment(index, shift);
    var mutableRoot = makeMutable($this, root);
    if (shift === 0) {
      if (!(mutableRoot === root)) {
        var tmp1 = $this.get_modCount_sgzjli_k$();
        $this.set_modCount_dsd9nm_k$(tmp1 + 1 | 0);
      }
      oldElementCarry.set_value_rjqr2d_k$(mutableRoot[bufferIndex]);
      mutableRoot[bufferIndex] = e;
      return mutableRoot;
    }
    var tmp = mutableRoot[bufferIndex];
    mutableRoot[bufferIndex] = setInRoot_0($this, (!(tmp == null) ? isArray(tmp) : false) ? tmp : THROW_CCE(), shift - get_LOG_MAX_BUFFER_SIZE() | 0, index, e, oldElementCarry);
    return mutableRoot;
  }
  function leafBufferIterator($this, index) {
    // Inline function 'kotlin.checkNotNull' call
    var value = $this.root_1;
    // Inline function 'kotlin.contracts.contract' call
    $l$block: {
      // Inline function 'kotlin.checkNotNull' call
      // Inline function 'kotlin.contracts.contract' call
      if (value == null) {
        // Inline function 'kotlin.checkNotNull.<anonymous>' call
        var message = 'Required value was null.';
        throw IllegalStateException_init_$Create$(toString(message));
      } else {
        break $l$block;
      }
    }
    var leafCount = rootSize_0($this) >> get_LOG_MAX_BUFFER_SIZE();
    ListImplementation_getInstance().checkPositionIndex_xiph8v_k$(index, leafCount);
    if ($this.rootShift_1 === 0) {
      return new SingleElementListIterator(ensureNotNull($this.root_1), index);
    }
    var trieHeight = $this.rootShift_1 / get_LOG_MAX_BUFFER_SIZE() | 0;
    return new TrieIterator(ensureNotNull($this.root_1), index, leafCount, trieHeight);
  }
  function PersistentVectorBuilder$removeAll$lambda($elements) {
    return function (it) {
      return $elements.contains_aljjnj_k$(it);
    };
  }
  function PersistentVectorBuilder(vector, vectorRoot, vectorTail, rootShift) {
    AbstractMutableList.call(this);
    this.vector_1 = vector;
    this.vectorRoot_1 = vectorRoot;
    this.vectorTail_1 = vectorTail;
    this.rootShift_1 = rootShift;
    this.ownership_1 = new MutabilityOwnership();
    this.root_1 = this.vectorRoot_1;
    this.tail_1 = this.vectorTail_1;
    this.size_1 = this.vector_1.get_size_woubt6_k$();
  }
  protoOf(PersistentVectorBuilder).set_rootShift_ajky6d_k$ = function (_set____db54di) {
    this.rootShift_1 = _set____db54di;
  };
  protoOf(PersistentVectorBuilder).get_rootShift_60gzqh_k$ = function () {
    return this.rootShift_1;
  };
  protoOf(PersistentVectorBuilder).get_root_wott0r_k$ = function () {
    return this.root_1;
  };
  protoOf(PersistentVectorBuilder).get_tail_wousgp_k$ = function () {
    return this.tail_1;
  };
  protoOf(PersistentVectorBuilder).get_size_woubt6_k$ = function () {
    return this.size_1;
  };
  protoOf(PersistentVectorBuilder).getModCount_nlxuar_k$ = function () {
    return this.get_modCount_sgzjli_k$();
  };
  protoOf(PersistentVectorBuilder).build_1k0s4u_k$ = function () {
    var tmp = this;
    var tmp_0;
    if (this.root_1 === this.vectorRoot_1 ? this.tail_1 === this.vectorTail_1 : false) {
      tmp_0 = this.vector_1;
    } else {
      this.ownership_1 = new MutabilityOwnership();
      this.vectorRoot_1 = this.root_1;
      this.vectorTail_1 = this.tail_1;
      var tmp_1;
      if (this.root_1 == null) {
        var tmp_2;
        // Inline function 'kotlin.collections.isEmpty' call
        if (this.tail_1.length === 0) {
          tmp_2 = persistentVectorOf();
        } else {
          tmp_2 = new SmallPersistentVector(copyOf_0(this.tail_1, this.size_1));
        }
        tmp_1 = tmp_2;
      } else {
        tmp_1 = new PersistentVector(ensureNotNull(this.root_1), this.tail_1, this.size_1, this.rootShift_1);
      }
      tmp_0 = tmp_1;
    }
    tmp.vector_1 = tmp_0;
    return this.vector_1;
  };
  protoOf(PersistentVectorBuilder).add_utx5q5_k$ = function (element) {
    this.set_modCount_dsd9nm_k$(this.get_modCount_sgzjli_k$() + 1 | 0);
    var tailSize = tailSize_0(this);
    if (tailSize < get_MAX_BUFFER_SIZE()) {
      var mutableTail = makeMutable(this, this.tail_1);
      mutableTail[tailSize] = element;
      this.tail_1 = mutableTail;
      this.size_1 = this.size_1 + 1 | 0;
    } else {
      var newTail = mutableBufferWith(this, element);
      pushFilledTail_0(this, this.root_1, this.tail_1, newTail);
    }
    return true;
  };
  protoOf(PersistentVectorBuilder).addAll_4lagoh_k$ = function (elements) {
    if (elements.isEmpty_y1axqb_k$()) {
      return false;
    }
    var tmp1 = this.get_modCount_sgzjli_k$();
    this.set_modCount_dsd9nm_k$(tmp1 + 1 | 0);
    var tailSize = tailSize_0(this);
    var elementsIterator = elements.iterator_jk1svi_k$();
    if ((get_MAX_BUFFER_SIZE() - tailSize | 0) >= elements.get_size_woubt6_k$()) {
      this.tail_1 = copyToBuffer(this, makeMutable(this, this.tail_1), tailSize, elementsIterator);
      this.size_1 = this.size_1 + elements.get_size_woubt6_k$() | 0;
    } else {
      var buffersSize = ((elements.get_size_woubt6_k$() + tailSize | 0) - 1 | 0) / get_MAX_BUFFER_SIZE() | 0;
      // Inline function 'kotlin.arrayOfNulls' call
      var buffers = fillArrayVal(Array(buffersSize), null);
      buffers[0] = copyToBuffer(this, makeMutable(this, this.tail_1), tailSize, elementsIterator);
      var inductionVariable = 1;
      if (inductionVariable < buffersSize)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          buffers[index] = copyToBuffer(this, mutableBuffer(this), 0, elementsIterator);
        }
         while (inductionVariable < buffersSize);
      var tmp = this;
      var tmp_0 = this.root_1;
      var tmp_1 = rootSize_0(this);
      tmp.root_1 = pushBuffersIncreasingHeightIfNeeded(this, tmp_0, tmp_1, isArray(buffers) ? buffers : THROW_CCE());
      this.tail_1 = copyToBuffer(this, mutableBuffer(this), 0, elementsIterator);
      this.size_1 = this.size_1 + elements.get_size_woubt6_k$() | 0;
    }
    return true;
  };
  protoOf(PersistentVectorBuilder).add_dl6gt3_k$ = function (index, element) {
    ListImplementation_getInstance().checkPositionIndex_xiph8v_k$(index, this.size_1);
    if (index === this.size_1) {
      this.add_utx5q5_k$(element);
      return Unit_getInstance();
    }
    this.set_modCount_dsd9nm_k$(this.get_modCount_sgzjli_k$() + 1 | 0);
    var rootSize = rootSize_0(this);
    if (index >= rootSize) {
      insertIntoTail_0(this, this.root_1, index - rootSize | 0, element);
      return Unit_getInstance();
    }
    var elementCarry = new ObjectRef(null);
    var newRest = insertIntoRoot_0(this, ensureNotNull(this.root_1), this.rootShift_1, index, element, elementCarry);
    var tmp = elementCarry.get_value_j01efc_k$();
    insertIntoTail_0(this, newRest, 0, (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE());
  };
  protoOf(PersistentVectorBuilder).addAll_lxodh3_k$ = function (index, elements) {
    ListImplementation_getInstance().checkPositionIndex_xiph8v_k$(index, this.size_1);
    if (index === this.size_1) {
      return this.addAll_4lagoh_k$(elements);
    }
    if (elements.isEmpty_y1axqb_k$()) {
      return false;
    }
    var tmp1 = this.get_modCount_sgzjli_k$();
    this.set_modCount_dsd9nm_k$(tmp1 + 1 | 0);
    var unaffectedElementsCount = index >> get_LOG_MAX_BUFFER_SIZE() << get_LOG_MAX_BUFFER_SIZE();
    var buffersSize = (((this.size_1 - unaffectedElementsCount | 0) + elements.get_size_woubt6_k$() | 0) - 1 | 0) / get_MAX_BUFFER_SIZE() | 0;
    if (buffersSize === 0) {
      assert(index >= rootSize_0(this));
      var startIndex = index & get_MAX_BUFFER_SIZE_MINUS_ONE();
      var endIndex = ((index + elements.get_size_woubt6_k$() | 0) - 1 | 0) & get_MAX_BUFFER_SIZE_MINUS_ONE();
      // Inline function 'kotlin.collections.copyInto' call
      var this_0 = this.tail_1;
      var destination = makeMutable(this, this.tail_1);
      var destinationOffset = endIndex + 1 | 0;
      var endIndex_0 = tailSize_0(this);
      arrayCopy(this_0, destination, destinationOffset, startIndex, endIndex_0);
      var newTail = destination;
      copyToBuffer(this, newTail, startIndex, elements.iterator_jk1svi_k$());
      this.tail_1 = newTail;
      this.size_1 = this.size_1 + elements.get_size_woubt6_k$() | 0;
      return true;
    }
    // Inline function 'kotlin.arrayOfNulls' call
    var buffers = fillArrayVal(Array(buffersSize), null);
    var tailSize_1 = tailSize_0(this);
    var newTailSize = tailSize(this, this.size_1 + elements.get_size_woubt6_k$() | 0);
    var newTail_0;
    if (index >= rootSize_0(this)) {
      newTail_0 = mutableBuffer(this);
      splitToBuffers(this, elements, index, this.tail_1, tailSize_1, buffers, buffersSize, newTail_0);
    } else if (newTailSize > tailSize_1) {
      var rightShift = newTailSize - tailSize_1 | 0;
      newTail_0 = makeMutableShiftingRight(this, this.tail_1, rightShift);
      insertIntoRoot_1(this, elements, index, rightShift, buffers, buffersSize, newTail_0);
    } else {
      // Inline function 'kotlin.collections.copyInto' call
      var this_1 = this.tail_1;
      var destination_0 = mutableBuffer(this);
      var startIndex_0 = tailSize_1 - newTailSize | 0;
      arrayCopy(this_1, destination_0, 0, startIndex_0, tailSize_1);
      newTail_0 = destination_0;
      var rightShift_0 = get_MAX_BUFFER_SIZE() - (tailSize_1 - newTailSize | 0) | 0;
      var lastBuffer = makeMutableShiftingRight(this, this.tail_1, rightShift_0);
      buffers[buffersSize - 1 | 0] = lastBuffer;
      insertIntoRoot_1(this, elements, index, rightShift_0, buffers, buffersSize - 1 | 0, lastBuffer);
    }
    var tmp = this;
    var tmp_0 = this.root_1;
    tmp.root_1 = pushBuffersIncreasingHeightIfNeeded(this, tmp_0, unaffectedElementsCount, isArray(buffers) ? buffers : THROW_CCE());
    this.tail_1 = newTail_0;
    this.size_1 = this.size_1 + elements.get_size_woubt6_k$() | 0;
    return true;
  };
  protoOf(PersistentVectorBuilder).get_c1px32_k$ = function (index) {
    ListImplementation_getInstance().checkElementIndex_r3t1bm_k$(index, this.size_1);
    var buffer = bufferFor_0(this, index);
    var tmp = buffer[index & get_MAX_BUFFER_SIZE_MINUS_ONE()];
    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
  };
  protoOf(PersistentVectorBuilder).removeAt_6niowx_k$ = function (index) {
    ListImplementation_getInstance().checkElementIndex_r3t1bm_k$(index, this.size_1);
    this.set_modCount_dsd9nm_k$(this.get_modCount_sgzjli_k$() + 1 | 0);
    var rootSize = rootSize_0(this);
    if (index >= rootSize) {
      var tmp = removeFromTailAt_0(this, this.root_1, rootSize, this.rootShift_1, index - rootSize | 0);
      return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
    }
    var elementCarry = new ObjectRef(this.tail_1[0]);
    var newRoot = removeFromRootAt_0(this, ensureNotNull(this.root_1), this.rootShift_1, index, elementCarry);
    removeFromTailAt_0(this, newRoot, rootSize, this.rootShift_1, 0);
    var tmp_0 = elementCarry.get_value_j01efc_k$();
    return (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
  };
  protoOf(PersistentVectorBuilder).removeAll_y0z8pe_k$ = function (elements) {
    return this.removeAllWithPredicate_ku5o8f_k$(PersistentVectorBuilder$removeAll$lambda(elements));
  };
  protoOf(PersistentVectorBuilder).removeAllWithPredicate_ku5o8f_k$ = function (predicate) {
    var anyRemoved = removeAll_0(this, predicate);
    if (anyRemoved) {
      var tmp1 = this.get_modCount_sgzjli_k$();
      this.set_modCount_dsd9nm_k$(tmp1 + 1 | 0);
    }
    return anyRemoved;
  };
  protoOf(PersistentVectorBuilder).set_82063s_k$ = function (index, element) {
    ListImplementation_getInstance().checkElementIndex_r3t1bm_k$(index, this.size_1);
    if (rootSize_0(this) <= index) {
      var mutableTail = makeMutable(this, this.tail_1);
      if (!(mutableTail === this.tail_1)) {
        var tmp1 = this.get_modCount_sgzjli_k$();
        this.set_modCount_dsd9nm_k$(tmp1 + 1 | 0);
      }
      var tailIndex = index & get_MAX_BUFFER_SIZE_MINUS_ONE();
      var oldElement = mutableTail[tailIndex];
      mutableTail[tailIndex] = element;
      this.tail_1 = mutableTail;
      return (oldElement == null ? true : !(oldElement == null)) ? oldElement : THROW_CCE();
    }
    var oldElementCarry = new ObjectRef(null);
    this.root_1 = setInRoot_0(this, ensureNotNull(this.root_1), this.rootShift_1, index, element, oldElementCarry);
    var tmp = oldElementCarry.get_value_j01efc_k$();
    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
  };
  protoOf(PersistentVectorBuilder).iterator_jk1svi_k$ = function () {
    return this.listIterator_xjshxw_k$();
  };
  protoOf(PersistentVectorBuilder).listIterator_xjshxw_k$ = function () {
    return this.listIterator_70e65o_k$(0);
  };
  protoOf(PersistentVectorBuilder).listIterator_70e65o_k$ = function (index) {
    ListImplementation_getInstance().checkPositionIndex_xiph8v_k$(index, this.size_1);
    return new PersistentVectorMutableIterator(this, index);
  };
  function _get_trieIterator__7pj78d($this) {
    return $this.trieIterator_1;
  }
  function PersistentVectorIterator(root, tail, index, size, trieHeight) {
    AbstractListIterator.call(this, index, size);
    this.tail_1 = tail;
    var trieSize = rootSize_1(size);
    var trieIndex = coerceAtMost(index, trieSize);
    this.trieIterator_1 = new TrieIterator(root, trieIndex, trieSize, trieHeight);
  }
  protoOf(PersistentVectorIterator).get_tail_wousgp_k$ = function () {
    return this.tail_1;
  };
  protoOf(PersistentVectorIterator).next_20eer_k$ = function () {
    this.checkHasNext_6ofet1_k$();
    if (this.trieIterator_1.hasNext_bitz1p_k$()) {
      var tmp1 = this.get_index_it478p_k$();
      this.set_index_69f5xp_k$(tmp1 + 1 | 0);
      return this.trieIterator_1.next_20eer_k$();
    }
    var tmp3 = this.get_index_it478p_k$();
    this.set_index_69f5xp_k$(tmp3 + 1 | 0);
    return this.tail_1[tmp3 - this.trieIterator_1.get_size_woubt6_k$() | 0];
  };
  protoOf(PersistentVectorIterator).previous_l2dfd5_k$ = function () {
    this.checkHasPrevious_fnwy87_k$();
    if (this.get_index_it478p_k$() > this.trieIterator_1.get_size_woubt6_k$()) {
      this.set_index_69f5xp_k$(this.get_index_it478p_k$() - 1 | 0);
      return this.tail_1[this.get_index_it478p_k$() - this.trieIterator_1.get_size_woubt6_k$() | 0];
    }
    var tmp2 = this.get_index_it478p_k$();
    this.set_index_69f5xp_k$(tmp2 - 1 | 0);
    return this.trieIterator_1.previous_l2dfd5_k$();
  };
  function _get_builder__bi005y($this) {
    return $this.builder_1;
  }
  function _set_expectedModCount__2cl3f2($this, _set____db54di) {
    $this.expectedModCount_1 = _set____db54di;
  }
  function _get_expectedModCount__qqj5nq($this) {
    return $this.expectedModCount_1;
  }
  function _set_trieIterator__n99xsh($this, _set____db54di) {
    $this.trieIterator_1 = _set____db54di;
  }
  function _get_trieIterator__7pj78d_0($this) {
    return $this.trieIterator_1;
  }
  function _set_lastIteratedIndex__bozigj($this, _set____db54di) {
    $this.lastIteratedIndex_1 = _set____db54di;
  }
  function _get_lastIteratedIndex__a0tdtt($this) {
    return $this.lastIteratedIndex_1;
  }
  function reset($this) {
    $this.set_size_e2677a_k$($this.builder_1.get_size_woubt6_k$());
    $this.expectedModCount_1 = $this.builder_1.getModCount_nlxuar_k$();
    $this.lastIteratedIndex_1 = -1;
    setupTrieIterator($this);
  }
  function setupTrieIterator($this) {
    var root = $this.builder_1.get_root_wott0r_k$();
    if (root == null) {
      $this.trieIterator_1 = null;
      return Unit_getInstance();
    }
    var trieSize = rootSize_1($this.builder_1.get_size_woubt6_k$());
    var trieIndex = coerceAtMost($this.get_index_it478p_k$(), trieSize);
    var trieHeight = ($this.builder_1.get_rootShift_60gzqh_k$() / get_LOG_MAX_BUFFER_SIZE() | 0) + 1 | 0;
    if ($this.trieIterator_1 == null) {
      $this.trieIterator_1 = new TrieIterator(root, trieIndex, trieSize, trieHeight);
    } else {
      ensureNotNull($this.trieIterator_1).reset_95bbc3_k$(root, trieIndex, trieSize, trieHeight);
    }
  }
  function checkForComodification($this) {
    if (!($this.expectedModCount_1 === $this.builder_1.getModCount_nlxuar_k$()))
      throw ConcurrentModificationException_init_$Create$();
  }
  function checkHasIterated($this) {
    if ($this.lastIteratedIndex_1 === -1)
      throw IllegalStateException_init_$Create$_0();
  }
  function PersistentVectorMutableIterator(builder, index) {
    AbstractListIterator.call(this, index, builder.get_size_woubt6_k$());
    this.builder_1 = builder;
    this.expectedModCount_1 = this.builder_1.getModCount_nlxuar_k$();
    this.trieIterator_1 = null;
    this.lastIteratedIndex_1 = -1;
    setupTrieIterator(this);
  }
  protoOf(PersistentVectorMutableIterator).previous_l2dfd5_k$ = function () {
    checkForComodification(this);
    this.checkHasPrevious_fnwy87_k$();
    this.lastIteratedIndex_1 = this.get_index_it478p_k$() - 1 | 0;
    var tmp1_elvis_lhs = this.trieIterator_1;
    var tmp;
    if (tmp1_elvis_lhs == null) {
      var tmp_0 = this.builder_1.get_tail_wousgp_k$();
      this.set_index_69f5xp_k$(this.get_index_it478p_k$() - 1 | 0);
      var tmp_1 = tmp_0[this.get_index_it478p_k$()];
      return (tmp_1 == null ? true : !(tmp_1 == null)) ? tmp_1 : THROW_CCE();
    } else {
      tmp = tmp1_elvis_lhs;
    }
    var trieIterator = tmp;
    if (this.get_index_it478p_k$() > trieIterator.get_size_woubt6_k$()) {
      var tmp_2 = this.builder_1.get_tail_wousgp_k$();
      this.set_index_69f5xp_k$(this.get_index_it478p_k$() - 1 | 0);
      var tmp_3 = tmp_2[this.get_index_it478p_k$() - trieIterator.get_size_woubt6_k$() | 0];
      return (tmp_3 == null ? true : !(tmp_3 == null)) ? tmp_3 : THROW_CCE();
    }
    var tmp4 = this.get_index_it478p_k$();
    this.set_index_69f5xp_k$(tmp4 - 1 | 0);
    return trieIterator.previous_l2dfd5_k$();
  };
  protoOf(PersistentVectorMutableIterator).next_20eer_k$ = function () {
    checkForComodification(this);
    this.checkHasNext_6ofet1_k$();
    this.lastIteratedIndex_1 = this.get_index_it478p_k$();
    var tmp2_elvis_lhs = this.trieIterator_1;
    var tmp;
    if (tmp2_elvis_lhs == null) {
      var tmp_0 = this.builder_1.get_tail_wousgp_k$();
      var tmp1 = this.get_index_it478p_k$();
      this.set_index_69f5xp_k$(tmp1 + 1 | 0);
      var tmp_1 = tmp_0[tmp1];
      return (tmp_1 == null ? true : !(tmp_1 == null)) ? tmp_1 : THROW_CCE();
    } else {
      tmp = tmp2_elvis_lhs;
    }
    var trieIterator = tmp;
    if (trieIterator.hasNext_bitz1p_k$()) {
      var tmp4 = this.get_index_it478p_k$();
      this.set_index_69f5xp_k$(tmp4 + 1 | 0);
      return trieIterator.next_20eer_k$();
    }
    var tmp_2 = this.builder_1.get_tail_wousgp_k$();
    var tmp6 = this.get_index_it478p_k$();
    this.set_index_69f5xp_k$(tmp6 + 1 | 0);
    var tmp_3 = tmp_2[tmp6 - trieIterator.get_size_woubt6_k$() | 0];
    return (tmp_3 == null ? true : !(tmp_3 == null)) ? tmp_3 : THROW_CCE();
  };
  protoOf(PersistentVectorMutableIterator).add_jcyd1a_k$ = function (element) {
    checkForComodification(this);
    this.builder_1.add_dl6gt3_k$(this.get_index_it478p_k$(), element);
    var tmp1 = this.get_index_it478p_k$();
    this.set_index_69f5xp_k$(tmp1 + 1 | 0);
    reset(this);
  };
  protoOf(PersistentVectorMutableIterator).remove_ldkf9o_k$ = function () {
    checkForComodification(this);
    checkHasIterated(this);
    this.builder_1.removeAt_6niowx_k$(this.lastIteratedIndex_1);
    if (this.lastIteratedIndex_1 < this.get_index_it478p_k$()) {
      this.set_index_69f5xp_k$(this.lastIteratedIndex_1);
    }
    reset(this);
  };
  protoOf(PersistentVectorMutableIterator).set_tg4fwj_k$ = function (element) {
    checkForComodification(this);
    checkHasIterated(this);
    this.builder_1.set_82063s_k$(this.lastIteratedIndex_1, element);
    this.expectedModCount_1 = this.builder_1.getModCount_nlxuar_k$();
    setupTrieIterator(this);
  };
  function _get_buffer__tgqkad($this) {
    return $this.buffer_1;
  }
  function bufferOfSize($this, size) {
    // Inline function 'kotlin.arrayOfNulls' call
    return fillArrayVal(Array(size), null);
  }
  function Companion_5() {
    Companion_instance_5 = this;
    var tmp = this;
    // Inline function 'kotlin.emptyArray' call
    var tmp$ret$0 = [];
    tmp.EMPTY_1 = new SmallPersistentVector(tmp$ret$0);
  }
  protoOf(Companion_5).get_EMPTY_i8q41w_k$ = function () {
    return this.EMPTY_1;
  };
  var Companion_instance_5;
  function Companion_getInstance_7() {
    if (Companion_instance_5 == null)
      new Companion_5();
    return Companion_instance_5;
  }
  function SmallPersistentVector(buffer) {
    Companion_getInstance_7();
    AbstractPersistentList.call(this);
    this.buffer_1 = buffer;
    assert(this.buffer_1.length <= get_MAX_BUFFER_SIZE());
  }
  protoOf(SmallPersistentVector).get_size_woubt6_k$ = function () {
    return this.buffer_1.length;
  };
  protoOf(SmallPersistentVector).add_utx5q5_k$ = function (element) {
    if (this.get_size_woubt6_k$() < get_MAX_BUFFER_SIZE()) {
      var newBuffer = copyOf_0(this.buffer_1, this.get_size_woubt6_k$() + 1 | 0);
      newBuffer[this.get_size_woubt6_k$()] = element;
      return new SmallPersistentVector(newBuffer);
    }
    var tail = presizedBufferWith(element);
    return new PersistentVector(this.buffer_1, tail, this.get_size_woubt6_k$() + 1 | 0, 0);
  };
  protoOf(SmallPersistentVector).addAll_4lagoh_k$ = function (elements) {
    if ((this.get_size_woubt6_k$() + elements.get_size_woubt6_k$() | 0) <= get_MAX_BUFFER_SIZE()) {
      var newBuffer = copyOf_0(this.buffer_1, this.get_size_woubt6_k$() + elements.get_size_woubt6_k$() | 0);
      var index = this.get_size_woubt6_k$();
      var tmp0_iterator = elements.iterator_jk1svi_k$();
      while (tmp0_iterator.hasNext_bitz1p_k$()) {
        var element = tmp0_iterator.next_20eer_k$();
        var tmp1 = index;
        index = tmp1 + 1 | 0;
        newBuffer[tmp1] = element;
      }
      return new SmallPersistentVector(newBuffer);
    }
    // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.mutate' call
    // Inline function 'kotlin.apply' call
    var this_0 = this.builder_3thy1n_k$();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.SmallPersistentVector.addAll.<anonymous>' call
    this_0.addAll_4lagoh_k$(elements);
    return this_0.build_1k0s4u_k$();
  };
  protoOf(SmallPersistentVector).removeAll_b74hty_k$ = function (predicate) {
    var newBuffer = this.buffer_1;
    var newSize = this.get_size_woubt6_k$();
    var anyRemoved = false;
    var inductionVariable = 0;
    var last = this.get_size_woubt6_k$();
    if (inductionVariable < last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp = this.buffer_1[index];
        var element = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
        if (predicate(element)) {
          if (!anyRemoved) {
            // Inline function 'kotlin.collections.copyOf' call
            // Inline function 'kotlin.js.asDynamic' call
            newBuffer = this.buffer_1.slice();
            newSize = index;
            anyRemoved = true;
          }
        } else if (anyRemoved) {
          var tmp_0 = newBuffer;
          var tmp1 = newSize;
          newSize = tmp1 + 1 | 0;
          tmp_0[tmp1] = element;
        }
      }
       while (inductionVariable < last);
    var tmp2_subject = newSize;
    return tmp2_subject === this.get_size_woubt6_k$() ? this : tmp2_subject === 0 ? Companion_getInstance_7().EMPTY_1 : new SmallPersistentVector(copyOfRange(newBuffer, 0, newSize));
  };
  protoOf(SmallPersistentVector).addAll_lxodh3_k$ = function (index, c) {
    ListImplementation_getInstance().checkPositionIndex_xiph8v_k$(index, this.get_size_woubt6_k$());
    if ((this.get_size_woubt6_k$() + c.get_size_woubt6_k$() | 0) <= get_MAX_BUFFER_SIZE()) {
      var newBuffer = bufferOfSize(this, this.get_size_woubt6_k$() + c.get_size_woubt6_k$() | 0);
      // Inline function 'kotlin.collections.copyInto' call
      var this_0 = this.buffer_1;
      arrayCopy(this_0, newBuffer, 0, 0, index);
      // Inline function 'kotlin.collections.copyInto' call
      var this_1 = this.buffer_1;
      var destinationOffset = index + c.get_size_woubt6_k$() | 0;
      var endIndex = this.get_size_woubt6_k$();
      arrayCopy(this_1, newBuffer, destinationOffset, index, endIndex);
      var position = index;
      var tmp0_iterator = c.iterator_jk1svi_k$();
      while (tmp0_iterator.hasNext_bitz1p_k$()) {
        var element = tmp0_iterator.next_20eer_k$();
        var tmp1 = position;
        position = tmp1 + 1 | 0;
        newBuffer[tmp1] = element;
      }
      return new SmallPersistentVector(newBuffer);
    }
    // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.mutate' call
    // Inline function 'kotlin.apply' call
    var this_2 = this.builder_3thy1n_k$();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.SmallPersistentVector.addAll.<anonymous>' call
    this_2.addAll_lxodh3_k$(index, c);
    return this_2.build_1k0s4u_k$();
  };
  protoOf(SmallPersistentVector).add_k4dn3t_k$ = function (index, element) {
    ListImplementation_getInstance().checkPositionIndex_xiph8v_k$(index, this.get_size_woubt6_k$());
    if (index === this.get_size_woubt6_k$()) {
      return this.add_utx5q5_k$(element);
    }
    if (this.get_size_woubt6_k$() < get_MAX_BUFFER_SIZE()) {
      var newBuffer = bufferOfSize(this, this.get_size_woubt6_k$() + 1 | 0);
      // Inline function 'kotlin.collections.copyInto' call
      var this_0 = this.buffer_1;
      arrayCopy(this_0, newBuffer, 0, 0, index);
      // Inline function 'kotlin.collections.copyInto' call
      var this_1 = this.buffer_1;
      var destinationOffset = index + 1 | 0;
      var endIndex = this.get_size_woubt6_k$();
      arrayCopy(this_1, newBuffer, destinationOffset, index, endIndex);
      newBuffer[index] = element;
      return new SmallPersistentVector(newBuffer);
    }
    // Inline function 'kotlin.collections.copyOf' call
    // Inline function 'kotlin.js.asDynamic' call
    var root = this.buffer_1.slice();
    // Inline function 'kotlin.collections.copyInto' call
    var this_2 = this.buffer_1;
    var destinationOffset_0 = index + 1 | 0;
    var endIndex_0 = this.get_size_woubt6_k$() - 1 | 0;
    arrayCopy(this_2, root, destinationOffset_0, index, endIndex_0);
    root[index] = element;
    var tail = presizedBufferWith(this.buffer_1[get_MAX_BUFFER_SIZE_MINUS_ONE()]);
    return new PersistentVector(root, tail, this.get_size_woubt6_k$() + 1 | 0, 0);
  };
  protoOf(SmallPersistentVector).removeAt_6niowx_k$ = function (index) {
    ListImplementation_getInstance().checkElementIndex_r3t1bm_k$(index, this.get_size_woubt6_k$());
    if (this.get_size_woubt6_k$() === 1) {
      return Companion_getInstance_7().EMPTY_1;
    }
    var newBuffer = copyOf_0(this.buffer_1, this.get_size_woubt6_k$() - 1 | 0);
    // Inline function 'kotlin.collections.copyInto' call
    var this_0 = this.buffer_1;
    var startIndex = index + 1 | 0;
    var endIndex = this.get_size_woubt6_k$();
    arrayCopy(this_0, newBuffer, index, startIndex, endIndex);
    return new SmallPersistentVector(newBuffer);
  };
  protoOf(SmallPersistentVector).builder_3thy1n_k$ = function () {
    return new PersistentVectorBuilder(this, null, this.buffer_1, 0);
  };
  protoOf(SmallPersistentVector).indexOf_si1fv9_k$ = function (element) {
    return indexOf(this.buffer_1, element);
  };
  protoOf(SmallPersistentVector).lastIndexOf_v2p1fv_k$ = function (element) {
    return lastIndexOf(this.buffer_1, element);
  };
  protoOf(SmallPersistentVector).listIterator_70e65o_k$ = function (index) {
    ListImplementation_getInstance().checkPositionIndex_xiph8v_k$(index, this.get_size_woubt6_k$());
    var tmp = this.buffer_1;
    return new BufferIterator(isArray(tmp) ? tmp : THROW_CCE(), index, this.get_size_woubt6_k$());
  };
  protoOf(SmallPersistentVector).get_c1px32_k$ = function (index) {
    ListImplementation_getInstance().checkElementIndex_r3t1bm_k$(index, this.get_size_woubt6_k$());
    var tmp = this.buffer_1[index];
    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
  };
  protoOf(SmallPersistentVector).set_82063s_k$ = function (index, element) {
    ListImplementation_getInstance().checkElementIndex_r3t1bm_k$(index, this.get_size_woubt6_k$());
    // Inline function 'kotlin.collections.copyOf' call
    // Inline function 'kotlin.js.asDynamic' call
    var newBuffer = this.buffer_1.slice();
    newBuffer[index] = element;
    return new SmallPersistentVector(newBuffer);
  };
  function _set_height__lf9cts($this, _set____db54di) {
    $this.height_1 = _set____db54di;
  }
  function _get_height__jyis70($this) {
    return $this.height_1;
  }
  function _set_path__9s3vma($this, _set____db54di) {
    $this.path_1 = _set____db54di;
  }
  function _get_path__dbvv7q($this) {
    return $this.path_1;
  }
  function _set_isInRightEdge__uea6d7($this, _set____db54di) {
    $this.isInRightEdge_1 = _set____db54di;
  }
  function _get_isInRightEdge__f6inuv($this) {
    return $this.isInRightEdge_1;
  }
  function fillPath($this, index, startLevel) {
    var shift = imul($this.height_1 - startLevel | 0, get_LOG_MAX_BUFFER_SIZE());
    var i = startLevel;
    while (i < $this.height_1) {
      var tmp = $this.path_1;
      var tmp_0 = i;
      var tmp_1 = $this.path_1[i - 1 | 0];
      tmp[tmp_0] = ((!(tmp_1 == null) ? isArray(tmp_1) : false) ? tmp_1 : THROW_CCE())[indexSegment(index, shift)];
      shift = shift - get_LOG_MAX_BUFFER_SIZE() | 0;
      i = i + 1 | 0;
    }
  }
  function fillPathIfNeeded($this, indexPredicate) {
    var shift = 0;
    while (indexSegment($this.get_index_it478p_k$(), shift) === indexPredicate) {
      shift = shift + get_LOG_MAX_BUFFER_SIZE() | 0;
    }
    if (shift > 0) {
      var level = ($this.height_1 - 1 | 0) - (shift / get_LOG_MAX_BUFFER_SIZE() | 0) | 0;
      fillPath($this, $this.get_index_it478p_k$(), level + 1 | 0);
    }
  }
  function elementAtCurrentIndex($this) {
    var leafBufferIndex = $this.get_index_it478p_k$() & get_MAX_BUFFER_SIZE_MINUS_ONE();
    var tmp = $this.path_1[$this.height_1 - 1 | 0];
    return ((!(tmp == null) ? isArray(tmp) : false) ? tmp : THROW_CCE())[leafBufferIndex];
  }
  function TrieIterator(root, index, size, height) {
    AbstractListIterator.call(this, index, size);
    this.height_1 = height;
    var tmp = this;
    // Inline function 'kotlin.arrayOfNulls' call
    var size_0 = this.height_1;
    tmp.path_1 = fillArrayVal(Array(size_0), null);
    this.isInRightEdge_1 = index === size;
    this.path_1[0] = root;
    fillPath(this, index - (this.isInRightEdge_1 ? 1 : 0) | 0, 1);
  }
  protoOf(TrieIterator).reset_95bbc3_k$ = function (root, index, size, height) {
    this.set_index_69f5xp_k$(index);
    this.set_size_e2677a_k$(size);
    this.height_1 = height;
    if (this.path_1.length < height) {
      var tmp = this;
      // Inline function 'kotlin.arrayOfNulls' call
      tmp.path_1 = fillArrayVal(Array(height), null);
    }
    this.path_1[0] = root;
    this.isInRightEdge_1 = index === size;
    fillPath(this, index - (this.isInRightEdge_1 ? 1 : 0) | 0, 1);
  };
  protoOf(TrieIterator).next_20eer_k$ = function () {
    if (!this.hasNext_bitz1p_k$()) {
      throw NoSuchElementException_init_$Create$_0();
    }
    var result = elementAtCurrentIndex(this);
    this.set_index_69f5xp_k$(this.get_index_it478p_k$() + 1 | 0);
    if (this.get_index_it478p_k$() === this.get_size_woubt6_k$()) {
      this.isInRightEdge_1 = true;
      return result;
    }
    fillPathIfNeeded(this, 0);
    return result;
  };
  protoOf(TrieIterator).previous_l2dfd5_k$ = function () {
    if (!this.hasPrevious_qh0629_k$()) {
      throw NoSuchElementException_init_$Create$_0();
    }
    this.set_index_69f5xp_k$(this.get_index_it478p_k$() - 1 | 0);
    if (this.isInRightEdge_1) {
      this.isInRightEdge_1 = false;
      return elementAtCurrentIndex(this);
    }
    fillPathIfNeeded(this, get_MAX_BUFFER_SIZE_MINUS_ONE());
    return elementAtCurrentIndex(this);
  };
  function persistentVectorOf() {
    return Companion_getInstance_7().get_EMPTY_i8q41w_k$();
  }
  function get_MAX_BUFFER_SIZE() {
    return MAX_BUFFER_SIZE;
  }
  var MAX_BUFFER_SIZE;
  function presizedBufferWith(element) {
    // Inline function 'kotlin.arrayOfNulls' call
    var buffer = fillArrayVal(Array(32), null);
    buffer[0] = element;
    return buffer;
  }
  function get_MAX_BUFFER_SIZE_MINUS_ONE() {
    return MAX_BUFFER_SIZE_MINUS_ONE;
  }
  var MAX_BUFFER_SIZE_MINUS_ONE;
  function rootSize_1(vectorSize) {
    return (vectorSize - 1 | 0) & -32;
  }
  function get_LOG_MAX_BUFFER_SIZE() {
    return LOG_MAX_BUFFER_SIZE;
  }
  var LOG_MAX_BUFFER_SIZE;
  function indexSegment(index, shift) {
    return index >> shift & 31;
  }
  function ObjectRef(value) {
    this.value_1 = value;
  }
  protoOf(ObjectRef).set_value_rjqr2d_k$ = function (_set____db54di) {
    this.value_1 = _set____db54di;
  };
  protoOf(ObjectRef).get_value_j01efc_k$ = function () {
    return this.value_1;
  };
  function get_MUTABLE_BUFFER_SIZE() {
    return MUTABLE_BUFFER_SIZE;
  }
  var MUTABLE_BUFFER_SIZE;
  function _get_EMPTY__xmtgos($this) {
    return $this.EMPTY_1;
  }
  function createEntries($this) {
    return new PersistentHashMapEntries($this);
  }
  function Companion_6() {
    Companion_instance_6 = this;
    this.EMPTY_1 = new PersistentHashMap(Companion_getInstance_9().get_EMPTY_i8q41w_k$(), 0);
  }
  protoOf(Companion_6).emptyOf_n4povu_k$ = function () {
    var tmp = this.EMPTY_1;
    return tmp instanceof PersistentHashMap ? tmp : THROW_CCE();
  };
  var Companion_instance_6;
  function Companion_getInstance_8() {
    if (Companion_instance_6 == null)
      new Companion_6();
    return Companion_instance_6;
  }
  function PersistentHashMap(node, size) {
    Companion_getInstance_8();
    AbstractMap.call(this);
    this.node_1 = node;
    this.size_1 = size;
  }
  protoOf(PersistentHashMap).get_node_wor8sr_k$ = function () {
    return this.node_1;
  };
  protoOf(PersistentHashMap).get_size_woubt6_k$ = function () {
    return this.size_1;
  };
  protoOf(PersistentHashMap).get_keys_wop4xp_k$ = function () {
    return new PersistentHashMapKeys(this);
  };
  protoOf(PersistentHashMap).get_values_ksazhn_k$ = function () {
    return new PersistentHashMapValues(this);
  };
  protoOf(PersistentHashMap).get_entries_p20ztl_k$ = function () {
    return createEntries(this);
  };
  protoOf(PersistentHashMap).getEntries_969fae_k$ = function () {
    return createEntries(this);
  };
  protoOf(PersistentHashMap).containsKey_aw81wo_k$ = function (key) {
    // Inline function 'kotlin.hashCode' call
    var tmp1_elvis_lhs = key == null ? null : hashCode(key);
    var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    return this.node_1.containsKey_c5fsbs_k$(tmp$ret$0, key, 0);
  };
  protoOf(PersistentHashMap).get_wei43m_k$ = function (key) {
    // Inline function 'kotlin.hashCode' call
    var tmp1_elvis_lhs = key == null ? null : hashCode(key);
    var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    return this.node_1.get_5yqtua_k$(tmp$ret$0, key, 0);
  };
  protoOf(PersistentHashMap).put_4fpzoq_k$ = function (key, value) {
    // Inline function 'kotlin.hashCode' call
    var tmp1_elvis_lhs = key == null ? null : hashCode(key);
    var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    var tmp0_elvis_lhs = this.node_1.put_8gzl9o_k$(tmp$ret$0, key, value, 0);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return this;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var newNodeResult = tmp;
    return new PersistentHashMap(newNodeResult.get_node_wor8sr_k$(), this.get_size_woubt6_k$() + newNodeResult.get_sizeDelta_gb68b2_k$() | 0);
  };
  protoOf(PersistentHashMap).remove_gppy8k_k$ = function (key) {
    // Inline function 'kotlin.hashCode' call
    var tmp1_elvis_lhs = key == null ? null : hashCode(key);
    var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    var newNode = this.node_1.remove_f2ssx0_k$(tmp$ret$0, key, 0);
    if (this.node_1 === newNode) {
      return this;
    }
    if (newNode == null) {
      return Companion_getInstance_8().emptyOf_n4povu_k$();
    }
    return new PersistentHashMap(newNode, this.get_size_woubt6_k$() - 1 | 0);
  };
  protoOf(PersistentHashMap).remove_tnklb3_k$ = function (key, value) {
    // Inline function 'kotlin.hashCode' call
    var tmp1_elvis_lhs = key == null ? null : hashCode(key);
    var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    var newNode = this.node_1.remove_fcc91l_k$(tmp$ret$0, key, value, 0);
    if (this.node_1 === newNode) {
      return this;
    }
    if (newNode == null) {
      return Companion_getInstance_8().emptyOf_n4povu_k$();
    }
    return new PersistentHashMap(newNode, this.get_size_woubt6_k$() - 1 | 0);
  };
  protoOf(PersistentHashMap).putAll_o1iy4z_k$ = function (m) {
    // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.mutate' call
    // Inline function 'kotlin.apply' call
    var this_0 = (isInterface(this, PersistentMap) ? this : THROW_CCE()).builder_3thy1n_k$();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMap.putAll.<anonymous>' call
    this_0.putAll_wgg6cj_k$(m);
    return this_0.build_1k0s4u_k$();
  };
  protoOf(PersistentHashMap).clear_1keqml_k$ = function () {
    return Companion_getInstance_8().emptyOf_n4povu_k$();
  };
  protoOf(PersistentHashMap).builder_3thy1n_k$ = function () {
    return new PersistentHashMapBuilder(this);
  };
  function _set_map__4wa2w9($this, _set____db54di) {
    $this.map_1 = _set____db54di;
  }
  function _get_map__e6co1h_0($this) {
    return $this.map_1;
  }
  function PersistentHashMapBuilder(map) {
    AbstractMutableMap.call(this);
    this.map_1 = map;
    this.ownership_1 = new MutabilityOwnership();
    this.node_1 = this.map_1.get_node_wor8sr_k$();
    this.operationResult_1 = null;
    this.modCount_1 = 0;
    this.size_1 = this.map_1.get_size_woubt6_k$();
  }
  protoOf(PersistentHashMapBuilder).set_ownership_b7pkvy_k$ = function (_set____db54di) {
    this.ownership_1 = _set____db54di;
  };
  protoOf(PersistentHashMapBuilder).get_ownership_8tknnq_k$ = function () {
    return this.ownership_1;
  };
  protoOf(PersistentHashMapBuilder).set_node_zauf0o_k$ = function (_set____db54di) {
    this.node_1 = _set____db54di;
  };
  protoOf(PersistentHashMapBuilder).get_node_wor8sr_k$ = function () {
    return this.node_1;
  };
  protoOf(PersistentHashMapBuilder).set_operationResult_uq1qdv_k$ = function (_set____db54di) {
    this.operationResult_1 = _set____db54di;
  };
  protoOf(PersistentHashMapBuilder).get_operationResult_901vgb_k$ = function () {
    return this.operationResult_1;
  };
  protoOf(PersistentHashMapBuilder).set_modCount_dsd9nm_k$ = function (_set____db54di) {
    this.modCount_1 = _set____db54di;
  };
  protoOf(PersistentHashMapBuilder).get_modCount_sgzjli_k$ = function () {
    return this.modCount_1;
  };
  protoOf(PersistentHashMapBuilder).set_size_e2677a_k$ = function (value) {
    this.size_1 = value;
    this.modCount_1 = this.modCount_1 + 1 | 0;
  };
  protoOf(PersistentHashMapBuilder).get_size_woubt6_k$ = function () {
    return this.size_1;
  };
  protoOf(PersistentHashMapBuilder).build_1k0s4u_k$ = function () {
    var tmp = this;
    var tmp_0;
    if (this.node_1 === this.map_1.get_node_wor8sr_k$()) {
      tmp_0 = this.map_1;
    } else {
      this.ownership_1 = new MutabilityOwnership();
      tmp_0 = new PersistentHashMap(this.node_1, this.get_size_woubt6_k$());
    }
    tmp.map_1 = tmp_0;
    return this.map_1;
  };
  protoOf(PersistentHashMapBuilder).get_entries_p20ztl_k$ = function () {
    return new PersistentHashMapBuilderEntries(this);
  };
  protoOf(PersistentHashMapBuilder).get_keys_wop4xp_k$ = function () {
    return new PersistentHashMapBuilderKeys(this);
  };
  protoOf(PersistentHashMapBuilder).get_values_ksazhn_k$ = function () {
    return new PersistentHashMapBuilderValues(this);
  };
  protoOf(PersistentHashMapBuilder).containsKey_aw81wo_k$ = function (key) {
    var tmp = this.node_1;
    // Inline function 'kotlin.hashCode' call
    var tmp1_elvis_lhs = key == null ? null : hashCode(key);
    var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    return tmp.containsKey_c5fsbs_k$(tmp$ret$0, key, 0);
  };
  protoOf(PersistentHashMapBuilder).get_wei43m_k$ = function (key) {
    var tmp = this.node_1;
    // Inline function 'kotlin.hashCode' call
    var tmp1_elvis_lhs = key == null ? null : hashCode(key);
    var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    return tmp.get_5yqtua_k$(tmp$ret$0, key, 0);
  };
  protoOf(PersistentHashMapBuilder).put_4fpzoq_k$ = function (key, value) {
    this.operationResult_1 = null;
    var tmp = this;
    var tmp_0 = this.node_1;
    // Inline function 'kotlin.hashCode' call
    var tmp1_elvis_lhs = key == null ? null : hashCode(key);
    var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    tmp.node_1 = tmp_0.mutablePut_2vum7x_k$(tmp$ret$0, key, value, 0, this);
    return this.operationResult_1;
  };
  protoOf(PersistentHashMapBuilder).putAll_wgg6cj_k$ = function (from) {
    var tmp1_elvis_lhs = from instanceof PersistentHashMap ? from : null;
    var tmp;
    if (tmp1_elvis_lhs == null) {
      var tmp0_safe_receiver = from instanceof PersistentHashMapBuilder ? from : null;
      tmp = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.build_1k0s4u_k$();
    } else {
      tmp = tmp1_elvis_lhs;
    }
    var map = tmp;
    if (!(map == null)) {
      var intersectionCounter = new DeltaCounter();
      var oldSize = this.get_size_woubt6_k$();
      var tmp_0 = this;
      var tmp_1 = this.node_1;
      var tmp_2 = map.get_node_wor8sr_k$();
      tmp_0.node_1 = tmp_1.mutablePutAll_25uokd_k$(tmp_2 instanceof TrieNode ? tmp_2 : THROW_CCE(), 0, intersectionCounter, this);
      var newSize = (oldSize + map.get_size_woubt6_k$() | 0) - intersectionCounter.get_count_ipufhi_k$() | 0;
      if (!(oldSize === newSize)) {
        this.set_size_e2677a_k$(newSize);
      }
    } else {
      protoOf(AbstractMutableMap).putAll_wgg6cj_k$.call(this, from);
    }
  };
  protoOf(PersistentHashMapBuilder).remove_gppy8k_k$ = function (key) {
    this.operationResult_1 = null;
    var tmp = this;
    var tmp_0 = this.node_1;
    // Inline function 'kotlin.hashCode' call
    var tmp1_elvis_lhs = key == null ? null : hashCode(key);
    var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    var tmp0_elvis_lhs = tmp_0.mutableRemove_e68euh_k$(tmp$ret$0, key, 0, this);
    var tmp_1;
    if (tmp0_elvis_lhs == null) {
      var tmp_2 = Companion_getInstance_9().get_EMPTY_i8q41w_k$();
      tmp_1 = tmp_2 instanceof TrieNode ? tmp_2 : THROW_CCE();
    } else {
      tmp_1 = tmp0_elvis_lhs;
    }
    tmp.node_1 = tmp_1;
    return this.operationResult_1;
  };
  protoOf(PersistentHashMapBuilder).remove_tnklb3_k$ = function (key, value) {
    var oldSize = this.get_size_woubt6_k$();
    var tmp = this;
    var tmp_0 = this.node_1;
    // Inline function 'kotlin.hashCode' call
    var tmp1_elvis_lhs = key == null ? null : hashCode(key);
    var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    var tmp0_elvis_lhs = tmp_0.mutableRemove_wjxxwk_k$(tmp$ret$0, key, value, 0, this);
    var tmp_1;
    if (tmp0_elvis_lhs == null) {
      var tmp_2 = Companion_getInstance_9().get_EMPTY_i8q41w_k$();
      tmp_1 = tmp_2 instanceof TrieNode ? tmp_2 : THROW_CCE();
    } else {
      tmp_1 = tmp0_elvis_lhs;
    }
    tmp.node_1 = tmp_1;
    return !(oldSize === this.get_size_woubt6_k$());
  };
  protoOf(PersistentHashMapBuilder).clear_j9egeb_k$ = function () {
    var tmp = this;
    var tmp_0 = Companion_getInstance_9().get_EMPTY_i8q41w_k$();
    tmp.node_1 = tmp_0 instanceof TrieNode ? tmp_0 : THROW_CCE();
    this.set_size_e2677a_k$(0);
  };
  function _get_base__d46q3e($this) {
    return $this.base_1;
  }
  function PersistentHashMapBuilderEntriesIterator(builder) {
    var tmp = this;
    var tmp_0 = 0;
    var tmp_1 = get_TRIE_MAX_HEIGHT() + 1 | 0;
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp_2 = fillArrayVal(Array(tmp_1), null);
    while (tmp_0 < tmp_1) {
      tmp_2[tmp_0] = new TrieNodeMutableEntriesIterator(this);
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp.base_1 = new PersistentHashMapBuilderBaseIterator(builder, tmp_2);
  }
  protoOf(PersistentHashMapBuilderEntriesIterator).hasNext_bitz1p_k$ = function () {
    return this.base_1.hasNext_bitz1p_k$();
  };
  protoOf(PersistentHashMapBuilderEntriesIterator).next_20eer_k$ = function () {
    return this.base_1.next_20eer_k$();
  };
  protoOf(PersistentHashMapBuilderEntriesIterator).remove_ldkf9o_k$ = function () {
    return this.base_1.remove_ldkf9o_k$();
  };
  protoOf(PersistentHashMapBuilderEntriesIterator).setValue_oxkjie_k$ = function (key, newValue) {
    return this.base_1.setValue_oxkjie_k$(key, newValue);
  };
  function PersistentHashMapBuilderKeysIterator(builder) {
    var tmp = 0;
    var tmp_0 = get_TRIE_MAX_HEIGHT() + 1 | 0;
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp_1 = fillArrayVal(Array(tmp_0), null);
    while (tmp < tmp_0) {
      tmp_1[tmp] = new TrieNodeKeysIterator();
      tmp = tmp + 1 | 0;
    }
    PersistentHashMapBuilderBaseIterator.call(this, builder, tmp_1);
  }
  function PersistentHashMapBuilderValuesIterator(builder) {
    var tmp = 0;
    var tmp_0 = get_TRIE_MAX_HEIGHT() + 1 | 0;
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp_1 = fillArrayVal(Array(tmp_0), null);
    while (tmp < tmp_0) {
      tmp_1[tmp] = new TrieNodeValuesIterator();
      tmp = tmp + 1 | 0;
    }
    PersistentHashMapBuilderBaseIterator.call(this, builder, tmp_1);
  }
  function _get_builder__bi005y_0($this) {
    return $this.builder_1;
  }
  function _set_lastIteratedKey__gv5fra($this, _set____db54di) {
    $this.lastIteratedKey_1 = _set____db54di;
  }
  function _get_lastIteratedKey__qyvn9u($this) {
    return $this.lastIteratedKey_1;
  }
  function _set_nextWasInvoked__qh6nr5($this, _set____db54di) {
    $this.nextWasInvoked_1 = _set____db54di;
  }
  function _get_nextWasInvoked__j0ty6j($this) {
    return $this.nextWasInvoked_1;
  }
  function _set_expectedModCount__2cl3f2_0($this, _set____db54di) {
    $this.expectedModCount_1 = _set____db54di;
  }
  function _get_expectedModCount__qqj5nq_0($this) {
    return $this.expectedModCount_1;
  }
  function resetPath($this, keyHash, node, key, pathIndex) {
    var shift = imul(pathIndex, get_LOG_MAX_BRANCHING_FACTOR());
    if (shift > get_MAX_SHIFT()) {
      $this.get_path_wos8ry_k$()[pathIndex].reset_7jdgqz_k$(node.get_buffer_bmaafd_k$(), node.get_buffer_bmaafd_k$().length, 0);
      while (!equals($this.get_path_wos8ry_k$()[pathIndex].currentKey_i0cw62_k$(), key)) {
        $this.get_path_wos8ry_k$()[pathIndex].moveToNextKey_9g0c34_k$();
      }
      $this.set_pathLastIndex_sjtzv6_k$(pathIndex);
      return Unit_getInstance();
    }
    var keyPositionMask = 1 << indexSegment_0(keyHash, shift);
    if (node.hasEntryAt_ttub83_k$(keyPositionMask)) {
      var keyIndex = node.entryKeyIndex_mnyxsd_k$(keyPositionMask);
      $this.get_path_wos8ry_k$()[pathIndex].reset_7jdgqz_k$(node.get_buffer_bmaafd_k$(), imul(get_ENTRY_SIZE(), node.entryCount_wxkz7n_k$()), keyIndex);
      $this.set_pathLastIndex_sjtzv6_k$(pathIndex);
      return Unit_getInstance();
    }
    var nodeIndex = node.nodeIndex_xq7yp4_k$(keyPositionMask);
    var targetNode = node.nodeAtIndex_1dkn23_k$(nodeIndex);
    $this.get_path_wos8ry_k$()[pathIndex].reset_7jdgqz_k$(node.get_buffer_bmaafd_k$(), imul(get_ENTRY_SIZE(), node.entryCount_wxkz7n_k$()), nodeIndex);
    resetPath($this, keyHash, targetNode, key, pathIndex + 1 | 0);
  }
  function checkNextWasInvoked($this) {
    if (!$this.nextWasInvoked_1)
      throw IllegalStateException_init_$Create$_0();
  }
  function checkForComodification_0($this) {
    if (!($this.builder_1.get_modCount_sgzjli_k$() === $this.expectedModCount_1))
      throw ConcurrentModificationException_init_$Create$();
  }
  function PersistentHashMapBuilderBaseIterator(builder, path) {
    PersistentHashMapBaseIterator.call(this, builder.get_node_wor8sr_k$(), path);
    this.builder_1 = builder;
    this.lastIteratedKey_1 = null;
    this.nextWasInvoked_1 = false;
    this.expectedModCount_1 = this.builder_1.get_modCount_sgzjli_k$();
  }
  protoOf(PersistentHashMapBuilderBaseIterator).next_20eer_k$ = function () {
    checkForComodification_0(this);
    this.lastIteratedKey_1 = this.currentKey_i0cw62_k$();
    this.nextWasInvoked_1 = true;
    return protoOf(PersistentHashMapBaseIterator).next_20eer_k$.call(this);
  };
  protoOf(PersistentHashMapBuilderBaseIterator).remove_ldkf9o_k$ = function () {
    checkNextWasInvoked(this);
    if (this.hasNext_bitz1p_k$()) {
      var currentKey = this.currentKey_i0cw62_k$();
      // Inline function 'kotlin.collections.remove' call
      var this_0 = this.builder_1;
      var key = this.lastIteratedKey_1;
      (isInterface(this_0, MutableMap) ? this_0 : THROW_CCE()).remove_gppy8k_k$(key);
      // Inline function 'kotlin.hashCode' call
      var tmp1_elvis_lhs = currentKey == null ? null : hashCode(currentKey);
      var tmp$ret$1 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
      resetPath(this, tmp$ret$1, this.builder_1.get_node_wor8sr_k$(), currentKey, 0);
    } else {
      // Inline function 'kotlin.collections.remove' call
      var this_1 = this.builder_1;
      var key_0 = this.lastIteratedKey_1;
      (isInterface(this_1, MutableMap) ? this_1 : THROW_CCE()).remove_gppy8k_k$(key_0);
    }
    this.lastIteratedKey_1 = null;
    this.nextWasInvoked_1 = false;
    this.expectedModCount_1 = this.builder_1.get_modCount_sgzjli_k$();
  };
  protoOf(PersistentHashMapBuilderBaseIterator).setValue_oxkjie_k$ = function (key, newValue) {
    if (!this.builder_1.containsKey_aw81wo_k$(key))
      return Unit_getInstance();
    if (this.hasNext_bitz1p_k$()) {
      var currentKey = this.currentKey_i0cw62_k$();
      // Inline function 'kotlin.collections.set' call
      this.builder_1.put_4fpzoq_k$(key, newValue);
      // Inline function 'kotlin.hashCode' call
      var tmp1_elvis_lhs = currentKey == null ? null : hashCode(currentKey);
      var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
      resetPath(this, tmp$ret$0, this.builder_1.get_node_wor8sr_k$(), currentKey, 0);
    } else {
      // Inline function 'kotlin.collections.set' call
      this.builder_1.put_4fpzoq_k$(key, newValue);
    }
    this.expectedModCount_1 = this.builder_1.get_modCount_sgzjli_k$();
  };
  function _get_parentIterator__rzl6b1($this) {
    return $this.parentIterator_1;
  }
  function TrieNodeMutableEntriesIterator(parentIterator) {
    TrieNodeBaseIterator.call(this);
    this.parentIterator_1 = parentIterator;
  }
  protoOf(TrieNodeMutableEntriesIterator).next_20eer_k$ = function () {
    assert(this.hasNextKey_6ve5ce_k$());
    this.set_index_69f5xp_k$(this.get_index_it478p_k$() + 2 | 0);
    var tmp = this.get_buffer_bmaafd_k$()[this.get_index_it478p_k$() - 2 | 0];
    var tmp_0 = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
    var tmp_1 = this.get_buffer_bmaafd_k$()[this.get_index_it478p_k$() - 1 | 0];
    return new MutableMapEntry(this.parentIterator_1, tmp_0, (tmp_1 == null ? true : !(tmp_1 == null)) ? tmp_1 : THROW_CCE());
  };
  function _get_parentIterator__rzl6b1_0($this) {
    return $this.parentIterator_1;
  }
  function MutableMapEntry(parentIterator, key, value) {
    MapEntry.call(this, key, value);
    this.parentIterator_1 = parentIterator;
    this.value_2 = value;
  }
  protoOf(MutableMapEntry).set_value_84k4y1_k$ = function (_set____db54di) {
    this.value_2 = _set____db54di;
  };
  protoOf(MutableMapEntry).get_value_j01efc_k$ = function () {
    return this.value_2;
  };
  protoOf(MutableMapEntry).setValue_9cjski_k$ = function (newValue) {
    var result = this.value_2;
    this.value_2 = newValue;
    this.parentIterator_1.setValue_oxkjie_k$(this.get_key_18j28a_k$(), newValue);
    return result;
  };
  function _get_builder__bi005y_1($this) {
    return $this.builder_1;
  }
  function PersistentHashMapBuilderEntries(builder) {
    AbstractMapBuilderEntries.call(this);
    this.builder_1 = builder;
  }
  protoOf(PersistentHashMapBuilderEntries).add_i4n90_k$ = function (element) {
    throw UnsupportedOperationException_init_$Create$();
  };
  protoOf(PersistentHashMapBuilderEntries).add_utx5q5_k$ = function (element) {
    return this.add_i4n90_k$((!(element == null) ? isInterface(element, MutableEntry) : false) ? element : THROW_CCE());
  };
  protoOf(PersistentHashMapBuilderEntries).clear_j9egeb_k$ = function () {
    this.builder_1.clear_j9egeb_k$();
  };
  protoOf(PersistentHashMapBuilderEntries).iterator_jk1svi_k$ = function () {
    return new PersistentHashMapBuilderEntriesIterator(this.builder_1);
  };
  protoOf(PersistentHashMapBuilderEntries).removeEntry_dxtz15_k$ = function (element) {
    return this.builder_1.remove_tnklb3_k$(element.get_key_18j28a_k$(), element.get_value_j01efc_k$());
  };
  protoOf(PersistentHashMapBuilderEntries).get_size_woubt6_k$ = function () {
    return this.builder_1.get_size_woubt6_k$();
  };
  protoOf(PersistentHashMapBuilderEntries).containsEntry_jg6xfi_k$ = function (element) {
    var tmp0_safe_receiver = this.builder_1.get_wei43m_k$(element.get_key_18j28a_k$());
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBuilderEntries.containsEntry.<anonymous>' call
      tmp = equals(tmp0_safe_receiver, element.get_value_j01efc_k$());
    }
    var tmp1_elvis_lhs = tmp;
    return tmp1_elvis_lhs == null ? element.get_value_j01efc_k$() == null ? this.builder_1.containsKey_aw81wo_k$(element.get_key_18j28a_k$()) : false : tmp1_elvis_lhs;
  };
  function _get_builder__bi005y_2($this) {
    return $this.builder_1;
  }
  function PersistentHashMapBuilderKeys(builder) {
    AbstractMutableSet.call(this);
    this.builder_1 = builder;
  }
  protoOf(PersistentHashMapBuilderKeys).add_b330zt_k$ = function (element) {
    throw UnsupportedOperationException_init_$Create$();
  };
  protoOf(PersistentHashMapBuilderKeys).add_utx5q5_k$ = function (element) {
    return this.add_b330zt_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(PersistentHashMapBuilderKeys).clear_j9egeb_k$ = function () {
    this.builder_1.clear_j9egeb_k$();
  };
  protoOf(PersistentHashMapBuilderKeys).iterator_jk1svi_k$ = function () {
    return new PersistentHashMapBuilderKeysIterator(this.builder_1);
  };
  protoOf(PersistentHashMapBuilderKeys).remove_gppy8k_k$ = function (element) {
    if (this.builder_1.containsKey_aw81wo_k$(element)) {
      this.builder_1.remove_gppy8k_k$(element);
      return true;
    }
    return false;
  };
  protoOf(PersistentHashMapBuilderKeys).remove_cedx0m_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.remove_gppy8k_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(PersistentHashMapBuilderKeys).get_size_woubt6_k$ = function () {
    return this.builder_1.get_size_woubt6_k$();
  };
  protoOf(PersistentHashMapBuilderKeys).contains_vbgn2f_k$ = function (element) {
    return this.builder_1.containsKey_aw81wo_k$(element);
  };
  protoOf(PersistentHashMapBuilderKeys).contains_aljjnj_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.contains_vbgn2f_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  function _get_builder__bi005y_3($this) {
    return $this.builder_1;
  }
  function PersistentHashMapBuilderValues(builder) {
    AbstractMutableCollection.call(this);
    this.builder_1 = builder;
  }
  protoOf(PersistentHashMapBuilderValues).get_size_woubt6_k$ = function () {
    return this.builder_1.get_size_woubt6_k$();
  };
  protoOf(PersistentHashMapBuilderValues).contains_m22g8e_k$ = function (element) {
    return this.builder_1.containsValue_yf2ykl_k$(element);
  };
  protoOf(PersistentHashMapBuilderValues).contains_aljjnj_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.contains_m22g8e_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(PersistentHashMapBuilderValues).add_sqnzo4_k$ = function (element) {
    throw UnsupportedOperationException_init_$Create$();
  };
  protoOf(PersistentHashMapBuilderValues).add_utx5q5_k$ = function (element) {
    return this.add_sqnzo4_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(PersistentHashMapBuilderValues).clear_j9egeb_k$ = function () {
    this.builder_1.clear_j9egeb_k$();
  };
  protoOf(PersistentHashMapBuilderValues).iterator_jk1svi_k$ = function () {
    return new PersistentHashMapBuilderValuesIterator(this.builder_1);
  };
  function AbstractMapBuilderEntries() {
    AbstractMutableSet.call(this);
  }
  protoOf(AbstractMapBuilderEntries).contains_pftbw2_k$ = function (element) {
    var tmp = !(element == null) ? element : null;
    if (!(!(tmp == null) ? isInterface(tmp, Entry) : false))
      return false;
    return this.containsEntry_jg6xfi_k$(element);
  };
  protoOf(AbstractMapBuilderEntries).contains_aljjnj_k$ = function (element) {
    if (!(!(element == null) ? isInterface(element, Entry) : false))
      return false;
    return this.contains_pftbw2_k$((!(element == null) ? isInterface(element, Entry) : false) ? element : THROW_CCE());
  };
  protoOf(AbstractMapBuilderEntries).remove_z40ynn_k$ = function (element) {
    var tmp = !(element == null) ? element : null;
    if (!(!(tmp == null) ? isInterface(tmp, Entry) : false))
      return false;
    return this.removeEntry_dxtz15_k$(element);
  };
  protoOf(AbstractMapBuilderEntries).remove_cedx0m_k$ = function (element) {
    if (!(!(element == null) ? isInterface(element, Entry) : false))
      return false;
    return this.remove_z40ynn_k$((!(element == null) ? isInterface(element, Entry) : false) ? element : THROW_CCE());
  };
  function PersistentHashMapKeysIterator(node) {
    var tmp = 0;
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp_0 = fillArrayVal(Array(8), null);
    while (tmp < 8) {
      tmp_0[tmp] = new TrieNodeKeysIterator();
      tmp = tmp + 1 | 0;
    }
    PersistentHashMapBaseIterator.call(this, node, tmp_0);
  }
  function PersistentHashMapValuesIterator(node) {
    var tmp = 0;
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp_0 = fillArrayVal(Array(8), null);
    while (tmp < 8) {
      tmp_0[tmp] = new TrieNodeValuesIterator();
      tmp = tmp + 1 | 0;
    }
    PersistentHashMapBaseIterator.call(this, node, tmp_0);
  }
  function PersistentHashMapEntriesIterator(node) {
    var tmp = 0;
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp_0 = fillArrayVal(Array(8), null);
    while (tmp < 8) {
      tmp_0[tmp] = new TrieNodeEntriesIterator();
      tmp = tmp + 1 | 0;
    }
    PersistentHashMapBaseIterator.call(this, node, tmp_0);
  }
  function _set_hasNext__86v2bs($this, _set____db54di) {
    $this.hasNext_1 = _set____db54di;
  }
  function _get_hasNext__xt3cos($this) {
    return $this.hasNext_1;
  }
  function moveToNextNodeWithData($this, pathIndex) {
    if ($this.path_1[pathIndex].hasNextKey_6ve5ce_k$()) {
      return pathIndex;
    }
    if ($this.path_1[pathIndex].hasNextNode_27o7j_k$()) {
      var node = $this.path_1[pathIndex].currentNode_9xuujf_k$();
      if (pathIndex === 6) {
        $this.path_1[pathIndex + 1 | 0].reset_kpl4kj_k$(node.get_buffer_bmaafd_k$(), node.get_buffer_bmaafd_k$().length);
      } else {
        $this.path_1[pathIndex + 1 | 0].reset_kpl4kj_k$(node.get_buffer_bmaafd_k$(), imul(get_ENTRY_SIZE(), node.entryCount_wxkz7n_k$()));
      }
      return moveToNextNodeWithData($this, pathIndex + 1 | 0);
    }
    return -1;
  }
  function ensureNextEntryIsReady($this) {
    if ($this.path_1[$this.pathLastIndex_1].hasNextKey_6ve5ce_k$()) {
      return Unit_getInstance();
    }
    var inductionVariable = $this.pathLastIndex_1;
    if (0 <= inductionVariable)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        var result = moveToNextNodeWithData($this, i);
        if (result === -1 ? $this.path_1[i].hasNextNode_27o7j_k$() : false) {
          $this.path_1[i].moveToNextNode_yoq3fz_k$();
          result = moveToNextNodeWithData($this, i);
        }
        if (!(result === -1)) {
          $this.pathLastIndex_1 = result;
          return Unit_getInstance();
        }
        if (i > 0) {
          $this.path_1[i - 1 | 0].moveToNextNode_yoq3fz_k$();
        }
        $this.path_1[i].reset_kpl4kj_k$(Companion_getInstance_9().get_EMPTY_i8q41w_k$().get_buffer_bmaafd_k$(), 0);
      }
       while (0 <= inductionVariable);
    $this.hasNext_1 = false;
  }
  function checkHasNext($this) {
    if (!$this.hasNext_bitz1p_k$())
      throw NoSuchElementException_init_$Create$_0();
  }
  function PersistentHashMapBaseIterator(node, path) {
    this.path_1 = path;
    this.pathLastIndex_1 = 0;
    this.hasNext_1 = true;
    this.path_1[0].reset_kpl4kj_k$(node.get_buffer_bmaafd_k$(), imul(get_ENTRY_SIZE(), node.entryCount_wxkz7n_k$()));
    this.pathLastIndex_1 = 0;
    ensureNextEntryIsReady(this);
  }
  protoOf(PersistentHashMapBaseIterator).get_path_wos8ry_k$ = function () {
    return this.path_1;
  };
  protoOf(PersistentHashMapBaseIterator).set_pathLastIndex_sjtzv6_k$ = function (_set____db54di) {
    this.pathLastIndex_1 = _set____db54di;
  };
  protoOf(PersistentHashMapBaseIterator).get_pathLastIndex_827k6q_k$ = function () {
    return this.pathLastIndex_1;
  };
  protoOf(PersistentHashMapBaseIterator).currentKey_i0cw62_k$ = function () {
    checkHasNext(this);
    return this.path_1[this.pathLastIndex_1].currentKey_i0cw62_k$();
  };
  protoOf(PersistentHashMapBaseIterator).hasNext_bitz1p_k$ = function () {
    return this.hasNext_1;
  };
  protoOf(PersistentHashMapBaseIterator).next_20eer_k$ = function () {
    checkHasNext(this);
    var result = this.path_1[this.pathLastIndex_1].next_20eer_k$();
    ensureNextEntryIsReady(this);
    return result;
  };
  function _set_buffer__uxh4x5($this, _set____db54di) {
    $this.buffer_1 = _set____db54di;
  }
  function _set_dataSize__v40kmk($this, _set____db54di) {
    $this.dataSize_1 = _set____db54di;
  }
  function _get_dataSize__ib495s($this) {
    return $this.dataSize_1;
  }
  function TrieNodeBaseIterator() {
    this.buffer_1 = Companion_getInstance_9().get_EMPTY_i8q41w_k$().get_buffer_bmaafd_k$();
    this.dataSize_1 = 0;
    this.index_1 = 0;
  }
  protoOf(TrieNodeBaseIterator).get_buffer_bmaafd_k$ = function () {
    return this.buffer_1;
  };
  protoOf(TrieNodeBaseIterator).set_index_69f5xp_k$ = function (_set____db54di) {
    this.index_1 = _set____db54di;
  };
  protoOf(TrieNodeBaseIterator).get_index_it478p_k$ = function () {
    return this.index_1;
  };
  protoOf(TrieNodeBaseIterator).reset_7jdgqz_k$ = function (buffer, dataSize, index) {
    this.buffer_1 = buffer;
    this.dataSize_1 = dataSize;
    this.index_1 = index;
  };
  protoOf(TrieNodeBaseIterator).reset_kpl4kj_k$ = function (buffer, dataSize) {
    this.reset_7jdgqz_k$(buffer, dataSize, 0);
  };
  protoOf(TrieNodeBaseIterator).hasNextKey_6ve5ce_k$ = function () {
    return this.index_1 < this.dataSize_1;
  };
  protoOf(TrieNodeBaseIterator).currentKey_i0cw62_k$ = function () {
    assert(this.hasNextKey_6ve5ce_k$());
    var tmp = this.buffer_1[this.index_1];
    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
  };
  protoOf(TrieNodeBaseIterator).moveToNextKey_9g0c34_k$ = function () {
    assert(this.hasNextKey_6ve5ce_k$());
    this.index_1 = this.index_1 + 2 | 0;
  };
  protoOf(TrieNodeBaseIterator).hasNextNode_27o7j_k$ = function () {
    assert(this.index_1 >= this.dataSize_1);
    return this.index_1 < this.buffer_1.length;
  };
  protoOf(TrieNodeBaseIterator).currentNode_9xuujf_k$ = function () {
    assert(this.hasNextNode_27o7j_k$());
    var tmp = this.buffer_1[this.index_1];
    return tmp instanceof TrieNode ? tmp : THROW_CCE();
  };
  protoOf(TrieNodeBaseIterator).moveToNextNode_yoq3fz_k$ = function () {
    assert(this.hasNextNode_27o7j_k$());
    this.index_1 = this.index_1 + 1 | 0;
  };
  protoOf(TrieNodeBaseIterator).hasNext_bitz1p_k$ = function () {
    return this.hasNextKey_6ve5ce_k$();
  };
  function get_TRIE_MAX_HEIGHT() {
    return TRIE_MAX_HEIGHT;
  }
  var TRIE_MAX_HEIGHT;
  function TrieNodeKeysIterator() {
    TrieNodeBaseIterator.call(this);
  }
  protoOf(TrieNodeKeysIterator).next_20eer_k$ = function () {
    assert(this.hasNextKey_6ve5ce_k$());
    this.index_1 = this.index_1 + 2 | 0;
    var tmp = this.buffer_1[this.index_1 - 2 | 0];
    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
  };
  function TrieNodeValuesIterator() {
    TrieNodeBaseIterator.call(this);
  }
  protoOf(TrieNodeValuesIterator).next_20eer_k$ = function () {
    assert(this.hasNextKey_6ve5ce_k$());
    this.index_1 = this.index_1 + 2 | 0;
    var tmp = this.buffer_1[this.index_1 - 1 | 0];
    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
  };
  function TrieNodeEntriesIterator() {
    TrieNodeBaseIterator.call(this);
  }
  protoOf(TrieNodeEntriesIterator).next_20eer_k$ = function () {
    assert(this.hasNextKey_6ve5ce_k$());
    this.index_1 = this.index_1 + 2 | 0;
    var tmp = this.buffer_1[this.index_1 - 2 | 0];
    var tmp_0 = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
    var tmp_1 = this.buffer_1[this.index_1 - 1 | 0];
    return new MapEntry(tmp_0, (tmp_1 == null ? true : !(tmp_1 == null)) ? tmp_1 : THROW_CCE());
  };
  function MapEntry(key, value) {
    this.key_1 = key;
    this.value_1 = value;
  }
  protoOf(MapEntry).get_key_18j28a_k$ = function () {
    return this.key_1;
  };
  protoOf(MapEntry).get_value_j01efc_k$ = function () {
    return this.value_1;
  };
  protoOf(MapEntry).hashCode = function () {
    // Inline function 'kotlin.hashCode' call
    var tmp0_safe_receiver = this.get_key_18j28a_k$();
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
    var tmp = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    // Inline function 'kotlin.hashCode' call
    var tmp0_safe_receiver_0 = this.get_value_j01efc_k$();
    var tmp1_elvis_lhs_0 = tmp0_safe_receiver_0 == null ? null : hashCode(tmp0_safe_receiver_0);
    return tmp ^ (tmp1_elvis_lhs_0 == null ? 0 : tmp1_elvis_lhs_0);
  };
  protoOf(MapEntry).equals = function (other) {
    var tmp0_safe_receiver = (!(other == null) ? isInterface(other, Entry) : false) ? other : null;
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.MapEntry.equals.<anonymous>' call
      tmp = equals(tmp0_safe_receiver.get_key_18j28a_k$(), this.get_key_18j28a_k$()) ? equals(tmp0_safe_receiver.get_value_j01efc_k$(), this.get_value_j01efc_k$()) : false;
    }
    var tmp1_elvis_lhs = tmp;
    return tmp1_elvis_lhs == null ? false : tmp1_elvis_lhs;
  };
  protoOf(MapEntry).toString = function () {
    return toString_0(this.get_key_18j28a_k$()) + '=' + toString_0(this.get_value_j01efc_k$());
  };
  function _get_map__e6co1h_1($this) {
    return $this.map_1;
  }
  function PersistentHashMapKeys(map) {
    AbstractSet.call(this);
    this.map_1 = map;
  }
  protoOf(PersistentHashMapKeys).get_size_woubt6_k$ = function () {
    return this.map_1.get_size_woubt6_k$();
  };
  protoOf(PersistentHashMapKeys).contains_vbgn2f_k$ = function (element) {
    return this.map_1.containsKey_aw81wo_k$(element);
  };
  protoOf(PersistentHashMapKeys).contains_aljjnj_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.contains_vbgn2f_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(PersistentHashMapKeys).iterator_jk1svi_k$ = function () {
    return new PersistentHashMapKeysIterator(this.map_1.get_node_wor8sr_k$());
  };
  function _get_map__e6co1h_2($this) {
    return $this.map_1;
  }
  function PersistentHashMapValues(map) {
    AbstractCollection.call(this);
    this.map_1 = map;
  }
  protoOf(PersistentHashMapValues).get_size_woubt6_k$ = function () {
    return this.map_1.get_size_woubt6_k$();
  };
  protoOf(PersistentHashMapValues).contains_m22g8e_k$ = function (element) {
    return this.map_1.containsValue_yf2ykl_k$(element);
  };
  protoOf(PersistentHashMapValues).contains_aljjnj_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.contains_m22g8e_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(PersistentHashMapValues).iterator_jk1svi_k$ = function () {
    return new PersistentHashMapValuesIterator(this.map_1.get_node_wor8sr_k$());
  };
  function _get_map__e6co1h_3($this) {
    return $this.map_1;
  }
  function PersistentHashMapEntries(map) {
    AbstractSet.call(this);
    this.map_1 = map;
  }
  protoOf(PersistentHashMapEntries).get_size_woubt6_k$ = function () {
    return this.map_1.get_size_woubt6_k$();
  };
  protoOf(PersistentHashMapEntries).contains_4vad6e_k$ = function (element) {
    var tmp = !(element == null) ? element : THROW_CCE();
    if (!(!(tmp == null) ? isInterface(tmp, Entry) : false))
      return false;
    var tmp0_safe_receiver = this.map_1.get_wei43m_k$(element.get_key_18j28a_k$());
    var tmp_0;
    if (tmp0_safe_receiver == null) {
      tmp_0 = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapEntries.contains.<anonymous>' call
      tmp_0 = equals(tmp0_safe_receiver, element.get_value_j01efc_k$());
    }
    var tmp1_elvis_lhs = tmp_0;
    return tmp1_elvis_lhs == null ? element.get_value_j01efc_k$() == null ? this.map_1.containsKey_aw81wo_k$(element.get_key_18j28a_k$()) : false : tmp1_elvis_lhs;
  };
  protoOf(PersistentHashMapEntries).contains_aljjnj_k$ = function (element) {
    if (!(!(element == null) ? isInterface(element, Entry) : false))
      return false;
    return this.contains_4vad6e_k$((!(element == null) ? isInterface(element, Entry) : false) ? element : THROW_CCE());
  };
  protoOf(PersistentHashMapEntries).iterator_jk1svi_k$ = function () {
    return new PersistentHashMapEntriesIterator(this.map_1.get_node_wor8sr_k$());
  };
  function _set_dataMap__jbx27n($this, _set____db54di) {
    $this.dataMap_1 = _set____db54di;
  }
  function _get_dataMap__6ab85d($this) {
    return $this.dataMap_1;
  }
  function _set_nodeMap__8bem6j($this, _set____db54di) {
    $this.nodeMap_1 = _set____db54di;
  }
  function _get_nodeMap__hato6h($this) {
    return $this.nodeMap_1;
  }
  function _get_ownedBy__8derez($this) {
    return $this.ownedBy_1;
  }
  function TrieNode_init_$Init$(dataMap, nodeMap, buffer, $this) {
    TrieNode.call($this, dataMap, nodeMap, buffer, null);
    return $this;
  }
  function TrieNode_init_$Create$(dataMap, nodeMap, buffer) {
    return TrieNode_init_$Init$(dataMap, nodeMap, buffer, objectCreate(protoOf(TrieNode)));
  }
  function ModificationResult(node, sizeDelta) {
    this.node_1 = node;
    this.sizeDelta_1 = sizeDelta;
  }
  protoOf(ModificationResult).set_node_zauf0o_k$ = function (_set____db54di) {
    this.node_1 = _set____db54di;
  };
  protoOf(ModificationResult).get_node_wor8sr_k$ = function () {
    return this.node_1;
  };
  protoOf(ModificationResult).get_sizeDelta_gb68b2_k$ = function () {
    return this.sizeDelta_1;
  };
  protoOf(ModificationResult).replaceNode_y5qdlf_k$ = function (operation) {
    // Inline function 'kotlin.apply' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.ModificationResult.replaceNode.<anonymous>' call
    this.node_1 = operation(this.node_1);
    return this;
  };
  function asInsertResult($this) {
    return new ModificationResult($this, 1);
  }
  function asUpdateResult($this) {
    return new ModificationResult($this, 0);
  }
  function _set_buffer__uxh4x5_0($this, _set____db54di) {
    $this.buffer_1 = _set____db54di;
  }
  function hasNodeAt($this, positionMask) {
    return !(($this.nodeMap_1 & positionMask) === 0);
  }
  function keyAtIndex($this, keyIndex) {
    var tmp = $this.buffer_1[keyIndex];
    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
  }
  function valueAtKeyIndex($this, keyIndex) {
    var tmp = $this.buffer_1[keyIndex + 1 | 0];
    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
  }
  function insertEntryAt($this, positionMask, key, value) {
    var keyIndex = $this.entryKeyIndex_mnyxsd_k$(positionMask);
    var newBuffer = insertEntryAtIndex($this.buffer_1, keyIndex, key, value);
    return TrieNode_init_$Create$($this.dataMap_1 | positionMask, $this.nodeMap_1, newBuffer);
  }
  function mutableInsertEntryAt($this, positionMask, key, value, owner) {
    var keyIndex = $this.entryKeyIndex_mnyxsd_k$(positionMask);
    if ($this.ownedBy_1 === owner) {
      $this.buffer_1 = insertEntryAtIndex($this.buffer_1, keyIndex, key, value);
      $this.dataMap_1 = $this.dataMap_1 | positionMask;
      return $this;
    }
    var newBuffer = insertEntryAtIndex($this.buffer_1, keyIndex, key, value);
    return new TrieNode($this.dataMap_1 | positionMask, $this.nodeMap_1, newBuffer, owner);
  }
  function updateValueAtIndex($this, keyIndex, value) {
    // Inline function 'kotlin.collections.copyOf' call
    // Inline function 'kotlin.js.asDynamic' call
    var newBuffer = $this.buffer_1.slice();
    newBuffer[keyIndex + 1 | 0] = value;
    return TrieNode_init_$Create$($this.dataMap_1, $this.nodeMap_1, newBuffer);
  }
  function mutableUpdateValueAtIndex($this, keyIndex, value, mutator) {
    if ($this.ownedBy_1 === mutator.get_ownership_8tknnq_k$()) {
      $this.buffer_1[keyIndex + 1 | 0] = value;
      return $this;
    }
    var tmp1 = mutator.get_modCount_sgzjli_k$();
    mutator.set_modCount_dsd9nm_k$(tmp1 + 1 | 0);
    // Inline function 'kotlin.collections.copyOf' call
    // Inline function 'kotlin.js.asDynamic' call
    var newBuffer = $this.buffer_1.slice();
    newBuffer[keyIndex + 1 | 0] = value;
    return new TrieNode($this.dataMap_1, $this.nodeMap_1, newBuffer, mutator.get_ownership_8tknnq_k$());
  }
  function updateNodeAtIndex($this, nodeIndex, positionMask, newNode) {
    var newNodeBuffer = newNode.buffer_1;
    if (newNodeBuffer.length === 2 ? newNode.nodeMap_1 === 0 : false) {
      if ($this.buffer_1.length === 1) {
        newNode.dataMap_1 = $this.nodeMap_1;
        return newNode;
      }
      var keyIndex = $this.entryKeyIndex_mnyxsd_k$(positionMask);
      var newBuffer = replaceNodeWithEntry($this.buffer_1, nodeIndex, keyIndex, newNodeBuffer[0], newNodeBuffer[1]);
      return TrieNode_init_$Create$($this.dataMap_1 ^ positionMask, $this.nodeMap_1 ^ positionMask, newBuffer);
    }
    var newBuffer_0 = copyOf_0($this.buffer_1, $this.buffer_1.length);
    newBuffer_0[nodeIndex] = newNode;
    return TrieNode_init_$Create$($this.dataMap_1, $this.nodeMap_1, newBuffer_0);
  }
  function mutableUpdateNodeAtIndex($this, nodeIndex, newNode, owner) {
    if (($this.buffer_1.length === 1 ? newNode.buffer_1.length === 2 : false) ? newNode.nodeMap_1 === 0 : false) {
      newNode.dataMap_1 = $this.nodeMap_1;
      return newNode;
    }
    if ($this.ownedBy_1 === owner) {
      $this.buffer_1[nodeIndex] = newNode;
      return $this;
    }
    // Inline function 'kotlin.collections.copyOf' call
    // Inline function 'kotlin.js.asDynamic' call
    var newBuffer = $this.buffer_1.slice();
    newBuffer[nodeIndex] = newNode;
    return new TrieNode($this.dataMap_1, $this.nodeMap_1, newBuffer, owner);
  }
  function removeNodeAtIndex($this, nodeIndex, positionMask) {
    if ($this.buffer_1.length === 1)
      return null;
    var newBuffer = removeNodeAtIndex_0($this.buffer_1, nodeIndex);
    return TrieNode_init_$Create$($this.dataMap_1, $this.nodeMap_1 ^ positionMask, newBuffer);
  }
  function mutableRemoveNodeAtIndex($this, nodeIndex, positionMask, owner) {
    if ($this.buffer_1.length === 1)
      return null;
    if ($this.ownedBy_1 === owner) {
      $this.buffer_1 = removeNodeAtIndex_0($this.buffer_1, nodeIndex);
      $this.nodeMap_1 = $this.nodeMap_1 ^ positionMask;
      return $this;
    }
    var newBuffer = removeNodeAtIndex_0($this.buffer_1, nodeIndex);
    return new TrieNode($this.dataMap_1, $this.nodeMap_1 ^ positionMask, newBuffer, owner);
  }
  function bufferMoveEntryToNode($this, keyIndex, positionMask, newKeyHash, newKey, newValue, shift, owner) {
    var storedKey = keyAtIndex($this, keyIndex);
    // Inline function 'kotlin.hashCode' call
    var tmp1_elvis_lhs = storedKey == null ? null : hashCode(storedKey);
    var storedKeyHash = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    var storedValue = valueAtKeyIndex($this, keyIndex);
    var newNode = makeNode($this, storedKeyHash, storedKey, storedValue, newKeyHash, newKey, newValue, shift + 5 | 0, owner);
    var nodeIndex = $this.nodeIndex_xq7yp4_k$(positionMask) + 1 | 0;
    return replaceEntryWithNode($this.buffer_1, keyIndex, nodeIndex, newNode);
  }
  function moveEntryToNode($this, keyIndex, positionMask, newKeyHash, newKey, newValue, shift) {
    var newBuffer = bufferMoveEntryToNode($this, keyIndex, positionMask, newKeyHash, newKey, newValue, shift, null);
    return TrieNode_init_$Create$($this.dataMap_1 ^ positionMask, $this.nodeMap_1 | positionMask, newBuffer);
  }
  function mutableMoveEntryToNode($this, keyIndex, positionMask, newKeyHash, newKey, newValue, shift, owner) {
    if ($this.ownedBy_1 === owner) {
      $this.buffer_1 = bufferMoveEntryToNode($this, keyIndex, positionMask, newKeyHash, newKey, newValue, shift, owner);
      $this.dataMap_1 = $this.dataMap_1 ^ positionMask;
      $this.nodeMap_1 = $this.nodeMap_1 | positionMask;
      return $this;
    }
    var newBuffer = bufferMoveEntryToNode($this, keyIndex, positionMask, newKeyHash, newKey, newValue, shift, owner);
    return new TrieNode($this.dataMap_1 ^ positionMask, $this.nodeMap_1 | positionMask, newBuffer, owner);
  }
  function makeNode($this, keyHash1, key1, value1, keyHash2, key2, value2, shift, owner) {
    if (shift > 30) {
      // Inline function 'kotlin.arrayOf' call
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp$ret$2 = [key1, value1, key2, value2];
      return new TrieNode(0, 0, tmp$ret$2, owner);
    }
    var setBit1 = indexSegment_0(keyHash1, shift);
    var setBit2 = indexSegment_0(keyHash2, shift);
    if (!(setBit1 === setBit2)) {
      var tmp;
      if (setBit1 < setBit2) {
        // Inline function 'kotlin.arrayOf' call
        // Inline function 'kotlin.js.unsafeCast' call
        // Inline function 'kotlin.js.asDynamic' call
        tmp = [key1, value1, key2, value2];
      } else {
        // Inline function 'kotlin.arrayOf' call
        // Inline function 'kotlin.js.unsafeCast' call
        // Inline function 'kotlin.js.asDynamic' call
        tmp = [key2, value2, key1, value1];
      }
      var nodeBuffer = tmp;
      return new TrieNode(1 << setBit1 | 1 << setBit2, 0, nodeBuffer, owner);
    }
    var node = makeNode($this, keyHash1, key1, value1, keyHash2, key2, value2, shift + 5 | 0, owner);
    var tmp_0 = 1 << setBit1;
    // Inline function 'kotlin.arrayOf' call
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp$ret$11 = [node];
    return new TrieNode(0, tmp_0, tmp$ret$11, owner);
  }
  function removeEntryAtIndex($this, keyIndex, positionMask) {
    if ($this.buffer_1.length === 2)
      return null;
    var newBuffer = removeEntryAtIndex_0($this.buffer_1, keyIndex);
    return TrieNode_init_$Create$($this.dataMap_1 ^ positionMask, $this.nodeMap_1, newBuffer);
  }
  function mutableRemoveEntryAtIndex($this, keyIndex, positionMask, mutator) {
    var tmp1 = mutator.get_size_woubt6_k$();
    mutator.set_size_e2677a_k$(tmp1 - 1 | 0);
    mutator.set_operationResult_uq1qdv_k$(valueAtKeyIndex($this, keyIndex));
    if ($this.buffer_1.length === 2)
      return null;
    if ($this.ownedBy_1 === mutator.get_ownership_8tknnq_k$()) {
      $this.buffer_1 = removeEntryAtIndex_0($this.buffer_1, keyIndex);
      $this.dataMap_1 = $this.dataMap_1 ^ positionMask;
      return $this;
    }
    var newBuffer = removeEntryAtIndex_0($this.buffer_1, keyIndex);
    return new TrieNode($this.dataMap_1 ^ positionMask, $this.nodeMap_1, newBuffer, mutator.get_ownership_8tknnq_k$());
  }
  function collisionRemoveEntryAtIndex($this, i) {
    if ($this.buffer_1.length === 2)
      return null;
    var newBuffer = removeEntryAtIndex_0($this.buffer_1, i);
    return TrieNode_init_$Create$(0, 0, newBuffer);
  }
  function mutableCollisionRemoveEntryAtIndex($this, i, mutator) {
    var tmp1 = mutator.get_size_woubt6_k$();
    mutator.set_size_e2677a_k$(tmp1 - 1 | 0);
    mutator.set_operationResult_uq1qdv_k$(valueAtKeyIndex($this, i));
    if ($this.buffer_1.length === 2)
      return null;
    if ($this.ownedBy_1 === mutator.get_ownership_8tknnq_k$()) {
      $this.buffer_1 = removeEntryAtIndex_0($this.buffer_1, i);
      return $this;
    }
    var newBuffer = removeEntryAtIndex_0($this.buffer_1, i);
    return new TrieNode(0, 0, newBuffer, mutator.get_ownership_8tknnq_k$());
  }
  function collisionContainsKey($this, key) {
    var progression = step(until(0, $this.buffer_1.length), 2);
    var inductionVariable = progression.get_first_irdx8n_k$();
    var last = progression.get_last_wopotb_k$();
    var step_0 = progression.get_step_woujh1_k$();
    if ((step_0 > 0 ? inductionVariable <= last : false) ? true : step_0 < 0 ? last <= inductionVariable : false)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + step_0 | 0;
        if (equals(key, $this.buffer_1[i]))
          return true;
      }
       while (!(i === last));
    return false;
  }
  function collisionGet($this, key) {
    var progression = step(until(0, $this.buffer_1.length), 2);
    var inductionVariable = progression.get_first_irdx8n_k$();
    var last = progression.get_last_wopotb_k$();
    var step_0 = progression.get_step_woujh1_k$();
    if ((step_0 > 0 ? inductionVariable <= last : false) ? true : step_0 < 0 ? last <= inductionVariable : false)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + step_0 | 0;
        if (equals(key, keyAtIndex($this, i))) {
          return valueAtKeyIndex($this, i);
        }
      }
       while (!(i === last));
    return null;
  }
  function collisionPut($this, key, value) {
    var progression = step(until(0, $this.buffer_1.length), 2);
    var inductionVariable = progression.get_first_irdx8n_k$();
    var last = progression.get_last_wopotb_k$();
    var step_0 = progression.get_step_woujh1_k$();
    if ((step_0 > 0 ? inductionVariable <= last : false) ? true : step_0 < 0 ? last <= inductionVariable : false)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + step_0 | 0;
        if (equals(key, keyAtIndex($this, i))) {
          if (value === valueAtKeyIndex($this, i)) {
            return null;
          }
          // Inline function 'kotlin.collections.copyOf' call
          // Inline function 'kotlin.js.asDynamic' call
          var newBuffer = $this.buffer_1.slice();
          newBuffer[i + 1 | 0] = value;
          return asUpdateResult(TrieNode_init_$Create$(0, 0, newBuffer));
        }
      }
       while (!(i === last));
    var newBuffer_0 = insertEntryAtIndex($this.buffer_1, 0, key, value);
    return asInsertResult(TrieNode_init_$Create$(0, 0, newBuffer_0));
  }
  function mutableCollisionPut($this, key, value, mutator) {
    var progression = step(until(0, $this.buffer_1.length), 2);
    var inductionVariable = progression.get_first_irdx8n_k$();
    var last = progression.get_last_wopotb_k$();
    var step_0 = progression.get_step_woujh1_k$();
    if ((step_0 > 0 ? inductionVariable <= last : false) ? true : step_0 < 0 ? last <= inductionVariable : false)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + step_0 | 0;
        if (equals(key, keyAtIndex($this, i))) {
          mutator.set_operationResult_uq1qdv_k$(valueAtKeyIndex($this, i));
          if ($this.ownedBy_1 === mutator.get_ownership_8tknnq_k$()) {
            $this.buffer_1[i + 1 | 0] = value;
            return $this;
          }
          var tmp2 = mutator.get_modCount_sgzjli_k$();
          mutator.set_modCount_dsd9nm_k$(tmp2 + 1 | 0);
          // Inline function 'kotlin.collections.copyOf' call
          // Inline function 'kotlin.js.asDynamic' call
          var newBuffer = $this.buffer_1.slice();
          newBuffer[i + 1 | 0] = value;
          return new TrieNode(0, 0, newBuffer, mutator.get_ownership_8tknnq_k$());
        }
      }
       while (!(i === last));
    var tmp4 = mutator.get_size_woubt6_k$();
    mutator.set_size_e2677a_k$(tmp4 + 1 | 0);
    var newBuffer_0 = insertEntryAtIndex($this.buffer_1, 0, key, value);
    return new TrieNode(0, 0, newBuffer_0, mutator.get_ownership_8tknnq_k$());
  }
  function collisionRemove($this, key) {
    var progression = step(until(0, $this.buffer_1.length), 2);
    var inductionVariable = progression.get_first_irdx8n_k$();
    var last = progression.get_last_wopotb_k$();
    var step_0 = progression.get_step_woujh1_k$();
    if ((step_0 > 0 ? inductionVariable <= last : false) ? true : step_0 < 0 ? last <= inductionVariable : false)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + step_0 | 0;
        if (equals(key, keyAtIndex($this, i))) {
          return collisionRemoveEntryAtIndex($this, i);
        }
      }
       while (!(i === last));
    return $this;
  }
  function mutableCollisionRemove($this, key, mutator) {
    var progression = step(until(0, $this.buffer_1.length), 2);
    var inductionVariable = progression.get_first_irdx8n_k$();
    var last = progression.get_last_wopotb_k$();
    var step_0 = progression.get_step_woujh1_k$();
    if ((step_0 > 0 ? inductionVariable <= last : false) ? true : step_0 < 0 ? last <= inductionVariable : false)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + step_0 | 0;
        if (equals(key, keyAtIndex($this, i))) {
          return mutableCollisionRemoveEntryAtIndex($this, i, mutator);
        }
      }
       while (!(i === last));
    return $this;
  }
  function collisionRemove_0($this, key, value) {
    var progression = step(until(0, $this.buffer_1.length), 2);
    var inductionVariable = progression.get_first_irdx8n_k$();
    var last = progression.get_last_wopotb_k$();
    var step_0 = progression.get_step_woujh1_k$();
    if ((step_0 > 0 ? inductionVariable <= last : false) ? true : step_0 < 0 ? last <= inductionVariable : false)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + step_0 | 0;
        if (equals(key, keyAtIndex($this, i)) ? equals(value, valueAtKeyIndex($this, i)) : false) {
          return collisionRemoveEntryAtIndex($this, i);
        }
      }
       while (!(i === last));
    return $this;
  }
  function mutableCollisionRemove_0($this, key, value, mutator) {
    var progression = step(until(0, $this.buffer_1.length), 2);
    var inductionVariable = progression.get_first_irdx8n_k$();
    var last = progression.get_last_wopotb_k$();
    var step_0 = progression.get_step_woujh1_k$();
    if ((step_0 > 0 ? inductionVariable <= last : false) ? true : step_0 < 0 ? last <= inductionVariable : false)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + step_0 | 0;
        if (equals(key, keyAtIndex($this, i)) ? equals(value, valueAtKeyIndex($this, i)) : false) {
          return mutableCollisionRemoveEntryAtIndex($this, i, mutator);
        }
      }
       while (!(i === last));
    return $this;
  }
  function mutableCollisionPutAll($this, otherNode, intersectionCounter, owner) {
    assert($this.nodeMap_1 === 0);
    assert($this.dataMap_1 === 0);
    assert(otherNode.nodeMap_1 === 0);
    assert(otherNode.dataMap_1 === 0);
    var tempBuffer = copyOf_0($this.buffer_1, $this.buffer_1.length + otherNode.buffer_1.length | 0);
    var i = $this.buffer_1.length;
    var progression = step(until(0, otherNode.buffer_1.length), 2);
    var inductionVariable = progression.get_first_irdx8n_k$();
    var last = progression.get_last_wopotb_k$();
    var step_0 = progression.get_step_woujh1_k$();
    if ((step_0 > 0 ? inductionVariable <= last : false) ? true : step_0 < 0 ? last <= inductionVariable : false)
      do {
        var j = inductionVariable;
        inductionVariable = inductionVariable + step_0 | 0;
        var tmp = otherNode.buffer_1[j];
        if (!collisionContainsKey($this, (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE())) {
          tempBuffer[i] = otherNode.buffer_1[j];
          tempBuffer[i + 1 | 0] = otherNode.buffer_1[j + 1 | 0];
          i = i + 2 | 0;
        } else {
          var tmp2 = intersectionCounter.get_count_ipufhi_k$();
          intersectionCounter.set_count_k2eul2_k$(tmp2 + 1 | 0);
        }
      }
       while (!(j === last));
    var newSize = i;
    return newSize === $this.buffer_1.length ? $this : newSize === otherNode.buffer_1.length ? otherNode : newSize === tempBuffer.length ? new TrieNode(0, 0, tempBuffer, owner) : new TrieNode(0, 0, copyOf_0(tempBuffer, newSize), owner);
  }
  function mutablePutAllFromOtherNodeCell($this, otherNode, positionMask, shift, intersectionCounter, mutator) {
    var tmp;
    if (hasNodeAt($this, positionMask)) {
      var targetNode = $this.nodeAtIndex_1dkn23_k$($this.nodeIndex_xq7yp4_k$(positionMask));
      var tmp_0;
      if (hasNodeAt(otherNode, positionMask)) {
        var otherTargetNode = otherNode.nodeAtIndex_1dkn23_k$(otherNode.nodeIndex_xq7yp4_k$(positionMask));
        tmp_0 = targetNode.mutablePutAll_25uokd_k$(otherTargetNode, shift + 5 | 0, intersectionCounter, mutator);
      } else if (otherNode.hasEntryAt_ttub83_k$(positionMask)) {
        var keyIndex = otherNode.entryKeyIndex_mnyxsd_k$(positionMask);
        var key = keyAtIndex(otherNode, keyIndex);
        var value = valueAtKeyIndex(otherNode, keyIndex);
        var oldSize = mutator.get_size_woubt6_k$();
        // Inline function 'kotlin.also' call
        // Inline function 'kotlin.hashCode' call
        var tmp1_elvis_lhs = key == null ? null : hashCode(key);
        var tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
        var this_0 = targetNode.mutablePut_2vum7x_k$(tmp$ret$0, key, value, shift + 5 | 0, mutator);
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode.mutablePutAllFromOtherNodeCell.<anonymous>' call
        if (mutator.get_size_woubt6_k$() === oldSize) {
          var tmp1 = intersectionCounter.get_count_ipufhi_k$();
          intersectionCounter.set_count_k2eul2_k$(tmp1 + 1 | 0);
        }
        tmp_0 = this_0;
      } else {
        tmp_0 = targetNode;
      }
      tmp = tmp_0;
    } else if (hasNodeAt(otherNode, positionMask)) {
      var otherTargetNode_0 = otherNode.nodeAtIndex_1dkn23_k$(otherNode.nodeIndex_xq7yp4_k$(positionMask));
      var tmp_1;
      if ($this.hasEntryAt_ttub83_k$(positionMask)) {
        var keyIndex_0 = $this.entryKeyIndex_mnyxsd_k$(positionMask);
        var key_0 = keyAtIndex($this, keyIndex_0);
        var tmp_2;
        // Inline function 'kotlin.hashCode' call
        var tmp1_elvis_lhs_0 = key_0 == null ? null : hashCode(key_0);
        var tmp$ret$2 = tmp1_elvis_lhs_0 == null ? 0 : tmp1_elvis_lhs_0;
        if (otherTargetNode_0.containsKey_c5fsbs_k$(tmp$ret$2, key_0, shift + 5 | 0)) {
          var tmp1_0 = intersectionCounter.get_count_ipufhi_k$();
          intersectionCounter.set_count_k2eul2_k$(tmp1_0 + 1 | 0);
          tmp_2 = otherTargetNode_0;
        } else {
          var value_0 = valueAtKeyIndex($this, keyIndex_0);
          // Inline function 'kotlin.hashCode' call
          var tmp1_elvis_lhs_1 = key_0 == null ? null : hashCode(key_0);
          var tmp$ret$3 = tmp1_elvis_lhs_1 == null ? 0 : tmp1_elvis_lhs_1;
          tmp_2 = otherTargetNode_0.mutablePut_2vum7x_k$(tmp$ret$3, key_0, value_0, shift + 5 | 0, mutator);
        }
        tmp_1 = tmp_2;
      } else {
        tmp_1 = otherTargetNode_0;
      }
      tmp = tmp_1;
    } else {
      var thisKeyIndex = $this.entryKeyIndex_mnyxsd_k$(positionMask);
      var thisKey = keyAtIndex($this, thisKeyIndex);
      var thisValue = valueAtKeyIndex($this, thisKeyIndex);
      var otherKeyIndex = otherNode.entryKeyIndex_mnyxsd_k$(positionMask);
      var otherKey = keyAtIndex(otherNode, otherKeyIndex);
      var otherValue = valueAtKeyIndex(otherNode, otherKeyIndex);
      // Inline function 'kotlin.hashCode' call
      var tmp1_elvis_lhs_2 = thisKey == null ? null : hashCode(thisKey);
      var tmp_3 = tmp1_elvis_lhs_2 == null ? 0 : tmp1_elvis_lhs_2;
      // Inline function 'kotlin.hashCode' call
      var tmp1_elvis_lhs_3 = otherKey == null ? null : hashCode(otherKey);
      var tmp$ret$5 = tmp1_elvis_lhs_3 == null ? 0 : tmp1_elvis_lhs_3;
      tmp = makeNode($this, tmp_3, thisKey, thisValue, tmp$ret$5, otherKey, otherValue, shift + 5 | 0, mutator.get_ownership_8tknnq_k$());
    }
    return tmp;
  }
  function calculateSize($this) {
    if ($this.nodeMap_1 === 0)
      return $this.buffer_1.length / 2 | 0;
    var numValues = countOneBits($this.dataMap_1);
    var result = numValues;
    var inductionVariable = imul(numValues, 2);
    var last = $this.buffer_1.length;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        result = result + calculateSize($this.nodeAtIndex_1dkn23_k$(i)) | 0;
      }
       while (inductionVariable < last);
    return result;
  }
  function elementsIdentityEquals($this, otherNode) {
    if ($this === otherNode)
      return true;
    if (!($this.nodeMap_1 === otherNode.nodeMap_1))
      return false;
    if (!($this.dataMap_1 === otherNode.dataMap_1))
      return false;
    var inductionVariable = 0;
    var last = $this.buffer_1.length;
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!($this.buffer_1[i] === otherNode.buffer_1[i]))
          return false;
      }
       while (inductionVariable < last);
    return true;
  }
  function replaceNode($this, targetNode, newNode, nodeIndex, positionMask) {
    return newNode == null ? removeNodeAtIndex($this, nodeIndex, positionMask) : !(targetNode === newNode) ? updateNodeAtIndex($this, nodeIndex, positionMask, newNode) : $this;
  }
  function mutableReplaceNode($this, targetNode, newNode, nodeIndex, positionMask, owner) {
    return newNode == null ? mutableRemoveNodeAtIndex($this, nodeIndex, positionMask, owner) : ($this.ownedBy_1 === owner ? true : !(targetNode === newNode)) ? mutableUpdateNodeAtIndex($this, nodeIndex, newNode, owner) : $this;
  }
  function accept($this, visitor, hash, shift) {
    visitor($this, shift, hash, $this.dataMap_1, $this.nodeMap_1);
    var nodePositions = $this.nodeMap_1;
    while (!(nodePositions === 0)) {
      var mask = takeLowestOneBit(nodePositions);
      var hashSegment = countTrailingZeroBits(mask);
      var childNode = $this.nodeAtIndex_1dkn23_k$($this.nodeIndex_xq7yp4_k$(mask));
      accept(childNode, visitor, hash + (hashSegment << shift) | 0, shift + 5 | 0);
      nodePositions = nodePositions - mask | 0;
    }
  }
  function Companion_7() {
    Companion_instance_7 = this;
    var tmp = this;
    // Inline function 'kotlin.emptyArray' call
    var tmp$ret$0 = [];
    tmp.EMPTY_1 = TrieNode_init_$Create$(0, 0, tmp$ret$0);
  }
  protoOf(Companion_7).get_EMPTY_i8q41w_k$ = function () {
    return this.EMPTY_1;
  };
  var Companion_instance_7;
  function Companion_getInstance_9() {
    if (Companion_instance_7 == null)
      new Companion_7();
    return Companion_instance_7;
  }
  function TrieNode(dataMap, nodeMap, buffer, ownedBy) {
    Companion_getInstance_9();
    this.dataMap_1 = dataMap;
    this.nodeMap_1 = nodeMap;
    this.ownedBy_1 = ownedBy;
    this.buffer_1 = buffer;
  }
  protoOf(TrieNode).get_buffer_bmaafd_k$ = function () {
    return this.buffer_1;
  };
  protoOf(TrieNode).entryCount_wxkz7n_k$ = function () {
    return countOneBits(this.dataMap_1);
  };
  protoOf(TrieNode).hasEntryAt_ttub83_k$ = function (positionMask) {
    return !((this.dataMap_1 & positionMask) === 0);
  };
  protoOf(TrieNode).entryKeyIndex_mnyxsd_k$ = function (positionMask) {
    return imul(2, countOneBits(this.dataMap_1 & (positionMask - 1 | 0)));
  };
  protoOf(TrieNode).nodeIndex_xq7yp4_k$ = function (positionMask) {
    return (this.buffer_1.length - 1 | 0) - countOneBits(this.nodeMap_1 & (positionMask - 1 | 0)) | 0;
  };
  protoOf(TrieNode).nodeAtIndex_1dkn23_k$ = function (nodeIndex) {
    var tmp = this.buffer_1[nodeIndex];
    return tmp instanceof TrieNode ? tmp : THROW_CCE();
  };
  protoOf(TrieNode).containsKey_c5fsbs_k$ = function (keyHash, key, shift) {
    var keyPositionMask = 1 << indexSegment_0(keyHash, shift);
    if (this.hasEntryAt_ttub83_k$(keyPositionMask)) {
      return equals(key, keyAtIndex(this, this.entryKeyIndex_mnyxsd_k$(keyPositionMask)));
    }
    if (hasNodeAt(this, keyPositionMask)) {
      var targetNode = this.nodeAtIndex_1dkn23_k$(this.nodeIndex_xq7yp4_k$(keyPositionMask));
      if (shift === 30) {
        return collisionContainsKey(targetNode, key);
      }
      return targetNode.containsKey_c5fsbs_k$(keyHash, key, shift + 5 | 0);
    }
    return false;
  };
  protoOf(TrieNode).get_5yqtua_k$ = function (keyHash, key, shift) {
    var keyPositionMask = 1 << indexSegment_0(keyHash, shift);
    if (this.hasEntryAt_ttub83_k$(keyPositionMask)) {
      var keyIndex = this.entryKeyIndex_mnyxsd_k$(keyPositionMask);
      if (equals(key, keyAtIndex(this, keyIndex))) {
        return valueAtKeyIndex(this, keyIndex);
      }
      return null;
    }
    if (hasNodeAt(this, keyPositionMask)) {
      var targetNode = this.nodeAtIndex_1dkn23_k$(this.nodeIndex_xq7yp4_k$(keyPositionMask));
      if (shift === 30) {
        return collisionGet(targetNode, key);
      }
      return targetNode.get_5yqtua_k$(keyHash, key, shift + 5 | 0);
    }
    return null;
  };
  protoOf(TrieNode).mutablePutAll_25uokd_k$ = function (otherNode, shift, intersectionCounter, mutator) {
    if (this === otherNode) {
      intersectionCounter.plusAssign_8mmvnl_k$(calculateSize(this));
      return this;
    }
    if (shift > 30) {
      return mutableCollisionPutAll(this, otherNode, intersectionCounter, mutator.get_ownership_8tknnq_k$());
    }
    var newNodeMap = this.nodeMap_1 | otherNode.nodeMap_1;
    var newDataMap = (this.dataMap_1 ^ otherNode.dataMap_1) & ~newNodeMap;
    // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.internal.forEachOneBit' call
    var mask = this.dataMap_1 & otherNode.dataMap_1;
    var index = 0;
    while (!(mask === 0)) {
      var bit = takeLowestOneBit(mask);
      // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode.mutablePutAll.<anonymous>' call
      var leftKey = keyAtIndex(this, this.entryKeyIndex_mnyxsd_k$(bit));
      var rightKey = keyAtIndex(otherNode, otherNode.entryKeyIndex_mnyxsd_k$(bit));
      if (equals(leftKey, rightKey))
        newDataMap = newDataMap | bit;
      else
        newNodeMap = newNodeMap | bit;
      index = index + 1 | 0;
      mask = mask ^ bit;
    }
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!((newNodeMap & newDataMap) === 0)) {
      // Inline function 'kotlin.check.<anonymous>' call
      var message = 'Check failed.';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    var tmp;
    if ((equals(this.ownedBy_1, mutator.get_ownership_8tknnq_k$()) ? this.dataMap_1 === newDataMap : false) ? this.nodeMap_1 === newNodeMap : false) {
      tmp = this;
    } else {
      // Inline function 'kotlin.arrayOfNulls' call
      var size = imul(countOneBits(newDataMap), 2) + countOneBits(newNodeMap) | 0;
      var newBuffer = fillArrayVal(Array(size), null);
      tmp = TrieNode_init_$Create$(newDataMap, newNodeMap, newBuffer);
    }
    var mutableNode = tmp;
    // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.internal.forEachOneBit' call
    var mask_0 = newNodeMap;
    var index_0 = 0;
    while (!(mask_0 === 0)) {
      var bit_0 = takeLowestOneBit(mask_0);
      // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode.mutablePutAll.<anonymous>' call
      var index_1 = index_0;
      var newNodeIndex = (mutableNode.buffer_1.length - 1 | 0) - index_1 | 0;
      mutableNode.buffer_1[newNodeIndex] = mutablePutAllFromOtherNodeCell(this, otherNode, bit_0, shift, intersectionCounter, mutator);
      index_0 = index_0 + 1 | 0;
      mask_0 = mask_0 ^ bit_0;
    }
    // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.internal.forEachOneBit' call
    var mask_1 = newDataMap;
    var index_2 = 0;
    while (!(mask_1 === 0)) {
      var bit_1 = takeLowestOneBit(mask_1);
      // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode.mutablePutAll.<anonymous>' call
      var index_3 = index_2;
      var newKeyIndex = imul(index_3, 2);
      if (!otherNode.hasEntryAt_ttub83_k$(bit_1)) {
        var oldKeyIndex = this.entryKeyIndex_mnyxsd_k$(bit_1);
        mutableNode.buffer_1[newKeyIndex] = keyAtIndex(this, oldKeyIndex);
        mutableNode.buffer_1[newKeyIndex + 1 | 0] = valueAtKeyIndex(this, oldKeyIndex);
      } else {
        var oldKeyIndex_0 = otherNode.entryKeyIndex_mnyxsd_k$(bit_1);
        mutableNode.buffer_1[newKeyIndex] = keyAtIndex(otherNode, oldKeyIndex_0);
        mutableNode.buffer_1[newKeyIndex + 1 | 0] = valueAtKeyIndex(otherNode, oldKeyIndex_0);
        if (this.hasEntryAt_ttub83_k$(bit_1)) {
          var tmp1 = intersectionCounter.get_count_ipufhi_k$();
          intersectionCounter.set_count_k2eul2_k$(tmp1 + 1 | 0);
        }
      }
      index_2 = index_2 + 1 | 0;
      mask_1 = mask_1 ^ bit_1;
    }
    return elementsIdentityEquals(this, mutableNode) ? this : elementsIdentityEquals(otherNode, mutableNode) ? otherNode : mutableNode;
  };
  protoOf(TrieNode).put_8gzl9o_k$ = function (keyHash, key, value, shift) {
    var keyPositionMask = 1 << indexSegment_0(keyHash, shift);
    if (this.hasEntryAt_ttub83_k$(keyPositionMask)) {
      var keyIndex = this.entryKeyIndex_mnyxsd_k$(keyPositionMask);
      if (equals(key, keyAtIndex(this, keyIndex))) {
        if (valueAtKeyIndex(this, keyIndex) === value)
          return null;
        return asUpdateResult(updateValueAtIndex(this, keyIndex, value));
      }
      return asInsertResult(moveEntryToNode(this, keyIndex, keyPositionMask, keyHash, key, value, shift));
    }
    if (hasNodeAt(this, keyPositionMask)) {
      var nodeIndex = this.nodeIndex_xq7yp4_k$(keyPositionMask);
      var targetNode = this.nodeAtIndex_1dkn23_k$(nodeIndex);
      var tmp;
      if (shift === 30) {
        var tmp0_elvis_lhs = collisionPut(targetNode, key, value);
        var tmp_0;
        if (tmp0_elvis_lhs == null) {
          return null;
        } else {
          tmp_0 = tmp0_elvis_lhs;
        }
        tmp = tmp_0;
      } else {
        var tmp1_elvis_lhs = targetNode.put_8gzl9o_k$(keyHash, key, value, shift + 5 | 0);
        var tmp_1;
        if (tmp1_elvis_lhs == null) {
          return null;
        } else {
          tmp_1 = tmp1_elvis_lhs;
        }
        tmp = tmp_1;
      }
      var putResult = tmp;
      // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.ModificationResult.replaceNode' call
      // Inline function 'kotlin.apply' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.ModificationResult.replaceNode.<anonymous>' call
      var tmp_2 = putResult;
      // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode.put.<anonymous>' call
      var node = putResult.node_1;
      tmp_2.node_1 = updateNodeAtIndex(this, nodeIndex, keyPositionMask, node);
      return putResult;
    }
    return asInsertResult(insertEntryAt(this, keyPositionMask, key, value));
  };
  protoOf(TrieNode).mutablePut_2vum7x_k$ = function (keyHash, key, value, shift, mutator) {
    var keyPositionMask = 1 << indexSegment_0(keyHash, shift);
    if (this.hasEntryAt_ttub83_k$(keyPositionMask)) {
      var keyIndex = this.entryKeyIndex_mnyxsd_k$(keyPositionMask);
      if (equals(key, keyAtIndex(this, keyIndex))) {
        mutator.set_operationResult_uq1qdv_k$(valueAtKeyIndex(this, keyIndex));
        if (valueAtKeyIndex(this, keyIndex) === value) {
          return this;
        }
        return mutableUpdateValueAtIndex(this, keyIndex, value, mutator);
      }
      var tmp1 = mutator.get_size_woubt6_k$();
      mutator.set_size_e2677a_k$(tmp1 + 1 | 0);
      return mutableMoveEntryToNode(this, keyIndex, keyPositionMask, keyHash, key, value, shift, mutator.get_ownership_8tknnq_k$());
    }
    if (hasNodeAt(this, keyPositionMask)) {
      var nodeIndex = this.nodeIndex_xq7yp4_k$(keyPositionMask);
      var targetNode = this.nodeAtIndex_1dkn23_k$(nodeIndex);
      var tmp;
      if (shift === 30) {
        tmp = mutableCollisionPut(targetNode, key, value, mutator);
      } else {
        tmp = targetNode.mutablePut_2vum7x_k$(keyHash, key, value, shift + 5 | 0, mutator);
      }
      var newNode = tmp;
      if (targetNode === newNode) {
        return this;
      }
      return mutableUpdateNodeAtIndex(this, nodeIndex, newNode, mutator.get_ownership_8tknnq_k$());
    }
    var tmp3 = mutator.get_size_woubt6_k$();
    mutator.set_size_e2677a_k$(tmp3 + 1 | 0);
    return mutableInsertEntryAt(this, keyPositionMask, key, value, mutator.get_ownership_8tknnq_k$());
  };
  protoOf(TrieNode).remove_f2ssx0_k$ = function (keyHash, key, shift) {
    var keyPositionMask = 1 << indexSegment_0(keyHash, shift);
    if (this.hasEntryAt_ttub83_k$(keyPositionMask)) {
      var keyIndex = this.entryKeyIndex_mnyxsd_k$(keyPositionMask);
      if (equals(key, keyAtIndex(this, keyIndex))) {
        return removeEntryAtIndex(this, keyIndex, keyPositionMask);
      }
      return this;
    }
    if (hasNodeAt(this, keyPositionMask)) {
      var nodeIndex = this.nodeIndex_xq7yp4_k$(keyPositionMask);
      var targetNode = this.nodeAtIndex_1dkn23_k$(nodeIndex);
      var tmp;
      if (shift === 30) {
        tmp = collisionRemove(targetNode, key);
      } else {
        tmp = targetNode.remove_f2ssx0_k$(keyHash, key, shift + 5 | 0);
      }
      var newNode = tmp;
      return replaceNode(this, targetNode, newNode, nodeIndex, keyPositionMask);
    }
    return this;
  };
  protoOf(TrieNode).mutableRemove_e68euh_k$ = function (keyHash, key, shift, mutator) {
    var keyPositionMask = 1 << indexSegment_0(keyHash, shift);
    if (this.hasEntryAt_ttub83_k$(keyPositionMask)) {
      var keyIndex = this.entryKeyIndex_mnyxsd_k$(keyPositionMask);
      if (equals(key, keyAtIndex(this, keyIndex))) {
        return mutableRemoveEntryAtIndex(this, keyIndex, keyPositionMask, mutator);
      }
      return this;
    }
    if (hasNodeAt(this, keyPositionMask)) {
      var nodeIndex = this.nodeIndex_xq7yp4_k$(keyPositionMask);
      var targetNode = this.nodeAtIndex_1dkn23_k$(nodeIndex);
      var tmp;
      if (shift === 30) {
        tmp = mutableCollisionRemove(targetNode, key, mutator);
      } else {
        tmp = targetNode.mutableRemove_e68euh_k$(keyHash, key, shift + 5 | 0, mutator);
      }
      var newNode = tmp;
      return mutableReplaceNode(this, targetNode, newNode, nodeIndex, keyPositionMask, mutator.get_ownership_8tknnq_k$());
    }
    return this;
  };
  protoOf(TrieNode).remove_fcc91l_k$ = function (keyHash, key, value, shift) {
    var keyPositionMask = 1 << indexSegment_0(keyHash, shift);
    if (this.hasEntryAt_ttub83_k$(keyPositionMask)) {
      var keyIndex = this.entryKeyIndex_mnyxsd_k$(keyPositionMask);
      if (equals(key, keyAtIndex(this, keyIndex)) ? equals(value, valueAtKeyIndex(this, keyIndex)) : false) {
        return removeEntryAtIndex(this, keyIndex, keyPositionMask);
      }
      return this;
    }
    if (hasNodeAt(this, keyPositionMask)) {
      var nodeIndex = this.nodeIndex_xq7yp4_k$(keyPositionMask);
      var targetNode = this.nodeAtIndex_1dkn23_k$(nodeIndex);
      var tmp;
      if (shift === 30) {
        tmp = collisionRemove_0(targetNode, key, value);
      } else {
        tmp = targetNode.remove_fcc91l_k$(keyHash, key, value, shift + 5 | 0);
      }
      var newNode = tmp;
      return replaceNode(this, targetNode, newNode, nodeIndex, keyPositionMask);
    }
    return this;
  };
  protoOf(TrieNode).mutableRemove_wjxxwk_k$ = function (keyHash, key, value, shift, mutator) {
    var keyPositionMask = 1 << indexSegment_0(keyHash, shift);
    if (this.hasEntryAt_ttub83_k$(keyPositionMask)) {
      var keyIndex = this.entryKeyIndex_mnyxsd_k$(keyPositionMask);
      if (equals(key, keyAtIndex(this, keyIndex)) ? equals(value, valueAtKeyIndex(this, keyIndex)) : false) {
        return mutableRemoveEntryAtIndex(this, keyIndex, keyPositionMask, mutator);
      }
      return this;
    }
    if (hasNodeAt(this, keyPositionMask)) {
      var nodeIndex = this.nodeIndex_xq7yp4_k$(keyPositionMask);
      var targetNode = this.nodeAtIndex_1dkn23_k$(nodeIndex);
      var tmp;
      if (shift === 30) {
        tmp = mutableCollisionRemove_0(targetNode, key, value, mutator);
      } else {
        tmp = targetNode.mutableRemove_wjxxwk_k$(keyHash, key, value, shift + 5 | 0, mutator);
      }
      var newNode = tmp;
      return mutableReplaceNode(this, targetNode, newNode, nodeIndex, keyPositionMask, mutator.get_ownership_8tknnq_k$());
    }
    return this;
  };
  protoOf(TrieNode).accept_uu6sdc_k$ = function (visitor) {
    accept(this, visitor, 0, 0);
  };
  function get_ENTRY_SIZE() {
    return ENTRY_SIZE;
  }
  var ENTRY_SIZE;
  function insertEntryAtIndex(_this__u8e3s4, keyIndex, key, value) {
    // Inline function 'kotlin.arrayOfNulls' call
    var size = _this__u8e3s4.length + 2 | 0;
    var newBuffer = fillArrayVal(Array(size), null);
    // Inline function 'kotlin.collections.copyInto' call
    arrayCopy(_this__u8e3s4, newBuffer, 0, 0, keyIndex);
    // Inline function 'kotlin.collections.copyInto' call
    var destinationOffset = keyIndex + 2 | 0;
    var endIndex = _this__u8e3s4.length;
    arrayCopy(_this__u8e3s4, newBuffer, destinationOffset, keyIndex, endIndex);
    newBuffer[keyIndex] = key;
    newBuffer[keyIndex + 1 | 0] = value;
    return newBuffer;
  }
  function replaceNodeWithEntry(_this__u8e3s4, nodeIndex, keyIndex, key, value) {
    var newBuffer = copyOf_0(_this__u8e3s4, _this__u8e3s4.length + 1 | 0);
    // Inline function 'kotlin.collections.copyInto' call
    var destinationOffset = nodeIndex + 2 | 0;
    var startIndex = nodeIndex + 1 | 0;
    var endIndex = _this__u8e3s4.length;
    arrayCopy(newBuffer, newBuffer, destinationOffset, startIndex, endIndex);
    // Inline function 'kotlin.collections.copyInto' call
    var destinationOffset_0 = keyIndex + 2 | 0;
    arrayCopy(newBuffer, newBuffer, destinationOffset_0, keyIndex, nodeIndex);
    newBuffer[keyIndex] = key;
    newBuffer[keyIndex + 1 | 0] = value;
    return newBuffer;
  }
  function removeNodeAtIndex_0(_this__u8e3s4, nodeIndex) {
    // Inline function 'kotlin.arrayOfNulls' call
    var size = _this__u8e3s4.length - 1 | 0;
    var newBuffer = fillArrayVal(Array(size), null);
    // Inline function 'kotlin.collections.copyInto' call
    arrayCopy(_this__u8e3s4, newBuffer, 0, 0, nodeIndex);
    // Inline function 'kotlin.collections.copyInto' call
    var startIndex = nodeIndex + 1 | 0;
    var endIndex = _this__u8e3s4.length;
    arrayCopy(_this__u8e3s4, newBuffer, nodeIndex, startIndex, endIndex);
    return newBuffer;
  }
  function get_LOG_MAX_BRANCHING_FACTOR() {
    return LOG_MAX_BRANCHING_FACTOR;
  }
  var LOG_MAX_BRANCHING_FACTOR;
  function replaceEntryWithNode(_this__u8e3s4, keyIndex, nodeIndex, newNode) {
    var newNodeIndex = nodeIndex - 2 | 0;
    // Inline function 'kotlin.arrayOfNulls' call
    var size = (_this__u8e3s4.length - 2 | 0) + 1 | 0;
    var newBuffer = fillArrayVal(Array(size), null);
    // Inline function 'kotlin.collections.copyInto' call
    arrayCopy(_this__u8e3s4, newBuffer, 0, 0, keyIndex);
    // Inline function 'kotlin.collections.copyInto' call
    var startIndex = keyIndex + 2 | 0;
    arrayCopy(_this__u8e3s4, newBuffer, keyIndex, startIndex, nodeIndex);
    newBuffer[newNodeIndex] = newNode;
    // Inline function 'kotlin.collections.copyInto' call
    var destinationOffset = newNodeIndex + 1 | 0;
    var endIndex = _this__u8e3s4.length;
    arrayCopy(_this__u8e3s4, newBuffer, destinationOffset, nodeIndex, endIndex);
    return newBuffer;
  }
  function get_MAX_SHIFT() {
    return MAX_SHIFT;
  }
  var MAX_SHIFT;
  function indexSegment_0(index, shift) {
    return index >> shift & 31;
  }
  function removeEntryAtIndex_0(_this__u8e3s4, keyIndex) {
    // Inline function 'kotlin.arrayOfNulls' call
    var size = _this__u8e3s4.length - 2 | 0;
    var newBuffer = fillArrayVal(Array(size), null);
    // Inline function 'kotlin.collections.copyInto' call
    arrayCopy(_this__u8e3s4, newBuffer, 0, 0, keyIndex);
    // Inline function 'kotlin.collections.copyInto' call
    var startIndex = keyIndex + 2 | 0;
    var endIndex = _this__u8e3s4.length;
    arrayCopy(_this__u8e3s4, newBuffer, keyIndex, startIndex, endIndex);
    return newBuffer;
  }
  function get_MAX_BRANCHING_FACTOR_MINUS_ONE() {
    return MAX_BRANCHING_FACTOR_MINUS_ONE;
  }
  var MAX_BRANCHING_FACTOR_MINUS_ONE;
  function _get_EMPTY__xmtgos_0($this) {
    return $this.EMPTY_1;
  }
  function Companion_8() {
    Companion_instance_8 = this;
    this.EMPTY_1 = new PersistentOrderedSet(EndOfChain_getInstance(), EndOfChain_getInstance(), Companion_getInstance_8().emptyOf_n4povu_k$());
  }
  protoOf(Companion_8).emptyOf_fgwp9_k$ = function () {
    return this.EMPTY_1;
  };
  var Companion_instance_8;
  function Companion_getInstance_10() {
    if (Companion_instance_8 == null)
      new Companion_8();
    return Companion_instance_8;
  }
  function PersistentOrderedSet(firstElement, lastElement, hashMap) {
    Companion_getInstance_10();
    AbstractSet.call(this);
    this.firstElement_1 = firstElement;
    this.lastElement_1 = lastElement;
    this.hashMap_1 = hashMap;
  }
  protoOf(PersistentOrderedSet).get_firstElement_o9kdqj_k$ = function () {
    return this.firstElement_1;
  };
  protoOf(PersistentOrderedSet).get_lastElement_hjz21p_k$ = function () {
    return this.lastElement_1;
  };
  protoOf(PersistentOrderedSet).get_hashMap_csu0ed_k$ = function () {
    return this.hashMap_1;
  };
  protoOf(PersistentOrderedSet).get_size_woubt6_k$ = function () {
    return this.hashMap_1.get_size_woubt6_k$();
  };
  protoOf(PersistentOrderedSet).contains_aljjnj_k$ = function (element) {
    return this.hashMap_1.containsKey_aw81wo_k$(element);
  };
  protoOf(PersistentOrderedSet).add_utx5q5_k$ = function (element) {
    if (this.hashMap_1.containsKey_aw81wo_k$(element)) {
      return this;
    }
    if (this.isEmpty_y1axqb_k$()) {
      var newMap = this.hashMap_1.put_4fpzoq_k$(element, Links_init_$Create$());
      return new PersistentOrderedSet(element, element, newMap);
    }
    var tmp = this.lastElement_1;
    var lastElement = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
    var lastLinks = ensureNotNull(this.hashMap_1.get_wei43m_k$(lastElement));
    var newMap_0 = this.hashMap_1.put_4fpzoq_k$(lastElement, lastLinks.withNext_wdw50a_k$(element)).put_4fpzoq_k$(element, Links_init_$Create$_0(lastElement));
    return new PersistentOrderedSet(this.firstElement_1, element, newMap_0);
  };
  protoOf(PersistentOrderedSet).addAll_4lagoh_k$ = function (elements) {
    // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.mutate' call
    // Inline function 'kotlin.apply' call
    var this_0 = this.builder_3thy1n_k$();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.persistentOrderedSet.PersistentOrderedSet.addAll.<anonymous>' call
    this_0.addAll_4lagoh_k$(elements);
    return this_0.build_1k0s4u_k$();
  };
  protoOf(PersistentOrderedSet).remove_cedx0m_k$ = function (element) {
    var tmp0_elvis_lhs = this.hashMap_1.get_wei43m_k$(element);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return this;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var links = tmp;
    var newMap = this.hashMap_1.remove_gppy8k_k$(element);
    if (links.get_hasPrevious_unwn20_k$()) {
      // Inline function 'kotlin.collections.get' call
      var this_0 = newMap;
      var key = links.previous_1;
      var tmp$ret$0 = (isInterface(this_0, Map) ? this_0 : THROW_CCE()).get_wei43m_k$(key);
      var previousLinks = ensureNotNull(tmp$ret$0);
      var tmp_0 = newMap;
      var tmp_1 = links.previous_1;
      newMap = tmp_0.put_4fpzoq_k$((tmp_1 == null ? true : !(tmp_1 == null)) ? tmp_1 : THROW_CCE(), previousLinks.withNext_wdw50a_k$(links.next_1));
    }
    if (links.get_hasNext_csdx38_k$()) {
      // Inline function 'kotlin.collections.get' call
      var this_1 = newMap;
      var key_0 = links.next_1;
      var tmp$ret$1 = (isInterface(this_1, Map) ? this_1 : THROW_CCE()).get_wei43m_k$(key_0);
      var nextLinks = ensureNotNull(tmp$ret$1);
      var tmp_2 = newMap;
      var tmp_3 = links.next_1;
      newMap = tmp_2.put_4fpzoq_k$((tmp_3 == null ? true : !(tmp_3 == null)) ? tmp_3 : THROW_CCE(), nextLinks.withPrevious_o0klnm_k$(links.previous_1));
    }
    var newFirstElement = !links.get_hasPrevious_unwn20_k$() ? links.next_1 : this.firstElement_1;
    var newLastElement = !links.get_hasNext_csdx38_k$() ? links.previous_1 : this.lastElement_1;
    return new PersistentOrderedSet(newFirstElement, newLastElement, newMap);
  };
  protoOf(PersistentOrderedSet).removeAll_y0z8pe_k$ = function (elements) {
    // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.mutate' call
    // Inline function 'kotlin.apply' call
    var this_0 = this.builder_3thy1n_k$();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.persistentOrderedSet.PersistentOrderedSet.removeAll.<anonymous>' call
    this_0.removeAll_y0z8pe_k$(elements);
    return this_0.build_1k0s4u_k$();
  };
  protoOf(PersistentOrderedSet).removeAll_b74hty_k$ = function (predicate) {
    // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.mutate' call
    // Inline function 'kotlin.apply' call
    var this_0 = this.builder_3thy1n_k$();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.persistentOrderedSet.PersistentOrderedSet.removeAll.<anonymous>' call
    removeAll(this_0, predicate);
    return this_0.build_1k0s4u_k$();
  };
  protoOf(PersistentOrderedSet).retainAll_9fhiib_k$ = function (elements) {
    // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.mutate' call
    // Inline function 'kotlin.apply' call
    var this_0 = this.builder_3thy1n_k$();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.persistentOrderedSet.PersistentOrderedSet.retainAll.<anonymous>' call
    this_0.retainAll_9fhiib_k$(elements);
    return this_0.build_1k0s4u_k$();
  };
  protoOf(PersistentOrderedSet).clear_1keqml_k$ = function () {
    return Companion_getInstance_10().emptyOf_fgwp9_k$();
  };
  protoOf(PersistentOrderedSet).iterator_jk1svi_k$ = function () {
    return new PersistentOrderedSetIterator(this.firstElement_1, this.hashMap_1);
  };
  protoOf(PersistentOrderedSet).builder_3thy1n_k$ = function () {
    return new PersistentOrderedSetBuilder(this);
  };
  function Links_init_$Init$($this) {
    Links.call($this, EndOfChain_getInstance(), EndOfChain_getInstance());
    return $this;
  }
  function Links_init_$Create$() {
    return Links_init_$Init$(objectCreate(protoOf(Links)));
  }
  function Links_init_$Init$_0(previous, $this) {
    Links.call($this, previous, EndOfChain_getInstance());
    return $this;
  }
  function Links_init_$Create$_0(previous) {
    return Links_init_$Init$_0(previous, objectCreate(protoOf(Links)));
  }
  function Links(previous, next) {
    this.previous_1 = previous;
    this.next_1 = next;
  }
  protoOf(Links).get_previous_i5svy8_k$ = function () {
    return this.previous_1;
  };
  protoOf(Links).get_next_wor1vg_k$ = function () {
    return this.next_1;
  };
  protoOf(Links).withNext_wdw50a_k$ = function (newNext) {
    return new Links(this.previous_1, newNext);
  };
  protoOf(Links).withPrevious_o0klnm_k$ = function (newPrevious) {
    return new Links(newPrevious, this.next_1);
  };
  protoOf(Links).get_hasNext_csdx38_k$ = function () {
    return !(this.next_1 === EndOfChain_getInstance());
  };
  protoOf(Links).get_hasPrevious_unwn20_k$ = function () {
    return !(this.previous_1 === EndOfChain_getInstance());
  };
  function _set_set__4wdzvn($this, _set____db54di) {
    $this.set_1 = _set____db54di;
  }
  function _get_set__e6gl0v($this) {
    return $this.set_1;
  }
  function _set_lastElement__vitewx($this, _set____db54di) {
    $this.lastElement_1 = _set____db54di;
  }
  function _get_lastElement__18f8l1($this) {
    return $this.lastElement_1;
  }
  function PersistentOrderedSetBuilder(set) {
    AbstractMutableSet.call(this);
    this.set_1 = set;
    this.firstElement_1 = this.set_1.get_firstElement_o9kdqj_k$();
    this.lastElement_1 = this.set_1.get_lastElement_hjz21p_k$();
    this.hashMapBuilder_1 = this.set_1.get_hashMap_csu0ed_k$().builder_3thy1n_k$();
  }
  protoOf(PersistentOrderedSetBuilder).set_firstElement_moqsuy_k$ = function (_set____db54di) {
    this.firstElement_1 = _set____db54di;
  };
  protoOf(PersistentOrderedSetBuilder).get_firstElement_o9kdqj_k$ = function () {
    return this.firstElement_1;
  };
  protoOf(PersistentOrderedSetBuilder).get_hashMapBuilder_6fulau_k$ = function () {
    return this.hashMapBuilder_1;
  };
  protoOf(PersistentOrderedSetBuilder).get_size_woubt6_k$ = function () {
    return this.hashMapBuilder_1.get_size_woubt6_k$();
  };
  protoOf(PersistentOrderedSetBuilder).build_1k0s4u_k$ = function () {
    var newMap = this.hashMapBuilder_1.build_1k0s4u_k$();
    var tmp = this;
    var tmp_0;
    if (newMap === this.set_1.get_hashMap_csu0ed_k$()) {
      assert(this.firstElement_1 === this.set_1.get_firstElement_o9kdqj_k$());
      assert(this.lastElement_1 === this.set_1.get_lastElement_hjz21p_k$());
      tmp_0 = this.set_1;
    } else {
      tmp_0 = new PersistentOrderedSet(this.firstElement_1, this.lastElement_1, newMap);
    }
    tmp.set_1 = tmp_0;
    return this.set_1;
  };
  protoOf(PersistentOrderedSetBuilder).contains_aljjnj_k$ = function (element) {
    return this.hashMapBuilder_1.containsKey_aw81wo_k$(element);
  };
  protoOf(PersistentOrderedSetBuilder).add_utx5q5_k$ = function (element) {
    if (this.hashMapBuilder_1.containsKey_aw81wo_k$(element)) {
      return false;
    }
    if (this.isEmpty_y1axqb_k$()) {
      this.firstElement_1 = element;
      this.lastElement_1 = element;
      // Inline function 'kotlin.collections.set' call
      var this_0 = this.hashMapBuilder_1;
      var value = Links_init_$Create$();
      this_0.put_4fpzoq_k$(element, value);
      return true;
    }
    // Inline function 'kotlin.collections.get' call
    var this_1 = this.hashMapBuilder_1;
    var key = this.lastElement_1;
    var tmp$ret$0 = (isInterface(this_1, Map) ? this_1 : THROW_CCE()).get_wei43m_k$(key);
    var lastLinks = ensureNotNull(tmp$ret$0);
    // Inline function 'kotlin.collections.set' call
    var this_2 = this.hashMapBuilder_1;
    var tmp = this.lastElement_1;
    var key_0 = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
    var value_0 = lastLinks.withNext_wdw50a_k$(element);
    this_2.put_4fpzoq_k$(key_0, value_0);
    // Inline function 'kotlin.collections.set' call
    var this_3 = this.hashMapBuilder_1;
    var value_1 = Links_init_$Create$_0(this.lastElement_1);
    this_3.put_4fpzoq_k$(element, value_1);
    this.lastElement_1 = element;
    return true;
  };
  protoOf(PersistentOrderedSetBuilder).remove_cedx0m_k$ = function (element) {
    var tmp0_elvis_lhs = this.hashMapBuilder_1.remove_gppy8k_k$(element);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var links = tmp;
    if (links.get_hasPrevious_unwn20_k$()) {
      // Inline function 'kotlin.collections.get' call
      var this_0 = this.hashMapBuilder_1;
      var key = links.get_previous_i5svy8_k$();
      var tmp$ret$0 = (isInterface(this_0, Map) ? this_0 : THROW_CCE()).get_wei43m_k$(key);
      var previousLinks = ensureNotNull(tmp$ret$0);
      // Inline function 'kotlin.collections.set' call
      var this_1 = this.hashMapBuilder_1;
      var tmp_0 = links.get_previous_i5svy8_k$();
      var key_0 = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
      var value = previousLinks.withNext_wdw50a_k$(links.get_next_wor1vg_k$());
      this_1.put_4fpzoq_k$(key_0, value);
    } else {
      this.firstElement_1 = links.get_next_wor1vg_k$();
    }
    if (links.get_hasNext_csdx38_k$()) {
      // Inline function 'kotlin.collections.get' call
      var this_2 = this.hashMapBuilder_1;
      var key_1 = links.get_next_wor1vg_k$();
      var tmp$ret$1 = (isInterface(this_2, Map) ? this_2 : THROW_CCE()).get_wei43m_k$(key_1);
      var nextLinks = ensureNotNull(tmp$ret$1);
      // Inline function 'kotlin.collections.set' call
      var this_3 = this.hashMapBuilder_1;
      var tmp_1 = links.get_next_wor1vg_k$();
      var key_2 = (tmp_1 == null ? true : !(tmp_1 == null)) ? tmp_1 : THROW_CCE();
      var value_0 = nextLinks.withPrevious_o0klnm_k$(links.get_previous_i5svy8_k$());
      this_3.put_4fpzoq_k$(key_2, value_0);
    } else {
      this.lastElement_1 = links.get_previous_i5svy8_k$();
    }
    return true;
  };
  protoOf(PersistentOrderedSetBuilder).clear_j9egeb_k$ = function () {
    this.hashMapBuilder_1.clear_j9egeb_k$();
    this.firstElement_1 = EndOfChain_getInstance();
    this.lastElement_1 = EndOfChain_getInstance();
  };
  protoOf(PersistentOrderedSetBuilder).iterator_jk1svi_k$ = function () {
    return new PersistentOrderedSetMutableIterator(this);
  };
  function _set_nextElement__kbbdd0($this, _set____db54di) {
    $this.nextElement_1 = _set____db54di;
  }
  function _get_nextElement__9z2syw($this) {
    return $this.nextElement_1;
  }
  function checkHasNext_0($this) {
    if (!$this.hasNext_bitz1p_k$())
      throw NoSuchElementException_init_$Create$_0();
  }
  function PersistentOrderedSetIterator(nextElement, map) {
    this.nextElement_1 = nextElement;
    this.map_1 = map;
    this.index_1 = 0;
  }
  protoOf(PersistentOrderedSetIterator).get_map_18j0ul_k$ = function () {
    return this.map_1;
  };
  protoOf(PersistentOrderedSetIterator).set_index_69f5xp_k$ = function (_set____db54di) {
    this.index_1 = _set____db54di;
  };
  protoOf(PersistentOrderedSetIterator).get_index_it478p_k$ = function () {
    return this.index_1;
  };
  protoOf(PersistentOrderedSetIterator).hasNext_bitz1p_k$ = function () {
    return this.index_1 < this.map_1.get_size_woubt6_k$();
  };
  protoOf(PersistentOrderedSetIterator).next_20eer_k$ = function () {
    checkHasNext_0(this);
    var tmp = this.nextElement_1;
    var result = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
    this.index_1 = this.index_1 + 1 | 0;
    var tmp_0 = this;
    // Inline function 'kotlin.collections.getOrElse' call
    var tmp0_elvis_lhs = this.map_1.get_wei43m_k$(result);
    var tmp_1;
    if (tmp0_elvis_lhs == null) {
      throw ConcurrentModificationException_init_$Create$_0('Hash code of an element (' + result + ') has changed after it was added to the persistent set.');
    } else {
      tmp_1 = tmp0_elvis_lhs;
    }
    tmp_0.nextElement_1 = tmp_1.get_next_wor1vg_k$();
    return result;
  };
  function _get_builder__bi005y_4($this) {
    return $this.builder_1;
  }
  function _set_lastIteratedElement__d49n61($this, _set____db54di) {
    $this.lastIteratedElement_1 = _set____db54di;
  }
  function _get_lastIteratedElement__qezw2d($this) {
    return $this.lastIteratedElement_1;
  }
  function _set_nextWasInvoked__qh6nr5_0($this, _set____db54di) {
    $this.nextWasInvoked_1 = _set____db54di;
  }
  function _get_nextWasInvoked__j0ty6j_0($this) {
    return $this.nextWasInvoked_1;
  }
  function _set_expectedModCount__2cl3f2_1($this, _set____db54di) {
    $this.expectedModCount_1 = _set____db54di;
  }
  function _get_expectedModCount__qqj5nq_1($this) {
    return $this.expectedModCount_1;
  }
  function checkNextWasInvoked_0($this) {
    if (!$this.nextWasInvoked_1)
      throw IllegalStateException_init_$Create$_0();
  }
  function checkForComodification_1($this) {
    if (!($this.builder_1.get_hashMapBuilder_6fulau_k$().get_modCount_sgzjli_k$() === $this.expectedModCount_1))
      throw ConcurrentModificationException_init_$Create$();
  }
  function PersistentOrderedSetMutableIterator(builder) {
    PersistentOrderedSetIterator.call(this, builder.get_firstElement_o9kdqj_k$(), builder.get_hashMapBuilder_6fulau_k$());
    this.builder_1 = builder;
    this.lastIteratedElement_1 = null;
    this.nextWasInvoked_1 = false;
    this.expectedModCount_1 = this.builder_1.get_hashMapBuilder_6fulau_k$().get_modCount_sgzjli_k$();
  }
  protoOf(PersistentOrderedSetMutableIterator).next_20eer_k$ = function () {
    checkForComodification_1(this);
    var next = protoOf(PersistentOrderedSetIterator).next_20eer_k$.call(this);
    this.lastIteratedElement_1 = next;
    this.nextWasInvoked_1 = true;
    return next;
  };
  protoOf(PersistentOrderedSetMutableIterator).remove_ldkf9o_k$ = function () {
    checkNextWasInvoked_0(this);
    // Inline function 'kotlin.collections.remove' call
    var this_0 = this.builder_1;
    var element = this.lastIteratedElement_1;
    (isInterface(this_0, MutableCollection) ? this_0 : THROW_CCE()).remove_cedx0m_k$(element);
    this.lastIteratedElement_1 = null;
    this.nextWasInvoked_1 = false;
    this.expectedModCount_1 = this.builder_1.get_hashMapBuilder_6fulau_k$().get_modCount_sgzjli_k$();
    var tmp1 = this.get_index_it478p_k$();
    this.set_index_69f5xp_k$(tmp1 - 1 | 0);
  };
  function EndOfChain() {
    EndOfChain_instance = this;
  }
  var EndOfChain_instance;
  function EndOfChain_getInstance() {
    if (EndOfChain_instance == null)
      new EndOfChain();
    return EndOfChain_instance;
  }
  function forEachOneBit(_this__u8e3s4, body) {
    var mask = _this__u8e3s4;
    var index = 0;
    while (!(mask === 0)) {
      var bit = takeLowestOneBit(mask);
      body(bit, index);
      index = index + 1 | 0;
      mask = mask ^ bit;
    }
  }
  function ListImplementation() {
    ListImplementation_instance = this;
  }
  protoOf(ListImplementation).checkElementIndex_r3t1bm_k$ = function (index, size) {
    if (index < 0 ? true : index >= size) {
      throw IndexOutOfBoundsException_init_$Create$('index: ' + index + ', size: ' + size);
    }
  };
  protoOf(ListImplementation).checkPositionIndex_xiph8v_k$ = function (index, size) {
    if (index < 0 ? true : index > size) {
      throw IndexOutOfBoundsException_init_$Create$('index: ' + index + ', size: ' + size);
    }
  };
  protoOf(ListImplementation).checkRangeIndexes_a38xj7_k$ = function (fromIndex, toIndex, size) {
    if (fromIndex < 0 ? true : toIndex > size) {
      throw IndexOutOfBoundsException_init_$Create$('fromIndex: ' + fromIndex + ', toIndex: ' + toIndex + ', size: ' + size);
    }
    if (fromIndex > toIndex) {
      throw IllegalArgumentException_init_$Create$('fromIndex: ' + fromIndex + ' > toIndex: ' + toIndex);
    }
  };
  protoOf(ListImplementation).orderedHashCode_s560y_k$ = function (c) {
    var hashCode_0 = 1;
    var tmp0_iterator = c.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var e = tmp0_iterator.next_20eer_k$();
      var tmp = imul(31, hashCode_0);
      var tmp2_elvis_lhs = e == null ? null : hashCode(e);
      hashCode_0 = tmp + (tmp2_elvis_lhs == null ? 0 : tmp2_elvis_lhs) | 0;
    }
    return hashCode_0;
  };
  protoOf(ListImplementation).orderedEquals_mgd3rc_k$ = function (c, other) {
    if (!(c.get_size_woubt6_k$() === other.get_size_woubt6_k$()))
      return false;
    var otherIterator = other.iterator_jk1svi_k$();
    var tmp0_iterator = c.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var elem = tmp0_iterator.next_20eer_k$();
      var elemOther = otherIterator.next_20eer_k$();
      if (!equals(elem, elemOther)) {
        return false;
      }
    }
    return true;
  };
  var ListImplementation_instance;
  function ListImplementation_getInstance() {
    if (ListImplementation_instance == null)
      new ListImplementation();
    return ListImplementation_instance;
  }
  function MutabilityOwnership() {
  }
  function DeltaCounter(count) {
    count = count === VOID ? 0 : count;
    this.count_1 = count;
  }
  protoOf(DeltaCounter).set_count_k2eul2_k$ = function (_set____db54di) {
    this.count_1 = _set____db54di;
  };
  protoOf(DeltaCounter).get_count_ipufhi_k$ = function () {
    return this.count_1;
  };
  protoOf(DeltaCounter).plusAssign_8mmvnl_k$ = function (that) {
    this.count_1 = this.count_1 + that | 0;
  };
  protoOf(DeltaCounter).component1_7eebsc_k$ = function () {
    return this.count_1;
  };
  protoOf(DeltaCounter).copy_ns6qmb_k$ = function (count) {
    return new DeltaCounter(count);
  };
  protoOf(DeltaCounter).copy$default_vcb62z_k$ = function (count, $super) {
    count = count === VOID ? this.count_1 : count;
    return $super === VOID ? this.copy_ns6qmb_k$(count) : $super.copy_ns6qmb_k$.call(this, count);
  };
  protoOf(DeltaCounter).toString = function () {
    return 'DeltaCounter(count=' + this.count_1 + ')';
  };
  protoOf(DeltaCounter).hashCode = function () {
    return this.count_1;
  };
  protoOf(DeltaCounter).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof DeltaCounter))
      return false;
    var tmp0_other_with_cast = other instanceof DeltaCounter ? other : THROW_CCE();
    if (!(this.count_1 === tmp0_other_with_cast.count_1))
      return false;
    return true;
  };
  function assert(condition) {
  }
  function composableLambdaInstance(key, tracked, block) {
    // Inline function 'kotlin.apply' call
    var this_0 = new ComposableLambdaImpl(key, tracked);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.internal.composableLambdaInstance.<anonymous>' call
    this_0.update_khwrp7_k$(block);
    return this_0;
  }
  function replacableWith(_this__u8e3s4, other) {
    var tmp;
    if (_this__u8e3s4 == null) {
      tmp = true;
    } else {
      var tmp_0;
      var tmp_1;
      if (_this__u8e3s4 instanceof RecomposeScopeImpl) {
        tmp_1 = other instanceof RecomposeScopeImpl;
      } else {
        tmp_1 = false;
      }
      if (tmp_1) {
        tmp_0 = (!_this__u8e3s4.get_valid_j01e4z_k$() ? true : equals(_this__u8e3s4, other)) ? true : equals(_this__u8e3s4.get_anchor_b1c8n2_k$(), other.get_anchor_b1c8n2_k$());
      } else {
        tmp_0 = false;
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function differentBits(slot) {
    return bitsForSlot(2, slot);
  }
  function sameBits(slot) {
    return bitsForSlot(1, slot);
  }
  function bitsForSlot(bits, slot) {
    var realSlot = slot % 10 | 0;
    return bits << (imul(realSlot, 3) + 1 | 0);
  }
  function get_SLOTS_PER_INT() {
    return SLOTS_PER_INT;
  }
  var SLOTS_PER_INT;
  function get_BITS_PER_SLOT() {
    return BITS_PER_SLOT;
  }
  var BITS_PER_SLOT;
  function composableLambda(composer, key, tracked, block) {
    composer.startReplaceableGroup_ip860b_k$(key);
    var slot = composer.rememberedValue_4dg93v_k$();
    var tmp;
    if (slot === Companion_getInstance_1().get_Empty_i9b85g_k$()) {
      var value = new ComposableLambdaImpl(key, tracked);
      composer.updateRememberedValue_l1wh71_k$(value);
      tmp = value;
    } else {
      tmp = slot instanceof ComposableLambdaImpl ? slot : THROW_CCE();
    }
    var result = tmp;
    result.update_khwrp7_k$(block);
    composer.endReplaceableGroup_ern0ak_k$();
    return result;
  }
  function Decoy(targetName, signature) {
    this.targetName_1 = targetName;
    this.signature_1 = signature;
  }
  protoOf(Decoy).get_targetName_c4ne7v_k$ = function () {
    return this.targetName_1;
  };
  protoOf(Decoy).get_signature_q9pg5r_k$ = function () {
    return this.signature_1;
  };
  protoOf(Decoy).equals = function (other) {
    if (!(other instanceof Decoy))
      return false;
    var tmp0_other_with_cast = other instanceof Decoy ? other : THROW_CCE();
    if (!(this.targetName_1 === tmp0_other_with_cast.targetName_1))
      return false;
    if (!contentEquals(this.signature_1, tmp0_other_with_cast.signature_1))
      return false;
    return true;
  };
  protoOf(Decoy).hashCode = function () {
    var result = imul(getStringHashCode('targetName'), 127) ^ getStringHashCode(this.targetName_1);
    result = result + (imul(getStringHashCode('signature'), 127) ^ hashCode(this.signature_1)) | 0;
    return result;
  };
  protoOf(Decoy).toString = function () {
    return '@androidx.compose.runtime.internal.Decoy(targetName=' + this.targetName_1 + ', signature=' + toString(this.signature_1) + ')';
  };
  function illegalDecoyCallException(fName) {
    throw IllegalStateException_init_$Create$('Function ' + fName + ' should have been replaced by compiler.');
  }
  function DecoyImplementation(name, id) {
    this.name_1 = name;
    this.id_1 = id;
  }
  protoOf(DecoyImplementation).get_name_woqyms_k$ = function () {
    return this.name_1;
  };
  protoOf(DecoyImplementation).get_id_kntnx8_k$ = function () {
    return this.id_1;
  };
  protoOf(DecoyImplementation).equals = function (other) {
    if (!(other instanceof DecoyImplementation))
      return false;
    var tmp0_other_with_cast = other instanceof DecoyImplementation ? other : THROW_CCE();
    if (!(this.name_1 === tmp0_other_with_cast.name_1))
      return false;
    if (!this.id_1.equals(tmp0_other_with_cast.id_1))
      return false;
    return true;
  };
  protoOf(DecoyImplementation).hashCode = function () {
    var result = imul(getStringHashCode('name'), 127) ^ getStringHashCode(this.name_1);
    result = result + (imul(getStringHashCode('id'), 127) ^ this.id_1.hashCode()) | 0;
    return result;
  };
  protoOf(DecoyImplementation).toString = function () {
    return '@androidx.compose.runtime.internal.DecoyImplementation(name=' + this.name_1 + ', id=' + this.id_1.toString() + ')';
  };
  function DecoyImplementationDefaultsBitMask(bitMask) {
    this.bitMask_1 = bitMask;
  }
  protoOf(DecoyImplementationDefaultsBitMask).get_bitMask_fzols_k$ = function () {
    return this.bitMask_1;
  };
  protoOf(DecoyImplementationDefaultsBitMask).equals = function (other) {
    if (!(other instanceof DecoyImplementationDefaultsBitMask))
      return false;
    var tmp0_other_with_cast = other instanceof DecoyImplementationDefaultsBitMask ? other : THROW_CCE();
    if (!(this.bitMask_1 === tmp0_other_with_cast.bitMask_1))
      return false;
    return true;
  };
  protoOf(DecoyImplementationDefaultsBitMask).hashCode = function () {
    return imul(getStringHashCode('bitMask'), 127) ^ this.bitMask_1;
  };
  protoOf(DecoyImplementationDefaultsBitMask).toString = function () {
    return '@androidx.compose.runtime.internal.DecoyImplementationDefaultsBitMask(bitMask=' + this.bitMask_1 + ')';
  };
  function get_liveLiteralCache() {
    _init_properties_LiveLiteral_kt__y7fqb5();
    return liveLiteralCache;
  }
  var liveLiteralCache;
  function set_isLiveLiteralsEnabled(_set____db54di) {
    _init_properties_LiveLiteral_kt__y7fqb5();
    isLiveLiteralsEnabled = _set____db54di;
  }
  function get_isLiveLiteralsEnabled() {
    _init_properties_LiveLiteral_kt__y7fqb5();
    return isLiveLiteralsEnabled;
  }
  var isLiveLiteralsEnabled;
  var properties_initialized_LiveLiteral_kt_216ux9;
  function _init_properties_LiveLiteral_kt__y7fqb5() {
    if (!properties_initialized_LiveLiteral_kt_216ux9) {
      properties_initialized_LiveLiteral_kt_216ux9 = true;
      liveLiteralCache = HashMap_init_$Create$();
      isLiveLiteralsEnabled = false;
    }
  }
  function get_$stableprop_11() {
    return 8;
  }
  function Builder_4(map) {
    PersistentHashMapBuilder.call(this, map);
    this.map_2 = map;
    this.$stable_1 = 8;
  }
  protoOf(Builder_4).set_map_m0hiib_k$ = function (_set____db54di) {
    this.map_2 = _set____db54di;
  };
  protoOf(Builder_4).get_map_18j0ul_k$ = function () {
    return this.map_2;
  };
  protoOf(Builder_4).build_1k0s4u_k$ = function () {
    var tmp = this;
    var tmp_0;
    if (this.get_node_wor8sr_k$() === this.map_2.get_node_wor8sr_k$()) {
      tmp_0 = this.map_2;
    } else {
      this.set_ownership_b7pkvy_k$(new MutabilityOwnership());
      tmp_0 = new PersistentCompositionLocalHashMap(this.get_node_wor8sr_k$(), this.get_size_woubt6_k$());
    }
    tmp.map_2 = tmp_0;
    return this.map_2;
  };
  function Companion_9() {
    Companion_instance_9 = this;
    var tmp = this;
    var tmp_0 = Companion_getInstance_9().get_EMPTY_i8q41w_k$();
    tmp.Empty_1 = new PersistentCompositionLocalHashMap(tmp_0 instanceof TrieNode ? tmp_0 : THROW_CCE(), 0);
  }
  protoOf(Companion_9).get_Empty_i9b85g_k$ = function () {
    return this.Empty_1;
  };
  var Companion_instance_9;
  function Companion_getInstance_11() {
    if (Companion_instance_9 == null)
      new Companion_9();
    return Companion_instance_9;
  }
  function PersistentCompositionLocalHashMap(node, size) {
    Companion_getInstance_11();
    PersistentHashMap.call(this, node, size);
  }
  protoOf(PersistentCompositionLocalHashMap).get_entries_p20ztl_k$ = function () {
    return protoOf(PersistentHashMap).get_entries_p20ztl_k$.call(this);
  };
  protoOf(PersistentCompositionLocalHashMap).get_xygqir_k$ = function (key) {
    return read(this, key);
  };
  protoOf(PersistentCompositionLocalHashMap).builder_3thy1n_k$ = function () {
    return new Builder_4(this);
  };
  function persistentCompositionLocalHashMapOf() {
    return Companion_getInstance_11().Empty_1;
  }
  function StabilityInferred(parameters) {
    this.parameters_1 = parameters;
  }
  protoOf(StabilityInferred).get_parameters_cl4rkd_k$ = function () {
    return this.parameters_1;
  };
  protoOf(StabilityInferred).equals = function (other) {
    if (!(other instanceof StabilityInferred))
      return false;
    var tmp0_other_with_cast = other instanceof StabilityInferred ? other : THROW_CCE();
    if (!(this.parameters_1 === tmp0_other_with_cast.parameters_1))
      return false;
    return true;
  };
  protoOf(StabilityInferred).hashCode = function () {
    return imul(getStringHashCode('parameters'), 127) ^ this.parameters_1;
  };
  protoOf(StabilityInferred).toString = function () {
    return '@androidx.compose.runtime.internal.StabilityInferred(parameters=' + this.parameters_1 + ')';
  };
  function get_emptyThreadMap() {
    _init_properties_ThreadMap_kt__klyo00();
    return emptyThreadMap;
  }
  var emptyThreadMap;
  function _get_size__ddoh9m($this) {
    return $this.size_1;
  }
  function _get_keys__d97k5z($this) {
    return $this.keys_1;
  }
  function _get_values__tel787($this) {
    return $this.values_1;
  }
  function find_4($this, key) {
    var high = $this.size_1 - 1 | 0;
    var tmp0_subject = high;
    if (tmp0_subject === -1)
      return -1;
    else if (tmp0_subject === 0)
      return $this.keys_1[0].equals(key) ? 0 : $this.keys_1[0].compareTo_9jj042_k$(key) > 0 ? -2 : -1;
    var low = 0;
    while (low <= high) {
      var mid = (low + high | 0) >>> 1 | 0;
      var midVal = $this.keys_1[mid];
      var comparison = midVal.minus_mfbszm_k$(key);
      if (comparison.compareTo_9jj042_k$(new Long(0, 0)) < 0)
        low = mid + 1 | 0;
      else if (comparison.compareTo_9jj042_k$(new Long(0, 0)) > 0)
        high = mid - 1 | 0;
      else
        return mid;
    }
    return -(low + 1 | 0) | 0;
  }
  function ThreadMap(size, keys, values) {
    this.size_1 = size;
    this.keys_1 = keys;
    this.values_1 = values;
  }
  protoOf(ThreadMap).get_ugtq3c_k$ = function (key) {
    var index = find_4(this, key);
    return index >= 0 ? this.values_1[index] : null;
  };
  protoOf(ThreadMap).trySet_x1sswo_k$ = function (key, value) {
    var index = find_4(this, key);
    if (index < 0)
      return false;
    this.values_1[index] = value;
    return true;
  };
  protoOf(ThreadMap).newWith_ca7vfb_k$ = function (key, value) {
    var size = this.size_1;
    // Inline function 'kotlin.collections.count' call
    var count = 0;
    var indexedObject = this.values_1;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var element = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'androidx.compose.runtime.internal.ThreadMap.newWith.<anonymous>' call
      if (!(element == null)) {
        count = count + 1 | 0;
      }
    }
    var newSize = count + 1 | 0;
    var newKeys = longArray(newSize);
    // Inline function 'kotlin.arrayOfNulls' call
    var newValues = fillArrayVal(Array(newSize), null);
    if (newSize > 1) {
      var dest = 0;
      var source = 0;
      $l$loop: while (dest < newSize ? source < size : false) {
        var oldKey = this.keys_1[source];
        var oldValue = this.values_1[source];
        if (oldKey.compareTo_9jj042_k$(key) > 0) {
          newKeys[dest] = key;
          newValues[dest] = value;
          dest = dest + 1 | 0;
          break $l$loop;
        }
        if (!(oldValue == null)) {
          newKeys[dest] = oldKey;
          newValues[dest] = oldValue;
          dest = dest + 1 | 0;
        }
        source = source + 1 | 0;
      }
      if (source === size) {
        newKeys[newSize - 1 | 0] = key;
        newValues[newSize - 1 | 0] = value;
      } else {
        while (dest < newSize) {
          var oldKey_0 = this.keys_1[source];
          var oldValue_0 = this.values_1[source];
          if (!(oldValue_0 == null)) {
            newKeys[dest] = oldKey_0;
            newValues[dest] = oldValue_0;
            dest = dest + 1 | 0;
          }
          source = source + 1 | 0;
        }
      }
    } else {
      newKeys[0] = key;
      newValues[0] = value;
    }
    return new ThreadMap(newSize, newKeys, newValues);
  };
  var properties_initialized_ThreadMap_kt_kd2vq6;
  function _init_properties_ThreadMap_kt__klyo00() {
    if (!properties_initialized_ThreadMap_kt_kd2vq6) {
      properties_initialized_ThreadMap_kt_kd2vq6 = true;
      var tmp = longArray(0);
      // Inline function 'kotlin.emptyArray' call
      var tmp$ret$0 = [];
      emptyThreadMap = new ThreadMap(0, tmp, tmp$ret$0);
    }
  }
  function fastForEach_0(_this__u8e3s4, action) {
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    var last = _this__u8e3s4.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var item = _this__u8e3s4.get_c1px32_k$(index);
        action(item);
      }
       while (inductionVariable <= last);
  }
  function fastAny(_this__u8e3s4, predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    var last = _this__u8e3s4.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var item = _this__u8e3s4.get_c1px32_k$(index);
        // Inline function 'androidx.compose.runtime.snapshots.fastAny.<anonymous>' call
        if (predicate(item))
          return true;
      }
       while (inductionVariable <= last);
    return false;
  }
  function fastMap(_this__u8e3s4, transform) {
    // Inline function 'kotlin.contracts.contract' call
    var target = ArrayList_init_$Create$_0(_this__u8e3s4.get_size_woubt6_k$());
    // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    var last = _this__u8e3s4.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var item = _this__u8e3s4.get_c1px32_k$(index);
        // Inline function 'androidx.compose.runtime.snapshots.fastMap.<anonymous>' call
        // Inline function 'kotlin.collections.plusAssign' call
        var element = transform(item);
        target.add_utx5q5_k$(element);
      }
       while (inductionVariable <= last);
    return target;
  }
  function fastFilterIndexed(_this__u8e3s4, predicate) {
    // Inline function 'kotlin.contracts.contract' call
    var target = ArrayList_init_$Create$_0(_this__u8e3s4.get_size_woubt6_k$());
    // Inline function 'androidx.compose.runtime.snapshots.fastForEachIndexed' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    var last = _this__u8e3s4.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var item = _this__u8e3s4.get_c1px32_k$(index);
        // Inline function 'androidx.compose.runtime.snapshots.fastFilterIndexed.<anonymous>' call
        if (predicate(index, item)) {
          // Inline function 'kotlin.collections.plusAssign' call
          target.add_utx5q5_k$(item);
        }
      }
       while (inductionVariable <= last);
    return target;
  }
  function fastForEachIndexed(_this__u8e3s4, action) {
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    var last = _this__u8e3s4.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var item = _this__u8e3s4.get_c1px32_k$(index);
        action(index, item);
      }
       while (inductionVariable <= last);
  }
  function fastJoinToString(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    transform = transform === VOID ? null : transform;
    return fastJoinTo(_this__u8e3s4, StringBuilder_init_$Create$(), separator, prefix, postfix, limit, truncated, transform).toString();
  }
  function fastAll(_this__u8e3s4, predicate) {
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    var last = _this__u8e3s4.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var item = _this__u8e3s4.get_c1px32_k$(index);
        // Inline function 'androidx.compose.runtime.snapshots.fastAll.<anonymous>' call
        if (!predicate(item))
          return false;
      }
       while (inductionVariable <= last);
    return true;
  }
  function fastJoinTo(_this__u8e3s4, buffer, separator, prefix, postfix, limit, truncated, transform) {
    separator = separator === VOID ? ', ' : separator;
    prefix = prefix === VOID ? '' : prefix;
    postfix = postfix === VOID ? '' : postfix;
    limit = limit === VOID ? -1 : limit;
    truncated = truncated === VOID ? '...' : truncated;
    transform = transform === VOID ? null : transform;
    buffer.append_jgojdo_k$(prefix);
    var count = 0;
    var inductionVariable = 0;
    var last = _this__u8e3s4.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable <= last)
      $l$loop: do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var element = _this__u8e3s4.get_c1px32_k$(index);
        count = count + 1 | 0;
        if (count > 1) {
          buffer.append_jgojdo_k$(separator);
        }
        if (limit < 0 ? true : count <= limit) {
          appendElement(buffer, element, transform);
        } else
          break $l$loop;
      }
       while (inductionVariable <= last);
    if (limit >= 0 ? count > limit : false) {
      buffer.append_jgojdo_k$(truncated);
    }
    buffer.append_jgojdo_k$(postfix);
    return buffer;
  }
  function appendElement(_this__u8e3s4, element, transform) {
    if (!(transform == null)) {
      _this__u8e3s4.append_jgojdo_k$(transform(element));
    } else {
      if (element == null ? true : isCharSequence(element)) {
        _this__u8e3s4.append_jgojdo_k$(element);
      } else {
        if (element instanceof Char) {
          _this__u8e3s4.append_am5a4z_k$(element.value_1);
        } else {
          _this__u8e3s4.append_jgojdo_k$(toString_0(element));
        }
      }
    }
  }
  function fastToSet(_this__u8e3s4) {
    // Inline function 'kotlin.also' call
    var this_0 = HashSet_init_$Create$_0(_this__u8e3s4.get_size_woubt6_k$());
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.snapshots.fastToSet.<anonymous>' call
    // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    var last = _this__u8e3s4.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var item = _this__u8e3s4.get_c1px32_k$(index);
        // Inline function 'androidx.compose.runtime.snapshots.fastToSet.<anonymous>.<anonymous>' call
        this_0.add_utx5q5_k$(item);
      }
       while (inductionVariable <= last);
    return this_0;
  }
  function fastMapNotNull(_this__u8e3s4, transform) {
    // Inline function 'kotlin.contracts.contract' call
    var target = ArrayList_init_$Create$_0(_this__u8e3s4.get_size_woubt6_k$());
    // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    var last = _this__u8e3s4.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var item = _this__u8e3s4.get_c1px32_k$(index);
        // Inline function 'androidx.compose.runtime.snapshots.fastMapNotNull.<anonymous>' call
        var tmp0_safe_receiver = transform(item);
        if (tmp0_safe_receiver == null)
          null;
        else {
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          target.add_utx5q5_k$(tmp0_safe_receiver);
        }
      }
       while (inductionVariable <= last);
    return target;
  }
  function fastGroupBy(_this__u8e3s4, keySelector) {
    // Inline function 'kotlin.contracts.contract' call
    var destination = HashMap_init_$Create$_0(_this__u8e3s4.get_size_woubt6_k$());
    // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    var last = _this__u8e3s4.get_size_woubt6_k$() - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var item = _this__u8e3s4.get_c1px32_k$(index);
        // Inline function 'androidx.compose.runtime.snapshots.fastGroupBy.<anonymous>' call
        var key = keySelector(item);
        // Inline function 'kotlin.collections.getOrPut' call
        var value = destination.get_wei43m_k$(key);
        var tmp;
        if (value == null) {
          // Inline function 'androidx.compose.runtime.snapshots.fastGroupBy.<anonymous>.<anonymous>' call
          var answer = ArrayList_init_$Create$();
          destination.put_4fpzoq_k$(key, answer);
          tmp = answer;
        } else {
          tmp = value;
        }
        var list = tmp;
        list.add_utx5q5_k$(item);
      }
       while (inductionVariable <= last);
    return destination;
  }
  function get_emptyLambda() {
    _init_properties_Snapshot_kt__l6n1ng();
    return emptyLambda;
  }
  var emptyLambda;
  function get_threadSnapshot() {
    _init_properties_Snapshot_kt__l6n1ng();
    return threadSnapshot;
  }
  var threadSnapshot;
  function get_lock() {
    _init_properties_Snapshot_kt__l6n1ng();
    return lock;
  }
  var lock;
  function set_openSnapshots(_set____db54di) {
    _init_properties_Snapshot_kt__l6n1ng();
    openSnapshots = _set____db54di;
  }
  function get_openSnapshots() {
    _init_properties_Snapshot_kt__l6n1ng();
    return openSnapshots;
  }
  var openSnapshots;
  function set_nextSnapshotId(_set____db54di) {
    _init_properties_Snapshot_kt__l6n1ng();
    nextSnapshotId = _set____db54di;
  }
  function get_nextSnapshotId() {
    _init_properties_Snapshot_kt__l6n1ng();
    return nextSnapshotId;
  }
  var nextSnapshotId;
  function get_pinningTable() {
    _init_properties_Snapshot_kt__l6n1ng();
    return pinningTable;
  }
  var pinningTable;
  function get_extraStateObjects() {
    _init_properties_Snapshot_kt__l6n1ng();
    return extraStateObjects;
  }
  var extraStateObjects;
  function get_applyObservers() {
    _init_properties_Snapshot_kt__l6n1ng();
    return applyObservers;
  }
  var applyObservers;
  function get_globalWriteObservers() {
    _init_properties_Snapshot_kt__l6n1ng();
    return globalWriteObservers;
  }
  var globalWriteObservers;
  function get_currentGlobalSnapshot() {
    _init_properties_Snapshot_kt__l6n1ng();
    return currentGlobalSnapshot;
  }
  var currentGlobalSnapshot;
  function get_snapshotInitializer() {
    _init_properties_Snapshot_kt__l6n1ng();
    return snapshotInitializer;
  }
  var snapshotInitializer;
  function set_pendingApplyObserverCount(_set____db54di) {
    _init_properties_Snapshot_kt__l6n1ng();
    pendingApplyObserverCount = _set____db54di;
  }
  function get_pendingApplyObserverCount() {
    _init_properties_Snapshot_kt__l6n1ng();
    return pendingApplyObserverCount;
  }
  var pendingApplyObserverCount;
  function sam$androidx_compose_runtime_snapshots_ObserverHandle$0(function_0) {
    this.function_1 = function_0;
  }
  protoOf(sam$androidx_compose_runtime_snapshots_ObserverHandle$0).dispose_3nnxhr_k$ = function () {
    return this.function_1();
  };
  function sam$androidx_compose_runtime_snapshots_ObserverHandle$0_0(function_0) {
    this.function_1 = function_0;
  }
  protoOf(sam$androidx_compose_runtime_snapshots_ObserverHandle$0_0).dispose_3nnxhr_k$ = function () {
    return this.function_1();
  };
  function Snapshot$Companion$registerApplyObserver$lambda($observer) {
    return function () {
      // Inline function 'androidx.compose.runtime.snapshots.sync' call
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      get_lock();
      get_applyObservers().remove_cedx0m_k$($observer);
      return Unit_getInstance();
    };
  }
  function Snapshot$Companion$registerGlobalWriteObserver$lambda($observer) {
    return function () {
      // Inline function 'androidx.compose.runtime.snapshots.sync' call
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      get_lock();
      // Inline function 'androidx.compose.runtime.snapshots.Companion.registerGlobalWriteObserver.<anonymous>.<anonymous>' call
      get_globalWriteObservers().remove_cedx0m_k$($observer);
      advanceGlobalSnapshot_0();
      return Unit_getInstance();
    };
  }
  function _set_pinningTrackingHandle__yz315v($this, _set____db54di) {
    $this.pinningTrackingHandle_1 = _set____db54di;
  }
  function _get_pinningTrackingHandle__tweodl($this) {
    return $this.pinningTrackingHandle_1;
  }
  function Companion_10() {
    Companion_instance_10 = this;
  }
  protoOf(Companion_10).get_current_jwi6j4_k$ = function () {
    return currentSnapshot();
  };
  protoOf(Companion_10).get_isApplyObserverNotificationPending_q6969n_k$ = function () {
    return get_pendingApplyObserverCount().get_26vq_k$() > 0;
  };
  protoOf(Companion_10).takeSnapshot_kmo1d6_k$ = function (readObserver) {
    return currentSnapshot().takeNestedSnapshot_3v7i4t_k$(readObserver);
  };
  protoOf(Companion_10).takeSnapshot$default_m8qiwj_k$ = function (readObserver, $super) {
    readObserver = readObserver === VOID ? null : readObserver;
    return $super === VOID ? this.takeSnapshot_kmo1d6_k$(readObserver) : $super.takeSnapshot_kmo1d6_k$.call(this, readObserver);
  };
  protoOf(Companion_10).takeMutableSnapshot_ksyot9_k$ = function (readObserver, writeObserver) {
    var tmp = currentSnapshot();
    var tmp0_safe_receiver = tmp instanceof MutableSnapshot ? tmp : null;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.takeNestedMutableSnapshot_7k13is_k$(readObserver, writeObserver);
    var tmp_0;
    if (tmp1_elvis_lhs == null) {
      var message = 'Cannot create a mutable snapshot of an read-only snapshot';
      throw IllegalStateException_init_$Create$(toString(message));
    } else {
      tmp_0 = tmp1_elvis_lhs;
    }
    return tmp_0;
  };
  protoOf(Companion_10).takeMutableSnapshot$default_ldseh7_k$ = function (readObserver, writeObserver, $super) {
    readObserver = readObserver === VOID ? null : readObserver;
    writeObserver = writeObserver === VOID ? null : writeObserver;
    return $super === VOID ? this.takeMutableSnapshot_ksyot9_k$(readObserver, writeObserver) : $super.takeMutableSnapshot_ksyot9_k$.call(this, readObserver, writeObserver);
  };
  protoOf(Companion_10).global_y22wvn_k$ = function (block) {
    var previous = this.removeCurrent_wme9wr_k$();
    // Inline function 'kotlin.also' call
    var this_0 = block();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.snapshots.Companion.global.<anonymous>' call
    Companion_getInstance_12().restoreCurrent_k22xtq_k$(previous);
    return this_0;
  };
  protoOf(Companion_10).withMutableSnapshot_25w6j2_k$ = function (block) {
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.snapshots.Companion.withMutableSnapshot.<anonymous>' call
    var $this$run = this.takeMutableSnapshot$default_ldseh7_k$();
    var tmp;
    try {
      // Inline function 'kotlin.also' call
      var tmp$ret$0;
      $l$block: {
        // Inline function 'androidx.compose.runtime.snapshots.Snapshot.enter' call
        var previous = $this$run.makeCurrent_v2db9x_k$();
        try {
          tmp$ret$0 = block();
          break $l$block;
        }finally {
          $this$run.restoreCurrent_k22xtq_k$(previous);
        }
      }
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.snapshots.Companion.withMutableSnapshot.<anonymous>.<anonymous>' call
      $this$run.apply_1jdxta_k$().check_v87ho8_k$();
      tmp = tmp$ret$0;
    }finally {
      $this$run.dispose_3nnxhr_k$();
    }
    return tmp;
  };
  protoOf(Companion_10).observe_wa7jq2_k$ = function (readObserver, writeObserver, block) {
    if (!(readObserver == null) ? true : !(writeObserver == null)) {
      var currentSnapshot = get_threadSnapshot().get_26vq_k$();
      var tmp;
      var tmp_0;
      if (currentSnapshot == null) {
        tmp_0 = true;
      } else {
        tmp_0 = currentSnapshot instanceof MutableSnapshot;
      }
      if (tmp_0) {
        tmp = new TransparentObserverMutableSnapshot(currentSnapshot instanceof MutableSnapshot ? currentSnapshot : null, readObserver, writeObserver, true, false);
      } else {
        if (readObserver == null) {
          return block();
        } else {
          tmp = currentSnapshot.takeNestedSnapshot_3v7i4t_k$(readObserver);
        }
      }
      var snapshot = tmp;
      try {
        var tmp$ret$0;
        $l$block: {
          // Inline function 'androidx.compose.runtime.snapshots.Snapshot.enter' call
          var previous = snapshot.makeCurrent_v2db9x_k$();
          try {
            tmp$ret$0 = block();
            break $l$block;
          }finally {
            snapshot.restoreCurrent_k22xtq_k$(previous);
          }
        }
        return tmp$ret$0;
      }finally {
        snapshot.dispose_3nnxhr_k$();
      }
    } else
      return block();
  };
  protoOf(Companion_10).observe$default_y65ho0_k$ = function (readObserver, writeObserver, block, $super) {
    readObserver = readObserver === VOID ? null : readObserver;
    writeObserver = writeObserver === VOID ? null : writeObserver;
    return $super === VOID ? this.observe_wa7jq2_k$(readObserver, writeObserver, block) : $super.observe_wa7jq2_k$.call(this, readObserver, writeObserver, block);
  };
  protoOf(Companion_10).createNonObservableSnapshot_p8njg8_k$ = function () {
    return createTransparentSnapshotWithNoParentReadObserver(get_threadSnapshot().get_26vq_k$());
  };
  protoOf(Companion_10).withoutReadObservation_shajm0_k$ = function (block) {
    // Inline function 'kotlin.contracts.contract' call
    var snapshot = this.createNonObservableSnapshot_p8njg8_k$();
    try {
      var tmp$ret$0;
      $l$block: {
        // Inline function 'androidx.compose.runtime.snapshots.Snapshot.enter' call
        var previous = snapshot.makeCurrent_v2db9x_k$();
        try {
          tmp$ret$0 = block();
          break $l$block;
        }finally {
          snapshot.restoreCurrent_k22xtq_k$(previous);
        }
      }
      return tmp$ret$0;
    }finally {
      snapshot.dispose_3nnxhr_k$();
    }
  };
  protoOf(Companion_10).registerApplyObserver_jtfzrk_k$ = function (observer) {
    advanceGlobalSnapshot(get_emptyLambda());
    // Inline function 'androidx.compose.runtime.snapshots.sync' call
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    get_lock();
    // Inline function 'androidx.compose.runtime.snapshots.Companion.registerApplyObserver.<anonymous>' call
    get_applyObservers().add_utx5q5_k$(observer);
    var tmp = Snapshot$Companion$registerApplyObserver$lambda(observer);
    return new sam$androidx_compose_runtime_snapshots_ObserverHandle$0(tmp);
  };
  protoOf(Companion_10).registerGlobalWriteObserver_cr7nn5_k$ = function (observer) {
    // Inline function 'androidx.compose.runtime.snapshots.sync' call
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    get_lock();
    // Inline function 'androidx.compose.runtime.snapshots.Companion.registerGlobalWriteObserver.<anonymous>' call
    get_globalWriteObservers().add_utx5q5_k$(observer);
    advanceGlobalSnapshot_0();
    var tmp = Snapshot$Companion$registerGlobalWriteObserver$lambda(observer);
    return new sam$androidx_compose_runtime_snapshots_ObserverHandle$0_0(tmp);
  };
  protoOf(Companion_10).notifyObjectsInitialized_vzzywp_k$ = function () {
    return currentSnapshot().notifyObjectsInitialized_vzzywp_k$();
  };
  protoOf(Companion_10).sendApplyNotifications_z1qgb2_k$ = function () {
    // Inline function 'androidx.compose.runtime.snapshots.sync' call
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    get_lock();
    // Inline function 'androidx.compose.runtime.snapshots.Companion.sendApplyNotifications.<anonymous>' call
    var tmp0_safe_receiver = get_currentGlobalSnapshot().get_26vq_k$().get_modified_t1pq4y_k$();
    var changes = (tmp0_safe_receiver == null ? null : tmp0_safe_receiver.isNotEmpty_cjxbwk_k$()) === true;
    if (changes) {
      advanceGlobalSnapshot_0();
    }
  };
  protoOf(Companion_10).openSnapshotCount_qoq7i7_k$ = function () {
    return toList(get_openSnapshots()).get_size_woubt6_k$();
  };
  protoOf(Companion_10).removeCurrent_wme9wr_k$ = function () {
    var previous = get_threadSnapshot().get_26vq_k$();
    if (!(previous == null)) {
      get_threadSnapshot().set_bjwkek_k$(null);
    }
    return previous;
  };
  protoOf(Companion_10).restoreCurrent_k22xtq_k$ = function (previous) {
    if (!(previous == null)) {
      get_threadSnapshot().set_bjwkek_k$(previous);
    }
  };
  var Companion_instance_10;
  function Companion_getInstance_12() {
    if (Companion_instance_10 == null)
      new Companion_10();
    return Companion_instance_10;
  }
  function get_$stableprop_12() {
    return 8;
  }
  function Snapshot(id, invalid) {
    Companion_getInstance_12();
    this.invalid_1 = invalid;
    this.id_1 = id;
    this.disposed_1 = false;
    this.pinningTrackingHandle_1 = !(id === 0) ? trackPinning(id, this.get_invalid_xocxse_k$()) : -1;
    this.$stable_1 = 8;
  }
  protoOf(Snapshot).set_invalid_amdbx0_k$ = function (_set____db54di) {
    this.invalid_1 = _set____db54di;
  };
  protoOf(Snapshot).get_invalid_xocxse_k$ = function () {
    return this.invalid_1;
  };
  protoOf(Snapshot).set_id_kpjn9s_k$ = function (_set____db54di) {
    this.id_1 = _set____db54di;
  };
  protoOf(Snapshot).get_id_kntnx8_k$ = function () {
    return this.id_1;
  };
  protoOf(Snapshot).set_writeCount_8sxchx_k$ = function (value) {
    // Inline function 'kotlin.error' call
    var message = 'Updating write count is not supported for this snapshot';
    throw IllegalStateException_init_$Create$(toString(message));
  };
  protoOf(Snapshot).get_writeCount_v4g8hz_k$ = function () {
    return 0;
  };
  protoOf(Snapshot).dispose_3nnxhr_k$ = function () {
    this.disposed_1 = true;
    // Inline function 'androidx.compose.runtime.snapshots.sync' call
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    get_lock();
    this.releasePinnedSnapshotLocked_rt8hq5_k$();
  };
  protoOf(Snapshot).takeNestedSnapshot$default_e6yqh8_k$ = function (readObserver, $super) {
    readObserver = readObserver === VOID ? null : readObserver;
    return $super === VOID ? this.takeNestedSnapshot_3v7i4t_k$(readObserver) : $super.takeNestedSnapshot_3v7i4t_k$.call(this, readObserver);
  };
  protoOf(Snapshot).enter_sjvpe_k$ = function (block) {
    var previous = this.makeCurrent_v2db9x_k$();
    try {
      return block();
    }finally {
      this.restoreCurrent_k22xtq_k$(previous);
    }
  };
  protoOf(Snapshot).makeCurrent_v2db9x_k$ = function () {
    var previous = get_threadSnapshot().get_26vq_k$();
    get_threadSnapshot().set_bjwkek_k$(this);
    return previous;
  };
  protoOf(Snapshot).restoreCurrent_k22xtq_k$ = function (snapshot) {
    get_threadSnapshot().set_bjwkek_k$(snapshot);
  };
  protoOf(Snapshot).unsafeEnter_hz12r2_k$ = function () {
    return this.makeCurrent_v2db9x_k$();
  };
  protoOf(Snapshot).unsafeLeave_w9bu70_k$ = function (oldSnapshot) {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(get_threadSnapshot().get_26vq_k$() === this)) {
      // Inline function 'androidx.compose.runtime.snapshots.Snapshot.unsafeLeave.<anonymous>' call
      var message = 'Cannot leave snapshot; ' + this + ' is not the current snapshot';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    this.restoreCurrent_k22xtq_k$(oldSnapshot);
  };
  protoOf(Snapshot).set_disposed_hv706r_k$ = function (_set____db54di) {
    this.disposed_1 = _set____db54di;
  };
  protoOf(Snapshot).get_disposed_r356he_k$ = function () {
    return this.disposed_1;
  };
  protoOf(Snapshot).get_isPinned_y15sh7_k$ = function () {
    return this.pinningTrackingHandle_1 >= 0;
  };
  protoOf(Snapshot).closeAndReleasePinning_ma5u27_k$ = function () {
    // Inline function 'androidx.compose.runtime.snapshots.sync' call
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    get_lock();
    this.closeLocked_nkxzrm_k$();
    this.releasePinnedSnapshotsForCloseLocked_pktip3_k$();
  };
  protoOf(Snapshot).closeLocked_nkxzrm_k$ = function () {
    set_openSnapshots(get_openSnapshots().clear_yx1ndh_k$(this.get_id_kntnx8_k$()));
  };
  protoOf(Snapshot).releasePinnedSnapshotsForCloseLocked_pktip3_k$ = function () {
    this.releasePinnedSnapshotLocked_rt8hq5_k$();
  };
  protoOf(Snapshot).validateNotDisposed_qx66r2_k$ = function () {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!this.disposed_1) {
      // Inline function 'androidx.compose.runtime.snapshots.Snapshot.validateNotDisposed.<anonymous>' call
      var message = 'Cannot use a disposed snapshot';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
  };
  protoOf(Snapshot).releasePinnedSnapshotLocked_rt8hq5_k$ = function () {
    if (this.pinningTrackingHandle_1 >= 0) {
      releasePinningLocked(this.pinningTrackingHandle_1);
      this.pinningTrackingHandle_1 = -1;
    }
  };
  protoOf(Snapshot).takeoverPinnedSnapshot_clnnnb_k$ = function () {
    // Inline function 'kotlin.also' call
    var this_0 = this.pinningTrackingHandle_1;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.snapshots.Snapshot.takeoverPinnedSnapshot.<anonymous>' call
    this.pinningTrackingHandle_1 = -1;
    return this_0;
  };
  function get_INVALID_SNAPSHOT() {
    return INVALID_SNAPSHOT;
  }
  var INVALID_SNAPSHOT;
  function StateObject() {
  }
  function GlobalSnapshot$_init_$lambda_36kgl8($it) {
    return function (state) {
      var this_0 = $it;
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable = 0;
      var last = this_0.get_size_woubt6_k$() - 1 | 0;
      var tmp;
      if (inductionVariable <= last) {
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var item = this_0.get_c1px32_k$(index);
          // Inline function 'androidx.compose.runtime.snapshots.GlobalSnapshot.<init>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
          item(state);
        }
         while (inductionVariable <= last);
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function GlobalSnapshot$takeNestedSnapshot$lambda($readObserver) {
    return function (invalid) {
      // Inline function 'androidx.compose.runtime.snapshots.sync' call
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      get_lock();
      // Inline function 'androidx.compose.runtime.snapshots.GlobalSnapshot.takeNestedSnapshot.<anonymous>.<anonymous>' call
      var tmp0 = get_nextSnapshotId();
      set_nextSnapshotId(tmp0 + 1 | 0);
      return new ReadonlySnapshot(tmp0, invalid, $readObserver);
    };
  }
  function GlobalSnapshot$takeNestedMutableSnapshot$lambda($readObserver, $writeObserver) {
    return function (invalid) {
      // Inline function 'androidx.compose.runtime.snapshots.sync' call
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      get_lock();
      // Inline function 'androidx.compose.runtime.snapshots.GlobalSnapshot.takeNestedMutableSnapshot.<anonymous>.<anonymous>' call
      var tmp0 = get_nextSnapshotId();
      set_nextSnapshotId(tmp0 + 1 | 0);
      return new MutableSnapshot(tmp0, invalid, $readObserver, $writeObserver);
    };
  }
  function GlobalSnapshot(id, invalid) {
    // Inline function 'androidx.compose.runtime.snapshots.sync' call
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    get_lock();
    // Inline function 'androidx.compose.runtime.snapshots.GlobalSnapshot.<init>.<anonymous>' call
    var tmp;
    // Inline function 'kotlin.collections.isNotEmpty' call
    if (!get_globalWriteObservers().isEmpty_y1axqb_k$()) {
      tmp = toMutableList(get_globalWriteObservers());
    } else {
      tmp = null;
    }
    var tmp0_safe_receiver = tmp;
    var tmp_0;
    if (tmp0_safe_receiver == null) {
      tmp_0 = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.snapshots.GlobalSnapshot.<init>.<anonymous>.<anonymous>' call
      var tmp0_elvis_lhs = singleOrNull(tmp0_safe_receiver);
      var tmp_1;
      if (tmp0_elvis_lhs == null) {
        tmp_1 = GlobalSnapshot$_init_$lambda_36kgl8(tmp0_safe_receiver);
      } else {
        tmp_1 = tmp0_elvis_lhs;
      }
      tmp_0 = tmp_1;
    }
    var tmp$ret$6 = tmp_0;
    MutableSnapshot.call(this, id, invalid, null, tmp$ret$6);
  }
  protoOf(GlobalSnapshot).takeNestedSnapshot_3v7i4t_k$ = function (readObserver) {
    return takeNewSnapshot(GlobalSnapshot$takeNestedSnapshot$lambda(readObserver));
  };
  protoOf(GlobalSnapshot).takeNestedMutableSnapshot_7k13is_k$ = function (readObserver, writeObserver) {
    return takeNewSnapshot(GlobalSnapshot$takeNestedMutableSnapshot$lambda(readObserver, writeObserver));
  };
  protoOf(GlobalSnapshot).notifyObjectsInitialized_vzzywp_k$ = function () {
    advanceGlobalSnapshot_0();
  };
  protoOf(GlobalSnapshot).nestedDeactivated_e5euxh_k$ = function (snapshot) {
    unsupported();
  };
  protoOf(GlobalSnapshot).nestedDeactivated_e1b317_k$ = function (snapshot) {
    return this.nestedDeactivated_e5euxh_k$(snapshot);
  };
  protoOf(GlobalSnapshot).nestedActivated_d2vweu_k$ = function (snapshot) {
    unsupported();
  };
  protoOf(GlobalSnapshot).nestedActivated_bn9nq_k$ = function (snapshot) {
    return this.nestedActivated_d2vweu_k$(snapshot);
  };
  protoOf(GlobalSnapshot).apply_1jdxta_k$ = function () {
    var message = 'Cannot apply the global snapshot directly. Call Snapshot.advanceGlobalSnapshot';
    throw IllegalStateException_init_$Create$(toString(message));
  };
  protoOf(GlobalSnapshot).dispose_3nnxhr_k$ = function () {
    // Inline function 'androidx.compose.runtime.snapshots.sync' call
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    get_lock();
    this.releasePinnedSnapshotLocked_rt8hq5_k$();
  };
  function sync(block) {
    _init_properties_Snapshot_kt__l6n1ng();
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    get_lock();
    return block();
  }
  function trackPinning(id, invalid) {
    _init_properties_Snapshot_kt__l6n1ng();
    var pinned = invalid.lowest_clhjmi_k$(id);
    // Inline function 'androidx.compose.runtime.snapshots.sync' call
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    get_lock();
    // Inline function 'androidx.compose.runtime.snapshots.trackPinning.<anonymous>' call
    return get_pinningTable().add_lnluon_k$(pinned);
  }
  function releasePinningLocked(handle) {
    _init_properties_Snapshot_kt__l6n1ng();
    get_pinningTable().remove_v58o70_k$(handle);
  }
  function currentSnapshot() {
    _init_properties_Snapshot_kt__l6n1ng();
    var tmp0_elvis_lhs = get_threadSnapshot().get_26vq_k$();
    return tmp0_elvis_lhs == null ? get_currentGlobalSnapshot().get_26vq_k$() : tmp0_elvis_lhs;
  }
  function _get_EmptyIntArray__dus24a($this) {
    return $this.EmptyIntArray_1;
  }
  function validateNotApplied($this) {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!$this.applied_1) {
      // Inline function 'androidx.compose.runtime.snapshots.MutableSnapshot.validateNotApplied.<anonymous>' call
      var message = 'Unsupported operation on a snapshot that has been applied';
      throw IllegalStateException_init_$Create$(toString(message));
    }
  }
  function validateNotAppliedOrPinned($this) {
    // Inline function 'kotlin.check' call
    var tmp;
    if (!$this.applied_1) {
      tmp = true;
    } else {
      // Inline function 'androidx.compose.runtime.snapshots.Snapshot.isPinned' call
      tmp = $this.pinningTrackingHandle_1 >= 0;
    }
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp) {
      // Inline function 'androidx.compose.runtime.snapshots.MutableSnapshot.validateNotAppliedOrPinned.<anonymous>' call
      var message = 'Unsupported operation on a disposed or applied snapshot';
      throw IllegalStateException_init_$Create$(toString(message));
    }
  }
  function abandon($this) {
    var modified = $this.get_modified_t1pq4y_k$();
    if (!(modified == null)) {
      validateNotApplied($this);
      $this.set_modified_5mrh5g_k$(null);
      var id = $this.get_id_kntnx8_k$();
      // Inline function 'androidx.compose.runtime.collection.IdentityArraySet.fastForEach' call
      // Inline function 'kotlin.contracts.contract' call
      var values = modified.get_values_ksazhn_k$();
      var inductionVariable = 0;
      var last = modified.get_size_woubt6_k$();
      if (inductionVariable < last)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          // Inline function 'androidx.compose.runtime.snapshots.MutableSnapshot.abandon.<anonymous>' call
          var tmp = values[i];
          var current = (!(tmp == null) ? tmp : THROW_CCE()).get_firstStateRecord_49tq6d_k$();
          while (!(current == null)) {
            if (current.snapshotId_1 === id ? true : contains($this.previousIds_1, current.snapshotId_1)) {
              current.snapshotId_1 = 0;
            }
            current = current.next_1;
          }
        }
         while (inductionVariable < last);
    }
    $this.closeAndReleasePinning_ma5u27_k$();
  }
  function releasePreviouslyPinnedSnapshotsLocked($this) {
    var inductionVariable = 0;
    var last = $this.previousPinnedSnapshots_1.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        releasePinningLocked($this.previousPinnedSnapshots_1[index]);
      }
       while (inductionVariable <= last);
  }
  function _set_snapshots__1oii5y($this, _set____db54di) {
    $this.snapshots_1 = _set____db54di;
  }
  function _get_snapshots__uzcyki($this) {
    return $this.snapshots_1;
  }
  function Companion_11() {
    Companion_instance_11 = this;
    this.EmptyIntArray_1 = new Int32Array(0);
  }
  var Companion_instance_11;
  function Companion_getInstance_13() {
    if (Companion_instance_11 == null)
      new Companion_11();
    return Companion_instance_11;
  }
  function get_$stableprop_13() {
    return 8;
  }
  function MutableSnapshot(id, invalid, readObserver, writeObserver) {
    Companion_getInstance_13();
    Snapshot.call(this, id, invalid);
    this.readObserver_1 = readObserver;
    this.writeObserver_1 = writeObserver;
    this.writeCount_1 = 0;
    this.modified_1 = null;
    this.merged_1 = null;
    this.previousIds_1 = Companion_getInstance_14().get_EMPTY_i8q41w_k$();
    this.previousPinnedSnapshots_1 = Companion_getInstance_13().EmptyIntArray_1;
    this.snapshots_1 = 1;
    this.applied_1 = false;
    this.$stable_2 = 8;
  }
  protoOf(MutableSnapshot).get_readObserver_dmf4mj_k$ = function () {
    return this.readObserver_1;
  };
  protoOf(MutableSnapshot).get_writeObserver_pzhf10_k$ = function () {
    return this.writeObserver_1;
  };
  protoOf(MutableSnapshot).hasPendingChanges_130292_k$ = function () {
    var tmp0_safe_receiver = this.get_modified_t1pq4y_k$();
    return (tmp0_safe_receiver == null ? null : tmp0_safe_receiver.isNotEmpty_cjxbwk_k$()) === true;
  };
  protoOf(MutableSnapshot).takeNestedMutableSnapshot_7k13is_k$ = function (readObserver, writeObserver) {
    this.validateNotDisposed_qx66r2_k$();
    validateNotAppliedOrPinned(this);
    // Inline function 'androidx.compose.runtime.snapshots.MutableSnapshot.advance' call
    this.recordPrevious_dqy128_k$(this.get_id_kntnx8_k$());
    // Inline function 'kotlin.also' call
    // Inline function 'androidx.compose.runtime.snapshots.MutableSnapshot.takeNestedMutableSnapshot.<anonymous>' call
    // Inline function 'androidx.compose.runtime.snapshots.sync' call
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    get_lock();
    // Inline function 'androidx.compose.runtime.snapshots.MutableSnapshot.takeNestedMutableSnapshot.<anonymous>.<anonymous>' call
    var tmp0 = get_nextSnapshotId();
    set_nextSnapshotId(tmp0 + 1 | 0);
    var newId = tmp0;
    set_openSnapshots(get_openSnapshots().set_uznzxy_k$(newId));
    var currentInvalid = this.get_invalid_xocxse_k$();
    this.set_invalid_amdbx0_k$(currentInvalid.set_uznzxy_k$(newId));
    var this_0 = new NestedMutableSnapshot(newId, addRange(currentInvalid, this.get_id_kntnx8_k$() + 1 | 0, newId), mergedReadObserver(readObserver, this.get_readObserver_dmf4mj_k$()), mergedWriteObserver(writeObserver, this.get_writeObserver_pzhf10_k$()), this);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.snapshots.MutableSnapshot.advance.<anonymous>' call
    if (!this.applied_1 ? !this.disposed_1 : false) {
      var previousId = this.get_id_kntnx8_k$();
      // Inline function 'androidx.compose.runtime.snapshots.sync' call
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      get_lock();
      var tmp0_0 = get_nextSnapshotId();
      set_nextSnapshotId(tmp0_0 + 1 | 0);
      this.set_id_kpjn9s_k$(tmp0_0);
      set_openSnapshots(get_openSnapshots().set_uznzxy_k$(this.get_id_kntnx8_k$()));
      this.set_invalid_amdbx0_k$(addRange(this.get_invalid_xocxse_k$(), previousId + 1 | 0, this.get_id_kntnx8_k$()));
    }
    return this_0;
  };
  protoOf(MutableSnapshot).takeNestedMutableSnapshot$default_6yuoc9_k$ = function (readObserver, writeObserver, $super) {
    readObserver = readObserver === VOID ? null : readObserver;
    writeObserver = writeObserver === VOID ? null : writeObserver;
    return $super === VOID ? this.takeNestedMutableSnapshot_7k13is_k$(readObserver, writeObserver) : $super.takeNestedMutableSnapshot_7k13is_k$.call(this, readObserver, writeObserver);
  };
  protoOf(MutableSnapshot).apply_1jdxta_k$ = function () {
    var modified = this.get_modified_t1pq4y_k$();
    var optimisticMerges_0 = !(modified == null) ? optimisticMerges(get_currentGlobalSnapshot().get_26vq_k$(), this, get_openSnapshots().clear_yx1ndh_k$(get_currentGlobalSnapshot().get_26vq_k$().get_id_kntnx8_k$())) : null;
    var observers = emptyList();
    var globalModified = null;
    // Inline function 'androidx.compose.runtime.snapshots.sync' call
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    get_lock();
    validateOpen(this);
    var tmp;
    if (modified == null ? true : modified.get_size_woubt6_k$() === 0) {
      this.closeLocked_nkxzrm_k$();
      var previousGlobalSnapshot = get_currentGlobalSnapshot().get_26vq_k$();
      takeNewGlobalSnapshot(previousGlobalSnapshot, get_emptyLambda());
      var previousModified = previousGlobalSnapshot.get_modified_t1pq4y_k$();
      var tmp_0;
      // Inline function 'kotlin.collections.isNullOrEmpty' call
      // Inline function 'kotlin.contracts.contract' call
      if (!(previousModified == null ? true : previousModified.isEmpty_y1axqb_k$())) {
        observers = toMutableList(get_applyObservers());
        globalModified = previousModified;
        tmp_0 = Unit_getInstance();
      }
      tmp = tmp_0;
    } else {
      var previousGlobalSnapshot_0 = get_currentGlobalSnapshot().get_26vq_k$();
      var result = this.innerApplyLocked_fcctp5_k$(get_nextSnapshotId(), optimisticMerges_0, get_openSnapshots().clear_yx1ndh_k$(previousGlobalSnapshot_0.get_id_kntnx8_k$()));
      if (!equals(result, Success_getInstance()))
        return result;
      this.closeLocked_nkxzrm_k$();
      takeNewGlobalSnapshot(previousGlobalSnapshot_0, get_emptyLambda());
      var previousModified_0 = previousGlobalSnapshot_0.get_modified_t1pq4y_k$();
      this.set_modified_5mrh5g_k$(null);
      previousGlobalSnapshot_0.set_modified_5mrh5g_k$(null);
      observers = toMutableList(get_applyObservers());
      globalModified = previousModified_0;
      tmp = Unit_getInstance();
    }
    this.applied_1 = true;
    // Inline function 'kotlin.collections.isNullOrEmpty' call
    var this_0 = globalModified;
    // Inline function 'kotlin.contracts.contract' call
    if (!(this_0 == null ? true : this_0.isEmpty_y1axqb_k$())) {
      var nonNullGlobalModified = ensureNotNull(globalModified);
      // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
      var this_1 = observers;
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable = 0;
      var last = this_1.get_size_woubt6_k$() - 1 | 0;
      if (inductionVariable <= last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var item = this_1.get_c1px32_k$(index);
          // Inline function 'androidx.compose.runtime.snapshots.MutableSnapshot.apply.<anonymous>' call
          item(nonNullGlobalModified, this);
        }
         while (inductionVariable <= last);
    }
    // Inline function 'kotlin.collections.isNullOrEmpty' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(modified == null ? true : modified.isEmpty_y1axqb_k$())) {
      // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
      var this_2 = observers;
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable_0 = 0;
      var last_0 = this_2.get_size_woubt6_k$() - 1 | 0;
      if (inductionVariable_0 <= last_0)
        do {
          var index_0 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + 1 | 0;
          var item_0 = this_2.get_c1px32_k$(index_0);
          // Inline function 'androidx.compose.runtime.snapshots.MutableSnapshot.apply.<anonymous>' call
          item_0(modified, this);
        }
         while (inductionVariable_0 <= last_0);
    }
    // Inline function 'androidx.compose.runtime.snapshots.sync' call
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    get_lock();
    this.releasePinnedSnapshotsForCloseLocked_pktip3_k$();
    checkAndOverwriteUnusedRecordsLocked();
    var tmp0_safe_receiver = globalModified;
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'androidx.compose.runtime.collection.IdentityArraySet.fastForEach' call
      // Inline function 'kotlin.contracts.contract' call
      var values = tmp0_safe_receiver.get_values_ksazhn_k$();
      var inductionVariable_1 = 0;
      var last_1 = tmp0_safe_receiver.get_size_woubt6_k$();
      if (inductionVariable_1 < last_1)
        do {
          var i = inductionVariable_1;
          inductionVariable_1 = inductionVariable_1 + 1 | 0;
          // Inline function 'androidx.compose.runtime.snapshots.MutableSnapshot.apply.<anonymous>.<anonymous>' call
          var tmp_1 = values[i];
          var it = !(tmp_1 == null) ? tmp_1 : THROW_CCE();
          processForUnusedRecordsLocked(it);
        }
         while (inductionVariable_1 < last_1);
    }
    if (modified == null)
      null;
    else {
      // Inline function 'androidx.compose.runtime.collection.IdentityArraySet.fastForEach' call
      // Inline function 'kotlin.contracts.contract' call
      var values_0 = modified.get_values_ksazhn_k$();
      var inductionVariable_2 = 0;
      var last_2 = modified.get_size_woubt6_k$();
      if (inductionVariable_2 < last_2)
        do {
          var i_0 = inductionVariable_2;
          inductionVariable_2 = inductionVariable_2 + 1 | 0;
          // Inline function 'androidx.compose.runtime.snapshots.MutableSnapshot.apply.<anonymous>.<anonymous>' call
          var tmp_2 = values_0[i_0];
          var it_0 = !(tmp_2 == null) ? tmp_2 : THROW_CCE();
          processForUnusedRecordsLocked(it_0);
        }
         while (inductionVariable_2 < last_2);
    }
    var tmp2_safe_receiver = this.merged_1;
    if (tmp2_safe_receiver == null)
      null;
    else {
      // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable_3 = 0;
      var last_3 = tmp2_safe_receiver.get_size_woubt6_k$() - 1 | 0;
      if (inductionVariable_3 <= last_3)
        do {
          var index_1 = inductionVariable_3;
          inductionVariable_3 = inductionVariable_3 + 1 | 0;
          var item_1 = tmp2_safe_receiver.get_c1px32_k$(index_1);
          // Inline function 'androidx.compose.runtime.snapshots.MutableSnapshot.apply.<anonymous>.<anonymous>' call
          processForUnusedRecordsLocked(item_1);
        }
         while (inductionVariable_3 <= last_3);
    }
    this.merged_1 = null;
    return Success_getInstance();
  };
  protoOf(MutableSnapshot).get_readOnly_ovku97_k$ = function () {
    return false;
  };
  protoOf(MutableSnapshot).get_root_wott0r_k$ = function () {
    return this;
  };
  protoOf(MutableSnapshot).dispose_3nnxhr_k$ = function () {
    if (!this.disposed_1) {
      protoOf(Snapshot).dispose_3nnxhr_k$.call(this);
      this.nestedDeactivated_e1b317_k$(this);
    }
  };
  protoOf(MutableSnapshot).takeNestedSnapshot_3v7i4t_k$ = function (readObserver) {
    this.validateNotDisposed_qx66r2_k$();
    validateNotAppliedOrPinned(this);
    var previousId = this.get_id_kntnx8_k$();
    // Inline function 'androidx.compose.runtime.snapshots.MutableSnapshot.advance' call
    this.recordPrevious_dqy128_k$(this.get_id_kntnx8_k$());
    // Inline function 'kotlin.also' call
    // Inline function 'androidx.compose.runtime.snapshots.MutableSnapshot.takeNestedSnapshot.<anonymous>' call
    // Inline function 'androidx.compose.runtime.snapshots.sync' call
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    get_lock();
    // Inline function 'androidx.compose.runtime.snapshots.MutableSnapshot.takeNestedSnapshot.<anonymous>.<anonymous>' call
    var tmp0 = get_nextSnapshotId();
    set_nextSnapshotId(tmp0 + 1 | 0);
    var readonlyId = tmp0;
    set_openSnapshots(get_openSnapshots().set_uznzxy_k$(readonlyId));
    var this_0 = new NestedReadonlySnapshot(readonlyId, addRange(this.get_invalid_xocxse_k$(), previousId + 1 | 0, readonlyId), readObserver, this);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.snapshots.MutableSnapshot.advance.<anonymous>' call
    if (!this.applied_1 ? !this.disposed_1 : false) {
      var previousId_0 = this.get_id_kntnx8_k$();
      // Inline function 'androidx.compose.runtime.snapshots.sync' call
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      get_lock();
      var tmp0_0 = get_nextSnapshotId();
      set_nextSnapshotId(tmp0_0 + 1 | 0);
      this.set_id_kpjn9s_k$(tmp0_0);
      set_openSnapshots(get_openSnapshots().set_uznzxy_k$(this.get_id_kntnx8_k$()));
      this.set_invalid_amdbx0_k$(addRange(this.get_invalid_xocxse_k$(), previousId_0 + 1 | 0, this.get_id_kntnx8_k$()));
    }
    return this_0;
  };
  protoOf(MutableSnapshot).nestedActivated_bn9nq_k$ = function (snapshot) {
    this.snapshots_1 = this.snapshots_1 + 1 | 0;
  };
  protoOf(MutableSnapshot).nestedDeactivated_e1b317_k$ = function (snapshot) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(this.snapshots_1 > 0)) {
      // Inline function 'kotlin.require.<anonymous>' call
      var message = 'Failed requirement.';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    this.snapshots_1 = this.snapshots_1 - 1 | 0;
    if (this.snapshots_1 === 0) {
      if (!this.applied_1) {
        abandon(this);
      }
    }
  };
  protoOf(MutableSnapshot).notifyObjectsInitialized_vzzywp_k$ = function () {
    if (this.applied_1 ? true : this.disposed_1)
      return Unit_getInstance();
    this.advance_2x11v6_k$();
  };
  protoOf(MutableSnapshot).closeLocked_nkxzrm_k$ = function () {
    set_openSnapshots(get_openSnapshots().clear_yx1ndh_k$(this.get_id_kntnx8_k$()).andNot_eiw98e_k$(this.previousIds_1));
  };
  protoOf(MutableSnapshot).releasePinnedSnapshotsForCloseLocked_pktip3_k$ = function () {
    releasePreviouslyPinnedSnapshotsLocked(this);
    protoOf(Snapshot).releasePinnedSnapshotsForCloseLocked_pktip3_k$.call(this);
  };
  protoOf(MutableSnapshot).innerApplyLocked_fcctp5_k$ = function (snapshotId, optimisticMerges, invalidSnapshots) {
    var mergedRecords = null;
    var start = this.get_invalid_xocxse_k$().set_uznzxy_k$(this.get_id_kntnx8_k$()).or_qlp1h7_k$(this.previousIds_1);
    var modified = ensureNotNull(this.get_modified_t1pq4y_k$());
    var statesToRemove = null;
    // Inline function 'androidx.compose.runtime.collection.IdentityArraySet.fastForEach' call
    // Inline function 'kotlin.contracts.contract' call
    var values = modified.get_values_ksazhn_k$();
    var inductionVariable = 0;
    var last = modified.get_size_woubt6_k$();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        $l$block_0: {
          // Inline function 'androidx.compose.runtime.snapshots.MutableSnapshot.innerApplyLocked.<anonymous>' call
          var tmp = values[i];
          var state = !(tmp == null) ? tmp : THROW_CCE();
          var first = state.get_firstStateRecord_49tq6d_k$();
          var tmp0_elvis_lhs = readable(first, snapshotId, invalidSnapshots);
          var tmp_0;
          if (tmp0_elvis_lhs == null) {
            break $l$block_0;
          } else {
            tmp_0 = tmp0_elvis_lhs;
          }
          var current = tmp_0;
          var tmp1_elvis_lhs = readable(first, this.get_id_kntnx8_k$(), start);
          var tmp_1;
          if (tmp1_elvis_lhs == null) {
            break $l$block_0;
          } else {
            tmp_1 = tmp1_elvis_lhs;
          }
          var previous = tmp_1;
          if (!equals(current, previous)) {
            var tmp2_elvis_lhs = readable(first, this.get_id_kntnx8_k$(), this.get_invalid_xocxse_k$());
            var tmp_2;
            if (tmp2_elvis_lhs == null) {
              readError();
            } else {
              tmp_2 = tmp2_elvis_lhs;
            }
            var applied = tmp_2;
            var tmp4_elvis_lhs = optimisticMerges == null ? null : optimisticMerges.get_wei43m_k$(current);
            var tmp_3;
            if (tmp4_elvis_lhs == null) {
              // Inline function 'kotlin.run' call
              // Inline function 'kotlin.contracts.contract' call
              // Inline function 'androidx.compose.runtime.snapshots.MutableSnapshot.innerApplyLocked.<anonymous>.<anonymous>' call
              tmp_3 = state.mergeRecords_7xjkji_k$(previous, current, applied);
            } else {
              tmp_3 = tmp4_elvis_lhs;
            }
            var merged = tmp_3;
            if (merged == null)
              return new Failure(this);
            else if (!equals(merged, applied))
              if (equals(merged, current)) {
                var tmp6_elvis_lhs = mergedRecords;
                var tmp_4;
                if (tmp6_elvis_lhs == null) {
                  // Inline function 'kotlin.also' call
                  // Inline function 'kotlin.collections.mutableListOf' call
                  var this_0 = ArrayList_init_$Create$();
                  // Inline function 'kotlin.contracts.contract' call
                  // Inline function 'androidx.compose.runtime.snapshots.MutableSnapshot.innerApplyLocked.<anonymous>.<anonymous>' call
                  mergedRecords = this_0;
                  tmp_4 = this_0;
                } else {
                  tmp_4 = tmp6_elvis_lhs;
                }
                tmp_4.add_utx5q5_k$(to(state, current.create_md4cuc_k$()));
                var tmp7_elvis_lhs = statesToRemove;
                var tmp_5;
                if (tmp7_elvis_lhs == null) {
                  // Inline function 'kotlin.also' call
                  // Inline function 'kotlin.collections.mutableListOf' call
                  var this_1 = ArrayList_init_$Create$();
                  // Inline function 'kotlin.contracts.contract' call
                  // Inline function 'androidx.compose.runtime.snapshots.MutableSnapshot.innerApplyLocked.<anonymous>.<anonymous>' call
                  statesToRemove = this_1;
                  tmp_5 = this_1;
                } else {
                  tmp_5 = tmp7_elvis_lhs;
                }
                tmp_5.add_utx5q5_k$(state);
              } else {
                var tmp8_elvis_lhs = mergedRecords;
                var tmp_6;
                if (tmp8_elvis_lhs == null) {
                  // Inline function 'kotlin.also' call
                  // Inline function 'kotlin.collections.mutableListOf' call
                  var this_2 = ArrayList_init_$Create$();
                  // Inline function 'kotlin.contracts.contract' call
                  // Inline function 'androidx.compose.runtime.snapshots.MutableSnapshot.innerApplyLocked.<anonymous>.<anonymous>' call
                  mergedRecords = this_2;
                  tmp_6 = this_2;
                } else {
                  tmp_6 = tmp8_elvis_lhs;
                }
                tmp_6.add_utx5q5_k$(!equals(merged, previous) ? to(state, merged) : to(state, previous.create_md4cuc_k$()));
              }
          }
        }
      }
       while (inductionVariable < last);
    var tmp0_safe_receiver = mergedRecords;
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      this.advance_2x11v6_k$();
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable_0 = 0;
      var last_0 = tmp0_safe_receiver.get_size_woubt6_k$() - 1 | 0;
      var tmp_7;
      if (inductionVariable_0 <= last_0) {
        do {
          var index = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + 1 | 0;
          var item = tmp0_safe_receiver.get_c1px32_k$(index);
          // Inline function 'androidx.compose.runtime.snapshots.MutableSnapshot.innerApplyLocked.<anonymous>.<anonymous>' call
          var state_0 = item.component1_7eebsc_k$();
          var stateRecord = item.component2_7eebsb_k$();
          stateRecord.snapshotId_1 = this.get_id_kntnx8_k$();
          // Inline function 'androidx.compose.runtime.snapshots.sync' call
          // Inline function 'androidx.compose.runtime.synchronized' call
          // Inline function 'kotlinx.atomicfu.locks.synchronized' call
          get_lock();
          stateRecord.next_1 = state_0.get_firstStateRecord_49tq6d_k$();
          state_0.prependStateRecord_jvgf4_k$(stateRecord);
        }
         while (inductionVariable_0 <= last_0);
        tmp_7 = Unit_getInstance();
      }
    }
    var tmp1_safe_receiver = statesToRemove;
    if (tmp1_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.snapshots.fastForEach' call
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable_1 = 0;
      var last_1 = tmp1_safe_receiver.get_size_woubt6_k$() - 1 | 0;
      if (inductionVariable_1 <= last_1)
        do {
          var index_0 = inductionVariable_1;
          inductionVariable_1 = inductionVariable_1 + 1 | 0;
          var item_0 = tmp1_safe_receiver.get_c1px32_k$(index_0);
          // Inline function 'androidx.compose.runtime.snapshots.MutableSnapshot.innerApplyLocked.<anonymous>.<anonymous>' call
          modified.remove_kyqzre_k$(item_0);
        }
         while (inductionVariable_1 <= last_1);
      var mergedList = this.merged_1;
      this.merged_1 = mergedList == null ? tmp1_safe_receiver : plus_2(mergedList, tmp1_safe_receiver);
    }
    return Success_getInstance();
  };
  protoOf(MutableSnapshot).advance_8ficyc_k$ = function (block) {
    this.recordPrevious_dqy128_k$(this.get_id_kntnx8_k$());
    // Inline function 'kotlin.also' call
    var this_0 = block();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.snapshots.MutableSnapshot.advance.<anonymous>' call
    if (!this.applied_1 ? !this.disposed_1 : false) {
      var previousId = this.get_id_kntnx8_k$();
      // Inline function 'androidx.compose.runtime.snapshots.sync' call
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      get_lock();
      var tmp0 = get_nextSnapshotId();
      set_nextSnapshotId(tmp0 + 1 | 0);
      this.set_id_kpjn9s_k$(tmp0);
      set_openSnapshots(get_openSnapshots().set_uznzxy_k$(this.get_id_kntnx8_k$()));
      this.set_invalid_amdbx0_k$(addRange(this.get_invalid_xocxse_k$(), previousId + 1 | 0, this.get_id_kntnx8_k$()));
    }
    return this_0;
  };
  protoOf(MutableSnapshot).advance_2x11v6_k$ = function () {
    // Inline function 'androidx.compose.runtime.snapshots.MutableSnapshot.advance' call
    this.recordPrevious_dqy128_k$(this.get_id_kntnx8_k$());
    // Inline function 'kotlin.also' call
    // Inline function 'androidx.compose.runtime.snapshots.MutableSnapshot.advance.<anonymous>' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.snapshots.MutableSnapshot.advance.<anonymous>' call
    if (!this.applied_1 ? !this.disposed_1 : false) {
      var previousId = this.get_id_kntnx8_k$();
      // Inline function 'androidx.compose.runtime.snapshots.sync' call
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      get_lock();
      var tmp0 = get_nextSnapshotId();
      set_nextSnapshotId(tmp0 + 1 | 0);
      this.set_id_kpjn9s_k$(tmp0);
      set_openSnapshots(get_openSnapshots().set_uznzxy_k$(this.get_id_kntnx8_k$()));
      this.set_invalid_amdbx0_k$(addRange(this.get_invalid_xocxse_k$(), previousId + 1 | 0, this.get_id_kntnx8_k$()));
    }
    return Unit_getInstance();
  };
  protoOf(MutableSnapshot).recordPrevious_dqy128_k$ = function (id) {
    // Inline function 'androidx.compose.runtime.snapshots.sync' call
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    get_lock();
    this.previousIds_1 = this.previousIds_1.set_uznzxy_k$(id);
  };
  protoOf(MutableSnapshot).recordPreviousPinnedSnapshot_5g47jw_k$ = function (id) {
    if (id >= 0) {
      var tmp = this;
      // Inline function 'kotlin.collections.plus' call
      // Inline function 'kotlin.collections.plus' call
      var this_0 = this.previousPinnedSnapshots_1;
      // Inline function 'kotlin.intArrayOf' call
      var elements = new Int32Array([id]);
      tmp.previousPinnedSnapshots_1 = primitiveArrayConcat([this_0, elements]);
    }
  };
  protoOf(MutableSnapshot).recordPreviousPinnedSnapshots_yevg_k$ = function (handles) {
    // Inline function 'kotlin.collections.isEmpty' call
    if (handles.length === 0)
      return Unit_getInstance();
    var pinned = this.previousPinnedSnapshots_1;
    var tmp = this;
    var tmp_0;
    // Inline function 'kotlin.collections.isEmpty' call
    if (pinned.length === 0) {
      tmp_0 = handles;
    } else {
      // Inline function 'kotlin.collections.plus' call
      tmp_0 = primitiveArrayConcat([pinned, handles]);
    }
    tmp.previousPinnedSnapshots_1 = tmp_0;
  };
  protoOf(MutableSnapshot).recordPreviousList_e2knp4_k$ = function (snapshots) {
    // Inline function 'androidx.compose.runtime.snapshots.sync' call
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    get_lock();
    this.previousIds_1 = this.previousIds_1.or_qlp1h7_k$(snapshots);
  };
  protoOf(MutableSnapshot).recordModified_awg6g8_k$ = function (state) {
    var tmp0_elvis_lhs = this.get_modified_t1pq4y_k$();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      // Inline function 'kotlin.also' call
      var this_0 = new IdentityArraySet();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.snapshots.MutableSnapshot.recordModified.<anonymous>' call
      this.set_modified_5mrh5g_k$(this_0);
      tmp = this_0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    tmp.add_jkjo25_k$(state);
  };
  protoOf(MutableSnapshot).set_writeCount_8sxchx_k$ = function (_set____db54di) {
    this.writeCount_1 = _set____db54di;
  };
  protoOf(MutableSnapshot).get_writeCount_v4g8hz_k$ = function () {
    return this.writeCount_1;
  };
  protoOf(MutableSnapshot).set_modified_5mrh5g_k$ = function (_set____db54di) {
    this.modified_1 = _set____db54di;
  };
  protoOf(MutableSnapshot).get_modified_t1pq4y_k$ = function () {
    return this.modified_1;
  };
  protoOf(MutableSnapshot).set_merged_h6z3w8_k$ = function (_set____db54di) {
    this.merged_1 = _set____db54di;
  };
  protoOf(MutableSnapshot).get_merged_gl73ud_k$ = function () {
    return this.merged_1;
  };
  protoOf(MutableSnapshot).set_previousIds_injcp6_k$ = function (_set____db54di) {
    this.previousIds_1 = _set____db54di;
  };
  protoOf(MutableSnapshot).get_previousIds_2qoch4_k$ = function () {
    return this.previousIds_1;
  };
  protoOf(MutableSnapshot).set_previousPinnedSnapshots_mcmnag_k$ = function (_set____db54di) {
    this.previousPinnedSnapshots_1 = _set____db54di;
  };
  protoOf(MutableSnapshot).get_previousPinnedSnapshots_kvc8d3_k$ = function () {
    return this.previousPinnedSnapshots_1;
  };
  protoOf(MutableSnapshot).set_applied_601u7p_k$ = function (_set____db54di) {
    this.applied_1 = _set____db54di;
  };
  protoOf(MutableSnapshot).get_applied_bupu98_k$ = function () {
    return this.applied_1;
  };
  function get_$stableprop_14() {
    return 0;
  }
  function get_$stableprop_15() {
    return 8;
  }
  function Success() {
    Success_instance = this;
    SnapshotApplyResult.call(this);
    this.$stable_2 = 0;
  }
  protoOf(Success).check_v87ho8_k$ = function () {
  };
  protoOf(Success).get_succeeded_o5l6ew_k$ = function () {
    return true;
  };
  var Success_instance;
  function Success_getInstance() {
    if (Success_instance == null)
      new Success();
    return Success_instance;
  }
  function Failure(snapshot) {
    SnapshotApplyResult.call(this);
    this.snapshot_1 = snapshot;
    this.$stable_2 = 8;
  }
  protoOf(Failure).get_snapshot_r3bwc3_k$ = function () {
    return this.snapshot_1;
  };
  protoOf(Failure).check_v87ho8_k$ = function () {
    this.snapshot_1.dispose_3nnxhr_k$();
    throw new SnapshotApplyConflictException(this.snapshot_1);
  };
  protoOf(Failure).get_succeeded_o5l6ew_k$ = function () {
    return false;
  };
  function get_$stableprop_16() {
    return 0;
  }
  function SnapshotApplyResult() {
    this.$stable_1 = 0;
  }
  function _get_parentSnapshot__90ggfx($this) {
    return $this.parentSnapshot_1;
  }
  function _get_mergeParentObservers__119oa8($this) {
    return $this.mergeParentObservers_1;
  }
  function _get_ownsParentSnapshot__40byhc($this) {
    return $this.ownsParentSnapshot_1;
  }
  function _get_currentSnapshot__9vker0($this) {
    var tmp0_elvis_lhs = $this.parentSnapshot_1;
    return tmp0_elvis_lhs == null ? get_currentGlobalSnapshot().get_26vq_k$() : tmp0_elvis_lhs;
  }
  function TransparentObserverMutableSnapshot(parentSnapshot, specifiedReadObserver, specifiedWriteObserver, mergeParentObservers, ownsParentSnapshot) {
    var tmp = Companion_getInstance_14().get_EMPTY_i8q41w_k$();
    var tmp1_elvis_lhs = parentSnapshot == null ? null : parentSnapshot.get_readObserver_dmf4mj_k$();
    var tmp_0 = mergedReadObserver(specifiedReadObserver, tmp1_elvis_lhs == null ? get_currentGlobalSnapshot().get_26vq_k$().get_readObserver_dmf4mj_k$() : tmp1_elvis_lhs, mergeParentObservers);
    var tmp3_elvis_lhs = parentSnapshot == null ? null : parentSnapshot.get_writeObserver_pzhf10_k$();
    MutableSnapshot.call(this, 0, tmp, tmp_0, mergedWriteObserver(specifiedWriteObserver, tmp3_elvis_lhs == null ? get_currentGlobalSnapshot().get_26vq_k$().get_writeObserver_pzhf10_k$() : tmp3_elvis_lhs));
    this.parentSnapshot_1 = parentSnapshot;
    this.mergeParentObservers_1 = mergeParentObservers;
    this.ownsParentSnapshot_1 = ownsParentSnapshot;
  }
  protoOf(TransparentObserverMutableSnapshot).dispose_3nnxhr_k$ = function () {
    this.disposed_1 = true;
    if (this.ownsParentSnapshot_1) {
      var tmp0_safe_receiver = this.parentSnapshot_1;
      if (tmp0_safe_receiver == null)
        null;
      else {
        tmp0_safe_receiver.dispose_3nnxhr_k$();
      }
    }
  };
  protoOf(TransparentObserverMutableSnapshot).set_id_kpjn9s_k$ = function (value) {
    unsupported();
  };
  protoOf(TransparentObserverMutableSnapshot).get_id_kntnx8_k$ = function () {
    return _get_currentSnapshot__9vker0(this).get_id_kntnx8_k$();
  };
  protoOf(TransparentObserverMutableSnapshot).set_invalid_amdbx0_k$ = function (value) {
    unsupported();
  };
  protoOf(TransparentObserverMutableSnapshot).get_invalid_xocxse_k$ = function () {
    return _get_currentSnapshot__9vker0(this).get_invalid_xocxse_k$();
  };
  protoOf(TransparentObserverMutableSnapshot).hasPendingChanges_130292_k$ = function () {
    return _get_currentSnapshot__9vker0(this).hasPendingChanges_130292_k$();
  };
  protoOf(TransparentObserverMutableSnapshot).set_modified_5mrh5g_k$ = function (value) {
    unsupported();
  };
  protoOf(TransparentObserverMutableSnapshot).get_modified_t1pq4y_k$ = function () {
    return _get_currentSnapshot__9vker0(this).get_modified_t1pq4y_k$();
  };
  protoOf(TransparentObserverMutableSnapshot).set_writeCount_8sxchx_k$ = function (value) {
    _get_currentSnapshot__9vker0(this).set_writeCount_8sxchx_k$(value);
  };
  protoOf(TransparentObserverMutableSnapshot).get_writeCount_v4g8hz_k$ = function () {
    return _get_currentSnapshot__9vker0(this).get_writeCount_v4g8hz_k$();
  };
  protoOf(TransparentObserverMutableSnapshot).get_readOnly_ovku97_k$ = function () {
    return _get_currentSnapshot__9vker0(this).get_readOnly_ovku97_k$();
  };
  protoOf(TransparentObserverMutableSnapshot).apply_1jdxta_k$ = function () {
    return _get_currentSnapshot__9vker0(this).apply_1jdxta_k$();
  };
  protoOf(TransparentObserverMutableSnapshot).recordModified_awg6g8_k$ = function (state) {
    return _get_currentSnapshot__9vker0(this).recordModified_awg6g8_k$(state);
  };
  protoOf(TransparentObserverMutableSnapshot).takeNestedSnapshot_3v7i4t_k$ = function (readObserver) {
    var mergedReadObserver_0 = mergedReadObserver(readObserver, this.get_readObserver_dmf4mj_k$());
    var tmp;
    if (!this.mergeParentObservers_1) {
      tmp = createTransparentSnapshotWithNoParentReadObserver(_get_currentSnapshot__9vker0(this).takeNestedSnapshot_3v7i4t_k$(null), mergedReadObserver_0, true);
    } else {
      tmp = _get_currentSnapshot__9vker0(this).takeNestedSnapshot_3v7i4t_k$(mergedReadObserver_0);
    }
    return tmp;
  };
  protoOf(TransparentObserverMutableSnapshot).takeNestedMutableSnapshot_7k13is_k$ = function (readObserver, writeObserver) {
    var mergedReadObserver_0 = mergedReadObserver(readObserver, this.get_readObserver_dmf4mj_k$());
    var mergedWriteObserver_0 = mergedWriteObserver(writeObserver, this.get_writeObserver_pzhf10_k$());
    var tmp;
    if (!this.mergeParentObservers_1) {
      var nestedSnapshot = _get_currentSnapshot__9vker0(this).takeNestedMutableSnapshot_7k13is_k$(null, mergedWriteObserver_0);
      tmp = new TransparentObserverMutableSnapshot(nestedSnapshot, mergedReadObserver_0, mergedWriteObserver_0, false, true);
    } else {
      tmp = _get_currentSnapshot__9vker0(this).takeNestedMutableSnapshot_7k13is_k$(mergedReadObserver_0, mergedWriteObserver_0);
    }
    return tmp;
  };
  protoOf(TransparentObserverMutableSnapshot).notifyObjectsInitialized_vzzywp_k$ = function () {
    return _get_currentSnapshot__9vker0(this).notifyObjectsInitialized_vzzywp_k$();
  };
  protoOf(TransparentObserverMutableSnapshot).nestedActivated_d2vweu_k$ = function (snapshot) {
    unsupported();
  };
  protoOf(TransparentObserverMutableSnapshot).nestedActivated_bn9nq_k$ = function (snapshot) {
    return this.nestedActivated_d2vweu_k$(snapshot);
  };
  protoOf(TransparentObserverMutableSnapshot).nestedDeactivated_e5euxh_k$ = function (snapshot) {
    unsupported();
  };
  protoOf(TransparentObserverMutableSnapshot).nestedDeactivated_e1b317_k$ = function (snapshot) {
    return this.nestedDeactivated_e5euxh_k$(snapshot);
  };
  function createTransparentSnapshotWithNoParentReadObserver(previousSnapshot, readObserver, ownsPreviousSnapshot) {
    readObserver = readObserver === VOID ? null : readObserver;
    ownsPreviousSnapshot = ownsPreviousSnapshot === VOID ? false : ownsPreviousSnapshot;
    _init_properties_Snapshot_kt__l6n1ng();
    var tmp;
    var tmp_0;
    if (previousSnapshot instanceof MutableSnapshot) {
      tmp_0 = true;
    } else {
      tmp_0 = previousSnapshot == null;
    }
    if (tmp_0) {
      tmp = new TransparentObserverMutableSnapshot(previousSnapshot instanceof MutableSnapshot ? previousSnapshot : null, readObserver, null, false, ownsPreviousSnapshot);
    } else {
      tmp = new TransparentObserverSnapshot(previousSnapshot, readObserver, false, ownsPreviousSnapshot);
    }
    return tmp;
  }
  function ObserverHandle() {
  }
  function advanceGlobalSnapshot(block) {
    _init_properties_Snapshot_kt__l6n1ng();
    var tmp = get_snapshotInitializer();
    var previousGlobalSnapshot = tmp instanceof GlobalSnapshot ? tmp : THROW_CCE();
    var modified = null;
    // Inline function 'androidx.compose.runtime.snapshots.sync' call
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    get_lock();
    // Inline function 'androidx.compose.runtime.snapshots.advanceGlobalSnapshot.<anonymous>' call
    previousGlobalSnapshot = get_currentGlobalSnapshot().get_26vq_k$();
    modified = previousGlobalSnapshot.get_modified_t1pq4y_k$();
    if (!(modified == null)) {
      get_pendingApplyObserverCount().add_lnluon_k$(1);
    }
    var result = takeNewGlobalSnapshot(previousGlobalSnapshot, block);
    var tmp0_safe_receiver = modified;
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      var tmp_0;
      try {
        // Inline function 'androidx.compose.runtime.snapshots.sync' call
        // Inline function 'androidx.compose.runtime.synchronized' call
        // Inline function 'kotlinx.atomicfu.locks.synchronized' call
        get_lock();
        // Inline function 'androidx.compose.runtime.snapshots.advanceGlobalSnapshot.<anonymous>.<anonymous>' call
        var observers = toMutableList(get_applyObservers());
        // Inline function 'kotlin.contracts.contract' call
        var inductionVariable = 0;
        var last = observers.get_size_woubt6_k$() - 1 | 0;
        var tmp_1;
        if (inductionVariable <= last) {
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var item = observers.get_c1px32_k$(index);
            // Inline function 'androidx.compose.runtime.snapshots.advanceGlobalSnapshot.<anonymous>.<anonymous>' call
            item(tmp0_safe_receiver, previousGlobalSnapshot);
          }
           while (inductionVariable <= last);
          tmp_1 = Unit_getInstance();
        }
        tmp_0 = tmp_1;
      }finally {
        get_pendingApplyObserverCount().add_lnluon_k$(-1);
      }
    }
    // Inline function 'androidx.compose.runtime.snapshots.sync' call
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    get_lock();
    // Inline function 'androidx.compose.runtime.snapshots.advanceGlobalSnapshot.<anonymous>' call
    checkAndOverwriteUnusedRecordsLocked();
    var tmp0_safe_receiver_0 = modified;
    var tmp_2;
    if (tmp0_safe_receiver_0 == null) {
      tmp_2 = null;
    } else {
      // Inline function 'androidx.compose.runtime.collection.IdentityArraySet.fastForEach' call
      // Inline function 'kotlin.contracts.contract' call
      var values = tmp0_safe_receiver_0.get_values_ksazhn_k$();
      var inductionVariable_0 = 0;
      var last_0 = tmp0_safe_receiver_0.get_size_woubt6_k$();
      if (inductionVariable_0 < last_0)
        do {
          var i = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + 1 | 0;
          // Inline function 'androidx.compose.runtime.snapshots.advanceGlobalSnapshot.<anonymous>.<anonymous>' call
          var tmp_3 = values[i];
          var it = !(tmp_3 == null) ? tmp_3 : THROW_CCE();
          processForUnusedRecordsLocked(it);
        }
         while (inductionVariable_0 < last_0);
      tmp_2 = Unit_getInstance();
    }
    return result;
  }
  function advanceGlobalSnapshot_0() {
    _init_properties_Snapshot_kt__l6n1ng();
    return advanceGlobalSnapshot(advanceGlobalSnapshot$lambda);
  }
  function get_$stableprop_17() {
    return 8;
  }
  function StateRecord() {
    this.snapshotId_1 = currentSnapshot().get_id_kntnx8_k$();
    this.next_1 = null;
    this.$stable_1 = 8;
  }
  protoOf(StateRecord).set_snapshotId_9er7qs_k$ = function (_set____db54di) {
    this.snapshotId_1 = _set____db54di;
  };
  protoOf(StateRecord).get_snapshotId_wfq07c_k$ = function () {
    return this.snapshotId_1;
  };
  protoOf(StateRecord).set_next_w78bh1_k$ = function (_set____db54di) {
    this.next_1 = _set____db54di;
  };
  protoOf(StateRecord).get_next_wor1vg_k$ = function () {
    return this.next_1;
  };
  function _set_snapshots__1oii5y_0($this, _set____db54di) {
    $this.snapshots_1 = _set____db54di;
  }
  function _get_snapshots__uzcyki_0($this) {
    return $this.snapshots_1;
  }
  function ReadonlySnapshot(id, invalid, readObserver) {
    Snapshot.call(this, id, invalid);
    this.readObserver_1 = readObserver;
    this.snapshots_1 = 1;
  }
  protoOf(ReadonlySnapshot).get_readObserver_dmf4mj_k$ = function () {
    return this.readObserver_1;
  };
  protoOf(ReadonlySnapshot).get_readOnly_ovku97_k$ = function () {
    return true;
  };
  protoOf(ReadonlySnapshot).get_root_wott0r_k$ = function () {
    return this;
  };
  protoOf(ReadonlySnapshot).hasPendingChanges_130292_k$ = function () {
    return false;
  };
  protoOf(ReadonlySnapshot).get_writeObserver_pzhf10_k$ = function () {
    return null;
  };
  protoOf(ReadonlySnapshot).set_modified_5mrh5g_k$ = function (value) {
    unsupported();
  };
  protoOf(ReadonlySnapshot).get_modified_t1pq4y_k$ = function () {
    return null;
  };
  protoOf(ReadonlySnapshot).takeNestedSnapshot_3v7i4t_k$ = function (readObserver) {
    validateOpen(this);
    return new NestedReadonlySnapshot(this.get_id_kntnx8_k$(), this.get_invalid_xocxse_k$(), readObserver, this);
  };
  protoOf(ReadonlySnapshot).notifyObjectsInitialized_vzzywp_k$ = function () {
  };
  protoOf(ReadonlySnapshot).dispose_3nnxhr_k$ = function () {
    if (!this.disposed_1) {
      this.nestedDeactivated_e1b317_k$(this);
      protoOf(Snapshot).dispose_3nnxhr_k$.call(this);
    }
  };
  protoOf(ReadonlySnapshot).nestedActivated_bn9nq_k$ = function (snapshot) {
    this.snapshots_1 = this.snapshots_1 + 1 | 0;
  };
  protoOf(ReadonlySnapshot).nestedDeactivated_e1b317_k$ = function (snapshot) {
    this.snapshots_1 = this.snapshots_1 - 1 | 0;
    if (this.snapshots_1 === 0) {
      this.closeAndReleasePinning_ma5u27_k$();
    }
  };
  protoOf(ReadonlySnapshot).recordModified_awg6g8_k$ = function (state) {
    reportReadonlySnapshotWrite();
  };
  function takeNewSnapshot(block) {
    _init_properties_Snapshot_kt__l6n1ng();
    return advanceGlobalSnapshot(takeNewSnapshot$lambda(block));
  }
  function _set_deactivated__cyoqs5($this, _set____db54di) {
    $this.deactivated_1 = _set____db54di;
  }
  function _get_deactivated__rs14v3($this) {
    return $this.deactivated_1;
  }
  function deactivate($this) {
    if (!$this.deactivated_1) {
      $this.deactivated_1 = true;
      $this.parent_1.nestedDeactivated_e1b317_k$($this);
    }
  }
  function NestedMutableSnapshot(id, invalid, readObserver, writeObserver, parent) {
    MutableSnapshot.call(this, id, invalid, readObserver, writeObserver);
    this.parent_1 = parent;
    this.deactivated_1 = false;
    this.parent_1.nestedActivated_bn9nq_k$(this);
  }
  protoOf(NestedMutableSnapshot).get_parent_hy4reb_k$ = function () {
    return this.parent_1;
  };
  protoOf(NestedMutableSnapshot).get_root_wott0r_k$ = function () {
    return this.parent_1.get_root_wott0r_k$();
  };
  protoOf(NestedMutableSnapshot).dispose_3nnxhr_k$ = function () {
    if (!this.disposed_1) {
      protoOf(MutableSnapshot).dispose_3nnxhr_k$.call(this);
      deactivate(this);
    }
  };
  protoOf(NestedMutableSnapshot).apply_1jdxta_k$ = function () {
    if (this.parent_1.applied_1 ? true : this.parent_1.disposed_1)
      return new Failure(this);
    var modified = this.get_modified_t1pq4y_k$();
    var id = this.get_id_kntnx8_k$();
    var optimisticMerges_0 = !(modified == null) ? optimisticMerges(this.parent_1, this, this.parent_1.get_invalid_xocxse_k$()) : null;
    // Inline function 'androidx.compose.runtime.snapshots.sync' call
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    get_lock();
    validateOpen(this);
    if (modified == null ? true : modified.get_size_woubt6_k$() === 0) {
      this.closeAndReleasePinning_ma5u27_k$();
    } else {
      var result = this.innerApplyLocked_fcctp5_k$(this.parent_1.get_id_kntnx8_k$(), optimisticMerges_0, this.parent_1.get_invalid_xocxse_k$());
      if (!equals(result, Success_getInstance()))
        return result;
      var tmp0_safe_receiver = this.parent_1.get_modified_t1pq4y_k$();
      var tmp;
      if (tmp0_safe_receiver == null) {
        tmp = null;
      } else {
        // Inline function 'kotlin.apply' call
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.snapshots.NestedMutableSnapshot.apply.<anonymous>.<anonymous>' call
        tmp0_safe_receiver.addAll_xcz12o_k$(modified);
        tmp = tmp0_safe_receiver;
      }
      if (tmp == null) {
        // Inline function 'kotlin.also' call
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.snapshots.NestedMutableSnapshot.apply.<anonymous>.<anonymous>' call
        this.parent_1.set_modified_5mrh5g_k$(modified);
        this.set_modified_5mrh5g_k$(null);
      }
    }
    if (this.parent_1.get_id_kntnx8_k$() < id) {
      this.parent_1.advance_2x11v6_k$();
    }
    this.parent_1.set_invalid_amdbx0_k$(this.parent_1.get_invalid_xocxse_k$().clear_yx1ndh_k$(id).andNot_eiw98e_k$(this.previousIds_1));
    this.parent_1.recordPrevious_dqy128_k$(id);
    this.parent_1.recordPreviousPinnedSnapshot_5g47jw_k$(this.takeoverPinnedSnapshot_clnnnb_k$());
    this.parent_1.recordPreviousList_e2knp4_k$(this.previousIds_1);
    this.parent_1.recordPreviousPinnedSnapshots_yevg_k$(this.previousPinnedSnapshots_1);
    this.applied_1 = true;
    deactivate(this);
    return Success_getInstance();
  };
  function addRange(_this__u8e3s4, from, until) {
    _init_properties_Snapshot_kt__l6n1ng();
    var result = _this__u8e3s4;
    var inductionVariable = from;
    if (inductionVariable < until)
      do {
        var invalidId = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        result = result.set_uznzxy_k$(invalidId);
      }
       while (inductionVariable < until);
    return result;
  }
  function mergedReadObserver(readObserver, parentObserver, mergeReadObserver) {
    mergeReadObserver = mergeReadObserver === VOID ? true : mergeReadObserver;
    _init_properties_Snapshot_kt__l6n1ng();
    var parentObserver_0 = mergeReadObserver ? parentObserver : null;
    var tmp;
    if ((!(readObserver == null) ? !(parentObserver_0 == null) : false) ? !equals(readObserver, parentObserver_0) : false) {
      tmp = mergedReadObserver$lambda(readObserver, parentObserver_0);
    } else {
      tmp = readObserver == null ? parentObserver_0 : readObserver;
    }
    return tmp;
  }
  function mergedWriteObserver(writeObserver, parentObserver) {
    _init_properties_Snapshot_kt__l6n1ng();
    var tmp;
    if ((!(writeObserver == null) ? !(parentObserver == null) : false) ? !equals(writeObserver, parentObserver) : false) {
      tmp = mergedWriteObserver$lambda(writeObserver, parentObserver);
    } else {
      tmp = writeObserver == null ? parentObserver : writeObserver;
    }
    return tmp;
  }
  function optimisticMerges(currentSnapshot, applyingSnapshot, invalidSnapshots) {
    _init_properties_Snapshot_kt__l6n1ng();
    var modified = applyingSnapshot.get_modified_t1pq4y_k$();
    var id = currentSnapshot.get_id_kntnx8_k$();
    if (modified == null)
      return null;
    var start = applyingSnapshot.get_invalid_xocxse_k$().set_uznzxy_k$(applyingSnapshot.get_id_kntnx8_k$()).or_qlp1h7_k$(applyingSnapshot.previousIds_1);
    var result = null;
    // Inline function 'androidx.compose.runtime.collection.IdentityArraySet.fastForEach' call
    // Inline function 'kotlin.contracts.contract' call
    var values = modified.get_values_ksazhn_k$();
    var inductionVariable = 0;
    var last = modified.get_size_woubt6_k$();
    if (inductionVariable < last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        $l$block_0: {
          // Inline function 'androidx.compose.runtime.snapshots.optimisticMerges.<anonymous>' call
          var tmp = values[i];
          var state = !(tmp == null) ? tmp : THROW_CCE();
          var first = state.get_firstStateRecord_49tq6d_k$();
          var tmp0_elvis_lhs = readable(first, id, invalidSnapshots);
          var tmp_0;
          if (tmp0_elvis_lhs == null) {
            break $l$block_0;
          } else {
            tmp_0 = tmp0_elvis_lhs;
          }
          var current = tmp_0;
          var tmp1_elvis_lhs = readable(first, id, start);
          var tmp_1;
          if (tmp1_elvis_lhs == null) {
            break $l$block_0;
          } else {
            tmp_1 = tmp1_elvis_lhs;
          }
          var previous = tmp_1;
          if (!equals(current, previous)) {
            var tmp2_elvis_lhs = readable(first, applyingSnapshot.get_id_kntnx8_k$(), applyingSnapshot.get_invalid_xocxse_k$());
            var tmp_2;
            if (tmp2_elvis_lhs == null) {
              readError();
            } else {
              tmp_2 = tmp2_elvis_lhs;
            }
            var applied = tmp_2;
            var merged = state.mergeRecords_7xjkji_k$(previous, current, applied);
            if (!(merged == null)) {
              // Inline function 'kotlin.collections.set' call
              var tmp3_elvis_lhs = result;
              var tmp_3;
              if (tmp3_elvis_lhs == null) {
                // Inline function 'kotlin.also' call
                // Inline function 'kotlin.collections.hashMapOf' call
                var this_0 = HashMap_init_$Create$();
                // Inline function 'kotlin.contracts.contract' call
                // Inline function 'androidx.compose.runtime.snapshots.optimisticMerges.<anonymous>.<anonymous>' call
                result = this_0;
                tmp_3 = this_0;
              } else {
                tmp_3 = tmp3_elvis_lhs;
              }
              tmp_3.put_4fpzoq_k$(current, merged);
            } else {
              return null;
            }
          }
        }
      }
       while (inductionVariable < last);
    return result;
  }
  function validateOpen(snapshot) {
    _init_properties_Snapshot_kt__l6n1ng();
    if (!get_openSnapshots().get_c1px32_k$(snapshot.get_id_kntnx8_k$())) {
      // Inline function 'kotlin.error' call
      var message = 'Snapshot is not open';
      throw IllegalStateException_init_$Create$(toString(message));
    }
  }
  function takeNewGlobalSnapshot(previousGlobalSnapshot, block) {
    _init_properties_Snapshot_kt__l6n1ng();
    var result = block(get_openSnapshots().clear_yx1ndh_k$(previousGlobalSnapshot.get_id_kntnx8_k$()));
    // Inline function 'androidx.compose.runtime.snapshots.sync' call
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    get_lock();
    var tmp0 = get_nextSnapshotId();
    set_nextSnapshotId(tmp0 + 1 | 0);
    var globalId = tmp0;
    set_openSnapshots(get_openSnapshots().clear_yx1ndh_k$(previousGlobalSnapshot.get_id_kntnx8_k$()));
    get_currentGlobalSnapshot().set_inogor_k$(new GlobalSnapshot(globalId, get_openSnapshots()));
    previousGlobalSnapshot.dispose_3nnxhr_k$();
    set_openSnapshots(get_openSnapshots().set_uznzxy_k$(globalId));
    return result;
  }
  function checkAndOverwriteUnusedRecordsLocked() {
    _init_properties_Snapshot_kt__l6n1ng();
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotWeakSet.removeIf' call
    var this_0 = get_extraStateObjects();
    var size = this_0.get_size_woubt6_k$();
    var currentUsed = 0;
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var entry = this_0.get_values_ksazhn_k$()[i];
        var value = entry == null ? null : entry.get_26vq_k$();
        var tmp;
        if (!(value == null)) {
          // Inline function 'androidx.compose.runtime.snapshots.checkAndOverwriteUnusedRecordsLocked.<anonymous>' call
          tmp = !!overwriteUnusedRecordsLocked(value);
        } else {
          tmp = false;
        }
        if (tmp) {
          if (!(currentUsed === i)) {
            this_0.get_values_ksazhn_k$()[currentUsed] = entry;
            this_0.get_hashes_e5sh8l_k$()[currentUsed] = this_0.get_hashes_e5sh8l_k$()[i];
          }
          currentUsed = currentUsed + 1 | 0;
        }
      }
       while (inductionVariable < size);
    var inductionVariable_0 = currentUsed;
    if (inductionVariable_0 < size)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        this_0.get_values_ksazhn_k$()[i_0] = null;
        this_0.get_hashes_e5sh8l_k$()[i_0] = 0;
      }
       while (inductionVariable_0 < size);
    if (!(currentUsed === size)) {
      this_0.set_size_e2677a_k$(currentUsed);
    }
  }
  function processForUnusedRecordsLocked(state) {
    _init_properties_Snapshot_kt__l6n1ng();
    if (overwriteUnusedRecordsLocked(state)) {
      get_extraStateObjects().add_jkjo25_k$(state);
    }
  }
  function NestedReadonlySnapshot$readObserver$lambda($readObserver, $this) {
    return function (state) {
      $readObserver(state);
      $this(state);
      return Unit_getInstance();
    };
  }
  function NestedReadonlySnapshot(id, invalid, readObserver, parent) {
    Snapshot.call(this, id, invalid);
    this.parent_1 = parent;
    this.parent_1.nestedActivated_bn9nq_k$(this);
    var tmp = this;
    var tmp_0;
    if (readObserver == null) {
      tmp_0 = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.snapshots.NestedReadonlySnapshot.readObserver.<anonymous>' call
      var tmp0_safe_receiver = this.parent_1.get_readObserver_dmf4mj_k$();
      var tmp_1;
      if (tmp0_safe_receiver == null) {
        tmp_1 = null;
      } else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.snapshots.NestedReadonlySnapshot.readObserver.<anonymous>.<anonymous>' call
        tmp_1 = NestedReadonlySnapshot$readObserver$lambda(readObserver, tmp0_safe_receiver);
      }
      var tmp1_elvis_lhs = tmp_1;
      tmp_0 = tmp1_elvis_lhs == null ? readObserver : tmp1_elvis_lhs;
    }
    var tmp1_elvis_lhs_0 = tmp_0;
    tmp.readObserver_1 = tmp1_elvis_lhs_0 == null ? this.parent_1.get_readObserver_dmf4mj_k$() : tmp1_elvis_lhs_0;
  }
  protoOf(NestedReadonlySnapshot).get_parent_hy4reb_k$ = function () {
    return this.parent_1;
  };
  protoOf(NestedReadonlySnapshot).get_readOnly_ovku97_k$ = function () {
    return true;
  };
  protoOf(NestedReadonlySnapshot).get_root_wott0r_k$ = function () {
    return this.parent_1.get_root_wott0r_k$();
  };
  protoOf(NestedReadonlySnapshot).takeNestedSnapshot_3v7i4t_k$ = function (readObserver) {
    return new NestedReadonlySnapshot(this.get_id_kntnx8_k$(), this.get_invalid_xocxse_k$(), readObserver, this.parent_1);
  };
  protoOf(NestedReadonlySnapshot).notifyObjectsInitialized_vzzywp_k$ = function () {
  };
  protoOf(NestedReadonlySnapshot).hasPendingChanges_130292_k$ = function () {
    return false;
  };
  protoOf(NestedReadonlySnapshot).get_readObserver_dmf4mj_k$ = function () {
    return this.readObserver_1;
  };
  protoOf(NestedReadonlySnapshot).dispose_3nnxhr_k$ = function () {
    if (!this.disposed_1) {
      if (!(this.get_id_kntnx8_k$() === this.parent_1.get_id_kntnx8_k$())) {
        this.closeAndReleasePinning_ma5u27_k$();
      }
      this.parent_1.nestedDeactivated_e1b317_k$(this);
      protoOf(Snapshot).dispose_3nnxhr_k$.call(this);
    }
  };
  protoOf(NestedReadonlySnapshot).get_modified_t1pq4y_k$ = function () {
    return null;
  };
  protoOf(NestedReadonlySnapshot).get_writeObserver_pzhf10_k$ = function () {
    return null;
  };
  protoOf(NestedReadonlySnapshot).recordModified_b5teqg_k$ = function (state) {
    reportReadonlySnapshotWrite();
  };
  protoOf(NestedReadonlySnapshot).recordModified_awg6g8_k$ = function (state) {
    return this.recordModified_b5teqg_k$(state);
  };
  protoOf(NestedReadonlySnapshot).nestedDeactivated_e5euxh_k$ = function (snapshot) {
    unsupported();
  };
  protoOf(NestedReadonlySnapshot).nestedDeactivated_e1b317_k$ = function (snapshot) {
    return this.nestedDeactivated_e5euxh_k$(snapshot);
  };
  protoOf(NestedReadonlySnapshot).nestedActivated_d2vweu_k$ = function (snapshot) {
    unsupported();
  };
  protoOf(NestedReadonlySnapshot).nestedActivated_bn9nq_k$ = function (snapshot) {
    return this.nestedActivated_d2vweu_k$(snapshot);
  };
  function readable(r, id, invalid) {
    _init_properties_Snapshot_kt__l6n1ng();
    var current = r;
    var candidate = null;
    while (!(current == null)) {
      if (valid(current, id, invalid)) {
        candidate = candidate == null ? current : candidate.snapshotId_1 < current.snapshotId_1 ? current : candidate;
      }
      current = current.next_1;
    }
    if (!(candidate == null)) {
      return candidate instanceof StateRecord ? candidate : THROW_CCE();
    }
    return null;
  }
  function readError() {
    _init_properties_Snapshot_kt__l6n1ng();
    // Inline function 'kotlin.error' call
    var message = 'Reading a state that was created after the snapshot was taken or in a snapshot that has not yet been applied';
    throw IllegalStateException_init_$Create$(toString(message));
  }
  function get_$stableprop_18() {
    return 8;
  }
  function SnapshotApplyConflictException(snapshot) {
    Exception_init_$Init$(this);
    captureStack(this, SnapshotApplyConflictException);
    this.snapshot_1 = snapshot;
    this.$stable_1 = 8;
  }
  protoOf(SnapshotApplyConflictException).get_snapshot_r3bwc3_k$ = function () {
    return this.snapshot_1;
  };
  function _get_previousSnapshot__zb16sw($this) {
    return $this.previousSnapshot_1;
  }
  function _get_mergeParentObservers__119oa8_0($this) {
    return $this.mergeParentObservers_1;
  }
  function _get_ownsPreviousSnapshot__djgwnx($this) {
    return $this.ownsPreviousSnapshot_1;
  }
  function _get_currentSnapshot__9vker0_0($this) {
    var tmp0_elvis_lhs = $this.previousSnapshot_1;
    return tmp0_elvis_lhs == null ? get_currentGlobalSnapshot().get_26vq_k$() : tmp0_elvis_lhs;
  }
  function TransparentObserverSnapshot(previousSnapshot, specifiedReadObserver, mergeParentObservers, ownsPreviousSnapshot) {
    Snapshot.call(this, 0, Companion_getInstance_14().get_EMPTY_i8q41w_k$());
    this.previousSnapshot_1 = previousSnapshot;
    this.mergeParentObservers_1 = mergeParentObservers;
    this.ownsPreviousSnapshot_1 = ownsPreviousSnapshot;
    var tmp = this;
    var tmp0_safe_receiver = this.previousSnapshot_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.get_readObserver_dmf4mj_k$();
    tmp.readObserver_1 = mergedReadObserver(specifiedReadObserver, tmp1_elvis_lhs == null ? get_currentGlobalSnapshot().get_26vq_k$().get_readObserver_dmf4mj_k$() : tmp1_elvis_lhs, this.mergeParentObservers_1);
    this.writeObserver_1 = null;
    this.root_1 = this;
  }
  protoOf(TransparentObserverSnapshot).get_readObserver_dmf4mj_k$ = function () {
    return this.readObserver_1;
  };
  protoOf(TransparentObserverSnapshot).get_writeObserver_pzhf10_k$ = function () {
    return this.writeObserver_1;
  };
  protoOf(TransparentObserverSnapshot).get_root_wott0r_k$ = function () {
    return this.root_1;
  };
  protoOf(TransparentObserverSnapshot).dispose_3nnxhr_k$ = function () {
    this.disposed_1 = true;
    if (this.ownsPreviousSnapshot_1) {
      var tmp0_safe_receiver = this.previousSnapshot_1;
      if (tmp0_safe_receiver == null)
        null;
      else {
        tmp0_safe_receiver.dispose_3nnxhr_k$();
      }
    }
  };
  protoOf(TransparentObserverSnapshot).set_id_kpjn9s_k$ = function (value) {
    unsupported();
  };
  protoOf(TransparentObserverSnapshot).get_id_kntnx8_k$ = function () {
    return _get_currentSnapshot__9vker0_0(this).get_id_kntnx8_k$();
  };
  protoOf(TransparentObserverSnapshot).set_invalid_amdbx0_k$ = function (value) {
    unsupported();
  };
  protoOf(TransparentObserverSnapshot).get_invalid_xocxse_k$ = function () {
    return _get_currentSnapshot__9vker0_0(this).get_invalid_xocxse_k$();
  };
  protoOf(TransparentObserverSnapshot).hasPendingChanges_130292_k$ = function () {
    return _get_currentSnapshot__9vker0_0(this).hasPendingChanges_130292_k$();
  };
  protoOf(TransparentObserverSnapshot).set_modified_5mrh5g_k$ = function (value) {
    unsupported();
  };
  protoOf(TransparentObserverSnapshot).get_modified_t1pq4y_k$ = function () {
    return _get_currentSnapshot__9vker0_0(this).get_modified_t1pq4y_k$();
  };
  protoOf(TransparentObserverSnapshot).get_readOnly_ovku97_k$ = function () {
    return _get_currentSnapshot__9vker0_0(this).get_readOnly_ovku97_k$();
  };
  protoOf(TransparentObserverSnapshot).recordModified_awg6g8_k$ = function (state) {
    return _get_currentSnapshot__9vker0_0(this).recordModified_awg6g8_k$(state);
  };
  protoOf(TransparentObserverSnapshot).takeNestedSnapshot_3v7i4t_k$ = function (readObserver) {
    var mergedReadObserver_0 = mergedReadObserver(readObserver, this.readObserver_1);
    var tmp;
    if (!this.mergeParentObservers_1) {
      tmp = createTransparentSnapshotWithNoParentReadObserver(_get_currentSnapshot__9vker0_0(this).takeNestedSnapshot_3v7i4t_k$(null), mergedReadObserver_0, true);
    } else {
      tmp = _get_currentSnapshot__9vker0_0(this).takeNestedSnapshot_3v7i4t_k$(mergedReadObserver_0);
    }
    return tmp;
  };
  protoOf(TransparentObserverSnapshot).notifyObjectsInitialized_vzzywp_k$ = function () {
    return _get_currentSnapshot__9vker0_0(this).notifyObjectsInitialized_vzzywp_k$();
  };
  protoOf(TransparentObserverSnapshot).nestedActivated_d2vweu_k$ = function (snapshot) {
    unsupported();
  };
  protoOf(TransparentObserverSnapshot).nestedActivated_bn9nq_k$ = function (snapshot) {
    return this.nestedActivated_d2vweu_k$(snapshot);
  };
  protoOf(TransparentObserverSnapshot).nestedDeactivated_e5euxh_k$ = function (snapshot) {
    unsupported();
  };
  protoOf(TransparentObserverSnapshot).nestedDeactivated_e1b317_k$ = function (snapshot) {
    return this.nestedDeactivated_e5euxh_k$(snapshot);
  };
  function reportReadonlySnapshotWrite() {
    _init_properties_Snapshot_kt__l6n1ng();
    // Inline function 'kotlin.error' call
    var message = 'Cannot modify a state object in a read-only snapshot';
    throw IllegalStateException_init_$Create$(toString(message));
  }
  function overwriteUnusedRecordsLocked(state) {
    _init_properties_Snapshot_kt__l6n1ng();
    var current = state.get_firstStateRecord_49tq6d_k$();
    var overwriteRecord = null;
    var validRecord = null;
    var reuseLimit = get_pinningTable().lowestOrDefault_ngsad0_k$(get_nextSnapshotId());
    var retainedRecords = 0;
    while (!(current == null)) {
      var currentId = current.snapshotId_1;
      if (!(currentId === 0)) {
        if (currentId < reuseLimit) {
          if (validRecord == null) {
            validRecord = current;
            retainedRecords = retainedRecords + 1 | 0;
          } else {
            var tmp;
            if (current.snapshotId_1 < validRecord.snapshotId_1) {
              tmp = current;
            } else {
              var result = validRecord;
              validRecord = current;
              tmp = result;
            }
            var recordToOverwrite = tmp;
            if (overwriteRecord == null) {
              var tmp$ret$1;
              $l$block: {
                // Inline function 'androidx.compose.runtime.snapshots.findYoungestOr' call
                var this_0 = state.get_firstStateRecord_49tq6d_k$();
                var current_0 = this_0;
                var youngest = this_0;
                while (!(current_0 == null)) {
                  // Inline function 'androidx.compose.runtime.snapshots.overwriteUnusedRecordsLocked.<anonymous>' call
                  if (current_0.snapshotId_1 >= reuseLimit) {
                    tmp$ret$1 = current_0;
                    break $l$block;
                  }
                  if (youngest.snapshotId_1 < current_0.snapshotId_1)
                    youngest = current_0;
                  current_0 = current_0.next_1;
                }
                tmp$ret$1 = youngest;
              }
              overwriteRecord = tmp$ret$1;
            }
            recordToOverwrite.snapshotId_1 = 0;
            recordToOverwrite.assign_k75sor_k$(overwriteRecord);
          }
        } else {
          retainedRecords = retainedRecords + 1 | 0;
        }
      }
      current = current.next_1;
    }
    return retainedRecords > 1;
  }
  function valid(data, snapshot, invalid) {
    _init_properties_Snapshot_kt__l6n1ng();
    return valid_0(snapshot, data.snapshotId_1, invalid);
  }
  function findYoungestOr(_this__u8e3s4, predicate) {
    _init_properties_Snapshot_kt__l6n1ng();
    var current = _this__u8e3s4;
    var youngest = _this__u8e3s4;
    while (!(current == null)) {
      if (predicate(current))
        return current;
      if (youngest.snapshotId_1 < current.snapshotId_1)
        youngest = current;
      current = current.next_1;
    }
    return youngest;
  }
  function valid_0(currentSnapshot, candidateSnapshot, invalid) {
    _init_properties_Snapshot_kt__l6n1ng();
    return (!(candidateSnapshot === 0) ? candidateSnapshot <= currentSnapshot : false) ? !invalid.get_c1px32_k$(candidateSnapshot) : false;
  }
  function readable_0(_this__u8e3s4, state) {
    _init_properties_Snapshot_kt__l6n1ng();
    var snapshot = Companion_getInstance_12().get_current_jwi6j4_k$();
    var tmp0_safe_receiver = snapshot.get_readObserver_dmf4mj_k$();
    if (tmp0_safe_receiver == null)
      null;
    else
      tmp0_safe_receiver(state);
    var tmp1_elvis_lhs = readable(_this__u8e3s4, snapshot.get_id_kntnx8_k$(), snapshot.get_invalid_xocxse_k$());
    var tmp;
    if (tmp1_elvis_lhs == null) {
      // Inline function 'androidx.compose.runtime.snapshots.sync' call
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      get_lock();
      // Inline function 'androidx.compose.runtime.snapshots.readable.<anonymous>' call
      var syncSnapshot = Companion_getInstance_12().get_current_jwi6j4_k$();
      var tmp_0 = state.get_firstStateRecord_49tq6d_k$();
      var tmp0_elvis_lhs = readable(tmp_0 instanceof StateRecord ? tmp_0 : THROW_CCE(), syncSnapshot.get_id_kntnx8_k$(), syncSnapshot.get_invalid_xocxse_k$());
      var tmp_1;
      if (tmp0_elvis_lhs == null) {
        readError();
      } else {
        tmp_1 = tmp0_elvis_lhs;
      }
      tmp = tmp_1;
    } else {
      tmp = tmp1_elvis_lhs;
    }
    return tmp;
  }
  function withCurrent(_this__u8e3s4, block) {
    _init_properties_Snapshot_kt__l6n1ng();
    return block(current(_this__u8e3s4));
  }
  function overwritable(_this__u8e3s4, state, candidate, block) {
    _init_properties_Snapshot_kt__l6n1ng();
    var snapshot = get_snapshotInitializer();
    // Inline function 'kotlin.also' call
    // Inline function 'androidx.compose.runtime.snapshots.sync' call
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    get_lock();
    // Inline function 'androidx.compose.runtime.snapshots.overwritable.<anonymous>' call
    snapshot = Companion_getInstance_12().get_current_jwi6j4_k$();
    var this_0 = block(overwritableRecord(_this__u8e3s4, state, snapshot, candidate));
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.snapshots.overwritable.<anonymous>' call
    notifyWrite(snapshot, state);
    return this_0;
  }
  function current(r) {
    _init_properties_Snapshot_kt__l6n1ng();
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.snapshots.current.<anonymous>' call
    var snapshot = Companion_getInstance_12().get_current_jwi6j4_k$();
    var tmp0_elvis_lhs = readable(r, snapshot.get_id_kntnx8_k$(), snapshot.get_invalid_xocxse_k$());
    var tmp;
    if (tmp0_elvis_lhs == null) {
      // Inline function 'androidx.compose.runtime.snapshots.sync' call
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      get_lock();
      // Inline function 'androidx.compose.runtime.snapshots.current.<anonymous>.<anonymous>' call
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.snapshots.current.<anonymous>.<anonymous>.<anonymous>' call
      var syncSnapshot = Companion_getInstance_12().get_current_jwi6j4_k$();
      tmp = readable(r, syncSnapshot.get_id_kntnx8_k$(), syncSnapshot.get_invalid_xocxse_k$());
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var tmp1_elvis_lhs = tmp;
    var tmp_0;
    if (tmp1_elvis_lhs == null) {
      readError();
    } else {
      tmp_0 = tmp1_elvis_lhs;
    }
    return tmp_0;
  }
  function notifyWrite(snapshot, state) {
    _init_properties_Snapshot_kt__l6n1ng();
    snapshot.set_writeCount_8sxchx_k$(snapshot.get_writeCount_v4g8hz_k$() + 1 | 0);
    var tmp1_safe_receiver = snapshot.get_writeObserver_pzhf10_k$();
    if (tmp1_safe_receiver == null)
      null;
    else
      tmp1_safe_receiver(state);
  }
  function overwritableRecord(_this__u8e3s4, state, snapshot, candidate) {
    _init_properties_Snapshot_kt__l6n1ng();
    if (snapshot.get_readOnly_ovku97_k$()) {
      snapshot.recordModified_awg6g8_k$(state);
    }
    var id = snapshot.get_id_kntnx8_k$();
    if (candidate.snapshotId_1 === id)
      return candidate;
    // Inline function 'androidx.compose.runtime.snapshots.sync' call
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    get_lock();
    // Inline function 'androidx.compose.runtime.snapshots.overwritableRecord.<anonymous>' call
    var newData = newOverwritableRecordLocked(_this__u8e3s4, state);
    newData.snapshotId_1 = id;
    snapshot.recordModified_awg6g8_k$(state);
    return newData;
  }
  function newOverwritableRecordLocked(_this__u8e3s4, state) {
    _init_properties_Snapshot_kt__l6n1ng();
    var tmp = usedLocked(state);
    var tmp0_safe_receiver = (tmp == null ? true : tmp instanceof StateRecord) ? tmp : THROW_CCE();
    var tmp_0;
    if (tmp0_safe_receiver == null) {
      tmp_0 = null;
    } else {
      // Inline function 'kotlin.apply' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.snapshots.newOverwritableRecordLocked.<anonymous>' call
      tmp0_safe_receiver.snapshotId_1 = IntCompanionObject_getInstance().get_MAX_VALUE_54a9lf_k$();
      tmp_0 = tmp0_safe_receiver;
    }
    var tmp1_elvis_lhs = tmp_0;
    var tmp_1;
    if (tmp1_elvis_lhs == null) {
      // Inline function 'kotlin.apply' call
      var this_0 = _this__u8e3s4.create_md4cuc_k$();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.snapshots.newOverwritableRecordLocked.<anonymous>' call
      this_0.snapshotId_1 = IntCompanionObject_getInstance().get_MAX_VALUE_54a9lf_k$();
      this_0.next_1 = state.get_firstStateRecord_49tq6d_k$();
      state.prependStateRecord_jvgf4_k$(this_0 instanceof StateRecord ? this_0 : THROW_CCE());
      var tmp_2 = this_0;
      tmp_1 = tmp_2 instanceof StateRecord ? tmp_2 : THROW_CCE();
    } else {
      tmp_1 = tmp1_elvis_lhs;
    }
    return tmp_1;
  }
  function usedLocked(state) {
    _init_properties_Snapshot_kt__l6n1ng();
    var current = state.get_firstStateRecord_49tq6d_k$();
    var validRecord = null;
    var reuseLimit = get_pinningTable().lowestOrDefault_ngsad0_k$(get_nextSnapshotId()) - 1 | 0;
    var invalid = Companion_getInstance_14().get_EMPTY_i8q41w_k$();
    while (!(current == null)) {
      var currentId = current.snapshotId_1;
      if (currentId === 0) {
        return current;
      }
      if (valid(current, reuseLimit, invalid)) {
        if (validRecord == null) {
          validRecord = current;
        } else {
          return current.snapshotId_1 < validRecord.snapshotId_1 ? current : validRecord;
        }
      }
      current = current.next_1;
    }
    return null;
  }
  function writable(_this__u8e3s4, state, block) {
    _init_properties_Snapshot_kt__l6n1ng();
    var snapshot = get_snapshotInitializer();
    // Inline function 'kotlin.also' call
    // Inline function 'androidx.compose.runtime.snapshots.sync' call
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    get_lock();
    // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
    snapshot = Companion_getInstance_12().get_current_jwi6j4_k$();
    var this_0 = block(writableRecord(_this__u8e3s4, state, snapshot));
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
    notifyWrite(snapshot, state);
    return this_0;
  }
  function writableRecord(_this__u8e3s4, state, snapshot) {
    _init_properties_Snapshot_kt__l6n1ng();
    if (snapshot.get_readOnly_ovku97_k$()) {
      snapshot.recordModified_awg6g8_k$(state);
    }
    var id = snapshot.get_id_kntnx8_k$();
    var tmp0_elvis_lhs = readable(_this__u8e3s4, id, snapshot.get_invalid_xocxse_k$());
    var tmp;
    if (tmp0_elvis_lhs == null) {
      readError();
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var readData = tmp;
    if (readData.snapshotId_1 === snapshot.get_id_kntnx8_k$())
      return readData;
    var newData = newWritableRecord(readData, state, snapshot);
    snapshot.recordModified_awg6g8_k$(state);
    return newData;
  }
  function newWritableRecord(_this__u8e3s4, state, snapshot) {
    _init_properties_Snapshot_kt__l6n1ng();
    // Inline function 'androidx.compose.runtime.snapshots.sync' call
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    get_lock();
    // Inline function 'androidx.compose.runtime.snapshots.newWritableRecord.<anonymous>' call
    return newWritableRecordLocked(_this__u8e3s4, state, snapshot);
  }
  function newWritableRecordLocked(_this__u8e3s4, state, snapshot) {
    _init_properties_Snapshot_kt__l6n1ng();
    var newData = newOverwritableRecordLocked(_this__u8e3s4, state);
    newData.assign_k75sor_k$(_this__u8e3s4);
    newData.snapshotId_1 = snapshot.get_id_kntnx8_k$();
    return newData;
  }
  function emptyLambda$lambda(it) {
    _init_properties_Snapshot_kt__l6n1ng();
    return Unit_getInstance();
  }
  function advanceGlobalSnapshot$lambda(it) {
    _init_properties_Snapshot_kt__l6n1ng();
    return Unit_getInstance();
  }
  function takeNewSnapshot$lambda($block) {
    return function (invalid) {
      var result = $block(invalid);
      // Inline function 'androidx.compose.runtime.snapshots.sync' call
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      get_lock();
      set_openSnapshots(get_openSnapshots().set_uznzxy_k$(result.get_id_kntnx8_k$()));
      return result;
    };
  }
  function mergedReadObserver$lambda($readObserver, $parentObserver) {
    return function (state) {
      $readObserver(state);
      $parentObserver(state);
      return Unit_getInstance();
    };
  }
  function mergedWriteObserver$lambda($writeObserver, $parentObserver) {
    return function (state) {
      $writeObserver(state);
      $parentObserver(state);
      return Unit_getInstance();
    };
  }
  var properties_initialized_Snapshot_kt_2vlcoq;
  function _init_properties_Snapshot_kt__l6n1ng() {
    if (!properties_initialized_Snapshot_kt_2vlcoq) {
      properties_initialized_Snapshot_kt_2vlcoq = true;
      emptyLambda = emptyLambda$lambda;
      threadSnapshot = new SnapshotThreadLocal();
      lock = createSynchronizedObject();
      openSnapshots = Companion_getInstance_14().get_EMPTY_i8q41w_k$();
      nextSnapshotId = 1;
      pinningTable = new SnapshotDoubleIndexHeap();
      extraStateObjects = new SnapshotWeakSet();
      // Inline function 'kotlin.collections.mutableListOf' call
      applyObservers = ArrayList_init_$Create$();
      // Inline function 'kotlin.collections.mutableListOf' call
      globalWriteObservers = ArrayList_init_$Create$();
      // Inline function 'kotlin.also' call
      var tmp0 = get_nextSnapshotId();
      set_nextSnapshotId(tmp0 + 1 | 0);
      var this_0 = new GlobalSnapshot(tmp0, Companion_getInstance_14().get_EMPTY_i8q41w_k$());
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.snapshots.currentGlobalSnapshot.<anonymous>' call
      set_openSnapshots(get_openSnapshots().set_uznzxy_k$(this_0.get_id_kntnx8_k$()));
      currentGlobalSnapshot = new AtomicReference(this_0);
      snapshotInitializer = get_currentGlobalSnapshot().get_26vq_k$();
      pendingApplyObserverCount = new AtomicInt(0);
    }
  }
  function _set_size__9twho6_4($this, _set____db54di) {
    $this.size_1 = _set____db54di;
  }
  function _set_values__uvbruz_3($this, _set____db54di) {
    $this.values_1 = _set____db54di;
  }
  function _get_values__tel787_0($this) {
    return $this.values_1;
  }
  function _set_index__fyfqnn_1($this, _set____db54di) {
    $this.index_1 = _set____db54di;
  }
  function _get_index__g2optt_1($this) {
    return $this.index_1;
  }
  function _set_handles__a7vmg6($this, _set____db54di) {
    $this.handles_1 = _set____db54di;
  }
  function _get_handles__z7055y($this) {
    return $this.handles_1;
  }
  function _set_firstFreeHandle__9k0n7j($this, _set____db54di) {
    $this.firstFreeHandle_1 = _set____db54di;
  }
  function _get_firstFreeHandle__jpkb1($this) {
    return $this.firstFreeHandle_1;
  }
  function shiftUp($this, index) {
    var values = $this.values_1;
    var value = values[index];
    var current = index;
    $l$loop: while (current > 0) {
      var parent = ((current + 1 | 0) >> 1) - 1 | 0;
      if (values[parent] > value) {
        swap($this, parent, current);
        current = parent;
        continue $l$loop;
      }
      break $l$loop;
    }
  }
  function shiftDown($this, index) {
    var values = $this.values_1;
    var half = $this.size_1 >> 1;
    var current = index;
    while (current < half) {
      var right = (current + 1 | 0) << 1;
      var left = right - 1 | 0;
      if (right < $this.size_1 ? values[right] < values[left] : false) {
        if (values[right] < values[current]) {
          swap($this, right, current);
          current = right;
        } else
          return Unit_getInstance();
      } else if (values[left] < values[current]) {
        swap($this, left, current);
        current = left;
      } else
        return Unit_getInstance();
    }
  }
  function swap($this, a, b) {
    var values = $this.values_1;
    var index = $this.index_1;
    var handles = $this.handles_1;
    var t = values[a];
    values[a] = values[b];
    values[b] = t;
    t = index[a];
    index[a] = index[b];
    index[b] = t;
    handles[index[a]] = a;
    handles[index[b]] = b;
  }
  function ensure($this, atLeast) {
    var capacity = $this.values_1.length;
    if (atLeast <= capacity)
      return Unit_getInstance();
    var newCapacity = imul(capacity, 2);
    var newValues = new Int32Array(newCapacity);
    var newIndex = new Int32Array(newCapacity);
    // Inline function 'kotlin.collections.copyInto' call
    var this_0 = $this.values_1;
    var endIndex = this_0.length;
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp = this_0;
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    arrayCopy(tmp, newValues, 0, 0, endIndex);
    // Inline function 'kotlin.collections.copyInto' call
    var this_1 = $this.index_1;
    var endIndex_0 = this_1.length;
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp_0 = this_1;
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    arrayCopy(tmp_0, newIndex, 0, 0, endIndex_0);
    $this.values_1 = newValues;
    $this.index_1 = newIndex;
  }
  function allocateHandle($this) {
    var capacity = $this.handles_1.length;
    if ($this.firstFreeHandle_1 >= capacity) {
      var tmp = 0;
      var tmp_0 = imul(capacity, 2);
      var tmp_1 = new Int32Array(tmp_0);
      while (tmp < tmp_0) {
        var tmp_2 = tmp;
        tmp_1[tmp_2] = tmp_2 + 1 | 0;
        tmp = tmp + 1 | 0;
      }
      var newHandles = tmp_1;
      // Inline function 'kotlin.collections.copyInto' call
      var this_0 = $this.handles_1;
      var endIndex = this_0.length;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp_3 = this_0;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      arrayCopy(tmp_3, newHandles, 0, 0, endIndex);
      $this.handles_1 = newHandles;
    }
    var handle = $this.firstFreeHandle_1;
    $this.firstFreeHandle_1 = $this.handles_1[$this.firstFreeHandle_1];
    return handle;
  }
  function freeHandle($this, handle) {
    $this.handles_1[handle] = $this.firstFreeHandle_1;
    $this.firstFreeHandle_1 = handle;
  }
  function SnapshotDoubleIndexHeap() {
    this.size_1 = 0;
    this.values_1 = new Int32Array(16);
    this.index_1 = new Int32Array(16);
    var tmp = this;
    var tmp_0 = 0;
    var tmp_1 = new Int32Array(16);
    while (tmp_0 < 16) {
      var tmp_2 = tmp_0;
      tmp_1[tmp_2] = tmp_2 + 1 | 0;
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp.handles_1 = tmp_1;
    this.firstFreeHandle_1 = 0;
  }
  protoOf(SnapshotDoubleIndexHeap).get_size_woubt6_k$ = function () {
    return this.size_1;
  };
  protoOf(SnapshotDoubleIndexHeap).lowestOrDefault_ngsad0_k$ = function (default_0) {
    return this.size_1 > 0 ? this.values_1[0] : default_0;
  };
  protoOf(SnapshotDoubleIndexHeap).lowestOrDefault$default_2xw3r2_k$ = function (default_0, $super) {
    default_0 = default_0 === VOID ? 0 : default_0;
    return $super === VOID ? this.lowestOrDefault_ngsad0_k$(default_0) : $super.lowestOrDefault_ngsad0_k$.call(this, default_0);
  };
  protoOf(SnapshotDoubleIndexHeap).add_lnluon_k$ = function (value) {
    ensure(this, this.size_1 + 1 | 0);
    var tmp1 = this.size_1;
    this.size_1 = tmp1 + 1 | 0;
    var i = tmp1;
    var handle = allocateHandle(this);
    this.values_1[i] = value;
    this.index_1[i] = handle;
    this.handles_1[handle] = i;
    shiftUp(this, i);
    return handle;
  };
  protoOf(SnapshotDoubleIndexHeap).remove_v58o70_k$ = function (handle) {
    var i = this.handles_1[handle];
    swap(this, i, this.size_1 - 1 | 0);
    this.size_1 = this.size_1 - 1 | 0;
    shiftUp(this, i);
    shiftDown(this, i);
    freeHandle(this, handle);
  };
  protoOf(SnapshotDoubleIndexHeap).validate_69icli_k$ = function () {
    var inductionVariable = 1;
    var last = this.size_1;
    if (inductionVariable < last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var parent = ((index + 1 | 0) >> 1) - 1 | 0;
        if (this.values_1[parent] > this.values_1[index]) {
          // Inline function 'kotlin.error' call
          var message = 'Index ' + index + ' is out of place';
          throw IllegalStateException_init_$Create$(toString(message));
        }
      }
       while (inductionVariable < last);
  };
  protoOf(SnapshotDoubleIndexHeap).validateHandle_quut0y_k$ = function (handle, value) {
    var i = this.handles_1[handle];
    if (!(this.index_1[i] === handle)) {
      // Inline function 'kotlin.error' call
      var message = 'Index for handle ' + handle + ' is corrupted';
      throw IllegalStateException_init_$Create$(toString(message));
    }
    if (!(this.values_1[i] === value)) {
      // Inline function 'kotlin.error' call
      var message_0 = 'Value for handle ' + handle + ' was ' + this.values_1[i] + ' but was supposed to be ' + value;
      throw IllegalStateException_init_$Create$(toString(message_0));
    }
  };
  function get_INITIAL_CAPACITY() {
    return INITIAL_CAPACITY;
  }
  var INITIAL_CAPACITY;
  function _get_upperSet__s71lrf($this) {
    return $this.upperSet_1;
  }
  function _get_lowerSet__fzn1hm($this) {
    return $this.lowerSet_1;
  }
  function _get_lowerBound__ftiypa($this) {
    return $this.lowerBound_1;
  }
  function _get_belowBound__tj4r6q($this) {
    return $this.belowBound_1;
  }
  function Companion_12() {
    Companion_instance_12 = this;
    this.EMPTY_1 = new SnapshotIdSet(new Long(0, 0), new Long(0, 0), 0, null);
  }
  protoOf(Companion_12).get_EMPTY_i8q41w_k$ = function () {
    return this.EMPTY_1;
  };
  var Companion_instance_12;
  function Companion_getInstance_14() {
    if (Companion_instance_12 == null)
      new Companion_12();
    return Companion_instance_12;
  }
  function SnapshotIdSet$iterator$slambda(this$0, resultContinuation) {
    this.this$0__1 = this$0;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(SnapshotIdSet$iterator$slambda).invoke_pgsqqr_k$ = function ($this$sequence, $completion) {
    var tmp = this.create_rkcuc7_k$($this$sequence, $completion);
    tmp.set_result_xj64lm_k$(Unit_getInstance());
    tmp.set_exception_px07aa_k$(null);
    return tmp.doResume_5yljmg_k$();
  };
  protoOf(SnapshotIdSet$iterator$slambda).invoke_qns8j1_k$ = function (p1, $completion) {
    return this.invoke_pgsqqr_k$(p1 instanceof SequenceScope ? p1 : THROW_CCE(), $completion);
  };
  protoOf(SnapshotIdSet$iterator$slambda).doResume_5yljmg_k$ = function () {
    var suspendResult = this.get_result_iyg5d2_k$();
    $sm: do
      try {
        var tmp = this.get_state_iypx7s_k$();
        switch (tmp) {
          case 0:
            this.set_exceptionState_fex74n_k$(15);
            this.belowBound0__1 = this.this$0__1.belowBound_1;
            if (!(this.belowBound0__1 == null)) {
              this.tmp0_iterator1__1 = intArrayIterator(this.belowBound0__1);
              this.set_state_rjd8d0_k$(1);
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(4);
              continue $sm;
            }

          case 1:
            if (!this.tmp0_iterator1__1.hasNext_bitz1p_k$()) {
              this.set_state_rjd8d0_k$(3);
              continue $sm;
            }

            this.element2__1 = this.tmp0_iterator1__1.next_20eer_k$();
            this.set_state_rjd8d0_k$(2);
            suspendResult = this.$this$sequence_1.yield_3xhcex_k$(this.element2__1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.set_state_rjd8d0_k$(1);
            continue $sm;
          case 3:
            this.set_state_rjd8d0_k$(4);
            continue $sm;
          case 4:
            if (!this.this$0__1.lowerSet_1.equals(new Long(0, 0))) {
              this.tmp1_iterator3__1 = until(0, Companion_getInstance_0().get_SIZE_BITS_7qhjj9_k$()).iterator_jk1svi_k$();
              this.set_state_rjd8d0_k$(5);
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(9);
              continue $sm;
            }

          case 5:
            if (!this.tmp1_iterator3__1.hasNext_bitz1p_k$()) {
              this.set_state_rjd8d0_k$(8);
              continue $sm;
            }

            this.index4__1 = this.tmp1_iterator3__1.next_20eer_k$();
            if (!this.this$0__1.lowerSet_1.and_4spn93_k$((new Long(1, 0)).shl_bg8if3_k$(this.index4__1)).equals(new Long(0, 0))) {
              this.set_state_rjd8d0_k$(6);
              suspendResult = this.$this$sequence_1.yield_3xhcex_k$(this.index4__1 + this.this$0__1.lowerBound_1 | 0, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(7);
              continue $sm;
            }

          case 6:
            this.set_state_rjd8d0_k$(7);
            continue $sm;
          case 7:
            this.set_state_rjd8d0_k$(5);
            continue $sm;
          case 8:
            this.set_state_rjd8d0_k$(9);
            continue $sm;
          case 9:
            if (!this.this$0__1.upperSet_1.equals(new Long(0, 0))) {
              this.tmp2_iterator5__1 = until(0, Companion_getInstance_0().get_SIZE_BITS_7qhjj9_k$()).iterator_jk1svi_k$();
              this.set_state_rjd8d0_k$(10);
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(14);
              continue $sm;
            }

          case 10:
            if (!this.tmp2_iterator5__1.hasNext_bitz1p_k$()) {
              this.set_state_rjd8d0_k$(13);
              continue $sm;
            }

            this.index6__1 = this.tmp2_iterator5__1.next_20eer_k$();
            if (!this.this$0__1.upperSet_1.and_4spn93_k$((new Long(1, 0)).shl_bg8if3_k$(this.index6__1)).equals(new Long(0, 0))) {
              this.set_state_rjd8d0_k$(11);
              suspendResult = this.$this$sequence_1.yield_3xhcex_k$((this.index6__1 + Companion_getInstance_0().get_SIZE_BITS_7qhjj9_k$() | 0) + this.this$0__1.lowerBound_1 | 0, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.set_state_rjd8d0_k$(12);
              continue $sm;
            }

          case 11:
            this.set_state_rjd8d0_k$(12);
            continue $sm;
          case 12:
            this.set_state_rjd8d0_k$(10);
            continue $sm;
          case 13:
            this.set_state_rjd8d0_k$(14);
            continue $sm;
          case 14:
            return Unit_getInstance();
          case 15:
            throw this.get_exception_x0n6w6_k$();
        }
      } catch ($p) {
        var e = $p;
        if (this.get_exceptionState_wflpxn_k$() === 15) {
          throw e;
        } else {
          this.set_state_rjd8d0_k$(this.get_exceptionState_wflpxn_k$());
          this.set_exception_px07aa_k$(e);
        }
      }
     while (true);
  };
  protoOf(SnapshotIdSet$iterator$slambda).create_rkcuc7_k$ = function ($this$sequence, completion) {
    var i = new SnapshotIdSet$iterator$slambda(this.this$0__1, completion);
    i.$this$sequence_1 = $this$sequence;
    return i;
  };
  protoOf(SnapshotIdSet$iterator$slambda).create_wyq9v6_k$ = function (value, completion) {
    return this.create_rkcuc7_k$(value instanceof SequenceScope ? value : THROW_CCE(), completion);
  };
  function SnapshotIdSet$iterator$slambda_0(this$0, resultContinuation) {
    var i = new SnapshotIdSet$iterator$slambda(this$0, resultContinuation);
    var l = function ($this$sequence, $completion) {
      return i.invoke_pgsqqr_k$($this$sequence, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function SnapshotIdSet(upperSet, lowerSet, lowerBound, belowBound) {
    Companion_getInstance_14();
    this.upperSet_1 = upperSet;
    this.lowerSet_1 = lowerSet;
    this.lowerBound_1 = lowerBound;
    this.belowBound_1 = belowBound;
  }
  protoOf(SnapshotIdSet).get_c1px32_k$ = function (bit) {
    var offset = bit - this.lowerBound_1 | 0;
    if (offset >= 0 ? offset < Companion_getInstance_0().get_SIZE_BITS_7qhjj9_k$() : false) {
      return !(new Long(1, 0)).shl_bg8if3_k$(offset).and_4spn93_k$(this.lowerSet_1).equals(new Long(0, 0));
    } else if (offset >= Companion_getInstance_0().get_SIZE_BITS_7qhjj9_k$() ? offset < imul(Companion_getInstance_0().get_SIZE_BITS_7qhjj9_k$(), 2) : false) {
      return !(new Long(1, 0)).shl_bg8if3_k$(offset - Companion_getInstance_0().get_SIZE_BITS_7qhjj9_k$() | 0).and_4spn93_k$(this.upperSet_1).equals(new Long(0, 0));
    } else if (offset > 0) {
      return false;
    } else {
      var tmp0_safe_receiver = this.belowBound_1;
      var tmp;
      if (tmp0_safe_receiver == null) {
        tmp = null;
      } else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.snapshots.SnapshotIdSet.get.<anonymous>' call
        tmp = binarySearch(tmp0_safe_receiver, bit) >= 0;
      }
      var tmp1_elvis_lhs = tmp;
      return tmp1_elvis_lhs == null ? false : tmp1_elvis_lhs;
    }
  };
  protoOf(SnapshotIdSet).set_uznzxy_k$ = function (bit) {
    var offset = bit - this.lowerBound_1 | 0;
    if (offset >= 0 ? offset < Companion_getInstance_0().get_SIZE_BITS_7qhjj9_k$() : false) {
      var mask = (new Long(1, 0)).shl_bg8if3_k$(offset);
      if (this.lowerSet_1.and_4spn93_k$(mask).equals(new Long(0, 0))) {
        return new SnapshotIdSet(this.upperSet_1, this.lowerSet_1.or_v7fvkl_k$(mask), this.lowerBound_1, this.belowBound_1);
      }
    } else if (offset >= Companion_getInstance_0().get_SIZE_BITS_7qhjj9_k$() ? offset < imul(Companion_getInstance_0().get_SIZE_BITS_7qhjj9_k$(), 2) : false) {
      var mask_0 = (new Long(1, 0)).shl_bg8if3_k$(offset - Companion_getInstance_0().get_SIZE_BITS_7qhjj9_k$() | 0);
      if (this.upperSet_1.and_4spn93_k$(mask_0).equals(new Long(0, 0))) {
        return new SnapshotIdSet(this.upperSet_1.or_v7fvkl_k$(mask_0), this.lowerSet_1, this.lowerBound_1, this.belowBound_1);
      }
    } else if (offset >= imul(Companion_getInstance_0().get_SIZE_BITS_7qhjj9_k$(), 2)) {
      if (!this.get_c1px32_k$(bit)) {
        var newUpperSet = this.upperSet_1;
        var newLowerSet = this.lowerSet_1;
        var newLowerBound = this.lowerBound_1;
        var newBelowBound = null;
        var targetLowerBound = imul((bit + 1 | 0) / Companion_getInstance_0().get_SIZE_BITS_7qhjj9_k$() | 0, Companion_getInstance_0().get_SIZE_BITS_7qhjj9_k$());
        $l$loop: while (newLowerBound < targetLowerBound) {
          if (!newLowerSet.equals(new Long(0, 0))) {
            if (newBelowBound == null) {
              // Inline function 'kotlin.apply' call
              // Inline function 'kotlin.collections.mutableListOf' call
              var this_0 = ArrayList_init_$Create$();
              // Inline function 'kotlin.contracts.contract' call
              // Inline function 'androidx.compose.runtime.snapshots.SnapshotIdSet.set.<anonymous>' call
              var tmp0_safe_receiver = this.belowBound_1;
              if (tmp0_safe_receiver == null)
                null;
              else {
                // Inline function 'kotlin.let' call
                // Inline function 'kotlin.contracts.contract' call
                var inductionVariable = 0;
                var last = tmp0_safe_receiver.length;
                while (inductionVariable < last) {
                  var element = tmp0_safe_receiver[inductionVariable];
                  inductionVariable = inductionVariable + 1 | 0;
                  // Inline function 'androidx.compose.runtime.snapshots.SnapshotIdSet.set.<anonymous>.<anonymous>.<anonymous>' call
                  this_0.add_utx5q5_k$(element);
                }
              }
              newBelowBound = this_0;
            }
            // Inline function 'kotlin.repeat' call
            var times = Companion_getInstance_0().get_SIZE_BITS_7qhjj9_k$();
            // Inline function 'kotlin.contracts.contract' call
            var inductionVariable_0 = 0;
            if (inductionVariable_0 < times)
              do {
                var index = inductionVariable_0;
                inductionVariable_0 = inductionVariable_0 + 1 | 0;
                // Inline function 'androidx.compose.runtime.snapshots.SnapshotIdSet.set.<anonymous>' call
                if (!newLowerSet.and_4spn93_k$((new Long(1, 0)).shl_bg8if3_k$(index)).equals(new Long(0, 0))) {
                  newBelowBound.add_utx5q5_k$(index + newLowerBound | 0);
                }
              }
               while (inductionVariable_0 < times);
          }
          if (newUpperSet.equals(new Long(0, 0))) {
            newLowerBound = targetLowerBound;
            newLowerSet = new Long(0, 0);
            break $l$loop;
          }
          newLowerSet = newUpperSet;
          newUpperSet = new Long(0, 0);
          newLowerBound = newLowerBound + Companion_getInstance_0().get_SIZE_BITS_7qhjj9_k$() | 0;
        }
        var tmp = newUpperSet;
        var tmp_0 = newLowerSet;
        var tmp_1 = newLowerBound;
        var tmp0_safe_receiver_0 = newBelowBound;
        var tmp1_elvis_lhs = tmp0_safe_receiver_0 == null ? null : toIntArray(tmp0_safe_receiver_0);
        return (new SnapshotIdSet(tmp, tmp_0, tmp_1, tmp1_elvis_lhs == null ? this.belowBound_1 : tmp1_elvis_lhs)).set_uznzxy_k$(bit);
      }
    } else {
      var tmp2_elvis_lhs = this.belowBound_1;
      var tmp_2;
      if (tmp2_elvis_lhs == null) {
        // Inline function 'kotlin.intArrayOf' call
        var tmp$ret$3 = new Int32Array([bit]);
        return new SnapshotIdSet(this.upperSet_1, this.lowerSet_1, this.lowerBound_1, tmp$ret$3);
      } else {
        tmp_2 = tmp2_elvis_lhs;
      }
      var array = tmp_2;
      var location = binarySearch(array, bit);
      if (location < 0) {
        var insertLocation = -(location + 1 | 0) | 0;
        var newSize = array.length + 1 | 0;
        var newBelowBound_0 = new Int32Array(newSize);
        // Inline function 'kotlin.collections.copyInto' call
        // Inline function 'kotlin.js.unsafeCast' call
        // Inline function 'kotlin.js.asDynamic' call
        var tmp_3 = array;
        // Inline function 'kotlin.js.unsafeCast' call
        // Inline function 'kotlin.js.asDynamic' call
        arrayCopy(tmp_3, newBelowBound_0, 0, 0, insertLocation);
        // Inline function 'kotlin.collections.copyInto' call
        var destinationOffset = insertLocation + 1 | 0;
        var endIndex = newSize - 1 | 0;
        // Inline function 'kotlin.js.unsafeCast' call
        // Inline function 'kotlin.js.asDynamic' call
        var tmp_4 = array;
        // Inline function 'kotlin.js.unsafeCast' call
        // Inline function 'kotlin.js.asDynamic' call
        arrayCopy(tmp_4, newBelowBound_0, destinationOffset, insertLocation, endIndex);
        newBelowBound_0[insertLocation] = bit;
        return new SnapshotIdSet(this.upperSet_1, this.lowerSet_1, this.lowerBound_1, newBelowBound_0);
      }
    }
    return this;
  };
  protoOf(SnapshotIdSet).clear_yx1ndh_k$ = function (bit) {
    var offset = bit - this.lowerBound_1 | 0;
    if (offset >= 0 ? offset < Companion_getInstance_0().get_SIZE_BITS_7qhjj9_k$() : false) {
      var mask = (new Long(1, 0)).shl_bg8if3_k$(offset);
      if (!this.lowerSet_1.and_4spn93_k$(mask).equals(new Long(0, 0))) {
        return new SnapshotIdSet(this.upperSet_1, this.lowerSet_1.and_4spn93_k$(mask.inv_28kx_k$()), this.lowerBound_1, this.belowBound_1);
      }
    } else if (offset >= Companion_getInstance_0().get_SIZE_BITS_7qhjj9_k$() ? offset < imul(Companion_getInstance_0().get_SIZE_BITS_7qhjj9_k$(), 2) : false) {
      var mask_0 = (new Long(1, 0)).shl_bg8if3_k$(offset - Companion_getInstance_0().get_SIZE_BITS_7qhjj9_k$() | 0);
      if (!this.upperSet_1.and_4spn93_k$(mask_0).equals(new Long(0, 0))) {
        return new SnapshotIdSet(this.upperSet_1.and_4spn93_k$(mask_0.inv_28kx_k$()), this.lowerSet_1, this.lowerBound_1, this.belowBound_1);
      }
    } else if (offset < 0) {
      var array = this.belowBound_1;
      if (!(array == null)) {
        var location = binarySearch(array, bit);
        if (location >= 0) {
          var newSize = array.length - 1 | 0;
          if (newSize === 0) {
            return new SnapshotIdSet(this.upperSet_1, this.lowerSet_1, this.lowerBound_1, null);
          }
          var newBelowBound = new Int32Array(newSize);
          if (location > 0) {
            // Inline function 'kotlin.collections.copyInto' call
            // Inline function 'kotlin.js.unsafeCast' call
            // Inline function 'kotlin.js.asDynamic' call
            var tmp = array;
            // Inline function 'kotlin.js.unsafeCast' call
            // Inline function 'kotlin.js.asDynamic' call
            arrayCopy(tmp, newBelowBound, 0, 0, location);
          }
          if (location < newSize) {
            // Inline function 'kotlin.collections.copyInto' call
            var startIndex = location + 1 | 0;
            var endIndex = newSize + 1 | 0;
            // Inline function 'kotlin.js.unsafeCast' call
            // Inline function 'kotlin.js.asDynamic' call
            var tmp_0 = array;
            // Inline function 'kotlin.js.unsafeCast' call
            // Inline function 'kotlin.js.asDynamic' call
            arrayCopy(tmp_0, newBelowBound, location, startIndex, endIndex);
          }
          return new SnapshotIdSet(this.upperSet_1, this.lowerSet_1, this.lowerBound_1, newBelowBound);
        }
      }
    }
    return this;
  };
  protoOf(SnapshotIdSet).andNot_eiw98e_k$ = function (bits) {
    if (bits === Companion_getInstance_14().EMPTY_1)
      return this;
    if (this === Companion_getInstance_14().EMPTY_1)
      return Companion_getInstance_14().EMPTY_1;
    var tmp;
    if (bits.lowerBound_1 === this.lowerBound_1 ? bits.belowBound_1 === this.belowBound_1 : false) {
      tmp = new SnapshotIdSet(this.upperSet_1.and_4spn93_k$(bits.upperSet_1.inv_28kx_k$()), this.lowerSet_1.and_4spn93_k$(bits.lowerSet_1.inv_28kx_k$()), this.lowerBound_1, this.belowBound_1);
    } else {
      // Inline function 'kotlin.collections.fold' call
      var accumulator = this;
      var tmp0_iterator = bits.iterator_jk1svi_k$();
      while (tmp0_iterator.hasNext_bitz1p_k$()) {
        var element = tmp0_iterator.next_20eer_k$();
        // Inline function 'androidx.compose.runtime.snapshots.SnapshotIdSet.andNot.<anonymous>' call
        accumulator = accumulator.clear_yx1ndh_k$(element);
      }
      tmp = accumulator;
    }
    return tmp;
  };
  protoOf(SnapshotIdSet).and_fkvc5j_k$ = function (bits) {
    if (equals(bits, Companion_getInstance_14().EMPTY_1))
      return Companion_getInstance_14().EMPTY_1;
    if (equals(this, Companion_getInstance_14().EMPTY_1))
      return Companion_getInstance_14().EMPTY_1;
    var tmp;
    if (bits.lowerBound_1 === this.lowerBound_1 ? bits.belowBound_1 === this.belowBound_1 : false) {
      var newUpper = this.upperSet_1.and_4spn93_k$(bits.upperSet_1);
      var newLower = this.lowerSet_1.and_4spn93_k$(bits.lowerSet_1);
      tmp = ((newUpper.equals(new Long(0, 0)) ? newLower.equals(new Long(0, 0)) : false) ? this.belowBound_1 == null : false) ? Companion_getInstance_14().EMPTY_1 : new SnapshotIdSet(this.upperSet_1.and_4spn93_k$(bits.upperSet_1), this.lowerSet_1.and_4spn93_k$(bits.lowerSet_1), this.lowerBound_1, this.belowBound_1);
    } else {
      var tmp_0;
      if (this.belowBound_1 == null) {
        // Inline function 'kotlin.collections.fold' call
        var accumulator = Companion_getInstance_14().EMPTY_1;
        var tmp0_iterator = this.iterator_jk1svi_k$();
        while (tmp0_iterator.hasNext_bitz1p_k$()) {
          var element = tmp0_iterator.next_20eer_k$();
          // Inline function 'androidx.compose.runtime.snapshots.SnapshotIdSet.and.<anonymous>' call
          var previous = accumulator;
          accumulator = bits.get_c1px32_k$(element) ? previous.set_uznzxy_k$(element) : previous;
        }
        tmp_0 = accumulator;
      } else {
        // Inline function 'kotlin.collections.fold' call
        var accumulator_0 = Companion_getInstance_14().EMPTY_1;
        var tmp0_iterator_0 = bits.iterator_jk1svi_k$();
        while (tmp0_iterator_0.hasNext_bitz1p_k$()) {
          var element_0 = tmp0_iterator_0.next_20eer_k$();
          // Inline function 'androidx.compose.runtime.snapshots.SnapshotIdSet.and.<anonymous>' call
          var previous_0 = accumulator_0;
          accumulator_0 = this.get_c1px32_k$(element_0) ? previous_0.set_uznzxy_k$(element_0) : previous_0;
        }
        tmp_0 = accumulator_0;
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  protoOf(SnapshotIdSet).or_qlp1h7_k$ = function (bits) {
    if (bits === Companion_getInstance_14().EMPTY_1)
      return this;
    if (this === Companion_getInstance_14().EMPTY_1)
      return bits;
    var tmp;
    if (bits.lowerBound_1 === this.lowerBound_1 ? bits.belowBound_1 === this.belowBound_1 : false) {
      tmp = new SnapshotIdSet(this.upperSet_1.or_v7fvkl_k$(bits.upperSet_1), this.lowerSet_1.or_v7fvkl_k$(bits.lowerSet_1), this.lowerBound_1, this.belowBound_1);
    } else {
      var tmp_0;
      if (this.belowBound_1 == null) {
        // Inline function 'kotlin.collections.fold' call
        var accumulator = bits;
        var tmp0_iterator = this.iterator_jk1svi_k$();
        while (tmp0_iterator.hasNext_bitz1p_k$()) {
          var element = tmp0_iterator.next_20eer_k$();
          // Inline function 'androidx.compose.runtime.snapshots.SnapshotIdSet.or.<anonymous>' call
          accumulator = accumulator.set_uznzxy_k$(element);
        }
        tmp_0 = accumulator;
      } else {
        // Inline function 'kotlin.collections.fold' call
        var accumulator_0 = this;
        var tmp0_iterator_0 = bits.iterator_jk1svi_k$();
        while (tmp0_iterator_0.hasNext_bitz1p_k$()) {
          var element_0 = tmp0_iterator_0.next_20eer_k$();
          // Inline function 'androidx.compose.runtime.snapshots.SnapshotIdSet.or.<anonymous>' call
          accumulator_0 = accumulator_0.set_uznzxy_k$(element_0);
        }
        tmp_0 = accumulator_0;
      }
      tmp = tmp_0;
    }
    return tmp;
  };
  protoOf(SnapshotIdSet).iterator_jk1svi_k$ = function () {
    return sequence(SnapshotIdSet$iterator$slambda_0(this, null)).iterator_jk1svi_k$();
  };
  protoOf(SnapshotIdSet).fastForEach_tnh3dt_k$ = function (block) {
    var belowBound = this.belowBound_1;
    if (!(belowBound == null)) {
      var inductionVariable = 0;
      var last = belowBound.length;
      while (inductionVariable < last) {
        var element = belowBound[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        block(element);
      }
    }
    if (!this.lowerSet_1.equals(new Long(0, 0))) {
      var inductionVariable_0 = 0;
      var last_0 = Companion_getInstance_0().get_SIZE_BITS_7qhjj9_k$();
      if (inductionVariable_0 < last_0)
        do {
          var index = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + 1 | 0;
          if (!this.lowerSet_1.and_4spn93_k$((new Long(1, 0)).shl_bg8if3_k$(index)).equals(new Long(0, 0))) {
            block(index + this.lowerBound_1 | 0);
          }
        }
         while (inductionVariable_0 < last_0);
    }
    if (!this.upperSet_1.equals(new Long(0, 0))) {
      var inductionVariable_1 = 0;
      var last_1 = Companion_getInstance_0().get_SIZE_BITS_7qhjj9_k$();
      if (inductionVariable_1 < last_1)
        do {
          var index_0 = inductionVariable_1;
          inductionVariable_1 = inductionVariable_1 + 1 | 0;
          if (!this.upperSet_1.and_4spn93_k$((new Long(1, 0)).shl_bg8if3_k$(index_0)).equals(new Long(0, 0))) {
            block((index_0 + Companion_getInstance_0().get_SIZE_BITS_7qhjj9_k$() | 0) + this.lowerBound_1 | 0);
          }
        }
         while (inductionVariable_1 < last_1);
    }
  };
  protoOf(SnapshotIdSet).lowest_clhjmi_k$ = function (default_0) {
    var belowBound = this.belowBound_1;
    if (!(belowBound == null))
      return belowBound[0];
    if (!this.lowerSet_1.equals(new Long(0, 0)))
      return this.lowerBound_1 + lowestBitOf(this.lowerSet_1) | 0;
    if (!this.upperSet_1.equals(new Long(0, 0)))
      return (this.lowerBound_1 + Companion_getInstance_0().get_SIZE_BITS_7qhjj9_k$() | 0) + lowestBitOf(this.upperSet_1) | 0;
    return default_0;
  };
  protoOf(SnapshotIdSet).toString = function () {
    var tmp = anyToString(this);
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var destination = ArrayList_init_$Create$_0(collectionSizeOrDefault(this, 10));
    var tmp0_iterator = this.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var item = tmp0_iterator.next_20eer_k$();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotIdSet.toString.<anonymous>' call
      var tmp$ret$0 = item.toString();
      destination.add_utx5q5_k$(tmp$ret$0);
    }
    return tmp + ' [' + fastJoinToString(destination) + ']';
  };
  function binarySearch(_this__u8e3s4, value) {
    var low = 0;
    var high = _this__u8e3s4.length - 1 | 0;
    while (low <= high) {
      var mid = (low + high | 0) >>> 1 | 0;
      var midVal = _this__u8e3s4[mid];
      if (value > midVal)
        low = mid + 1 | 0;
      else if (value < midVal)
        high = mid - 1 | 0;
      else
        return mid;
    }
    return -(low + 1 | 0) | 0;
  }
  function lowestBitOf(bits) {
    var b = bits;
    var base = 0;
    if (b.and_4spn93_k$(new Long(-1, 0)).equals(new Long(0, 0))) {
      base = base + 32 | 0;
      b = b.shr_9fl3wl_k$(32);
    }
    if (b.and_4spn93_k$(new Long(65535, 0)).equals(new Long(0, 0))) {
      base = base + 16 | 0;
      b = b.shr_9fl3wl_k$(16);
    }
    if (b.and_4spn93_k$(new Long(255, 0)).equals(new Long(0, 0))) {
      base = base + 8 | 0;
      b = b.shr_9fl3wl_k$(8);
    }
    if (b.and_4spn93_k$(new Long(15, 0)).equals(new Long(0, 0))) {
      base = base + 4 | 0;
      b = b.shr_9fl3wl_k$(4);
    }
    if (!b.and_4spn93_k$(new Long(1, 0)).equals(new Long(0, 0)))
      return base;
    if (!b.and_4spn93_k$(new Long(2, 0)).equals(new Long(0, 0)))
      return base + 1 | 0;
    if (!b.and_4spn93_k$(new Long(4, 0)).equals(new Long(0, 0)))
      return base + 2 | 0;
    if (!b.and_4spn93_k$(new Long(8, 0)).equals(new Long(0, 0)))
      return base + 3 | 0;
    return -1;
  }
  function SnapshotMutableState() {
  }
  function get_sync() {
    _init_properties_SnapshotStateList_kt__mu1ud5();
    return sync_0;
  }
  var sync_0;
  function _set_firstStateRecord__9tdv8b($this, _set____db54di) {
    $this.firstStateRecord_1 = _set____db54di;
  }
  function StateListStateRecord(list) {
    StateRecord.call(this);
    this.list_1 = list;
    this.modification_1 = 0;
  }
  protoOf(StateListStateRecord).set_list_1ytzb5_k$ = function (_set____db54di) {
    this.list_1 = _set____db54di;
  };
  protoOf(StateListStateRecord).get_list_wopuqv_k$ = function () {
    return this.list_1;
  };
  protoOf(StateListStateRecord).set_modification_1hsctt_k$ = function (_set____db54di) {
    this.modification_1 = _set____db54di;
  };
  protoOf(StateListStateRecord).get_modification_6s12qj_k$ = function () {
    return this.modification_1;
  };
  protoOf(StateListStateRecord).assign_k75sor_k$ = function (value) {
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    _get_sync_$accessor$mgqpbl_8m20to();
    var tmp = this;
    tmp.list_1 = (value instanceof StateListStateRecord ? value : THROW_CCE()).list_1;
    this.modification_1 = value.modification_1;
  };
  protoOf(StateListStateRecord).create_md4cuc_k$ = function () {
    return new StateListStateRecord(this.list_1);
  };
  function writable_0($this, block) {
    // Inline function 'androidx.compose.runtime.snapshots.writable' call
    var tmp = $this.firstStateRecord_1;
    var this_0 = tmp instanceof StateListStateRecord ? tmp : THROW_CCE();
    var snapshot = get_snapshotInitializer();
    // Inline function 'kotlin.also' call
    // Inline function 'androidx.compose.runtime.snapshots.sync' call
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    get_lock();
    // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
    snapshot = Companion_getInstance_12().get_current_jwi6j4_k$();
    var this_1 = block(writableRecord(this_0, $this, snapshot));
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
    notifyWrite(snapshot, $this);
    return this_1;
  }
  function withCurrent_0($this, block) {
    // Inline function 'androidx.compose.runtime.snapshots.withCurrent' call
    var tmp = $this.firstStateRecord_1;
    var this_0 = tmp instanceof StateListStateRecord ? tmp : THROW_CCE();
    return block(current(this_0));
  }
  function mutateBoolean($this, block) {
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.mutate' call
    var result;
    $l$loop: while (true) {
      var oldList = null;
      var currentModification = 0;
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      _get_sync_$accessor$mgqpbl_8m20to();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.withCurrent' call
      // Inline function 'androidx.compose.runtime.snapshots.withCurrent' call
      var tmp = $this.firstStateRecord_1;
      var this_0 = tmp instanceof StateListStateRecord ? tmp : THROW_CCE();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.mutate.<anonymous>.<anonymous>' call
      var current_0 = current(this_0);
      currentModification = current_0.modification_1;
      oldList = current_0.list_1;
      var builder = ensureNotNull(oldList).builder_3thy1n_k$();
      result = block(builder);
      var newList = builder.build_1k0s4u_k$();
      var tmp_0;
      if (equals(newList, oldList)) {
        tmp_0 = true;
      } else {
        // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.writable' call
        // Inline function 'androidx.compose.runtime.snapshots.writable' call
        var tmp_1 = $this.firstStateRecord_1;
        var this_1 = tmp_1 instanceof StateListStateRecord ? tmp_1 : THROW_CCE();
        var snapshot = get_snapshotInitializer();
        // Inline function 'kotlin.also' call
        // Inline function 'androidx.compose.runtime.snapshots.sync' call
        // Inline function 'androidx.compose.runtime.synchronized' call
        // Inline function 'kotlinx.atomicfu.locks.synchronized' call
        get_lock();
        // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
        snapshot = Companion_getInstance_12().get_current_jwi6j4_k$();
        // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.mutate.<anonymous>' call
        var $this$writable = writableRecord(this_1, $this, snapshot);
        // Inline function 'androidx.compose.runtime.synchronized' call
        // Inline function 'kotlinx.atomicfu.locks.synchronized' call
        _get_sync_$accessor$mgqpbl_8m20to();
        // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.mutate.<anonymous>.<anonymous>' call
        var tmp_2;
        if ($this$writable.modification_1 === currentModification) {
          $this$writable.list_1 = newList;
          $this$writable.modification_1 = $this$writable.modification_1 + 1 | 0;
          tmp_2 = true;
        } else {
          tmp_2 = false;
        }
        var this_2 = tmp_2;
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
        notifyWrite(snapshot, $this);
        tmp_0 = this_2;
      }
      if (tmp_0)
        break $l$loop;
    }
    return result;
  }
  function mutate_3($this, block) {
    var result;
    $l$loop: while (true) {
      var oldList = null;
      var currentModification = 0;
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      _get_sync_$accessor$mgqpbl_8m20to();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.withCurrent' call
      // Inline function 'androidx.compose.runtime.snapshots.withCurrent' call
      var tmp = $this.firstStateRecord_1;
      var this_0 = tmp instanceof StateListStateRecord ? tmp : THROW_CCE();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.mutate.<anonymous>.<anonymous>' call
      var current_0 = current(this_0);
      currentModification = current_0.modification_1;
      oldList = current_0.list_1;
      var builder = ensureNotNull(oldList).builder_3thy1n_k$();
      result = block(builder);
      var newList = builder.build_1k0s4u_k$();
      var tmp_0;
      if (equals(newList, oldList)) {
        tmp_0 = true;
      } else {
        // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.writable' call
        // Inline function 'androidx.compose.runtime.snapshots.writable' call
        var tmp_1 = $this.firstStateRecord_1;
        var this_1 = tmp_1 instanceof StateListStateRecord ? tmp_1 : THROW_CCE();
        var snapshot = get_snapshotInitializer();
        // Inline function 'kotlin.also' call
        // Inline function 'androidx.compose.runtime.snapshots.sync' call
        // Inline function 'androidx.compose.runtime.synchronized' call
        // Inline function 'kotlinx.atomicfu.locks.synchronized' call
        get_lock();
        // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
        snapshot = Companion_getInstance_12().get_current_jwi6j4_k$();
        // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.mutate.<anonymous>' call
        var $this$writable = writableRecord(this_1, $this, snapshot);
        // Inline function 'androidx.compose.runtime.synchronized' call
        // Inline function 'kotlinx.atomicfu.locks.synchronized' call
        _get_sync_$accessor$mgqpbl_8m20to();
        // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.mutate.<anonymous>.<anonymous>' call
        var tmp_2;
        if ($this$writable.modification_1 === currentModification) {
          $this$writable.list_1 = newList;
          $this$writable.modification_1 = $this$writable.modification_1 + 1 | 0;
          tmp_2 = true;
        } else {
          tmp_2 = false;
        }
        var this_2 = tmp_2;
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
        notifyWrite(snapshot, $this);
        tmp_0 = this_2;
      }
      if (tmp_0)
        break $l$loop;
    }
    return result;
  }
  function update($this, block) {
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate' call
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>' call
    var result;
    $l$loop_0: while (true) {
      var oldList = null;
      var currentModification = 0;
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      _get_sync_$accessor$mgqpbl_8m20to();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.withCurrent' call
      // Inline function 'androidx.compose.runtime.snapshots.withCurrent' call
      var tmp = $this.firstStateRecord_1;
      var this_0 = tmp instanceof StateListStateRecord ? tmp : THROW_CCE();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>.<anonymous>.<anonymous>' call
      var current_0 = current(this_0);
      currentModification = current_0.modification_1;
      oldList = current_0.list_1;
      var newList = block(ensureNotNull(oldList));
      if (equals(newList, oldList)) {
        result = false;
        break $l$loop_0;
      }
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.writable' call
      // Inline function 'androidx.compose.runtime.snapshots.writable' call
      var tmp_0 = $this.firstStateRecord_1;
      var this_1 = tmp_0 instanceof StateListStateRecord ? tmp_0 : THROW_CCE();
      var snapshot = get_snapshotInitializer();
      // Inline function 'kotlin.also' call
      // Inline function 'androidx.compose.runtime.snapshots.sync' call
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      get_lock();
      // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
      snapshot = Companion_getInstance_12().get_current_jwi6j4_k$();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>.<anonymous>' call
      var $this$writable = writableRecord(this_1, $this, snapshot);
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      _get_sync_$accessor$mgqpbl_8m20to();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>.<anonymous>.<anonymous>' call
      var tmp_1;
      if ($this$writable.modification_1 === currentModification) {
        $this$writable.list_1 = newList;
        $this$writable.modification_1 = $this$writable.modification_1 + 1 | 0;
        tmp_1 = true;
      } else {
        tmp_1 = false;
      }
      var this_2 = tmp_1;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
      notifyWrite(snapshot, $this);
      if (this_2) {
        result = true;
        break $l$loop_0;
      }
    }
  }
  function conditionalUpdate($this, block) {
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>' call
    var result;
    $l$loop_0: while (true) {
      var oldList = null;
      var currentModification = 0;
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      _get_sync_$accessor$mgqpbl_8m20to();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.withCurrent' call
      // Inline function 'androidx.compose.runtime.snapshots.withCurrent' call
      var tmp = $this.firstStateRecord_1;
      var this_0 = tmp instanceof StateListStateRecord ? tmp : THROW_CCE();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>.<anonymous>.<anonymous>' call
      var current_0 = current(this_0);
      currentModification = current_0.modification_1;
      oldList = current_0.list_1;
      var newList = block(ensureNotNull(oldList));
      if (equals(newList, oldList)) {
        result = false;
        break $l$loop_0;
      }
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.writable' call
      // Inline function 'androidx.compose.runtime.snapshots.writable' call
      var tmp_0 = $this.firstStateRecord_1;
      var this_1 = tmp_0 instanceof StateListStateRecord ? tmp_0 : THROW_CCE();
      var snapshot = get_snapshotInitializer();
      // Inline function 'kotlin.also' call
      // Inline function 'androidx.compose.runtime.snapshots.sync' call
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      get_lock();
      // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
      snapshot = Companion_getInstance_12().get_current_jwi6j4_k$();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>.<anonymous>' call
      var $this$writable = writableRecord(this_1, $this, snapshot);
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      _get_sync_$accessor$mgqpbl_8m20to();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>.<anonymous>.<anonymous>' call
      var tmp_1;
      if ($this$writable.modification_1 === currentModification) {
        $this$writable.list_1 = newList;
        $this$writable.modification_1 = $this$writable.modification_1 + 1 | 0;
        tmp_1 = true;
      } else {
        tmp_1 = false;
      }
      var this_2 = tmp_1;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
      notifyWrite(snapshot, $this);
      if (this_2) {
        result = true;
        break $l$loop_0;
      }
    }
    return result;
  }
  function get_$stableprop_19() {
    return 0;
  }
  function SnapshotStateList$addAll$lambda($index, $elements) {
    return function (it) {
      return it.addAll_lxodh3_k$($index, $elements);
    };
  }
  function SnapshotStateList$retainAll$lambda($elements) {
    return function (it) {
      return it.retainAll_9fhiib_k$($elements);
    };
  }
  function SnapshotStateList() {
    this.firstStateRecord_1 = new StateListStateRecord(persistentListOf());
    this.$stable_1 = 0;
  }
  protoOf(SnapshotStateList).get_firstStateRecord_49tq6d_k$ = function () {
    return this.firstStateRecord_1;
  };
  protoOf(SnapshotStateList).prependStateRecord_jvgf4_k$ = function (value) {
    value.set_next_w78bh1_k$(this.firstStateRecord_1);
    var tmp = this;
    tmp.firstStateRecord_1 = value instanceof StateListStateRecord ? value : THROW_CCE();
  };
  protoOf(SnapshotStateList).toList_edfyo7_k$ = function () {
    return this.get_readable_ovw33t_k$().list_1;
  };
  protoOf(SnapshotStateList).get_modification_6s12qj_k$ = function () {
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.withCurrent' call
    // Inline function 'androidx.compose.runtime.snapshots.withCurrent' call
    var tmp = this.firstStateRecord_1;
    var this_0 = tmp instanceof StateListStateRecord ? tmp : THROW_CCE();
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.<get-modification>.<anonymous>' call
    return current(this_0).modification_1;
  };
  protoOf(SnapshotStateList).get_readable_ovw33t_k$ = function () {
    var tmp = this.firstStateRecord_1;
    return readable_0(tmp instanceof StateListStateRecord ? tmp : THROW_CCE(), this);
  };
  protoOf(SnapshotStateList).get_size_woubt6_k$ = function () {
    return this.get_readable_ovw33t_k$().list_1.get_size_woubt6_k$();
  };
  protoOf(SnapshotStateList).contains_ccp5tc_k$ = function (element) {
    return this.get_readable_ovw33t_k$().list_1.contains_aljjnj_k$(element);
  };
  protoOf(SnapshotStateList).contains_aljjnj_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.contains_ccp5tc_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(SnapshotStateList).containsAll_70schq_k$ = function (elements) {
    return this.get_readable_ovw33t_k$().list_1.containsAll_xk45sd_k$(elements);
  };
  protoOf(SnapshotStateList).containsAll_xk45sd_k$ = function (elements) {
    return this.containsAll_70schq_k$(elements);
  };
  protoOf(SnapshotStateList).get_c1px32_k$ = function (index) {
    return this.get_readable_ovw33t_k$().list_1.get_c1px32_k$(index);
  };
  protoOf(SnapshotStateList).indexOf_u97212_k$ = function (element) {
    return this.get_readable_ovw33t_k$().list_1.indexOf_si1fv9_k$(element);
  };
  protoOf(SnapshotStateList).indexOf_si1fv9_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return -1;
    return this.indexOf_u97212_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(SnapshotStateList).isEmpty_y1axqb_k$ = function () {
    return this.get_readable_ovw33t_k$().list_1.isEmpty_y1axqb_k$();
  };
  protoOf(SnapshotStateList).iterator_jk1svi_k$ = function () {
    return this.listIterator_xjshxw_k$();
  };
  protoOf(SnapshotStateList).lastIndexOf_wtunlo_k$ = function (element) {
    return this.get_readable_ovw33t_k$().list_1.lastIndexOf_v2p1fv_k$(element);
  };
  protoOf(SnapshotStateList).lastIndexOf_v2p1fv_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return -1;
    return this.lastIndexOf_wtunlo_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(SnapshotStateList).listIterator_xjshxw_k$ = function () {
    return new StateListIterator(this, 0);
  };
  protoOf(SnapshotStateList).listIterator_70e65o_k$ = function (index) {
    return new StateListIterator(this, index);
  };
  protoOf(SnapshotStateList).subList_xle3r2_k$ = function (fromIndex, toIndex) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!((0 <= fromIndex ? fromIndex <= toIndex : false) ? toIndex <= this.get_size_woubt6_k$() : false)) {
      // Inline function 'kotlin.require.<anonymous>' call
      var message = 'Failed requirement.';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    return new SubList_1(this, fromIndex, toIndex);
  };
  protoOf(SnapshotStateList).add_wl2rvy_k$ = function (element) {
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate' call
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>' call
    var result;
    $l$loop_0: while (true) {
      var oldList = null;
      var currentModification = 0;
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      _get_sync_$accessor$mgqpbl_8m20to();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.withCurrent' call
      // Inline function 'androidx.compose.runtime.snapshots.withCurrent' call
      var tmp = this.firstStateRecord_1;
      var this_0 = tmp instanceof StateListStateRecord ? tmp : THROW_CCE();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>.<anonymous>.<anonymous>' call
      var current_0 = current(this_0);
      currentModification = current_0.modification_1;
      oldList = current_0.list_1;
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.add.<anonymous>' call
      var newList = ensureNotNull(oldList).add_utx5q5_k$(element);
      if (equals(newList, oldList)) {
        result = false;
        break $l$loop_0;
      }
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.writable' call
      // Inline function 'androidx.compose.runtime.snapshots.writable' call
      var tmp_0 = this.firstStateRecord_1;
      var this_1 = tmp_0 instanceof StateListStateRecord ? tmp_0 : THROW_CCE();
      var snapshot = get_snapshotInitializer();
      // Inline function 'kotlin.also' call
      // Inline function 'androidx.compose.runtime.snapshots.sync' call
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      get_lock();
      // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
      snapshot = Companion_getInstance_12().get_current_jwi6j4_k$();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>.<anonymous>' call
      var $this$writable = writableRecord(this_1, this, snapshot);
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      _get_sync_$accessor$mgqpbl_8m20to();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>.<anonymous>.<anonymous>' call
      var tmp_1;
      if ($this$writable.modification_1 === currentModification) {
        $this$writable.list_1 = newList;
        $this$writable.modification_1 = $this$writable.modification_1 + 1 | 0;
        tmp_1 = true;
      } else {
        tmp_1 = false;
      }
      var this_2 = tmp_1;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
      notifyWrite(snapshot, this);
      if (this_2) {
        result = true;
        break $l$loop_0;
      }
    }
    return result;
  };
  protoOf(SnapshotStateList).add_utx5q5_k$ = function (element) {
    return this.add_wl2rvy_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(SnapshotStateList).add_gaf1mg_k$ = function (index, element) {
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate' call
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>' call
    var result;
    $l$loop_0: while (true) {
      var oldList = null;
      var currentModification = 0;
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      _get_sync_$accessor$mgqpbl_8m20to();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.withCurrent' call
      // Inline function 'androidx.compose.runtime.snapshots.withCurrent' call
      var tmp = this.firstStateRecord_1;
      var this_0 = tmp instanceof StateListStateRecord ? tmp : THROW_CCE();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>.<anonymous>.<anonymous>' call
      var current_0 = current(this_0);
      currentModification = current_0.modification_1;
      oldList = current_0.list_1;
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.add.<anonymous>' call
      var newList = ensureNotNull(oldList).add_k4dn3t_k$(index, element);
      if (equals(newList, oldList)) {
        result = false;
        break $l$loop_0;
      }
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.writable' call
      // Inline function 'androidx.compose.runtime.snapshots.writable' call
      var tmp_0 = this.firstStateRecord_1;
      var this_1 = tmp_0 instanceof StateListStateRecord ? tmp_0 : THROW_CCE();
      var snapshot = get_snapshotInitializer();
      // Inline function 'kotlin.also' call
      // Inline function 'androidx.compose.runtime.snapshots.sync' call
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      get_lock();
      // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
      snapshot = Companion_getInstance_12().get_current_jwi6j4_k$();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>.<anonymous>' call
      var $this$writable = writableRecord(this_1, this, snapshot);
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      _get_sync_$accessor$mgqpbl_8m20to();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>.<anonymous>.<anonymous>' call
      var tmp_1;
      if ($this$writable.modification_1 === currentModification) {
        $this$writable.list_1 = newList;
        $this$writable.modification_1 = $this$writable.modification_1 + 1 | 0;
        tmp_1 = true;
      } else {
        tmp_1 = false;
      }
      var this_2 = tmp_1;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
      notifyWrite(snapshot, this);
      if (this_2) {
        result = true;
        break $l$loop_0;
      }
    }
    return Unit_getInstance();
  };
  protoOf(SnapshotStateList).add_dl6gt3_k$ = function (index, element) {
    return this.add_gaf1mg_k$(index, (element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(SnapshotStateList).addAll_4lnftk_k$ = function (index, elements) {
    return mutateBoolean(this, SnapshotStateList$addAll$lambda(index, elements));
  };
  protoOf(SnapshotStateList).addAll_lxodh3_k$ = function (index, elements) {
    return this.addAll_4lnftk_k$(index, elements);
  };
  protoOf(SnapshotStateList).addAll_v4m9z4_k$ = function (elements) {
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate' call
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>' call
    var result;
    $l$loop_0: while (true) {
      var oldList = null;
      var currentModification = 0;
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      _get_sync_$accessor$mgqpbl_8m20to();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.withCurrent' call
      // Inline function 'androidx.compose.runtime.snapshots.withCurrent' call
      var tmp = this.firstStateRecord_1;
      var this_0 = tmp instanceof StateListStateRecord ? tmp : THROW_CCE();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>.<anonymous>.<anonymous>' call
      var current_0 = current(this_0);
      currentModification = current_0.modification_1;
      oldList = current_0.list_1;
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.addAll.<anonymous>' call
      var newList = ensureNotNull(oldList).addAll_4lagoh_k$(elements);
      if (equals(newList, oldList)) {
        result = false;
        break $l$loop_0;
      }
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.writable' call
      // Inline function 'androidx.compose.runtime.snapshots.writable' call
      var tmp_0 = this.firstStateRecord_1;
      var this_1 = tmp_0 instanceof StateListStateRecord ? tmp_0 : THROW_CCE();
      var snapshot = get_snapshotInitializer();
      // Inline function 'kotlin.also' call
      // Inline function 'androidx.compose.runtime.snapshots.sync' call
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      get_lock();
      // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
      snapshot = Companion_getInstance_12().get_current_jwi6j4_k$();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>.<anonymous>' call
      var $this$writable = writableRecord(this_1, this, snapshot);
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      _get_sync_$accessor$mgqpbl_8m20to();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>.<anonymous>.<anonymous>' call
      var tmp_1;
      if ($this$writable.modification_1 === currentModification) {
        $this$writable.list_1 = newList;
        $this$writable.modification_1 = $this$writable.modification_1 + 1 | 0;
        tmp_1 = true;
      } else {
        tmp_1 = false;
      }
      var this_2 = tmp_1;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
      notifyWrite(snapshot, this);
      if (this_2) {
        result = true;
        break $l$loop_0;
      }
    }
    return result;
  };
  protoOf(SnapshotStateList).addAll_4lagoh_k$ = function (elements) {
    return this.addAll_v4m9z4_k$(elements);
  };
  protoOf(SnapshotStateList).clear_j9egeb_k$ = function () {
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.writable' call
    // Inline function 'androidx.compose.runtime.snapshots.writable' call
    var tmp = this.firstStateRecord_1;
    var this_0 = tmp instanceof StateListStateRecord ? tmp : THROW_CCE();
    var snapshot = get_snapshotInitializer();
    // Inline function 'kotlin.also' call
    // Inline function 'androidx.compose.runtime.snapshots.sync' call
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    get_lock();
    // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
    snapshot = Companion_getInstance_12().get_current_jwi6j4_k$();
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.clear.<anonymous>' call
    var $this$writable = writableRecord(this_0, this, snapshot);
    // Inline function 'androidx.compose.runtime.synchronized' call
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    _get_sync_$accessor$mgqpbl_8m20to();
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.clear.<anonymous>.<anonymous>' call
    $this$writable.list_1 = persistentListOf();
    $this$writable.modification_1 = $this$writable.modification_1 + 1 | 0;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
    notifyWrite(snapshot, this);
  };
  protoOf(SnapshotStateList).remove_an8aut_k$ = function (element) {
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate' call
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>' call
    var result;
    $l$loop_0: while (true) {
      var oldList = null;
      var currentModification = 0;
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      _get_sync_$accessor$mgqpbl_8m20to();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.withCurrent' call
      // Inline function 'androidx.compose.runtime.snapshots.withCurrent' call
      var tmp = this.firstStateRecord_1;
      var this_0 = tmp instanceof StateListStateRecord ? tmp : THROW_CCE();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>.<anonymous>.<anonymous>' call
      var current_0 = current(this_0);
      currentModification = current_0.modification_1;
      oldList = current_0.list_1;
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.remove.<anonymous>' call
      var newList = ensureNotNull(oldList).remove_cedx0m_k$(element);
      if (equals(newList, oldList)) {
        result = false;
        break $l$loop_0;
      }
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.writable' call
      // Inline function 'androidx.compose.runtime.snapshots.writable' call
      var tmp_0 = this.firstStateRecord_1;
      var this_1 = tmp_0 instanceof StateListStateRecord ? tmp_0 : THROW_CCE();
      var snapshot = get_snapshotInitializer();
      // Inline function 'kotlin.also' call
      // Inline function 'androidx.compose.runtime.snapshots.sync' call
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      get_lock();
      // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
      snapshot = Companion_getInstance_12().get_current_jwi6j4_k$();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>.<anonymous>' call
      var $this$writable = writableRecord(this_1, this, snapshot);
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      _get_sync_$accessor$mgqpbl_8m20to();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>.<anonymous>.<anonymous>' call
      var tmp_1;
      if ($this$writable.modification_1 === currentModification) {
        $this$writable.list_1 = newList;
        $this$writable.modification_1 = $this$writable.modification_1 + 1 | 0;
        tmp_1 = true;
      } else {
        tmp_1 = false;
      }
      var this_2 = tmp_1;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
      notifyWrite(snapshot, this);
      if (this_2) {
        result = true;
        break $l$loop_0;
      }
    }
    return result;
  };
  protoOf(SnapshotStateList).remove_cedx0m_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.remove_an8aut_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(SnapshotStateList).removeAll_7hnfer_k$ = function (elements) {
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate' call
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>' call
    var result;
    $l$loop_0: while (true) {
      var oldList = null;
      var currentModification = 0;
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      _get_sync_$accessor$mgqpbl_8m20to();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.withCurrent' call
      // Inline function 'androidx.compose.runtime.snapshots.withCurrent' call
      var tmp = this.firstStateRecord_1;
      var this_0 = tmp instanceof StateListStateRecord ? tmp : THROW_CCE();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>.<anonymous>.<anonymous>' call
      var current_0 = current(this_0);
      currentModification = current_0.modification_1;
      oldList = current_0.list_1;
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.removeAll.<anonymous>' call
      var newList = ensureNotNull(oldList).removeAll_y0z8pe_k$(elements);
      if (equals(newList, oldList)) {
        result = false;
        break $l$loop_0;
      }
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.writable' call
      // Inline function 'androidx.compose.runtime.snapshots.writable' call
      var tmp_0 = this.firstStateRecord_1;
      var this_1 = tmp_0 instanceof StateListStateRecord ? tmp_0 : THROW_CCE();
      var snapshot = get_snapshotInitializer();
      // Inline function 'kotlin.also' call
      // Inline function 'androidx.compose.runtime.snapshots.sync' call
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      get_lock();
      // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
      snapshot = Companion_getInstance_12().get_current_jwi6j4_k$();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>.<anonymous>' call
      var $this$writable = writableRecord(this_1, this, snapshot);
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      _get_sync_$accessor$mgqpbl_8m20to();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>.<anonymous>.<anonymous>' call
      var tmp_1;
      if ($this$writable.modification_1 === currentModification) {
        $this$writable.list_1 = newList;
        $this$writable.modification_1 = $this$writable.modification_1 + 1 | 0;
        tmp_1 = true;
      } else {
        tmp_1 = false;
      }
      var this_2 = tmp_1;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
      notifyWrite(snapshot, this);
      if (this_2) {
        result = true;
        break $l$loop_0;
      }
    }
    return result;
  };
  protoOf(SnapshotStateList).removeAll_y0z8pe_k$ = function (elements) {
    return this.removeAll_7hnfer_k$(elements);
  };
  protoOf(SnapshotStateList).removeAt_6niowx_k$ = function (index) {
    // Inline function 'kotlin.also' call
    var this_0 = this.get_c1px32_k$(index);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.removeAt.<anonymous>' call
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.update' call
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate' call
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>' call
    var result;
    $l$loop_0: while (true) {
      var oldList = null;
      var currentModification = 0;
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      _get_sync_$accessor$mgqpbl_8m20to();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.withCurrent' call
      // Inline function 'androidx.compose.runtime.snapshots.withCurrent' call
      var tmp = this.firstStateRecord_1;
      var this_1 = tmp instanceof StateListStateRecord ? tmp : THROW_CCE();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>.<anonymous>.<anonymous>' call
      var current_0 = current(this_1);
      currentModification = current_0.modification_1;
      oldList = current_0.list_1;
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.removeAt.<anonymous>.<anonymous>' call
      var newList = ensureNotNull(oldList).removeAt_6niowx_k$(index);
      if (equals(newList, oldList)) {
        result = false;
        break $l$loop_0;
      }
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.writable' call
      // Inline function 'androidx.compose.runtime.snapshots.writable' call
      var tmp_0 = this.firstStateRecord_1;
      var this_2 = tmp_0 instanceof StateListStateRecord ? tmp_0 : THROW_CCE();
      var snapshot = get_snapshotInitializer();
      // Inline function 'kotlin.also' call
      // Inline function 'androidx.compose.runtime.snapshots.sync' call
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      get_lock();
      // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
      snapshot = Companion_getInstance_12().get_current_jwi6j4_k$();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>.<anonymous>' call
      var $this$writable = writableRecord(this_2, this, snapshot);
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      _get_sync_$accessor$mgqpbl_8m20to();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>.<anonymous>.<anonymous>' call
      var tmp_1;
      if ($this$writable.modification_1 === currentModification) {
        $this$writable.list_1 = newList;
        $this$writable.modification_1 = $this$writable.modification_1 + 1 | 0;
        tmp_1 = true;
      } else {
        tmp_1 = false;
      }
      var this_3 = tmp_1;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
      notifyWrite(snapshot, this);
      if (this_3) {
        result = true;
        break $l$loop_0;
      }
    }
    return this_0;
  };
  protoOf(SnapshotStateList).retainAll_h3uasc_k$ = function (elements) {
    return mutateBoolean(this, SnapshotStateList$retainAll$lambda(elements));
  };
  protoOf(SnapshotStateList).retainAll_9fhiib_k$ = function (elements) {
    return this.retainAll_h3uasc_k$(elements);
  };
  protoOf(SnapshotStateList).set_9t5s9l_k$ = function (index, element) {
    // Inline function 'kotlin.also' call
    var this_0 = this.get_c1px32_k$(index);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.set.<anonymous>' call
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.update' call
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate' call
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>' call
    var result;
    $l$loop_0: while (true) {
      var oldList = null;
      var currentModification = 0;
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      _get_sync_$accessor$mgqpbl_8m20to();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.withCurrent' call
      // Inline function 'androidx.compose.runtime.snapshots.withCurrent' call
      var tmp = this.firstStateRecord_1;
      var this_1 = tmp instanceof StateListStateRecord ? tmp : THROW_CCE();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>.<anonymous>.<anonymous>' call
      var current_0 = current(this_1);
      currentModification = current_0.modification_1;
      oldList = current_0.list_1;
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.set.<anonymous>.<anonymous>' call
      var newList = ensureNotNull(oldList).set_82063s_k$(index, element);
      if (equals(newList, oldList)) {
        result = false;
        break $l$loop_0;
      }
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.writable' call
      // Inline function 'androidx.compose.runtime.snapshots.writable' call
      var tmp_0 = this.firstStateRecord_1;
      var this_2 = tmp_0 instanceof StateListStateRecord ? tmp_0 : THROW_CCE();
      var snapshot = get_snapshotInitializer();
      // Inline function 'kotlin.also' call
      // Inline function 'androidx.compose.runtime.snapshots.sync' call
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      get_lock();
      // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
      snapshot = Companion_getInstance_12().get_current_jwi6j4_k$();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>.<anonymous>' call
      var $this$writable = writableRecord(this_2, this, snapshot);
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      _get_sync_$accessor$mgqpbl_8m20to();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.conditionalUpdate.<anonymous>.<anonymous>.<anonymous>' call
      var tmp_1;
      if ($this$writable.modification_1 === currentModification) {
        $this$writable.list_1 = newList;
        $this$writable.modification_1 = $this$writable.modification_1 + 1 | 0;
        tmp_1 = true;
      } else {
        tmp_1 = false;
      }
      var this_3 = tmp_1;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
      notifyWrite(snapshot, this);
      if (this_3) {
        result = true;
        break $l$loop_0;
      }
    }
    return this_0;
  };
  protoOf(SnapshotStateList).set_82063s_k$ = function (index, element) {
    return this.set_9t5s9l_k$(index, (element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(SnapshotStateList).removeRange_sm1kzt_k$ = function (fromIndex, toIndex) {
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.mutate' call
    var result;
    $l$loop: while (true) {
      var oldList = null;
      var currentModification = 0;
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      _get_sync_$accessor$mgqpbl_8m20to();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.withCurrent' call
      // Inline function 'androidx.compose.runtime.snapshots.withCurrent' call
      var tmp = this.firstStateRecord_1;
      var this_0 = tmp instanceof StateListStateRecord ? tmp : THROW_CCE();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.mutate.<anonymous>.<anonymous>' call
      var current_0 = current(this_0);
      currentModification = current_0.modification_1;
      oldList = current_0.list_1;
      var builder = ensureNotNull(oldList).builder_3thy1n_k$();
      builder.subList_xle3r2_k$(fromIndex, toIndex).clear_j9egeb_k$();
      result = Unit_getInstance();
      var newList = builder.build_1k0s4u_k$();
      var tmp_0;
      if (equals(newList, oldList)) {
        tmp_0 = true;
      } else {
        // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.writable' call
        // Inline function 'androidx.compose.runtime.snapshots.writable' call
        var tmp_1 = this.firstStateRecord_1;
        var this_1 = tmp_1 instanceof StateListStateRecord ? tmp_1 : THROW_CCE();
        var snapshot = get_snapshotInitializer();
        // Inline function 'kotlin.also' call
        // Inline function 'androidx.compose.runtime.snapshots.sync' call
        // Inline function 'androidx.compose.runtime.synchronized' call
        // Inline function 'kotlinx.atomicfu.locks.synchronized' call
        get_lock();
        // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
        snapshot = Companion_getInstance_12().get_current_jwi6j4_k$();
        // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.mutate.<anonymous>' call
        var $this$writable = writableRecord(this_1, this, snapshot);
        // Inline function 'androidx.compose.runtime.synchronized' call
        // Inline function 'kotlinx.atomicfu.locks.synchronized' call
        _get_sync_$accessor$mgqpbl_8m20to();
        // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.mutate.<anonymous>.<anonymous>' call
        var tmp_2;
        if ($this$writable.modification_1 === currentModification) {
          $this$writable.list_1 = newList;
          $this$writable.modification_1 = $this$writable.modification_1 + 1 | 0;
          tmp_2 = true;
        } else {
          tmp_2 = false;
        }
        var this_2 = tmp_2;
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
        notifyWrite(snapshot, this);
        tmp_0 = this_2;
      }
      if (tmp_0)
        break $l$loop;
    }
  };
  protoOf(SnapshotStateList).retainAllInRange_xfb0t8_k$ = function (elements, start, end) {
    var startSize = this.get_size_woubt6_k$();
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.mutate' call
    var result;
    $l$loop: while (true) {
      var oldList = null;
      var currentModification = 0;
      // Inline function 'androidx.compose.runtime.synchronized' call
      // Inline function 'kotlinx.atomicfu.locks.synchronized' call
      _get_sync_$accessor$mgqpbl_8m20to();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.withCurrent' call
      // Inline function 'androidx.compose.runtime.snapshots.withCurrent' call
      var tmp = this.firstStateRecord_1;
      var this_0 = tmp instanceof StateListStateRecord ? tmp : THROW_CCE();
      // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.mutate.<anonymous>.<anonymous>' call
      var current_0 = current(this_0);
      currentModification = current_0.modification_1;
      oldList = current_0.list_1;
      var builder = ensureNotNull(oldList).builder_3thy1n_k$();
      builder.subList_xle3r2_k$(start, end).retainAll_9fhiib_k$(elements);
      result = Unit_getInstance();
      var newList = builder.build_1k0s4u_k$();
      var tmp_0;
      if (equals(newList, oldList)) {
        tmp_0 = true;
      } else {
        // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.writable' call
        // Inline function 'androidx.compose.runtime.snapshots.writable' call
        var tmp_1 = this.firstStateRecord_1;
        var this_1 = tmp_1 instanceof StateListStateRecord ? tmp_1 : THROW_CCE();
        var snapshot = get_snapshotInitializer();
        // Inline function 'kotlin.also' call
        // Inline function 'androidx.compose.runtime.snapshots.sync' call
        // Inline function 'androidx.compose.runtime.synchronized' call
        // Inline function 'kotlinx.atomicfu.locks.synchronized' call
        get_lock();
        // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
        snapshot = Companion_getInstance_12().get_current_jwi6j4_k$();
        // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.mutate.<anonymous>' call
        var $this$writable = writableRecord(this_1, this, snapshot);
        // Inline function 'androidx.compose.runtime.synchronized' call
        // Inline function 'kotlinx.atomicfu.locks.synchronized' call
        _get_sync_$accessor$mgqpbl_8m20to();
        // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.mutate.<anonymous>.<anonymous>' call
        var tmp_2;
        if ($this$writable.modification_1 === currentModification) {
          $this$writable.list_1 = newList;
          $this$writable.modification_1 = $this$writable.modification_1 + 1 | 0;
          tmp_2 = true;
        } else {
          tmp_2 = false;
        }
        var this_2 = tmp_2;
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'androidx.compose.runtime.snapshots.writable.<anonymous>' call
        notifyWrite(snapshot, this);
        tmp_0 = this_2;
      }
      if (tmp_0)
        break $l$loop;
    }
    return startSize - this.get_size_woubt6_k$() | 0;
  };
  protoOf(SnapshotStateList).get_debuggerDisplayValue_msqi3r_k$ = function () {
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.withCurrent' call
    // Inline function 'androidx.compose.runtime.snapshots.withCurrent' call
    var tmp = this.firstStateRecord_1;
    var this_0 = tmp instanceof StateListStateRecord ? tmp : THROW_CCE();
    // Inline function 'androidx.compose.runtime.snapshots.SnapshotStateList.<get-debuggerDisplayValue>.<anonymous>' call
    return current(this_0).list_1;
  };
  function _set_index__fyfqnn_2($this, _set____db54di) {
    $this.index_1 = _set____db54di;
  }
  function _get_index__g2optt_2($this) {
    return $this.index_1;
  }
  function _set_modification__fogy4l($this, _set____db54di) {
    $this.modification_1 = _set____db54di;
  }
  function _get_modification__4q7kh($this) {
    return $this.modification_1;
  }
  function validateModification($this) {
    if (!($this.list_1.get_modification_6s12qj_k$() === $this.modification_1)) {
      throw ConcurrentModificationException_init_$Create$();
    }
  }
  function StateListIterator(list, offset) {
    this.list_1 = list;
    this.index_1 = offset - 1 | 0;
    this.modification_1 = this.list_1.get_modification_6s12qj_k$();
  }
  protoOf(StateListIterator).get_list_wopuqv_k$ = function () {
    return this.list_1;
  };
  protoOf(StateListIterator).hasPrevious_qh0629_k$ = function () {
    return this.index_1 >= 0;
  };
  protoOf(StateListIterator).nextIndex_jshxun_k$ = function () {
    return this.index_1 + 1 | 0;
  };
  protoOf(StateListIterator).previous_l2dfd5_k$ = function () {
    validateModification(this);
    validateRange(this.index_1, this.list_1.get_size_woubt6_k$());
    // Inline function 'kotlin.also' call
    var this_0 = this.list_1.get_c1px32_k$(this.index_1);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.snapshots.StateListIterator.previous.<anonymous>' call
    this.index_1 = this.index_1 - 1 | 0;
    return this_0;
  };
  protoOf(StateListIterator).previousIndex_4qtyw5_k$ = function () {
    return this.index_1;
  };
  protoOf(StateListIterator).add_jcyd1a_k$ = function (element) {
    validateModification(this);
    this.list_1.add_gaf1mg_k$(this.index_1 + 1 | 0, element);
    this.index_1 = this.index_1 + 1 | 0;
    this.modification_1 = this.list_1.get_modification_6s12qj_k$();
  };
  protoOf(StateListIterator).hasNext_bitz1p_k$ = function () {
    return this.index_1 < (this.list_1.get_size_woubt6_k$() - 1 | 0);
  };
  protoOf(StateListIterator).next_20eer_k$ = function () {
    validateModification(this);
    var newIndex = this.index_1 + 1 | 0;
    validateRange(newIndex, this.list_1.get_size_woubt6_k$());
    // Inline function 'kotlin.also' call
    var this_0 = this.list_1.get_c1px32_k$(newIndex);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.snapshots.StateListIterator.next.<anonymous>' call
    this.index_1 = newIndex;
    return this_0;
  };
  protoOf(StateListIterator).remove_ldkf9o_k$ = function () {
    validateModification(this);
    this.list_1.removeAt_6niowx_k$(this.index_1);
    this.index_1 = this.index_1 - 1 | 0;
    this.modification_1 = this.list_1.get_modification_6s12qj_k$();
  };
  protoOf(StateListIterator).set_tg4fwj_k$ = function (element) {
    validateModification(this);
    this.list_1.set_9t5s9l_k$(this.index_1, element);
    this.modification_1 = this.list_1.get_modification_6s12qj_k$();
  };
  function _get_offset__c6qzmg_0($this) {
    return $this.offset_1;
  }
  function _set_modification__fogy4l_0($this, _set____db54di) {
    $this.modification_1 = _set____db54di;
  }
  function _get_modification__4q7kh_0($this) {
    return $this.modification_1;
  }
  function _set_size__9twho6_5($this, _set____db54di) {
    $this.size_1 = _set____db54di;
  }
  function validateModification_0($this) {
    if (!($this.parentList_1.get_modification_6s12qj_k$() === $this.modification_1)) {
      throw ConcurrentModificationException_init_$Create$();
    }
  }
  function SubList$listIterator$1($current, this$0) {
    this.$current_1 = $current;
    this.this$0__1 = this$0;
  }
  protoOf(SubList$listIterator$1).hasPrevious_qh0629_k$ = function () {
    return this.$current_1._v >= 0;
  };
  protoOf(SubList$listIterator$1).nextIndex_jshxun_k$ = function () {
    return this.$current_1._v + 1 | 0;
  };
  protoOf(SubList$listIterator$1).previous_l2dfd5_k$ = function () {
    var oldCurrent = this.$current_1._v;
    validateRange(oldCurrent, this.this$0__1.size_1);
    this.$current_1._v = oldCurrent - 1 | 0;
    return this.this$0__1.get_c1px32_k$(oldCurrent);
  };
  protoOf(SubList$listIterator$1).previousIndex_4qtyw5_k$ = function () {
    return this.$current_1._v;
  };
  protoOf(SubList$listIterator$1).add_wl2rvy_k$ = function (element) {
    modificationError();
  };
  protoOf(SubList$listIterator$1).add_jcyd1a_k$ = function (element) {
    return this.add_wl2rvy_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(SubList$listIterator$1).hasNext_bitz1p_k$ = function () {
    return this.$current_1._v < (this.this$0__1.size_1 - 1 | 0);
  };
  protoOf(SubList$listIterator$1).next_20eer_k$ = function () {
    var newCurrent = this.$current_1._v + 1 | 0;
    validateRange(newCurrent, this.this$0__1.size_1);
    this.$current_1._v = newCurrent;
    return this.this$0__1.get_c1px32_k$(newCurrent);
  };
  protoOf(SubList$listIterator$1).remove_fgfybg_k$ = function () {
    modificationError();
  };
  protoOf(SubList$listIterator$1).remove_ldkf9o_k$ = function () {
    return this.remove_fgfybg_k$();
  };
  protoOf(SubList$listIterator$1).set_klalkd_k$ = function (element) {
    modificationError();
  };
  protoOf(SubList$listIterator$1).set_tg4fwj_k$ = function (element) {
    return this.set_klalkd_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  function SubList_1(parentList, fromIndex, toIndex) {
    this.parentList_1 = parentList;
    this.offset_1 = fromIndex;
    this.modification_1 = this.parentList_1.get_modification_6s12qj_k$();
    this.size_1 = toIndex - fromIndex | 0;
  }
  protoOf(SubList_1).get_parentList_o82lu7_k$ = function () {
    return this.parentList_1;
  };
  protoOf(SubList_1).get_size_woubt6_k$ = function () {
    return this.size_1;
  };
  protoOf(SubList_1).contains_ccp5tc_k$ = function (element) {
    return this.indexOf_u97212_k$(element) >= 0;
  };
  protoOf(SubList_1).contains_aljjnj_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.contains_ccp5tc_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(SubList_1).containsAll_70schq_k$ = function (elements) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.isEmpty_y1axqb_k$();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.iterator_jk1svi_k$();
      while (tmp0_iterator.hasNext_bitz1p_k$()) {
        var element = tmp0_iterator.next_20eer_k$();
        // Inline function 'androidx.compose.runtime.snapshots.SubList.containsAll.<anonymous>' call
        if (!this.contains_ccp5tc_k$(element)) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  };
  protoOf(SubList_1).containsAll_xk45sd_k$ = function (elements) {
    return this.containsAll_70schq_k$(elements);
  };
  protoOf(SubList_1).get_c1px32_k$ = function (index) {
    validateModification_0(this);
    validateRange(index, this.size_1);
    return this.parentList_1.get_c1px32_k$(this.offset_1 + index | 0);
  };
  protoOf(SubList_1).indexOf_u97212_k$ = function (element) {
    validateModification_0(this);
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator = until(this.offset_1, this.offset_1 + this.size_1 | 0).iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var element_0 = tmp0_iterator.next_20eer_k$();
      // Inline function 'androidx.compose.runtime.snapshots.SubList.indexOf.<anonymous>' call
      if (equals(element, this.parentList_1.get_c1px32_k$(element_0)))
        return element_0 - this.offset_1 | 0;
    }
    return -1;
  };
  protoOf(SubList_1).indexOf_si1fv9_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return -1;
    return this.indexOf_u97212_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(SubList_1).isEmpty_y1axqb_k$ = function () {
    return this.size_1 === 0;
  };
  protoOf(SubList_1).iterator_jk1svi_k$ = function () {
    return this.listIterator_xjshxw_k$();
  };
  protoOf(SubList_1).lastIndexOf_wtunlo_k$ = function (element) {
    validateModification_0(this);
    var index = (this.offset_1 + this.size_1 | 0) - 1 | 0;
    while (index >= this.offset_1) {
      if (equals(element, this.parentList_1.get_c1px32_k$(index)))
        return index - this.offset_1 | 0;
      index = index - 1 | 0;
    }
    return -1;
  };
  protoOf(SubList_1).lastIndexOf_v2p1fv_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return -1;
    return this.lastIndexOf_wtunlo_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(SubList_1).add_wl2rvy_k$ = function (element) {
    validateModification_0(this);
    this.parentList_1.add_gaf1mg_k$(this.offset_1 + this.size_1 | 0, element);
    this.size_1 = this.size_1 + 1 | 0;
    this.modification_1 = this.parentList_1.get_modification_6s12qj_k$();
    return true;
  };
  protoOf(SubList_1).add_utx5q5_k$ = function (element) {
    return this.add_wl2rvy_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(SubList_1).add_gaf1mg_k$ = function (index, element) {
    validateModification_0(this);
    this.parentList_1.add_gaf1mg_k$(this.offset_1 + index | 0, element);
    this.size_1 = this.size_1 + 1 | 0;
    this.modification_1 = this.parentList_1.get_modification_6s12qj_k$();
  };
  protoOf(SubList_1).add_dl6gt3_k$ = function (index, element) {
    return this.add_gaf1mg_k$(index, (element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(SubList_1).addAll_4lnftk_k$ = function (index, elements) {
    validateModification_0(this);
    var result = this.parentList_1.addAll_4lnftk_k$(index + this.offset_1 | 0, elements);
    if (result) {
      this.size_1 = this.size_1 + elements.get_size_woubt6_k$() | 0;
      this.modification_1 = this.parentList_1.get_modification_6s12qj_k$();
    }
    return result;
  };
  protoOf(SubList_1).addAll_lxodh3_k$ = function (index, elements) {
    return this.addAll_4lnftk_k$(index, elements);
  };
  protoOf(SubList_1).addAll_v4m9z4_k$ = function (elements) {
    return this.addAll_4lnftk_k$(this.size_1, elements);
  };
  protoOf(SubList_1).addAll_4lagoh_k$ = function (elements) {
    return this.addAll_v4m9z4_k$(elements);
  };
  protoOf(SubList_1).clear_j9egeb_k$ = function () {
    if (this.size_1 > 0) {
      validateModification_0(this);
      this.parentList_1.removeRange_sm1kzt_k$(this.offset_1, this.offset_1 + this.size_1 | 0);
      this.size_1 = 0;
      this.modification_1 = this.parentList_1.get_modification_6s12qj_k$();
    }
  };
  protoOf(SubList_1).listIterator_xjshxw_k$ = function () {
    return this.listIterator_70e65o_k$(0);
  };
  protoOf(SubList_1).listIterator_70e65o_k$ = function (index) {
    validateModification_0(this);
    var current = {_v: index - 1 | 0};
    return new SubList$listIterator$1(current, this);
  };
  protoOf(SubList_1).remove_an8aut_k$ = function (element) {
    var index = this.indexOf_u97212_k$(element);
    var tmp;
    if (index >= 0) {
      this.removeAt_6niowx_k$(index);
      tmp = true;
    } else {
      tmp = false;
    }
    return tmp;
  };
  protoOf(SubList_1).remove_cedx0m_k$ = function (element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.remove_an8aut_k$((element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(SubList_1).removeAll_7hnfer_k$ = function (elements) {
    var removed = false;
    var tmp0_iterator = elements.iterator_jk1svi_k$();
    while (tmp0_iterator.hasNext_bitz1p_k$()) {
      var element = tmp0_iterator.next_20eer_k$();
      removed = this.remove_an8aut_k$(element) ? true : removed;
    }
    return removed;
  };
  protoOf(SubList_1).removeAll_y0z8pe_k$ = function (elements) {
    return this.removeAll_7hnfer_k$(elements);
  };
  protoOf(SubList_1).removeAt_6niowx_k$ = function (index) {
    validateModification_0(this);
    // Inline function 'kotlin.also' call
    var this_0 = this.parentList_1.removeAt_6niowx_k$(this.offset_1 + index | 0);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'androidx.compose.runtime.snapshots.SubList.removeAt.<anonymous>' call
    this.size_1 = this.size_1 - 1 | 0;
    this.modification_1 = this.parentList_1.get_modification_6s12qj_k$();
    return this_0;
  };
  protoOf(SubList_1).retainAll_h3uasc_k$ = function (elements) {
    validateModification_0(this);
    var removed = this.parentList_1.retainAllInRange_xfb0t8_k$(elements, this.offset_1, this.offset_1 + this.size_1 | 0);
    if (removed > 0) {
      this.modification_1 = this.parentList_1.get_modification_6s12qj_k$();
      this.size_1 = this.size_1 - removed | 0;
    }
    return removed > 0;
  };
  protoOf(SubList_1).retainAll_9fhiib_k$ = function (elements) {
    return this.retainAll_h3uasc_k$(elements);
  };
  protoOf(SubList_1).set_9t5s9l_k$ = function (index, element) {
    validateRange(index, this.size_1);
    validateModification_0(this);
    var result = this.parentList_1.set_9t5s9l_k$(index + this.offset_1 | 0, element);
    this.modification_1 = this.parentList_1.get_modification_6s12qj_k$();
    return result;
  };
  protoOf(SubList_1).set_82063s_k$ = function (index, element) {
    return this.set_9t5s9l_k$(index, (element == null ? true : !(element == null)) ? element : THROW_CCE());
  };
  protoOf(SubList_1).subList_xle3r2_k$ = function (fromIndex, toIndex) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!((0 <= fromIndex ? fromIndex <= toIndex : false) ? toIndex <= this.size_1 : false)) {
      // Inline function 'kotlin.require.<anonymous>' call
      var message = 'Failed requirement.';
      throw IllegalArgumentException_init_$Create$(toString(message));
    }
    validateModification_0(this);
    return new SubList_1(this.parentList_1, fromIndex + this.offset_1 | 0, toIndex + this.offset_1 | 0);
  };
  function validateRange(index, size) {
    _init_properties_SnapshotStateList_kt__mu1ud5();
    if (!(0 <= index ? index < size : false)) {
      throw IndexOutOfBoundsException_init_$Create$('index (' + index + ') is out of bound of [0, ' + size + ')');
    }
  }
  function modificationError() {
    _init_properties_SnapshotStateList_kt__mu1ud5();
    var message = 'Cannot modify a state list through an iterator';
    throw IllegalStateException_init_$Create$(toString(message));
  }
  function _get_sync_$accessor$mgqpbl_8m20to() {
    _init_properties_SnapshotStateList_kt__mu1ud5();
    return get_sync();
  }
  var properties_initialized_SnapshotStateList_kt_lcuarf;
  function _init_properties_SnapshotStateList_kt__mu1ud5() {
    if (!properties_initialized_SnapshotStateList_kt_lcuarf) {
      properties_initialized_SnapshotStateList_kt_lcuarf = true;
      sync_0 = createSynchronizedObject();
    }
  }
  function get_sync_0() {
    _init_properties_SnapshotStateMap_kt__p43o8h();
    return sync_1;
  }
  var sync_1;
  function unsupported() {
    _init_properties_SnapshotStateMap_kt__p43o8h();
    throw UnsupportedOperationException_init_$Create$();
  }
  var properties_initialized_SnapshotStateMap_kt_9i73ip;
  function _init_properties_SnapshotStateMap_kt__p43o8h() {
    if (!properties_initialized_SnapshotStateMap_kt_9i73ip) {
      properties_initialized_SnapshotStateMap_kt_9i73ip = true;
      sync_1 = createSynchronizedObject();
    }
  }
  function find_5($this, value, hash) {
    var low = 0;
    var high = $this.size_1 - 1 | 0;
    while (low <= high) {
      var mid = (low + high | 0) >>> 1 | 0;
      var midHash = $this.hashes_1[mid];
      if (midHash < hash)
        low = mid + 1 | 0;
      else if (midHash > hash)
        high = mid - 1 | 0;
      else {
        var tmp0_safe_receiver = $this.values_1[mid];
        var midVal = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.get_26vq_k$();
        if (value === midVal)
          return mid;
        return findExactIndex_3($this, mid, value, hash);
      }
    }
    return -(low + 1 | 0) | 0;
  }
  function findExactIndex_3($this, midIndex, value, valueHash) {
    var inductionVariable = midIndex - 1 | 0;
    if (0 <= inductionVariable)
      $l$loop: do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + -1 | 0;
        if (!($this.hashes_1[i] === valueHash)) {
          break $l$loop;
        }
        var tmp1_safe_receiver = $this.values_1[i];
        var v = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.get_26vq_k$();
        if (v === value) {
          return i;
        }
      }
       while (0 <= inductionVariable);
    var inductionVariable_0 = midIndex + 1 | 0;
    var last = $this.size_1;
    if (inductionVariable_0 < last)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        if (!($this.hashes_1[i_0] === valueHash)) {
          return -(i_0 + 1 | 0) | 0;
        }
        var tmp3_safe_receiver = $this.values_1[i_0];
        var v_0 = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.get_26vq_k$();
        if (v_0 === value) {
          return i_0;
        }
      }
       while (inductionVariable_0 < last);
    return -($this.size_1 + 1 | 0) | 0;
  }
  function SnapshotWeakSet() {
    this.size_1 = 0;
    this.hashes_1 = new Int32Array(16);
    var tmp = this;
    // Inline function 'kotlin.arrayOfNulls' call
    tmp.values_1 = fillArrayVal(Array(16), null);
  }
  protoOf(SnapshotWeakSet).set_size_e2677a_k$ = function (_set____db54di) {
    this.size_1 = _set____db54di;
  };
  protoOf(SnapshotWeakSet).get_size_woubt6_k$ = function () {
    return this.size_1;
  };
  protoOf(SnapshotWeakSet).set_hashes_tbzn9e_k$ = function (_set____db54di) {
    this.hashes_1 = _set____db54di;
  };
  protoOf(SnapshotWeakSet).get_hashes_e5sh8l_k$ = function () {
    return this.hashes_1;
  };
  protoOf(SnapshotWeakSet).set_values_p2tocl_k$ = function (_set____db54di) {
    this.values_1 = _set____db54di;
  };
  protoOf(SnapshotWeakSet).get_values_ksazhn_k$ = function () {
    return this.values_1;
  };
  protoOf(SnapshotWeakSet).add_jkjo25_k$ = function (value) {
    var index;
    var size = this.size_1;
    var hash = identityHashCode(value);
    if (size > 0) {
      index = find_5(this, value, hash);
      if (index >= 0) {
        return false;
      }
    } else {
      index = -1;
    }
    var insertIndex = -(index + 1 | 0) | 0;
    var capacity = this.values_1.length;
    if (size === capacity) {
      var newCapacity = imul(capacity, 2);
      // Inline function 'kotlin.arrayOfNulls' call
      var newValues = fillArrayVal(Array(newCapacity), null);
      var newHashes = new Int32Array(newCapacity);
      // Inline function 'kotlin.collections.copyInto' call
      var this_0 = this.values_1;
      var destinationOffset = insertIndex + 1 | 0;
      arrayCopy(this_0, newValues, destinationOffset, insertIndex, size);
      // Inline function 'kotlin.collections.copyInto' call
      var this_1 = this.values_1;
      arrayCopy(this_1, newValues, 0, 0, insertIndex);
      // Inline function 'kotlin.collections.copyInto' call
      var this_2 = this.hashes_1;
      var destinationOffset_0 = insertIndex + 1 | 0;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp = this_2;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      arrayCopy(tmp, newHashes, destinationOffset_0, insertIndex, size);
      // Inline function 'kotlin.collections.copyInto' call
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp_0 = this.hashes_1;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      arrayCopy(tmp_0, newHashes, 0, 0, insertIndex);
      this.values_1 = newValues;
      this.hashes_1 = newHashes;
    } else {
      // Inline function 'kotlin.collections.copyInto' call
      var this_3 = this.values_1;
      var destination = this.values_1;
      var destinationOffset_1 = insertIndex + 1 | 0;
      arrayCopy(this_3, destination, destinationOffset_1, insertIndex, size);
      // Inline function 'kotlin.collections.copyInto' call
      var this_4 = this.hashes_1;
      var destination_0 = this.hashes_1;
      var destinationOffset_2 = insertIndex + 1 | 0;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var tmp_1 = this_4;
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      arrayCopy(tmp_1, destination_0, destinationOffset_2, insertIndex, size);
    }
    this.values_1[insertIndex] = new WeakReference(value);
    this.hashes_1[insertIndex] = hash;
    this.size_1 = this.size_1 + 1 | 0;
    return true;
  };
  protoOf(SnapshotWeakSet).removeIf_ihrn7l_k$ = function (block) {
    var size = this.size_1;
    var currentUsed = 0;
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var entry = this.values_1[i];
        var value = entry == null ? null : entry.get_26vq_k$();
        if (!(value == null) ? !block(value) : false) {
          if (!(currentUsed === i)) {
            this.values_1[currentUsed] = entry;
            this.hashes_1[currentUsed] = this.hashes_1[i];
          }
          currentUsed = currentUsed + 1 | 0;
        }
      }
       while (inductionVariable < size);
    var inductionVariable_0 = currentUsed;
    if (inductionVariable_0 < size)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        this.values_1[i_0] = null;
        this.hashes_1[i_0] = 0;
      }
       while (inductionVariable_0 < size);
    if (!(currentUsed === size)) {
      this.size_1 = currentUsed;
    }
  };
  protoOf(SnapshotWeakSet).isValid_yafoqa_k$ = function () {
    var size = this.size_1;
    var values = this.values_1;
    var hashes = this.hashes_1;
    var capacity = values.length;
    if (size > capacity)
      return false;
    var previous = IntCompanionObject_getInstance().get_MIN_VALUE_7nmmor_k$();
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var hash = hashes[i];
        if (hash < previous)
          return false;
        var tmp1_elvis_lhs = values[i];
        var tmp;
        if (tmp1_elvis_lhs == null) {
          return false;
        } else {
          tmp = tmp1_elvis_lhs;
        }
        var entry = tmp;
        var value = entry.get_26vq_k$();
        if (!(value == null) ? !(hash === identityHashCode(value)) : false)
          return false;
        previous = hash;
      }
       while (inductionVariable < size);
    var inductionVariable_0 = size;
    if (inductionVariable_0 < capacity)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        if (!(hashes[i_0] === 0))
          return false;
        if (!(values[i_0] == null))
          return false;
      }
       while (inductionVariable_0 < capacity);
    return true;
  };
  function get_INITIAL_CAPACITY_0() {
    return INITIAL_CAPACITY_0;
  }
  var INITIAL_CAPACITY_0;
  function StateFactoryMarker() {
  }
  protoOf(StateFactoryMarker).equals = function (other) {
    if (!(other instanceof StateFactoryMarker))
      return false;
    other instanceof StateFactoryMarker || THROW_CCE();
    return true;
  };
  protoOf(StateFactoryMarker).hashCode = function () {
    return 0;
  };
  protoOf(StateFactoryMarker).toString = function () {
    return '@androidx.compose.runtime.snapshots.StateFactoryMarker()';
  };
  function CompositionData() {
  }
  function CompositionGroup() {
  }
  function get_LocalInspectionTables() {
    _init_properties_InspectionTables_kt__ovfk2v();
    return LocalInspectionTables;
  }
  var LocalInspectionTables;
  function LocalInspectionTables$lambda() {
    _init_properties_InspectionTables_kt__ovfk2v();
    return null;
  }
  var properties_initialized_InspectionTables_kt_tgdbmt;
  function _init_properties_InspectionTables_kt__ovfk2v() {
    if (!properties_initialized_InspectionTables_kt_tgdbmt) {
      properties_initialized_InspectionTables_kt_tgdbmt = true;
      LocalInspectionTables = staticCompositionLocalOf(LocalInspectionTables$lambda);
    }
  }
  function set_nextHash(_set____db54di) {
    _init_properties_ActualJs_js_kt__rh77u6();
    nextHash = _set____db54di;
  }
  function get_nextHash() {
    _init_properties_ActualJs_js_kt__rh77u6();
    return nextHash;
  }
  var nextHash;
  function get_DefaultMonotonicFrameClock() {
    _init_properties_ActualJs_js_kt__rh77u6();
    return DefaultMonotonicFrameClock;
  }
  var DefaultMonotonicFrameClock;
  function _set_value__lx0xdg($this, _set____db54di) {
    $this.value_1 = _set____db54di;
  }
  function _get_value__a43j40($this) {
    return $this.value_1;
  }
  function get_$stableprop_20() {
    return 8;
  }
  function AtomicReference(value) {
    this.value_1 = value;
    this.$stable_1 = 8;
  }
  protoOf(AtomicReference).get_26vq_k$ = function () {
    return this.value_1;
  };
  protoOf(AtomicReference).set_inogor_k$ = function (value) {
    this.value_1 = value;
  };
  protoOf(AtomicReference).getAndSet_6mmyt0_k$ = function (value) {
    var oldValue = this.value_1;
    this.value_1 = value;
    return oldValue;
  };
  protoOf(AtomicReference).compareAndSet_10iwom_k$ = function (expect, newValue) {
    var tmp;
    if (equals(expect, this.value_1)) {
      this.value_1 = newValue;
      tmp = true;
    } else {
      tmp = false;
    }
    return tmp;
  };
  function getCurrentThreadId() {
    _init_properties_ActualJs_js_kt__rh77u6();
    return new Long(0, 0);
  }
  function identityHashCode(instance) {
    _init_properties_ActualJs_js_kt__rh77u6();
    if (instance == null) {
      return 0;
    }
    // Inline function 'kotlin.js.asDynamic' call
    var hashCode = instance['kotlinIdentityHashcodeValue$'];
    if (hashCode != null) {
      return hashCode;
    }
    var tmp;
    switch (typeof instance) {
      case 'object':
      case 'function':
        tmp = memoizeIdentityHashCode(instance);
        break;
      default:
        throw IllegalArgumentException_init_$Create$('identity hash code for ' + typeof instance + ' is not supported');
    }
    return tmp;
  }
  function _set_value__lx0xdg_0($this, _set____db54di) {
    $this.value_1 = _set____db54di;
  }
  function _get_value__a43j40_0($this) {
    return $this.value_1;
  }
  function AtomicInt(value) {
    this.value_1 = value;
  }
  protoOf(AtomicInt).get_26vq_k$ = function () {
    return this.value_1;
  };
  protoOf(AtomicInt).set_3dek9m_k$ = function (value) {
    this.value_1 = value;
  };
  protoOf(AtomicInt).add_lnluon_k$ = function (amount) {
    this.value_1 = this.value_1 + amount | 0;
    return this.value_1;
  };
  function TestOnly() {
  }
  protoOf(TestOnly).equals = function (other) {
    if (!(other instanceof TestOnly))
      return false;
    other instanceof TestOnly || THROW_CCE();
    return true;
  };
  protoOf(TestOnly).hashCode = function () {
    return 0;
  };
  protoOf(TestOnly).toString = function () {
    return '@androidx.compose.runtime.TestOnly()';
  };
  function MonotonicClockImpl$withFrameNanos$lambda($onFrame, $continuation) {
    return function (it) {
      var duration = toDuration(it, DurationUnit_MILLISECONDS_getInstance());
      var result = $onFrame(_Duration___get_inWholeNanoseconds__impl__r5x4mr(duration));
      // Inline function 'kotlin.coroutines.resume' call
      var this_0 = $continuation;
      // Inline function 'kotlin.Companion.success' call
      Companion_getInstance();
      var tmp$ret$0 = _Result___init__impl__xyqfz8(result);
      this_0.resumeWith_dtxwbr_k$(tmp$ret$0);
      return Unit_getInstance();
    };
  }
  function $withFrameNanosCOROUTINE$5(_this__u8e3s4, onFrame, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this._this__u8e3s4__1 = _this__u8e3s4;
    this.onFrame_1 = onFrame;
  }
  protoOf($withFrameNanosCOROUTINE$5).doResume_5yljmg_k$ = function () {
    var suspendResult = this.get_result_iyg5d2_k$();
    $sm: do
      try {
        var tmp = this.get_state_iypx7s_k$();
        switch (tmp) {
          case 0:
            this.set_exceptionState_fex74n_k$(2);
            this.set_state_rjd8d0_k$(1);
            var safe = SafeContinuation_init_$Create$(intercepted(this));
            var tmp_0 = window;
            tmp_0.requestAnimationFrame(MonotonicClockImpl$withFrameNanos$lambda(this.onFrame_1, safe));
            suspendResult = returnIfSuspended(safe.getOrThrow_323tdf_k$(), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return suspendResult;
          case 2:
            throw this.get_exception_x0n6w6_k$();
        }
      } catch ($p) {
        var e = $p;
        if (this.get_exceptionState_wflpxn_k$() === 2) {
          throw e;
        } else {
          this.set_state_rjd8d0_k$(this.get_exceptionState_wflpxn_k$());
          this.set_exception_px07aa_k$(e);
        }
      }
     while (true);
  };
  function MonotonicClockImpl() {
  }
  protoOf(MonotonicClockImpl).withFrameNanos_8v58om_k$ = function (onFrame, $completion) {
    var tmp = new $withFrameNanosCOROUTINE$5(this, onFrame, $completion);
    tmp.set_result_xj64lm_k$(Unit_getInstance());
    tmp.set_exception_px07aa_k$(null);
    return tmp.doResume_5yljmg_k$();
  };
  function get_IDENTITY_HASHCODE_FIELD() {
    return IDENTITY_HASHCODE_FIELD;
  }
  var IDENTITY_HASHCODE_FIELD;
  function memoizeIdentityHashCode(instance) {
    _init_properties_ActualJs_js_kt__rh77u6();
    var tmp0 = get_nextHash();
    set_nextHash(tmp0 + 1 | 0);
    var value = tmp0;
    var descriptor = new Object();
    descriptor.value = value;
    descriptor.writable = false;
    descriptor.configurable = false;
    descriptor.enumerable = false;
    Object.defineProperty(instance, 'kotlinIdentityHashcodeValue$', descriptor);
    return value;
  }
  function logError(message, e) {
    _init_properties_ActualJs_js_kt__rh77u6();
    println(message);
    printStackTrace(e);
  }
  var properties_initialized_ActualJs_js_kt_azbr3k;
  function _init_properties_ActualJs_js_kt__rh77u6() {
    if (!properties_initialized_ActualJs_js_kt_azbr3k) {
      properties_initialized_ActualJs_js_kt_azbr3k = true;
      nextHash = 1;
      DefaultMonotonicFrameClock = new MonotonicClockImpl();
    }
  }
  function Trace() {
    Trace_instance = this;
  }
  protoOf(Trace).beginSection_2k8ef6_k$ = function (name) {
    return null;
  };
  protoOf(Trace).endSection_5rdvi3_k$ = function (token) {
  };
  var Trace_instance;
  function Trace_getInstance() {
    if (Trace_instance == null)
      new Trace();
    return Trace_instance;
  }
  function invokeComposableForResult$composable(composer, composable) {
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    // Inline function 'kotlin.js.asDynamic' call
    return composable(composer, 1);
  }
  function invokeComposable$composable(composer, composable) {
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    composable(composer, 1);
  }
  function ComposableLambda() {
  }
  function _get_tracked__euxd5l($this) {
    return $this.tracked_1;
  }
  function _set__block__ctyabb($this, _set____db54di) {
    $this._block_1 = _set____db54di;
  }
  function _get__block__bd7poj($this) {
    return $this._block_1;
  }
  function _set_scope__kj1gmp($this, _set____db54di) {
    $this.scope_1 = _set____db54di;
  }
  function _get_scope__bi2zur_0($this) {
    return $this.scope_1;
  }
  function _set_scopes__2vr4x4($this, _set____db54di) {
    $this.scopes_1 = _set____db54di;
  }
  function _get_scopes__1f0kac($this) {
    return $this.scopes_1;
  }
  function trackWrite($this) {
    if ($this.tracked_1) {
      var scope = $this.scope_1;
      if (!(scope == null)) {
        scope.invalidate_p4aufp_k$();
        $this.scope_1 = null;
      }
      var scopes = $this.scopes_1;
      if (!(scopes == null)) {
        var inductionVariable = 0;
        var last = scopes.get_size_woubt6_k$();
        if (inductionVariable < last)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            var item = scopes.get_c1px32_k$(index);
            item.invalidate_p4aufp_k$();
          }
           while (inductionVariable < last);
        scopes.clear_j9egeb_k$();
      }
    }
  }
  function trackRead($this, composer) {
    if ($this.tracked_1) {
      var scope = composer.get_recomposeScope_4f1ace_k$();
      if (!(scope == null)) {
        composer.recordUsed_vtkf9n_k$(scope);
        var lastScope = $this.scope_1;
        if (replacableWith(lastScope, scope)) {
          $this.scope_1 = scope;
        } else {
          var lastScopes = $this.scopes_1;
          if (lastScopes == null) {
            // Inline function 'kotlin.collections.mutableListOf' call
            var newScopes = ArrayList_init_$Create$();
            $this.scopes_1 = newScopes;
            newScopes.add_utx5q5_k$(scope);
          } else {
            var inductionVariable = 0;
            var last = lastScopes.get_size_woubt6_k$();
            if (inductionVariable < last)
              do {
                var index = inductionVariable;
                inductionVariable = inductionVariable + 1 | 0;
                var scopeAtIndex = lastScopes.get_c1px32_k$(index);
                if (replacableWith(scopeAtIndex, scope)) {
                  lastScopes.set_82063s_k$(index, scope);
                  return Unit_getInstance();
                }
              }
               while (inductionVariable < last);
            lastScopes.add_utx5q5_k$(scope);
          }
        }
      }
    }
  }
  function invoke$invoke(receiver, p0, p1) {
    receiver.invoke_z8di7s_k$(p0, p1);
  }
  function ComposableLambdaImpl$invoke$invoke$ref($boundThis) {
    return function (p0, p1) {
      invoke$invoke($boundThis, p0, p1);
      return Unit_getInstance();
    };
  }
  function ComposableLambdaImpl$invoke$lambda(this$0, $p1, $changed) {
    return function (nc, _anonymous_parameter_1__qggqgd) {
      this$0.invoke_c9vvnb_k$($p1, nc, $changed | 1);
      return Unit_getInstance();
    };
  }
  function ComposableLambdaImpl$invoke$lambda_0(this$0, $p1, $p2, $changed) {
    return function (nc, _anonymous_parameter_1__qggqgd) {
      this$0.invoke_gk4tfu_k$($p1, $p2, nc, $changed | 1);
      return Unit_getInstance();
    };
  }
  function ComposableLambdaImpl$invoke$lambda_1(this$0, $p1, $p2, $p3, $changed) {
    return function (nc, _anonymous_parameter_1__qggqgd) {
      this$0.invoke_vsdi8b_k$($p1, $p2, $p3, nc, $changed | 1);
      return Unit_getInstance();
    };
  }
  function ComposableLambdaImpl$invoke$lambda_2(this$0, $p1, $p2, $p3, $p4, $changed) {
    return function (nc, _anonymous_parameter_1__qggqgd) {
      this$0.invoke_tqfzp0_k$($p1, $p2, $p3, $p4, nc, $changed | 1);
      return Unit_getInstance();
    };
  }
  function ComposableLambdaImpl$invoke$lambda_3(this$0, $p1, $p2, $p3, $p4, $p5, $changed) {
    return function (nc, _anonymous_parameter_1__qggqgd) {
      this$0.invoke_dqornx_k$($p1, $p2, $p3, $p4, $p5, nc, $changed | 1);
      return Unit_getInstance();
    };
  }
  function ComposableLambdaImpl$invoke$lambda_4(this$0, $p1, $p2, $p3, $p4, $p5, $p6, $changed) {
    return function (nc, _anonymous_parameter_1__qggqgd) {
      this$0.invoke_p1zx1q_k$($p1, $p2, $p3, $p4, $p5, $p6, nc, $changed | 1);
      return Unit_getInstance();
    };
  }
  function ComposableLambdaImpl$invoke$lambda_5(this$0, $p1, $p2, $p3, $p4, $p5, $p6, $p7, $changed) {
    return function (nc, _anonymous_parameter_1__qggqgd) {
      this$0.invoke_l8kw35_k$($p1, $p2, $p3, $p4, $p5, $p6, $p7, nc, $changed | 1);
      return Unit_getInstance();
    };
  }
  function ComposableLambdaImpl$invoke$lambda_6(this$0, $p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8, $changed) {
    return function (nc, _anonymous_parameter_1__qggqgd) {
      this$0.invoke_yfkzg0_k$($p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8, nc, $changed | 1);
      return Unit_getInstance();
    };
  }
  function ComposableLambdaImpl$invoke$lambda_7(this$0, $p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8, $p9, $changed) {
    return function (nc, _anonymous_parameter_1__qggqgd) {
      this$0.invoke_gbjbov_k$($p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8, $p9, nc, $changed | 1);
      return Unit_getInstance();
    };
  }
  function ComposableLambdaImpl$invoke$lambda_8(this$0, $p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8, $p9, $p10, $changed) {
    return function (nc, _anonymous_parameter_1__qggqgd) {
      this$0.invoke_fsslc6_k$($p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8, $p9, $p10, nc, $changed | 1, $changed);
      return Unit_getInstance();
    };
  }
  function ComposableLambdaImpl$invoke$lambda_9(this$0, $p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8, $p9, $p10, $p11, $changed, $changed1) {
    return function (nc, _anonymous_parameter_1__qggqgd) {
      this$0.invoke_5yywdh_k$($p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8, $p9, $p10, $p11, nc, $changed | 1, $changed1);
      return Unit_getInstance();
    };
  }
  function ComposableLambdaImpl$invoke$lambda_10(this$0, $p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8, $p9, $p10, $p11, $p12, $changed, $changed1) {
    return function (nc, _anonymous_parameter_1__qggqgd) {
      this$0.invoke_jn0shw_k$($p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8, $p9, $p10, $p11, $p12, nc, $changed | 1, $changed1);
      return Unit_getInstance();
    };
  }
  function ComposableLambdaImpl$invoke$lambda_11(this$0, $p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8, $p9, $p10, $p11, $p12, $p13, $changed, $changed1) {
    return function (nc, _anonymous_parameter_1__qggqgd) {
      this$0.invoke_jdnwpp_k$($p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8, $p9, $p10, $p11, $p12, $p13, nc, $changed | 1, $changed1);
      return Unit_getInstance();
    };
  }
  function ComposableLambdaImpl$invoke$lambda_12(this$0, $p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8, $p9, $p10, $p11, $p12, $p13, $p14, $changed, $changed1) {
    return function (nc, _anonymous_parameter_1__qggqgd) {
      this$0.invoke_73a1ry_k$($p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8, $p9, $p10, $p11, $p12, $p13, $p14, nc, $changed | 1, $changed1);
      return Unit_getInstance();
    };
  }
  function ComposableLambdaImpl$invoke$lambda_13(this$0, $p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8, $p9, $p10, $p11, $p12, $p13, $p14, $p15, $changed, $changed1) {
    return function (nc, _anonymous_parameter_1__qggqgd) {
      this$0.invoke_iwyxb3_k$($p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8, $p9, $p10, $p11, $p12, $p13, $p14, $p15, nc, $changed | 1, $changed1);
      return Unit_getInstance();
    };
  }
  function ComposableLambdaImpl$invoke$lambda_14(this$0, $p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8, $p9, $p10, $p11, $p12, $p13, $p14, $p15, $p16, $changed, $changed1) {
    return function (nc, _anonymous_parameter_1__qggqgd) {
      this$0.invoke_u07k8w_k$($p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8, $p9, $p10, $p11, $p12, $p13, $p14, $p15, $p16, nc, $changed | 1, $changed1);
      return Unit_getInstance();
    };
  }
  function ComposableLambdaImpl$invoke$lambda_15(this$0, $p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8, $p9, $p10, $p11, $p12, $p13, $p14, $p15, $p16, $p17, $changed, $changed1) {
    return function (nc, _anonymous_parameter_1__qggqgd) {
      this$0.invoke_9a9q1r_k$($p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8, $p9, $p10, $p11, $p12, $p13, $p14, $p15, $p16, $p17, nc, $changed | 1, $changed1);
      return Unit_getInstance();
    };
  }
  function ComposableLambdaImpl$invoke$lambda_16(this$0, $p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8, $p9, $p10, $p11, $p12, $p13, $p14, $p15, $p16, $p17, $p18, $changed, $changed1) {
    return function (nc, _anonymous_parameter_1__qggqgd) {
      this$0.invoke_qwfpq6_k$($p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8, $p9, $p10, $p11, $p12, $p13, $p14, $p15, $p16, $p17, $p18, nc, $changed | 1, $changed1);
      return Unit_getInstance();
    };
  }
  function ComposableLambdaImpl(key, tracked) {
    this.key_1 = key;
    this.tracked_1 = tracked;
    this._block_1 = null;
    this.scope_1 = null;
    this.scopes_1 = null;
  }
  protoOf(ComposableLambdaImpl).get_key_18j28a_k$ = function () {
    return this.key_1;
  };
  protoOf(ComposableLambdaImpl).update_khwrp7_k$ = function (block) {
    if (!equals(this._block_1, block)) {
      var oldBlockNull = this._block_1 == null;
      this._block_1 = block;
      if (!oldBlockNull) {
        trackWrite(this);
      }
    }
  };
  protoOf(ComposableLambdaImpl).invoke_z8di7s_k$ = function (c, changed) {
    var c_0 = c.startRestartGroup_lebv1i_k$(this.key_1);
    trackRead(this, c_0);
    var dirty = changed | (c_0.changed_ga7h3f_k$(this) ? differentBits(0) : sameBits(0));
    var tmp = this._block_1;
    var result = ((!(tmp == null) ? typeof tmp === 'function' : false) ? tmp : THROW_CCE())(c_0, dirty);
    var tmp0_safe_receiver = c_0.endRestartGroup_yxpjv9_k$();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.updateScope_t8jcf_k$(ComposableLambdaImpl$invoke$invoke$ref(this));
    }
    return result;
  };
  protoOf(ComposableLambdaImpl).invoke_c9vvnb_k$ = function (p1, c, changed) {
    var c_0 = c.startRestartGroup_lebv1i_k$(this.key_1);
    trackRead(this, c_0);
    var dirty = changed | (c_0.changed_ga7h3f_k$(this) ? differentBits(1) : sameBits(1));
    var tmp = this._block_1;
    var result = ((!(tmp == null) ? typeof tmp === 'function' : false) ? tmp : THROW_CCE())(p1, c_0, dirty);
    var tmp0_safe_receiver = c_0.endRestartGroup_yxpjv9_k$();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.updateScope_t8jcf_k$(ComposableLambdaImpl$invoke$lambda(this, p1, changed));
    }
    return result;
  };
  protoOf(ComposableLambdaImpl).invoke_gk4tfu_k$ = function (p1, p2, c, changed) {
    var c_0 = c.startRestartGroup_lebv1i_k$(this.key_1);
    trackRead(this, c_0);
    var dirty = changed | (c_0.changed_ga7h3f_k$(this) ? differentBits(2) : sameBits(2));
    var tmp = this._block_1;
    var result = ((!(tmp == null) ? typeof tmp === 'function' : false) ? tmp : THROW_CCE())(p1, p2, c_0, dirty);
    var tmp0_safe_receiver = c_0.endRestartGroup_yxpjv9_k$();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.updateScope_t8jcf_k$(ComposableLambdaImpl$invoke$lambda_0(this, p1, p2, changed));
    }
    return result;
  };
  protoOf(ComposableLambdaImpl).invoke_vsdi8b_k$ = function (p1, p2, p3, c, changed) {
    var c_0 = c.startRestartGroup_lebv1i_k$(this.key_1);
    trackRead(this, c_0);
    var dirty = changed | (c_0.changed_ga7h3f_k$(this) ? differentBits(3) : sameBits(3));
    var tmp = this._block_1;
    var result = ((!(tmp == null) ? typeof tmp === 'function' : false) ? tmp : THROW_CCE())(p1, p2, p3, c_0, dirty);
    var tmp0_safe_receiver = c_0.endRestartGroup_yxpjv9_k$();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.updateScope_t8jcf_k$(ComposableLambdaImpl$invoke$lambda_1(this, p1, p2, p3, changed));
    }
    return result;
  };
  protoOf(ComposableLambdaImpl).invoke_tqfzp0_k$ = function (p1, p2, p3, p4, c, changed) {
    var c_0 = c.startRestartGroup_lebv1i_k$(this.key_1);
    trackRead(this, c_0);
    var dirty = changed | (c_0.changed_ga7h3f_k$(this) ? differentBits(4) : sameBits(4));
    var tmp = this._block_1;
    var result = ((!(tmp == null) ? typeof tmp === 'function' : false) ? tmp : THROW_CCE())(p1, p2, p3, p4, c_0, dirty);
    var tmp0_safe_receiver = c_0.endRestartGroup_yxpjv9_k$();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.updateScope_t8jcf_k$(ComposableLambdaImpl$invoke$lambda_2(this, p1, p2, p3, p4, changed));
    }
    return result;
  };
  protoOf(ComposableLambdaImpl).invoke_dqornx_k$ = function (p1, p2, p3, p4, p5, c, changed) {
    var c_0 = c.startRestartGroup_lebv1i_k$(this.key_1);
    trackRead(this, c_0);
    var dirty = changed | (c_0.changed_ga7h3f_k$(this) ? differentBits(5) : sameBits(5));
    var tmp = this._block_1;
    var result = ((!(tmp == null) ? typeof tmp === 'function' : false) ? tmp : THROW_CCE())(p1, p2, p3, p4, p5, c_0, dirty);
    var tmp0_safe_receiver = c_0.endRestartGroup_yxpjv9_k$();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.updateScope_t8jcf_k$(ComposableLambdaImpl$invoke$lambda_3(this, p1, p2, p3, p4, p5, changed));
    }
    return result;
  };
  protoOf(ComposableLambdaImpl).invoke_p1zx1q_k$ = function (p1, p2, p3, p4, p5, p6, c, changed) {
    var c_0 = c.startRestartGroup_lebv1i_k$(this.key_1);
    trackRead(this, c_0);
    var dirty = changed | (c_0.changed_ga7h3f_k$(this) ? differentBits(6) : sameBits(6));
    var tmp = this._block_1;
    var result = ((!(tmp == null) ? typeof tmp === 'function' : false) ? tmp : THROW_CCE())(p1, p2, p3, p4, p5, p6, c_0, dirty);
    var tmp0_safe_receiver = c_0.endRestartGroup_yxpjv9_k$();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.updateScope_t8jcf_k$(ComposableLambdaImpl$invoke$lambda_4(this, p1, p2, p3, p4, p5, p6, changed));
    }
    return result;
  };
  protoOf(ComposableLambdaImpl).invoke_l8kw35_k$ = function (p1, p2, p3, p4, p5, p6, p7, c, changed) {
    var c_0 = c.startRestartGroup_lebv1i_k$(this.key_1);
    trackRead(this, c_0);
    var dirty = changed | (c_0.changed_ga7h3f_k$(this) ? differentBits(7) : sameBits(7));
    var tmp = this._block_1;
    var result = ((!(tmp == null) ? typeof tmp === 'function' : false) ? tmp : THROW_CCE())(p1, p2, p3, p4, p5, p6, p7, c_0, dirty);
    var tmp0_safe_receiver = c_0.endRestartGroup_yxpjv9_k$();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.updateScope_t8jcf_k$(ComposableLambdaImpl$invoke$lambda_5(this, p1, p2, p3, p4, p5, p6, p7, changed));
    }
    return result;
  };
  protoOf(ComposableLambdaImpl).invoke_yfkzg0_k$ = function (p1, p2, p3, p4, p5, p6, p7, p8, c, changed) {
    var c_0 = c.startRestartGroup_lebv1i_k$(this.key_1);
    trackRead(this, c_0);
    var dirty = changed | (c_0.changed_ga7h3f_k$(this) ? differentBits(8) : sameBits(8));
    var tmp = this._block_1;
    var result = ((!(tmp == null) ? typeof tmp === 'function' : false) ? tmp : THROW_CCE())(p1, p2, p3, p4, p5, p6, p7, p8, c_0, dirty);
    var tmp0_safe_receiver = c_0.endRestartGroup_yxpjv9_k$();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.updateScope_t8jcf_k$(ComposableLambdaImpl$invoke$lambda_6(this, p1, p2, p3, p4, p5, p6, p7, p8, changed));
    }
    return result;
  };
  protoOf(ComposableLambdaImpl).invoke_gbjbov_k$ = function (p1, p2, p3, p4, p5, p6, p7, p8, p9, c, changed) {
    var c_0 = c.startRestartGroup_lebv1i_k$(this.key_1);
    trackRead(this, c_0);
    var dirty = changed | (c_0.changed_ga7h3f_k$(this) ? differentBits(9) : sameBits(9));
    var tmp = this._block_1;
    var result = ((!(tmp == null) ? typeof tmp === 'function' : false) ? tmp : THROW_CCE())(p1, p2, p3, p4, p5, p6, p7, p8, p9, c_0, dirty);
    var tmp0_safe_receiver = c_0.endRestartGroup_yxpjv9_k$();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.updateScope_t8jcf_k$(ComposableLambdaImpl$invoke$lambda_7(this, p1, p2, p3, p4, p5, p6, p7, p8, p9, changed));
    }
    return result;
  };
  protoOf(ComposableLambdaImpl).invoke_fsslc6_k$ = function (p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, c, changed, changed1) {
    var c_0 = c.startRestartGroup_lebv1i_k$(this.key_1);
    trackRead(this, c_0);
    var dirty = changed1 | (c_0.changed_ga7h3f_k$(this) ? differentBits(10) : sameBits(10));
    var tmp = this._block_1;
    var result = ((!(tmp == null) ? typeof tmp === 'function' : false) ? tmp : THROW_CCE())(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, c_0, changed, dirty);
    var tmp0_safe_receiver = c_0.endRestartGroup_yxpjv9_k$();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.updateScope_t8jcf_k$(ComposableLambdaImpl$invoke$lambda_8(this, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, changed));
    }
    return result;
  };
  protoOf(ComposableLambdaImpl).invoke_5yywdh_k$ = function (p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, c, changed, changed1) {
    var c_0 = c.startRestartGroup_lebv1i_k$(this.key_1);
    trackRead(this, c_0);
    var dirty = changed1 | (c_0.changed_ga7h3f_k$(this) ? differentBits(11) : sameBits(11));
    var tmp = this._block_1;
    var result = ((!(tmp == null) ? typeof tmp === 'function' : false) ? tmp : THROW_CCE())(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, c_0, changed, dirty);
    var tmp0_safe_receiver = c_0.endRestartGroup_yxpjv9_k$();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.updateScope_t8jcf_k$(ComposableLambdaImpl$invoke$lambda_9(this, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, changed, changed1));
    }
    return result;
  };
  protoOf(ComposableLambdaImpl).invoke_jn0shw_k$ = function (p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, c, changed, changed1) {
    var c_0 = c.startRestartGroup_lebv1i_k$(this.key_1);
    trackRead(this, c_0);
    var dirty = changed1 | (c_0.changed_ga7h3f_k$(this) ? differentBits(12) : sameBits(12));
    var tmp = this._block_1;
    var result = ((!(tmp == null) ? typeof tmp === 'function' : false) ? tmp : THROW_CCE())(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, c_0, changed, dirty);
    var tmp0_safe_receiver = c_0.endRestartGroup_yxpjv9_k$();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.updateScope_t8jcf_k$(ComposableLambdaImpl$invoke$lambda_10(this, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, changed, changed1));
    }
    return result;
  };
  protoOf(ComposableLambdaImpl).invoke_jdnwpp_k$ = function (p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, c, changed, changed1) {
    var c_0 = c.startRestartGroup_lebv1i_k$(this.key_1);
    trackRead(this, c_0);
    var dirty = changed1 | (c_0.changed_ga7h3f_k$(this) ? differentBits(13) : sameBits(13));
    var tmp = this._block_1;
    var result = ((!(tmp == null) ? typeof tmp === 'function' : false) ? tmp : THROW_CCE())(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, c_0, changed, dirty);
    var tmp0_safe_receiver = c_0.endRestartGroup_yxpjv9_k$();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.updateScope_t8jcf_k$(ComposableLambdaImpl$invoke$lambda_11(this, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, changed, changed1));
    }
    return result;
  };
  protoOf(ComposableLambdaImpl).invoke_73a1ry_k$ = function (p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, c, changed, changed1) {
    var c_0 = c.startRestartGroup_lebv1i_k$(this.key_1);
    trackRead(this, c_0);
    var dirty = changed1 | (c_0.changed_ga7h3f_k$(this) ? differentBits(14) : sameBits(14));
    var tmp = this._block_1;
    var result = ((!(tmp == null) ? typeof tmp === 'function' : false) ? tmp : THROW_CCE())(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, c_0, changed, dirty);
    var tmp0_safe_receiver = c_0.endRestartGroup_yxpjv9_k$();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.updateScope_t8jcf_k$(ComposableLambdaImpl$invoke$lambda_12(this, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, changed, changed1));
    }
    return result;
  };
  protoOf(ComposableLambdaImpl).invoke_iwyxb3_k$ = function (p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, c, changed, changed1) {
    var c_0 = c.startRestartGroup_lebv1i_k$(this.key_1);
    trackRead(this, c_0);
    var dirty = changed1 | (c_0.changed_ga7h3f_k$(this) ? differentBits(15) : sameBits(15));
    var tmp = this._block_1;
    var result = ((!(tmp == null) ? typeof tmp === 'function' : false) ? tmp : THROW_CCE())(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, c_0, changed, dirty);
    var tmp0_safe_receiver = c_0.endRestartGroup_yxpjv9_k$();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.updateScope_t8jcf_k$(ComposableLambdaImpl$invoke$lambda_13(this, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, changed, changed1));
    }
    return result;
  };
  protoOf(ComposableLambdaImpl).invoke_u07k8w_k$ = function (p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, c, changed, changed1) {
    var c_0 = c.startRestartGroup_lebv1i_k$(this.key_1);
    trackRead(this, c_0);
    var dirty = changed1 | (c_0.changed_ga7h3f_k$(this) ? differentBits(16) : sameBits(16));
    var tmp = this._block_1;
    var result = ((!(tmp == null) ? typeof tmp === 'function' : false) ? tmp : THROW_CCE())(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, c_0, changed, dirty);
    var tmp0_safe_receiver = c_0.endRestartGroup_yxpjv9_k$();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.updateScope_t8jcf_k$(ComposableLambdaImpl$invoke$lambda_14(this, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, changed, changed1));
    }
    return result;
  };
  protoOf(ComposableLambdaImpl).invoke_9a9q1r_k$ = function (p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, c, changed, changed1) {
    var c_0 = c.startRestartGroup_lebv1i_k$(this.key_1);
    trackRead(this, c_0);
    var dirty = changed1 | (c_0.changed_ga7h3f_k$(this) ? differentBits(17) : sameBits(17));
    var tmp = this._block_1;
    var result = ((!(tmp == null) ? typeof tmp === 'function' : false) ? tmp : THROW_CCE())(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, c_0, changed, dirty);
    var tmp0_safe_receiver = c_0.endRestartGroup_yxpjv9_k$();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.updateScope_t8jcf_k$(ComposableLambdaImpl$invoke$lambda_15(this, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, changed, changed1));
    }
    return result;
  };
  protoOf(ComposableLambdaImpl).invoke_qwfpq6_k$ = function (p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, c, changed, changed1) {
    var c_0 = c.startRestartGroup_lebv1i_k$(this.key_1);
    trackRead(this, c_0);
    var dirty = changed1 | (c_0.changed_ga7h3f_k$(this) ? differentBits(18) : sameBits(18));
    var tmp = this._block_1;
    var result = ((!(tmp == null) ? typeof tmp === 'function' : false) ? tmp : THROW_CCE())(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, c_0, changed, dirty);
    var tmp0_safe_receiver = c_0.endRestartGroup_yxpjv9_k$();
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.updateScope_t8jcf_k$(ComposableLambdaImpl$invoke$lambda_16(this, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, changed, changed1));
    }
    return result;
  };
  function createSnapshotMutableState(value, policy) {
    return new SnapshotMutableStateImpl(value, policy);
  }
  function PlatformOptimizedCancellationException(message) {
    message = message === VOID ? null : message;
    CancellationException_init_$Init$(message, this);
    captureStack(this, PlatformOptimizedCancellationException);
  }
  function _get_backingMap__nfspgq($this) {
    return $this.backingMap_1;
  }
  function IntMap() {
    var tmp = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp.backingMap_1 = LinkedHashMap_init_$Create$();
  }
  protoOf(IntMap).contains_7q95ev_k$ = function (key) {
    return this.backingMap_1.containsKey_aw81wo_k$(key);
  };
  protoOf(IntMap).get_c1px32_k$ = function (key) {
    return this.backingMap_1.get_wei43m_k$(key);
  };
  protoOf(IntMap).get_fopobg_k$ = function (key, valueIfAbsent) {
    // Inline function 'kotlin.collections.getOrElse' call
    var tmp0_elvis_lhs = this.backingMap_1.get_wei43m_k$(key);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      // Inline function 'androidx.compose.runtime.collection.IntMap.get.<anonymous>' call
      tmp = valueIfAbsent;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  };
  protoOf(IntMap).set_yy77p4_k$ = function (key, value) {
    // Inline function 'kotlin.collections.set' call
    this.backingMap_1.put_4fpzoq_k$(key, value);
  };
  protoOf(IntMap).remove_v58o70_k$ = function (key) {
    this.backingMap_1.remove_gppy8k_k$(key);
  };
  protoOf(IntMap).clear_j9egeb_k$ = function () {
    this.backingMap_1.clear_j9egeb_k$();
  };
  protoOf(IntMap).get_size_woubt6_k$ = function () {
    return this.backingMap_1.get_size_woubt6_k$();
  };
  function NoOp() {
  }
  protoOf(NoOp).equals = function (other) {
    if (!(other instanceof NoOp))
      return false;
    other instanceof NoOp || THROW_CCE();
    return true;
  };
  protoOf(NoOp).hashCode = function () {
    return 0;
  };
  protoOf(NoOp).toString = function () {
    return '@androidx.compose.runtime.internal.NoOp()';
  };
  function _get_workaroundReference__stituk($this) {
    return $this.workaroundReference_1;
  }
  function WeakReference(reference) {
    this.workaroundReference_1 = reference;
  }
  protoOf(WeakReference).get_26vq_k$ = function () {
    return this.workaroundReference_1;
  };
  //region block: post-declaration
  protoOf(OffsetApplier).onBeginChanges_yqtnrd_k$ = onBeginChanges;
  protoOf(OffsetApplier).onEndChanges_k5kb87_k$ = onEndChanges;
  protoOf(AbstractApplier).onBeginChanges_yqtnrd_k$ = onBeginChanges;
  protoOf(AbstractApplier).onEndChanges_k5kb87_k$ = onEndChanges;
  protoOf(BroadcastFrameClock).get_key_18j28a_k$ = get_key;
  protoOf(BroadcastFrameClock).get_y2st91_k$ = get;
  protoOf(BroadcastFrameClock).fold_j2vaxd_k$ = fold;
  protoOf(BroadcastFrameClock).minusKey_9i5ggf_k$ = minusKey;
  protoOf(BroadcastFrameClock).plus_s13ygv_k$ = plus;
  defineProp(protoOf(ComposeRuntimeError), 'message', function () {
    return this.get_message_h23axq_k$();
  });
  protoOf(StructuralEqualityPolicy).merge_q9rxor_k$ = merge;
  protoOf(SnapshotStateList).mergeRecords_7xjkji_k$ = mergeRecords;
  protoOf(MonotonicClockImpl).get_key_18j28a_k$ = get_key;
  protoOf(MonotonicClockImpl).get_y2st91_k$ = get;
  protoOf(MonotonicClockImpl).fold_j2vaxd_k$ = fold;
  protoOf(MonotonicClockImpl).minusKey_9i5ggf_k$ = minusKey;
  protoOf(MonotonicClockImpl).plus_s13ygv_k$ = plus;
  //endregion
  //region block: init
  defaultsKey = -127;
  rootKey = 100;
  nodeKey = 125;
  compositionLocalMapKey = 202;
  providerMapsKey = 204;
  providerKey = 201;
  providerValuesKey = 203;
  referenceKey = 206;
  reuseKey = 207;
  invalidGroupLocation = -2;
  invocationKey = 200;
  movableContentKey = 126665345;
  UsedFlag = 1;
  DefaultsInScopeFlag = 2;
  DefaultsInvalidFlag = 4;
  RequiresRecomposeFlag = 8;
  RereadingFlag = 32;
  SkippedFlag = 16;
  changedLowBitMask = 306783378;
  changedHighBitMask = 613566756;
  changedMask = -920350135;
  RecomposerCompoundHashKey = 1000;
  Group_Fields_Size = 5;
  MinGroupGrowthSize = 32;
  MinSlotsGrowthSize = 32;
  parentAnchorPivot = -2;
  Aux_Shift = 28;
  NodeBit_Mask = 1073741824;
  GroupInfo_Offset = 1;
  NodeCount_Mask = 67108863;
  ObjectKey_Mask = 536870912;
  ObjectKey_Shift = 29;
  DataAnchor_Offset = 4;
  Size_Offset = 3;
  Aux_Mask = 268435456;
  Key_Offset = 0;
  ParentAnchor_Offset = 2;
  Mark_Mask = 134217728;
  ContainsMark_Mask = 67108864;
  Slots_Shift = 28;
  MAX_BUFFER_SIZE = 32;
  MAX_BUFFER_SIZE_MINUS_ONE = 31;
  LOG_MAX_BUFFER_SIZE = 5;
  MUTABLE_BUFFER_SIZE = 33;
  TRIE_MAX_HEIGHT = 7;
  ENTRY_SIZE = 2;
  LOG_MAX_BRANCHING_FACTOR = 5;
  MAX_SHIFT = 30;
  MAX_BRANCHING_FACTOR_MINUS_ONE = 31;
  SLOTS_PER_INT = 10;
  BITS_PER_SLOT = 3;
  INVALID_SNAPSHOT = 0;
  INITIAL_CAPACITY = 16;
  INITIAL_CAPACITY_0 = 16;
  IDENTITY_HASHCODE_FIELD = 'kotlinIdentityHashcodeValue$';
  //endregion
  //region block: exports
  _.$_$ = _.$_$ || {};
  _.$_$.a = composableLambdaInstance;
  _.$_$.b = composableLambda;
  _.$_$.c = illegalDecoyCallException;
  _.$_$.d = AbstractApplier;
  _.$_$.e = CompositionLocalProvider$composable;
  _.$_$.f = ControlledComposition_0;
  _.$_$.g = get_DefaultMonotonicFrameClock;
  _.$_$.h = DisposableEffect$composable_1;
  _.$_$.i = DisposableEffect$composable_0;
  _.$_$.j = DisposableEffect$composable;
  _.$_$.k = DisposableEffectResult;
  _.$_$.l = LaunchedEffect$composable;
  _.$_$.m = ProduceStateScope;
  _.$_$.n = Recomposer;
  _.$_$.o = RememberObserver;
  _.$_$.p = SideEffect$composable;
  _.$_$.q = SkippableUpdater;
  _.$_$.r = compositionLocalOf;
  _.$_$.s = invalidApplier;
  _.$_$.t = isTraceInProgress;
  _.$_$.u = mutableStateListOf;
  _.$_$.v = mutableStateOf;
  _.$_$.w = produceState$composable;
  _.$_$.x = sourceInformationMarkerEnd;
  _.$_$.y = sourceInformationMarkerStart;
  _.$_$.z = sourceInformation;
  _.$_$.a1 = staticCompositionLocalOf;
  _.$_$.b1 = traceEventEnd;
  _.$_$.c1 = traceEventStart;
  _.$_$.d1 = updateChangedFlags;
  _.$_$.e1 = _SkippableUpdater___init__impl__4ft0t9;
  _.$_$.f1 = _SkippableUpdater___get_composer__impl__6t7yne;
  _.$_$.g1 = _Updater___init__impl__rbfxm8;
  _.$_$.h1 = Updater__set_impl_v7kwss_0;
  _.$_$.i1 = Companion_getInstance_12;
  _.$_$.j1 = Companion_getInstance_1;
  //endregion
  return _;
}));
